import{g as a}from"./chunk.vendor_asn1-js.js";import{c as d}from"./chunk.vendor_crypto-js.js";import{e as l}from"./chunk.vendor_events.js";import{j as y}from"./chunk.vendor_json-buffer.js";const m=l,c=y,g=f=>{const e={redis:"@keyv/redis",rediss:"@keyv/redis",mongodb:"@keyv/mongo",mongo:"@keyv/mongo",sqlite:"@keyv/sqlite",postgresql:"@keyv/postgres",postgres:"@keyv/postgres",mysql:"@keyv/mysql",etcd:"@keyv/etcd",offline:"@keyv/offline",tiered:"@keyv/tiered"};if(f.adapter||f.uri){const s=f.adapter||/^[^:+]*/.exec(f.uri)[0];return new(d(e[s]))(f)}return new Map},h=["sqlite","postgres","mysql","mongo","redis","tiered"];class v extends m{constructor(e,{emitErrors:s=!0,...i}={}){if(super(),this.opts={namespace:"keyv",serialize:c.stringify,deserialize:c.parse,...typeof e=="string"?{uri:e}:e,...i},!this.opts.store){const r={...this.opts};this.opts.store=g(r)}if(this.opts.compression){const r=this.opts.compression;this.opts.serialize=r.serialize.bind(r),this.opts.deserialize=r.deserialize.bind(r)}typeof this.opts.store.on=="function"&&s&&this.opts.store.on("error",r=>this.emit("error",r)),this.opts.store.namespace=this.opts.namespace;const p=r=>async function*(){for await(const[t,o]of typeof r=="function"?r(this.opts.store.namespace):r){const n=await this.opts.deserialize(o);if(!(this.opts.store.namespace&&!t.includes(this.opts.store.namespace))){if(typeof n.expires=="number"&&Date.now()>n.expires){this.delete(t);continue}yield[this._getKeyUnprefix(t),n.value]}}};typeof this.opts.store[Symbol.iterator]=="function"&&this.opts.store instanceof Map?this.iterator=p(this.opts.store):typeof this.opts.store.iterator=="function"&&this.opts.store.opts&&this._checkIterableAdaptar()&&(this.iterator=p(this.opts.store.iterator.bind(this.opts.store)))}_checkIterableAdaptar(){return h.includes(this.opts.store.opts.dialect)||h.findIndex(e=>this.opts.store.opts.url.includes(e))>=0}_getKeyPrefix(e){return`${this.opts.namespace}:${e}`}_getKeyPrefixArray(e){return e.map(s=>`${this.opts.namespace}:${s}`)}_getKeyUnprefix(e){return e.split(":").splice(1).join(":")}get(e,s){const{store:i}=this.opts,p=Array.isArray(e),r=p?this._getKeyPrefixArray(e):this._getKeyPrefix(e);if(p&&i.getMany===void 0){const t=[];for(const o of r)t.push(Promise.resolve().then(()=>i.get(o)).then(n=>typeof n=="string"?this.opts.deserialize(n):this.opts.compression?this.opts.deserialize(n):n).then(n=>{if(n!=null)return typeof n.expires=="number"&&Date.now()>n.expires?this.delete(o).then(()=>{}):s&&s.raw?n:n.value}));return Promise.allSettled(t).then(o=>{const n=[];for(const u of o)n.push(u.value);return n})}return Promise.resolve().then(()=>p?i.getMany(r):i.get(r)).then(t=>typeof t=="string"?this.opts.deserialize(t):this.opts.compression?this.opts.deserialize(t):t).then(t=>{if(t!=null)return p?t.map((o,n)=>{if(typeof o=="string"&&(o=this.opts.deserialize(o)),o!=null){if(typeof o.expires=="number"&&Date.now()>o.expires){this.delete(e[n]).then(()=>{});return}return s&&s.raw?o:o.value}}):typeof t.expires=="number"&&Date.now()>t.expires?this.delete(e).then(()=>{}):s&&s.raw?t:t.value})}set(e,s,i){const p=this._getKeyPrefix(e);typeof i>"u"&&(i=this.opts.ttl),i===0&&(i=void 0);const{store:r}=this.opts;return Promise.resolve().then(()=>{const t=typeof i=="number"?Date.now()+i:null;return typeof s=="symbol"&&this.emit("error","symbol cannot be serialized"),s={value:s,expires:t},this.opts.serialize(s)}).then(t=>r.set(p,t,i)).then(()=>!0)}delete(e){const{store:s}=this.opts;if(Array.isArray(e)){const p=this._getKeyPrefixArray(e);if(s.deleteMany===void 0){const r=[];for(const t of p)r.push(s.delete(t));return Promise.allSettled(r).then(t=>t.every(o=>o.value===!0))}return Promise.resolve().then(()=>s.deleteMany(p))}const i=this._getKeyPrefix(e);return Promise.resolve().then(()=>s.delete(i))}clear(){const{store:e}=this.opts;return Promise.resolve().then(()=>e.clear())}has(e){const s=this._getKeyPrefix(e),{store:i}=this.opts;return Promise.resolve().then(async()=>typeof i.has=="function"?i.has(s):await i.get(s)!==void 0)}disconnect(){const{store:e}=this.opts;if(typeof e.disconnect=="function")return e.disconnect()}}var x=v;const K=a(x);export{K};
