import{r as x}from"./chunk.vendor_safe-buffer.js";import{r as T}from"./chunk.vendor_create-hash.js";import{r as U}from"./chunk.vendor_readable-stream.js";import{r as F}from"./chunk.vendor_inherits.js";import{r as G}from"./chunk.vendor_create-hmac.js";import{r as O}from"./chunk.vendor_browserify-rsa.js";import{r as V}from"./chunk.vendor_elliptic.js";import{a as $}from"./chunk.vendor_bn-js.js";import{r as j}from"./chunk.vendor_parse-asn1.js";const z={sign:"rsa",hash:"sha224",id:"302d300d06096086480165030402040500041c"},J={sign:"rsa",hash:"sha256",id:"3031300d060960864801650304020105000420"},Q={sign:"rsa",hash:"sha384",id:"3041300d060960864801650304020205000430"},X={sign:"rsa",hash:"sha512",id:"3051300d060960864801650304020305000440"},Y={sign:"ecdsa",hash:"sha256",id:""},Z={sign:"ecdsa",hash:"sha224",id:""},rr={sign:"ecdsa",hash:"sha384",id:""},er={sign:"ecdsa",hash:"sha512",id:""},ar={sign:"dsa",hash:"sha1",id:""},tr={sign:"rsa",hash:"rmd160",id:"3021300906052b2403020105000414"},ir={sign:"rsa",hash:"md5",id:"3020300c06082a864886f70d020505000410"},M={sha224WithRSAEncryption:z,"RSA-SHA224":{sign:"ecdsa/rsa",hash:"sha224",id:"302d300d06096086480165030402040500041c"},sha256WithRSAEncryption:J,"RSA-SHA256":{sign:"ecdsa/rsa",hash:"sha256",id:"3031300d060960864801650304020105000420"},sha384WithRSAEncryption:Q,"RSA-SHA384":{sign:"ecdsa/rsa",hash:"sha384",id:"3041300d060960864801650304020205000430"},sha512WithRSAEncryption:X,"RSA-SHA512":{sign:"ecdsa/rsa",hash:"sha512",id:"3051300d060960864801650304020305000440"},"RSA-SHA1":{sign:"rsa",hash:"sha1",id:"3021300906052b0e03021a05000414"},"ecdsa-with-SHA1":{sign:"ecdsa",hash:"sha1",id:""},sha256:Y,sha224:Z,sha384:rr,sha512:er,"DSA-SHA":{sign:"dsa",hash:"sha1",id:""},"DSA-SHA1":{sign:"dsa",hash:"sha1",id:""},DSA:ar,"DSA-WITH-SHA224":{sign:"dsa",hash:"sha224",id:""},"DSA-SHA224":{sign:"dsa",hash:"sha224",id:""},"DSA-WITH-SHA256":{sign:"dsa",hash:"sha256",id:""},"DSA-SHA256":{sign:"dsa",hash:"sha256",id:""},"DSA-WITH-SHA384":{sign:"dsa",hash:"sha384",id:""},"DSA-SHA384":{sign:"dsa",hash:"sha384",id:""},"DSA-WITH-SHA512":{sign:"dsa",hash:"sha512",id:""},"DSA-SHA512":{sign:"dsa",hash:"sha512",id:""},"DSA-RIPEMD160":{sign:"dsa",hash:"rmd160",id:""},ripemd160WithRSA:tr,"RSA-RIPEMD160":{sign:"rsa",hash:"rmd160",id:"3021300906052b2403020105000414"},md5WithRSAEncryption:ir,"RSA-MD5":{sign:"rsa",hash:"md5",id:"3020300c06082a864886f70d020505000410"}};var k,P;function mr(){return P||(P=1,k=M),k}var D={exports:{}};const C={"1.3.132.0.10":"secp256k1","1.3.132.0.33":"p224","1.2.840.10045.3.1.1":"p192","1.2.840.10045.3.1.7":"p256","1.3.132.0.34":"p384","1.3.132.0.35":"p521"};var I;function nr(){if(I)return D.exports;I=1;var o=x().Buffer,p=G(),A=O(),E=V().ec,R=$(),H=j(),w=C,S=1;function y(e,r,i,t,l){var u=H(r);if(u.curve){if(t!=="ecdsa"&&t!=="ecdsa/rsa")throw new Error("wrong private key type");return h(e,u)}else if(u.type==="dsa"){if(t!=="dsa")throw new Error("wrong private key type");return f(e,u,i)}if(t!=="rsa"&&t!=="ecdsa/rsa")throw new Error("wrong private key type");if(r.padding!==void 0&&r.padding!==S)throw new Error("illegal or unsupported padding mode");e=o.concat([l,e]);for(var _=u.modulus.byteLength(),c=[0,1];e.length+c.length+1<_;)c.push(255);c.push(0);for(var g=-1;++g<e.length;)c.push(e[g]);var W=A(c,u);return W}function h(e,r){var i=w[r.curve.join(".")];if(!i)throw new Error("unknown curve "+r.curve.join("."));var t=new E(i),l=t.keyFromPrivate(r.privateKey),u=l.sign(e);return o.from(u.toDER())}function f(e,r,i){for(var t=r.params.priv_key,l=r.params.p,u=r.params.q,_=r.params.g,c=new R(0),g,W=s(e,u).mod(u),b=!1,N=a(t,u,e,i);b===!1;)g=m(u,N,i),c=v(_,g,l,u),b=g.invm(u).imul(W.add(t.mul(c))).mod(u),b.cmpn(0)===0&&(b=!1,c=new R(0));return n(c,b)}function n(e,r){e=e.toArray(),r=r.toArray(),e[0]&128&&(e=[0].concat(e)),r[0]&128&&(r=[0].concat(r));var i=e.length+r.length+4,t=[48,i,2,e.length];return t=t.concat(e,[2,r.length],r),o.from(t)}function a(e,r,i,t){if(e=o.from(e.toArray()),e.length<r.byteLength()){var l=o.alloc(r.byteLength()-e.length);e=o.concat([l,e])}var u=i.length,_=d(i,r),c=o.alloc(u);c.fill(1);var g=o.alloc(u);return g=p(t,g).update(c).update(o.from([0])).update(e).update(_).digest(),c=p(t,g).update(c).digest(),g=p(t,g).update(c).update(o.from([1])).update(e).update(_).digest(),c=p(t,g).update(c).digest(),{k:g,v:c}}function s(e,r){var i=new R(e),t=(e.length<<3)-r.bitLength();return t>0&&i.ishrn(t),i}function d(e,r){e=s(e,r),e=e.mod(r);var i=o.from(e.toArray());if(i.length<r.byteLength()){var t=o.alloc(r.byteLength()-i.length);i=o.concat([t,i])}return i}function m(e,r,i){var t,l;do{for(t=o.alloc(0);t.length*8<e.bitLength();)r.v=p(i,r.k).update(r.v).digest(),t=o.concat([t,r.v]);l=s(t,e),r.k=p(i,r.k).update(r.v).update(o.from([0])).digest(),r.v=p(i,r.k).update(r.v).digest()}while(l.cmp(e)!==-1);return l}function v(e,r,i,t){return e.toRed(R.mont(i)).redPow(r).fromRed().mod(t)}return D.exports=y,D.exports.getKey=a,D.exports.makeKey=m,D.exports}var B,K;function sr(){if(K)return B;K=1;var o=x().Buffer,p=$(),A=V().ec,E=j(),R=C;function H(h,f,n,a,s){var d=E(n);if(d.type==="ec"){if(a!=="ecdsa"&&a!=="ecdsa/rsa")throw new Error("wrong public key type");return w(h,f,d)}else if(d.type==="dsa"){if(a!=="dsa")throw new Error("wrong public key type");return S(h,f,d)}if(a!=="rsa"&&a!=="ecdsa/rsa")throw new Error("wrong public key type");f=o.concat([s,f]);for(var m=d.modulus.byteLength(),v=[1],e=0;f.length+v.length+2<m;)v.push(255),e+=1;v.push(0);for(var r=-1;++r<f.length;)v.push(f[r]);v=o.from(v);var i=p.mont(d.modulus);h=new p(h).toRed(i),h=h.redPow(new p(d.publicExponent)),h=o.from(h.fromRed().toArray());var t=e<8?1:0;for(m=Math.min(h.length,v.length),h.length!==v.length&&(t=1),r=-1;++r<m;)t|=h[r]^v[r];return t===0}function w(h,f,n){var a=R[n.data.algorithm.curve.join(".")];if(!a)throw new Error("unknown curve "+n.data.algorithm.curve.join("."));var s=new A(a),d=n.data.subjectPrivateKey.data;return s.verify(f,h,d)}function S(h,f,n){var a=n.data.p,s=n.data.q,d=n.data.g,m=n.data.pub_key,v=E.signature.decode(h,"der"),e=v.s,r=v.r;y(e,s),y(r,s);var i=p.mont(a),t=e.invm(s),l=d.toRed(i).redPow(new p(f).mul(t).mod(s)).fromRed().mul(m.toRed(i).redPow(r.mul(t).mod(s)).fromRed()).mod(a).mod(s);return l.cmp(r)===0}function y(h,f){if(h.cmpn(0)<=0)throw new Error("invalid sig");if(h.cmp(f)>=0)throw new Error("invalid sig")}return B=H,B}var q,L;function lr(){if(L)return q;L=1;var o=x().Buffer,p=T(),A=U(),E=F(),R=nr(),H=sr(),w=M;Object.keys(w).forEach(function(n){w[n].id=o.from(w[n].id,"hex"),w[n.toLowerCase()]=w[n]});function S(n){A.Writable.call(this);var a=w[n];if(!a)throw new Error("Unknown message digest");this._hashType=a.hash,this._hash=p(a.hash),this._tag=a.id,this._signType=a.sign}E(S,A.Writable),S.prototype._write=function(a,s,d){this._hash.update(a),d()},S.prototype.update=function(a,s){return this._hash.update(typeof a=="string"?o.from(a,s):a),this},S.prototype.sign=function(a,s){this.end();var d=this._hash.digest(),m=R(d,a,this._hashType,this._signType,this._tag);return s?m.toString(s):m};function y(n){A.Writable.call(this);var a=w[n];if(!a)throw new Error("Unknown message digest");this._hash=p(a.hash),this._tag=a.id,this._signType=a.sign}E(y,A.Writable),y.prototype._write=function(a,s,d){this._hash.update(a),d()},y.prototype.update=function(a,s){return this._hash.update(typeof a=="string"?o.from(a,s):a),this},y.prototype.verify=function(a,s,d){var m=typeof s=="string"?o.from(s,d):s;this.end();var v=this._hash.digest();return H(m,v,a,this._signType,this._tag)};function h(n){return new S(n)}function f(n){return new y(n)}return q={Sign:h,Verify:f,createSign:h,createVerify:f},q}export{mr as a,lr as r};
