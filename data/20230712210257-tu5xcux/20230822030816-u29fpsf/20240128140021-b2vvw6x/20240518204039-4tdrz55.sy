{
	"ID": "20240518204039-4tdrz55",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20240518204039-4tdrz55",
		"title": "U4S4L17——自定义更新目录和下载AB包",
		"type": "doc",
		"updated": "20240518213212"
	},
	"Children": [
		{
			"ID": "20240518212900-hat1in4",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240518212900-hat1in4",
				"updated": "20240518213212"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "本章代码关键字"
				}
			]
		},
		{
			"ID": "20240518212908-djtc9l0",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240518212908-djtc9l0",
				"style": "line-height: 22px;",
				"updated": "20240518213212"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Addressables.UpdateCatalogs()\t\t\t\t//更新目录，如果不传入由CheckForCatalogUpdates()获取的需要更新的目录字符串，则自动检查目录是否有更新\nAddressables.CheckForCatalogUpdates()\t\t//检查哪些目录需要更新，并将需要更新的目录字符串加载出来\nAddressables.GetDownloadSizeAsync()\t\t\t//传入要加载的资源的标签或者资源名，加载其对应的包的大小（字节数）\nAddressables.DownloadDependenciesAsync()\t//传入要加载的资源的标签或者资源名，提前加载其对应的包\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240518204039-ddbkrvl",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240518204039-ddbkrvl",
				"updated": "20240518212847"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "目录的作用"
				}
			]
		},
		{
			"ID": "20240518204221-12107ak",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240518204221-12107ak",
				"updated": "20240518205058"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "目录文件的本质是Json文件和一个Hash文件（只存在于远端打包中）"
				}
			]
		},
		{
			"ID": "20240518205200-elg8w73",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240518205200-elg8w73",
				"updated": "20240518205200"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"parent-style": "width: 678px;",
						"style": "width: 668px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20240518205159-dchoyfo.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 668px;\" parent-style=\"width: 678px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20240518205102-d5vs1h1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240518205102-d5vs1h1",
				"updated": "20240518205104"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "其中记录的主要内容有："
				}
			]
		},
		{
			"ID": "20240518204236-e4dzfjz",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20240518204236-e4dzfjz",
				"updated": "20240518205241"
			},
			"Children": [
				{
					"ID": "20240518204236-4ps0rrd",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240518204236-4ps0rrd",
						"updated": "20240518204236"
					},
					"Children": [
						{
							"ID": "20240518204236-y25pqm9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240518204236-y25pqm9",
								"updated": "20240518204236"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Json文件中记录的是："
								}
							]
						},
						{
							"ID": "20240518204226-8qzzybf",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20240518204226-8qzzybf",
								"updated": "20240518204226"
							},
							"Children": [
								{
									"ID": "20240518204226-hq54hql",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20240518204226-hq54hql",
										"updated": "20240518204226"
									},
									"Children": [
										{
											"ID": "20240518204226-pb0u0je",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240518204226-pb0u0je",
												"updated": "20240518204226"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "加载AB包、图集、资源、场景、实例化对象所用的脚本（会通过反射去加载他们来使用）"
												}
											]
										}
									]
								},
								{
									"ID": "20240518204226-2rlzvv6",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "Mi4=",
										"Num": 2
									},
									"Properties": {
										"id": "20240518204226-2rlzvv6",
										"updated": "20240518204226"
									},
									"Children": [
										{
											"ID": "20240518204226-693lc31",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240518204226-693lc31",
												"updated": "20240518204226"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "AB包中所有资源类型对应的类（会通过反射去加载他们来使用）"
												}
											]
										}
									]
								},
								{
									"ID": "20240518204226-heedzl0",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "My4=",
										"Num": 3
									},
									"Properties": {
										"id": "20240518204226-heedzl0",
										"updated": "20240518204226"
									},
									"Children": [
										{
											"ID": "20240518204226-4vaeaxu",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240518204226-4vaeaxu",
												"updated": "20240518204226"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "AB包对应路径"
												}
											]
										}
									]
								},
								{
									"ID": "20240518204226-m7g7fou",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "NC4=",
										"Num": 4
									},
									"Properties": {
										"id": "20240518204226-m7g7fou",
										"updated": "20240518204226"
									},
									"Children": [
										{
											"ID": "20240518204226-2na7t79",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240518204226-2na7t79",
												"updated": "20240518204226"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "资源的path名"
												}
											]
										}
									]
								}
							]
						},
						{
							"ID": "20240518204240-vpumsj9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240518204240-vpumsj9",
								"updated": "20240518204243"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "等等"
								}
							]
						}
					]
				},
				{
					"ID": "20240518204244-m8676m9",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240518204244-m8676m9",
						"updated": "20240518205241"
					},
					"Children": [
						{
							"ID": "20240518204244-krwyule",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240518204244-krwyule",
								"updated": "20240518204303"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Hash文件中记录的是："
								}
							]
						},
						{
							"ID": "20240518204303-pi9ri11",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240518204303-pi9ri11",
								"updated": "20240518205241"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "目录文件对应hash码（每一个文件都有一个唯一码，用来判断文件是否变化）\n更新时本地的文件hash码会和远端目录的hash码进行对比，如果发现不一样就会更新目录文件"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240518204221-ogek4gl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240518204221-ogek4gl",
				"updated": "20240518204221"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当我们使用远端发布内容时，在资源服务器也会有一个目录文件\nAddressables会在运行时自动管理目录\n如果远端目录发生变化了(他会通过hash文件里面存储的数据判断是否是新目录)\n它会自动下载新版本并将其加载到内存中"
				}
			]
		},
		{
			"ID": "20240518204712-ps2buca",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240518204712-ps2buca",
				"updated": "20240518212847"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "手动更新目录"
				}
			]
		},
		{
			"ID": "20240518212322-z6b061i",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240518212322-z6b061i",
				"updated": "20240518212346"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "目录更新 我们一般都会放在进入游戏开始游戏之前，用于指导AB包的更新"
				}
			]
		},
		{
			"ID": "20240518204725-1thu6t0",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240518204725-1thu6t0",
				"updated": "20240518204718"
			},
			"Children": [
				{
					"ID": "20240518204739-nk6ob4v",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20240518204739-nk6ob4v",
						"updated": "20240518204739"
					},
					"Children": [
						{
							"ID": "20240518204739-19eshop",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240518204739-19eshop",
								"updated": "20240518205401"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果要手动更新目录 建议在设置中关闭"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "block-ref",
									"TextMarkBlockRefID": "20240509205851-litoa0i",
									"TextMarkBlockRefSubtype": "s",
									"TextMarkTextContent": "自动更新"
								}
							]
						},
						{
							"ID": "20240518205352-g1p55qh",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240518205352-g1p55qh",
								"updated": "20240518205352"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeImage",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeBang"
										},
										{
											"Type": "NodeOpenBracket"
										},
										{
											"Type": "NodeLinkText",
											"Data": "image"
										},
										{
											"Type": "NodeCloseBracket"
										},
										{
											"Type": "NodeOpenParen"
										},
										{
											"Type": "NodeLinkDest",
											"Data": "assets/image-20240518205352-wgsxrjf.png"
										},
										{
											"Type": "NodeCloseParen"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						}
					]
				},
				{
					"ID": "20240518204739-ijucg2h",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20240518204739-ijucg2h",
						"name": "Addressables.UpdateCatalogs()",
						"updated": "20240518210939"
					},
					"Children": [
						{
							"ID": "20240518204739-kwqnay6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240518204739-kwqnay6",
								"updated": "20240518204739"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "自动检查所有目录是否有更新，并更新目录API"
								}
							]
						},
						{
							"ID": "20240518210332-bv03zie",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240518210332-bv03zie",
								"updated": "20240518210627"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "该方法同样返回的是"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "AsyncOperationHandle\u0026lt;\u0026gt;"
								},
								{
									"Type": "NodeText",
									"Data": "​，其内部要加载的资源就是更新的列表"
								}
							]
						},
						{
							"ID": "20240518210317-1ucy2r9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240518210317-1ucy2r9",
								"updated": "20240518210935"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "UpdateCatalogs()"
								},
								{
									"Type": "NodeText",
									"Data": "​方法存在一个释放自动释放目录的参数，默认为"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "true"
								},
								{
									"Type": "NodeText",
									"Data": "​，\n因此我们可以不手动释放更新出来的目录"
								}
							]
						},
						{
							"ID": "20240518210939-xuporij",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240518210939-xuporij",
								"updated": "20240518210939"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "该方法配合"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code block-ref",
									"TextMarkBlockRefID": "20240518204739-niituh3",
									"TextMarkBlockRefSubtype": "s",
									"TextMarkTextContent": "CheckForCatalogUpdates()"
								},
								{
									"Type": "NodeText",
									"Data": "​可以更新指定的目录"
								}
							]
						},
						{
							"ID": "20240518205630-m8agjb4",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240518205630-m8agjb4",
								"style": "line-height: 22px;",
								"updated": "20240518210315"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "void Start()\n{\n    //异步更新目录，自动检查所有目录是否有更新，返回值是AsyncOperationHandle\u003c\u003e\n    Addressables.UpdateCatalogs(true).Completed += (obj) =\u003e\n    {\n        //释放目录文件\n        //（UpdateCatalogs方法存在一个释放自动释放目录的参数，默认为true，因此我们可以不手动释放更新出来的目录）\n        //Addressables.Release(obj);\n    };\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20240518204739-niituh3",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20240518204739-niituh3",
						"name": "Addressables.CheckForCatalogUpdates()",
						"updated": "20240518211032"
					},
					"Children": [
						{
							"ID": "20240518204739-hpb5763",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240518204739-hpb5763",
								"updated": "20240518204739"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "获取目录列表，再更新目录"
								}
							]
						},
						{
							"ID": "20240518210534-blc38c9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240518210534-blc38c9",
								"updated": "20240518210730"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "该方法同样返回的是"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "AsyncOperationHandle\u0026lt;\u0026gt;"
								},
								{
									"Type": "NodeText",
									"Data": "​，其内部要加载的资源就是需要更新的目录的字符串列表\n将加载出来的目录字符串列表传入到"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "UpdateCatalogs()"
								},
								{
									"Type": "NodeText",
									"Data": "​方法，"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "UpdateCatalogs()"
								},
								{
									"Type": "NodeText",
									"Data": "​方法就会根据传入的目录列表来更新目录"
								}
							]
						},
						{
							"ID": "20240518210447-z7nso9r",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240518210447-z7nso9r",
								"updated": "20240518210931"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "CheckForCatalogUpdates()"
								},
								{
									"Type": "NodeText",
									"Data": "​方法同样存在释放自动释放加载出来的字符串字符串的参数，默认为"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "true"
								},
								{
									"Type": "NodeText",
									"Data": "​，\n因此我们可以不手动释放加载出来的目录字符串"
								}
							]
						},
						{
							"ID": "20240518205730-o19bneb",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240518205730-o19bneb",
								"updated": "20240518210742"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "相比直接使用"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "UpdateCatalogs()"
								},
								{
									"Type": "NodeText",
									"Data": "​方法，我们可以更加自定义的更新目录"
								}
							]
						},
						{
							"ID": "20240518205635-8vm5kr1",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240518205635-8vm5kr1",
								"style": "line-height: 22px;",
								"updated": "20240518211032"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "Addressables.CheckForCatalogUpdates().Completed += (obj) =\u003e\n{\n    //如果加载出来的目录字符串列表大于0，就证明存在可以更新的目录\n    if (obj.Result.Count \u003e 0)\n    {\n        //根据加载出来的目录列表，更新目录\n        Addressables.UpdateCatalogs(obj.Result).Completed += (handle) =\u003e\n        {\n            //更新完毕需要释放目录列表和字符串\n            //（CheckForCatalogUpdates方法存在一个释放自动释放目录的参数，默认为true，因此我们可以不手动释放）\n            Addressables.Release(handle);\n            Addressables.Release(obj);\n        };\n    }\n};\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240518205307-rd24tml",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"alias": "Addressables.GetDownloadSizeAsync()",
				"id": "20240518205307-rd24tml",
				"name": "Addressables.DownloadDependenciesAsync()",
				"updated": "20240518212847"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "预加载包"
				}
			]
		},
		{
			"ID": "20240518212311-xuqnozk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240518212311-xuqnozk",
				"updated": "20240518212319"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一般我们会在 刚进入游戏时 或者 切换场景时 显示一个Loading界面\n我们可以在此时提前加载包，这样之后在使用资源就不会出现明显的异步加载延迟感\n"
				}
			]
		},
		{
			"ID": "20240518211035-5ec7vti",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240518211035-5ec7vti",
				"updated": "20240518211424"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "预加载包可以让我们在指定的时间提前加载或者下载包，而不需要在玩家游玩时创建对象时加载包，导致降低玩家游玩体验"
				}
			]
		},
		{
			"ID": "20240518212359-qqgfrqx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240518212359-qqgfrqx",
				"updated": "20240518212847"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "首先需要通过"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Addressables.GetDownloadSizeAsync()"
				},
				{
					"Type": "NodeText",
					"Data": "​来获取需要加载包的大小，该方法可以传入资源名，标签名，或者两者的组合\n该方法返回的是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "AsyncOperationHandle\u0026lt;long\u0026gt;"
				},
				{
					"Type": "NodeText",
					"Data": "​，返回的就是包的字节数，可通过字节数是否为0判断是否可以预加载包"
				}
			]
		},
		{
			"ID": "20240518212555-iwp6z85",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240518212555-iwp6z85",
				"updated": "20240518212801"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "然后再通过"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Addressables.DownloadDependenciesAsync()"
				},
				{
					"Type": "NodeText",
					"Data": "​预加载对应资源的包，\n该方法需要传入资源名，标签名，或者两者的组合，参数和"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref code",
					"TextMarkBlockRefID": "20240509144324-fn7325f",
					"TextMarkBlockRefSubtype": "d",
					"TextMarkTextContent": "Addressables.LoadAssetsAsync\u0026lt;\u0026gt;()"
				},
				{
					"Type": "NodeText",
					"Data": "​差不多\n该方法返回的是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "AsyncOperationHandle"
				},
				{
					"Type": "NodeText",
					"Data": "​，可通过返回值调用"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref code",
					"TextMarkBlockRefID": "20240517223205-yho7g63",
					"TextMarkBlockRefSubtype": "d",
					"TextMarkTextContent": "asyncOperationHandle\u0026lt;\u0026gt;.GetDownloadStatus()"
				},
				{
					"Type": "NodeText",
					"Data": "​来获取下载进度"
				}
			]
		},
		{
			"ID": "20240518211426-ato6w9x",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240518211426-ato6w9x",
				"style": "line-height: 22px;",
				"updated": "20240518210919"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "void Start()\n{\n    StartCoroutine(LoadAsset());\n}\n\nIEnumerator LoadAsset()\n{\n    //首先获取下载包的大小，可以传资源名、标签名、或者两者的组合\n    AsyncOperationHandle\u003clong\u003e handleSize = Addressables.GetDownloadSizeAsync(new List\u003cstring\u003e { \"Cube\", \"Sphere\", \"SD\" });\n    yield return handleSize;\n    //预加载\n    if (handleSize.Result \u003e 0)\n    {\n        //这样就可以异步加载，所有依赖的AB包相关内容了\n        AsyncOperationHandle handle = Addressables.DownloadDependenciesAsync(\n            new List\u003cstring\u003e { \"Cube\", \"Sphere\", \"SD\" },\n            Addressables.MergeMode.Union);\n        while (!handle.IsDone)\n        {\n            //获取加载进度\n            DownloadStatus info = handle.GetDownloadStatus();\n            print(info.Percent);\n            print(info.DownloadedBytes + \"/\" + info.TotalBytes);\n            yield return 0;\n        }\n        //待AB包资源使用完毕，即可卸载加载的AB包\n        Addressables.Release(handle);\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		}
	]
}