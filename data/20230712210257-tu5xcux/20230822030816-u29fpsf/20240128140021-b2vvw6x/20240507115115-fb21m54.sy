{
	"ID": "20240507115115-fb21m54",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20240507115115-fb21m54",
		"title": "U4S4L5——动态加载单个资源",
		"type": "doc",
		"updated": "20240507224358"
	},
	"Children": [
		{
			"ID": "20240507122957-rj4e797",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240507122957-rj4e797",
				"updated": "20240507123007"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "本章代码关键字"
				}
			]
		},
		{
			"ID": "20240507123007-wuujkfh",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240507123007-wuujkfh",
				"style": "line-height: 22px;",
				"updated": "20240507124336"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Addressables.LoadAssetAsync\u003c\u003e()\t\t//通过名字或者标签来异步加载资源\nAddressable.ReleaseAsset()\t\t\t//卸载资源\nAddressables.LoadSceneAsync()\t\t//通过名字异步加载场景\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240507115116-2kaetn6",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240507115116-2kaetn6",
				"name": "Addressables.LoadAssetAsync\u0026lt;\u0026gt;()",
				"updated": "20240507115338"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "通过资源名或标签名动态加载单个资源"
				}
			]
		},
		{
			"ID": "20240507132331-1onkkdw",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240507132331-1onkkdw",
				"updated": "20240507132340"
			},
			"Children": [
				{
					"ID": "20240507132340-n4dxxe6",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20240507132340-n4dxxe6",
						"updated": "20240507132340"
					},
					"Children": [
						{
							"ID": "20240507132340-ljff71b",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240507132340-ljff71b",
								"updated": "20240507132407"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "根据名字或标签加载单个资源相对之前的指定加载资源更加灵活\n主要通过Addressables类中的静态方法传入资源名或标签名进行加载\n"
								}
							]
						},
						{
							"ID": "20240507132409-zh172nl",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240507132409-zh172nl"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "注意："
								}
							]
						},
						{
							"ID": "20240507132407-93q0mi9",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20240507132407-93q0mi9",
								"updated": "20240507132407"
							},
							"Children": [
								{
									"ID": "20240507132407-h6ebmrf",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20240507132407-h6ebmrf",
										"updated": "20240507132407"
									},
									"Children": [
										{
											"ID": "20240507132407-wsz9jf9",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240507132407-wsz9jf9",
												"updated": "20240507132407"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "如果存在同名或同标签的同类型资源，我们无法确定加载的哪一个，它会自动加载找到的第一个满足条件的对象"
												}
											]
										}
									]
								},
								{
									"ID": "20240507132407-v21e0dj",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "Mi4=",
										"Num": 2
									},
									"Properties": {
										"id": "20240507132407-v21e0dj",
										"updated": "20240507132407"
									},
									"Children": [
										{
											"ID": "20240507132407-l385424",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240507132407-l385424",
												"updated": "20240507132407"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "如果存在同名或同标签的不同类型资源，我们可以根据泛型类型来决定加载哪一个"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20240507132340-3kaq0bh",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20240507132340-3kaq0bh",
						"updated": "20240507132340"
					},
					"Children": [
						{
							"ID": "20240507132340-fcjay54",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240507132340-fcjay54",
								"updated": "20240507132401"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "释放资源时需要传入之前记录的"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "AsyncOperationHandle"
								},
								{
									"Type": "NodeText",
									"Data": "​对象\n"
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"style": "background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"
									},
									"TextMarkType": "strong text",
									"TextMarkTextContent": "注意：一定要保证资源使用完毕过后再释放资源"
								},
								{
									"Type": "NodeKramdownSpanIAL",
									"Data": "{: style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"
								}
							]
						}
					]
				},
				{
					"ID": "20240507132340-lprilfz",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20240507132340-lprilfz",
						"updated": "20240507132340"
					},
					"Children": [
						{
							"ID": "20240507132340-tjsumhb",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240507132340-tjsumhb",
								"updated": "20240507132340"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "场景异步加载可以自己手动激活加载完成的场景"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240507115348-9vdahxm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240507115348-9vdahxm",
				"updated": "20240507115338"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "命名空间："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "UnityEngine.AddressableAssets"
				},
				{
					"Type": "NodeText",
					"Data": "​ 和 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "UnityEngine.ResourceManagement.AsyncOperations"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20240507120117-yca3cet",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240507120117-yca3cet",
				"updated": "20240507115338"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Addressables.LoadAssetAsync\u0026lt;\u0026gt;()"
				},
				{
					"Type": "NodeText",
					"Data": "​ 和使用资源引用标识类加载类似，\n也是通过返回的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "AsyncOperationHandle\u0026lt;\u0026gt;"
				},
				{
					"Type": "NodeText",
					"Data": "​来添加回调，并确认是否加载成功和获取资源\n区别在于该方法需要传入名字或者标签（不需要同时传入）"
				}
			]
		},
		{
			"ID": "20240507123115-u0l40vt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240507123115-u0l40vt",
				"updated": "20240507115338"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注意："
				}
			]
		},
		{
			"ID": "20240507123115-0355h8r",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240507123115-0355h8r",
				"style": "background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);",
				"updated": "20240507115338"
			},
			"Children": [
				{
					"ID": "20240507123115-ih3lh2i",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20240507123115-ih3lh2i",
						"updated": "20240507123115"
					},
					"Children": [
						{
							"ID": "20240507123115-0z7ytjk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240507123115-0z7ytjk",
								"updated": "20240507123115"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果存在同名或同标签的同类型资源，我们无法确定加载的哪一个，"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "它会自动加载找到的第一个满足条件的对象"
								}
							]
						}
					]
				},
				{
					"ID": "20240507123115-krwg4un",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20240507123115-krwg4un",
						"updated": "20240507123115"
					},
					"Children": [
						{
							"ID": "20240507123115-dysdhjb",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240507123115-dysdhjb",
								"updated": "20240507123115"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果存在同名或同标签的不同类型资源，"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "我们可以根据泛型类型来决定加载哪一个"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240507120946-her2d1b",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240507120946-her2d1b",
				"updated": "20240507115338"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "假设要加载"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"parent-style": "width: 543px;",
						"style": "width: 533px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20240507120950-ekw7mxe.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 533px;\" parent-style=\"width: 543px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20240507120538-by2n7ec",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240507120538-by2n7ec",
				"style": "line-height: 22px;",
				"updated": "20240507115338"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "void Start()\n{\n\t//通过名字加载\n    AsyncOperationHandle\u003cGameObject\u003e handle = Addressables.LoadAssetAsync\u003cGameObject\u003e(\"Cube\");\n    handle.Completed += (handle) =\u003e\n    {\n        if (handle.Status == AsyncOperationStatus.Succeeded)\n        {\n            Instantiate(handle.Result);\n        }\n    };\n\t//通过标签加载\n\tAddressables.LoadAssetAsync\u003cGameObject\u003e(\"Red\").Completed += (handle2) =\u003e\n    {\n        if (handle2.Status == AsyncOperationStatus.Succeeded)\n        {\n            Instantiate(handle2.Result);\n        }\n    };\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240507120600-z6mtmg2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240507120600-z6mtmg2",
				"updated": "20240507115338"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输出："
				}
			]
		},
		{
			"ID": "20240507120626-e4xdjlq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240507120626-e4xdjlq",
				"updated": "20240507115338"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"parent-style": "width: 419px;",
						"style": "width: 409px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20240507120625-by4sf6j.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 409px;\" parent-style=\"width: 419px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20240507115637-iyk9fzb",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240507115637-iyk9fzb",
				"name": "Addressable.ReleaseAsset()",
				"updated": "20240507122923"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "释放资源"
				}
			]
		},
		{
			"ID": "20240507123332-pvzmm6i",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240507123332-pvzmm6i",
				"updated": "20240507123801"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Addressable.ReleaseAsset()"
				},
				{
					"Type": "NodeText",
					"Data": "​，注意，请务必在资源加载完毕后才卸载资源，该方法需要传入之前加载资源得到的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "AsyncOperationHandle\u0026lt;\u0026gt;"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20240507123507-3wobgw5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240507123507-3wobgw5",
				"updated": "20240507124059"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "和标识类的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20240506122649-qxwbjwz",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "释放资源"
				},
				{
					"Type": "NodeText",
					"Data": "不同，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "不管任何资源，即使是预设体"
				},
				{
					"Type": "NodeText",
					"Data": " "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "只要释放后 都会影响之前在使用该资源的对象（只会在真实打包时出现问题）"
				}
			]
		},
		{
			"ID": "20240507124107-4z8ao0p",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240507124107-4z8ao0p",
				"updated": "20240507124129"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "因此，释放资源必须要在资源完全不使用后才能进行"
				}
			]
		},
		{
			"ID": "20240507123653-zqhs2ux",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240507123653-zqhs2ux",
				"style": "line-height: 22px;",
				"updated": "20240507124026"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "void Start()\n{\n    AsyncOperationHandle\u003cGameObject\u003e handle1 = Addressables.LoadAssetAsync\u003cGameObject\u003e(\"Cube\");\n    handle1.Completed += (handle) =\u003e\n    {\n        if (handle.Status == AsyncOperationStatus.Succeeded)\n        {\n            Instantiate(handle.Result);\n        }\n        Addressables.Release(handle);\n    };\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240507123919-wcl14n2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240507123919-wcl14n2",
				"updated": "20240507124000"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "显示效果："
				}
			]
		},
		{
			"ID": "20240507124001-4eca0qw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240507124001-4eca0qw",
				"updated": "20240507124001"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"parent-style": "width: 606px;",
						"style": "width: 596px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20240507124001-zokzaoo.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 596px;\" parent-style=\"width: 606px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20240507124004-yw52r1s",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240507124004-yw52r1s",
				"updated": "20240507124036"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可见，卸载加载出来的预设体后，预设体的材质也一同丢失了"
				}
			]
		},
		{
			"ID": "20240507122939-svh8ysn",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240507122939-svh8ysn",
				"name": "Addressables.LoadSceneAsync()",
				"updated": "20240507122940"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "动态加载场景"
				}
			]
		},
		{
			"ID": "20240507124200-caodbgk",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20240507124200-caodbgk",
				"updated": "20240507124855"
			},
			"Children": [
				{
					"ID": "20240507124358-t71xthe",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240507124358-t71xthe",
						"updated": "20240507124358"
					},
					"Children": [
						{
							"ID": "20240507124358-qlsipus",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240507124358-qlsipus",
								"updated": "20240507124358"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "参数一：场景名\n"
								}
							]
						}
					]
				},
				{
					"ID": "20240507124358-nhj0xfx",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240507124358-nhj0xfx",
						"updated": "20240507124855"
					},
					"Children": [
						{
							"ID": "20240507124358-v6542tx",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240507124358-v6542tx",
								"updated": "20240507124855"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "参数二：加载模式（叠加还是单独，叠加就是两个场景一起显示，单独就是只保留新加载的场景，正常情况为单独，可选，默认是单独）"
								}
							]
						}
					]
				},
				{
					"ID": "20240507124359-meqe764",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240507124359-meqe764",
						"updated": "20240507124827"
					},
					"Children": [
						{
							"ID": "20240507124359-n1nu9rs",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240507124359-n1nu9rs",
								"updated": "20240507124827"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "参数三：场景加载是否激活，可选，默认是"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "true"
								},
								{
									"Type": "NodeText",
									"Data": "​，如果为"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "false"
								},
								{
									"Type": "NodeText",
									"Data": "​，加载完成后不会直接切换，需要自己使用返回值中的"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "ActivateAsync"
								},
								{
									"Type": "NodeText",
									"Data": "​方法"
								}
							]
						}
					]
				},
				{
					"ID": "20240507124400-0j2x000",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240507124400-0j2x000",
						"updated": "20240507124817"
					},
					"Children": [
						{
							"ID": "20240507124400-4avh8f4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240507124400-4avh8f4",
								"updated": "20240507124817"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "参数四：场景加载的异步操作优先级（可选，默认是100）"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240507124407-izxjwrt",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240507124407-izxjwrt",
				"style": "line-height: 22px;",
				"updated": "20240507124806"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Addressables.LoadSceneAsync(\"SampleScene\");\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240507124709-m8xubkm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240507124709-m8xubkm",
				"updated": "20240507124932"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果参数二传入的是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "UnityEngine.SceneManagement.LoadSceneMode.Additive"
				},
				{
					"Type": "NodeText",
					"Data": "​，则两个场景就会叠加起来"
				}
			]
		},
		{
			"ID": "20240507124919-4jc014o",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240507124919-4jc014o",
				"style": "line-height: 22px;",
				"updated": "20240507124924"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Addressables.LoadSceneAsync(\"SampleScene\", UnityEngine.SceneManagement.LoadSceneMode.Additive);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240507124719-2sgycdx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240507124719-2sgycdx",
				"updated": "20240507124719"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20240507124719-sx7dnbf.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20240507124739-537w720",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240507124739-537w720",
				"updated": "20240507125122"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果参数三传入的是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "true"
				},
				{
					"Type": "NodeText",
					"Data": "​，则不会自动激活加载出来的场景，会将加载出来的场景会隐藏，等待手动激活"
				}
			]
		},
		{
			"ID": "20240507125014-zcx991u",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240507125014-zcx991u",
				"style": "line-height: 22px;",
				"updated": "20240507125016"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Addressables.LoadSceneAsync(\"SampleScene\", UnityEngine.SceneManagement.LoadSceneMode.Single, false);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240507125148-lttdi0k",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240507125148-lttdi0k",
				"updated": "20240507125148"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"parent-style": "width: 258px;",
						"style": "width: 248px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20240507125148-6e90yth.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 248px;\" parent-style=\"width: 258px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20240507125207-lzs0ln1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240507125207-lzs0ln1",
				"updated": "20240507125706"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如要激活加载出来的场景，需要从"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "AsyncOperationHandle\u0026lt;\u0026gt;.Result"
				},
				{
					"Type": "NodeText",
					"Data": "​获取场景，并执行"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "ActivateAsync()"
				},
				{
					"Type": "NodeText",
					"Data": "​（需要在场景加载完毕后执行）\n原场景是否移除取决于执行"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Addressables.LoadSceneAsync()"
				},
				{
					"Type": "NodeText",
					"Data": "​时第二个参数是否传入了"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "UnityEngine.SceneManagement.LoadSceneMode.Single"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20240507125347-ljbxdfp",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240507125347-ljbxdfp",
				"style": "line-height: 22px;",
				"updated": "20240507125820"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "void Start()\n{\n    Addressables.LoadSceneAsync(\"SampleScene\", UnityEngine.SceneManagement.LoadSceneMode.Single, false).Completed += (obj) =\u003e\n    {\n        obj.Result.ActivateAsync().completed += (obj) =\u003e\n        {\n            //在这里执行加载出来场景后要执行的逻辑\n        };\n    };\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240507125822-st0wv4m",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240507125822-st0wv4m",
				"style": "background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);",
				"updated": "20240507130512"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注意：场景资源也是可以释放的，"
				},
				{
					"Type": "NodeTextMark",
					"Properties": {
						"parent-style": "background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"
					},
					"TextMarkType": "inline-memo",
					"TextMarkInlineMemoContent": "笔者测试发现，在真实打包环境下，卸载场景会导致天空盒材质以及场景上的材质丢失问题，与课上说的情况不一致",
					"TextMarkTextContent": "并不会影响当前已经加载出来的场景"
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: parent-style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"
				},
				{
					"Type": "NodeText",
					"Data": "，"
				},
				{
					"Type": "NodeTextMark",
					"Properties": {
						"parent-style": "background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"
					},
					"TextMarkType": "strong",
					"TextMarkTextContent": "因为场景的本质只是配置文件"
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: parent-style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"
				}
			]
		},
		{
			"ID": "20240507125838-jsbnhet",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240507125838-jsbnhet",
				"style": "line-height: 22px;",
				"updated": "20240507130049"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "void Start()\n{\n    Addressables.LoadSceneAsync(\"SampleScene\", UnityEngine.SceneManagement.LoadSceneMode.Single, false).Completed += (handle) =\u003e\n    {\n        handle.Result.ActivateAsync().completed += (scene) =\u003e\n        {\n            //在这里执行加载出来场景后要执行的逻辑\n            Addressables.Release(handle);\n        };\n    };\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240507130503-40owtke",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20240507130503-40owtke",
				"updated": "20240507130309"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20240507130505-txmeliy",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20240507130505-txmeliy",
						"updated": "20240507130521"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "笔者测试发现，在真实打包环境下，卸载场景会导致天空盒材质以及场景上的材质丢失问题，与课上说的情况不一致，原因不明"
						}
					]
				},
				{
					"ID": "20240507130309-oguazl5",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20240507130309-oguazl5",
						"updated": "20240507130309"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "​"
						},
						{
							"Type": "NodeImage",
							"Data": "span",
							"Properties": {
								"parent-style": "width: 578px;",
								"style": "width: 568px;"
							},
							"Children": [
								{
									"Type": "NodeBang"
								},
								{
									"Type": "NodeOpenBracket"
								},
								{
									"Type": "NodeLinkText",
									"Data": "image"
								},
								{
									"Type": "NodeCloseBracket"
								},
								{
									"Type": "NodeOpenParen"
								},
								{
									"Type": "NodeLinkDest",
									"Data": "assets/image-20240507130309-ni3nwlg.png"
								},
								{
									"Type": "NodeCloseParen"
								}
							]
						},
						{
							"Type": "NodeKramdownSpanIAL",
							"Data": "{: style=\"width: 568px;\" parent-style=\"width: 578px;\"}"
						},
						{
							"Type": "NodeText",
							"Data": "​"
						}
					]
				}
			]
		},
		{
			"ID": "20240507224142-4l3j96k",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240507224142-4l3j96k",
				"updated": "20240507224152"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "实现一个Addressable管理器"
				}
			]
		},
		{
			"ID": "20240507224327-nsu7cdz",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240507224327-nsu7cdz",
				"updated": "20240507224351"
			},
			"Children": [
				{
					"ID": "20240507224330-f1pzp60",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20240507224330-f1pzp60",
						"updated": "20240507224334"
					},
					"Children": [
						{
							"ID": "20240507224330-lmlyfr2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240507224330-lmlyfr2",
								"updated": "20240507224334"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "资源动态加载可以通过返回的对象"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "AsyncOperationHandle\u0026lt;\u0026gt;"
								},
								{
									"Type": "NodeText",
									"Data": "​（异步操作句柄） 添加完成监听来处理加载后的资源"
								}
							]
						}
					]
				},
				{
					"ID": "20240507224330-cvwms23",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20240507224330-cvwms23",
						"updated": "20240507224336"
					},
					"Children": [
						{
							"ID": "20240507224330-kgltitk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240507224330-kgltitk",
								"updated": "20240507224336"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "释放资源时也是通过释放返回的对象"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "AsyncOperationHandle\u0026lt;\u0026gt;"
								},
								{
									"Type": "NodeText",
									"Data": "​（异步操作句柄） 来进行释放"
								}
							]
						}
					]
				},
				{
					"ID": "20240507224330-vyreqfv",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20240507224330-vyreqfv",
						"updated": "20240507224351"
					},
					"Children": [
						{
							"ID": "20240507224330-bccn7vp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240507224330-bccn7vp",
								"updated": "20240507224351"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果分散在各脚本中自己管理资源难免显得太过凌乱，所以我们可以通过一个资源管理器来管理所有的异步加载返回对象"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "AsyncOperationHandle\u0026lt;\u0026gt;"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240507224327-thaj5j5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240507224327-thaj5j5",
				"updated": "20240507224358"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "所以如果我们要自己写一个"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Addressables"
				},
				{
					"Type": "NodeText",
					"Data": "​资源管理器，主要就是用来管理"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "AsyncOperationHandle\u0026lt;\u0026gt;"
				},
				{
					"Type": "NodeText",
					"Data": "​对象的"
				}
			]
		},
		{
			"ID": "20240507224152-gqkvvio",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240507224152-gqkvvio",
				"style": "line-height: 22px;",
				"updated": "20240507224152"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "using System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.AddressableAssets;\nusing UnityEngine.ResourceManagement.AsyncOperations;\n\npublic class AddressableMgr\n{\n    private static AddressableMgr instance;\n    public static AddressableMgr Instance =\u003e instance ??= new AddressableMgr();\n\n    public Dictionary\u003cstring, IEnumerator\u003e resDic = new Dictionary\u003cstring, IEnumerator\u003e();\n\n    private AddressableMgr() { }\n\n    public void LoadAssetAsync\u003cT\u003e(string name, Action\u003cAsyncOperationHandle\u003cT\u003e\u003e callBack)\n    {\n        string keyName = name + \"_\" + typeof(T).Name;\n        AsyncOperationHandle\u003cT\u003e handle;\n        //如果加载过资源\n        if (resDic.ContainsKey(keyName))\n        {\n            handle = (AsyncOperationHandle\u003cT\u003e)resDic[keyName];\n            if (handle.IsDone)\n            {\n                if (handle.Status == AsyncOperationStatus.Succeeded)\n                {\n                    callBack?.Invoke(handle);\n                }\n                else\n                {\n                    Debug.LogWarning(keyName + \"资源加载失败！\");\n                    resDic.Remove(keyName);\n                }\n            }\n            else\n            {\n                handle.Completed += (obj) =\u003e\n                {\n                    if (obj.Status == AsyncOperationStatus.Succeeded)\n                        callBack?.Invoke(obj);\n                    else\n                    {\n                        Debug.LogWarning(keyName + \"资源加载失败！\");\n                        if (resDic.ContainsKey(keyName))\n                            resDic.Remove(keyName);\n                    }\n                };\n            }\n            return;\n        }\n        //如果未加载过资源\n        handle = Addressables.LoadAssetAsync\u003cT\u003e(name);\n        handle.Completed += (obj) =\u003e\n        {\n            if (obj.Status == AsyncOperationStatus.Succeeded)\n                callBack?.Invoke(obj);\n            else\n            {\n                Debug.LogWarning(keyName + \"资源加载失败！\");\n                if (resDic.ContainsKey(keyName))\n                    resDic.Remove(keyName);\n            }\n        };\n        resDic.Add(keyName, handle);\n    }\n\n    public void Release\u003cT\u003e(string name)\n    {\n        string keyName = name + \"_\" + typeof(T).Name;\n        if (!resDic.ContainsKey(keyName))\n            return;\n        Addressables.Release((AsyncOperationHandle\u003cT\u003e)resDic[keyName]);\n        resDic.Remove(keyName);\n    }\n\n    public void Clear()\n    {\n        resDic.Clear();\n        AssetBundle.UnloadAllAssetBundles(true);\n        Resources.UnloadUnusedAssets();\n        GC.Collect();\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		}
	]
}