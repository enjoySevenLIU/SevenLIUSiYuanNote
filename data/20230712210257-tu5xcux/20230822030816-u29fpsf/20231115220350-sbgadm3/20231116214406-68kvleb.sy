{
	"ID": "20231116214406-68kvleb",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20231116214406-68kvleb",
		"scroll": "\u0026#123;\u0026quot;rootId\u0026quot;:\u0026quot;20231116214406-68kvleb\u0026quot;,\u0026quot;startId\u0026quot;:\u0026quot;20231116214406-uyhdgxp\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20231116224207-h3uhx5b\u0026quot;,\u0026quot;scrollTop\u0026quot;:0,\u0026quot;focusId\u0026quot;:\u0026quot;20231116214406-uyhdgxp\u0026quot;,\u0026quot;focusStart\u0026quot;:0,\u0026quot;focusEnd\u0026quot;:0\u0026#125;",
		"title": "U4S2SL3——数据带来的多态行为",
		"updated": "20231116224207"
	},
	"Children": [
		{
			"ID": "20231116214406-uyhdgxp",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20231116214406-uyhdgxp",
				"updated": "20231116214712"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "数据带来的多态行为"
				}
			]
		},
		{
			"ID": "20231116214719-z6za6b0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231116214719-z6za6b0",
				"updated": "20231116214732"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "某些行为的变化是因为数据的不同带来的，我们可以利用面向对象的特性和原则，以及设计模式相关知识点\n结合ScriptableObject做出更加方便的功能"
				}
			]
		},
		{
			"ID": "20231116214719-03gm9ij",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231116214719-03gm9ij",
				"updated": "20231116214719"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "比如随机音效，物品拾取，AI等等等"
				}
			]
		},
		{
			"ID": "20231116214719-un2yrxz",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20231116214719-un2yrxz",
				"updated": "20231116214728"
			},
			"Children": [
				{
					"ID": "20231116214728-kju5r95",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20231116214728-kju5r95",
						"updated": "20231116214728"
					},
					"Children": [
						{
							"ID": "20231116214728-5u8d8wq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231116214728-5u8d8wq",
								"updated": "20231116214728"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "随机音效（里氏替换原则和依赖倒转原则）\n"
								}
							]
						},
						{
							"ID": "20231116214737-p0lvlnm",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231116214737-p0lvlnm"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "播放音乐时，可能会随机播放多个音效当中的一种\n"
								}
							]
						}
					]
				},
				{
					"ID": "20231116214728-5xxhmvn",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20231116214728-5xxhmvn"
					},
					"Children": [
						{
							"ID": "20231116214728-xo1tznh",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231116214728-xo1tznh"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "物品拾取（里氏替换原则和依赖倒转原则）\n"
								}
							]
						},
						{
							"ID": "20231116214738-pd6zs7x",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231116214738-pd6zs7x"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "比如拾取一个物品，物品给玩家带来不同的效果"
								}
							]
						}
					]
				},
				{
					"ID": "20231116214744-vru70fb",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20231116214744-vru70fb"
					},
					"Children": [
						{
							"ID": "20231116214744-yors1j3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231116214744-yors1j3"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "AI\n"
								}
							]
						},
						{
							"ID": "20231116214746-kmspxxy",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231116214746-kmspxxy"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "不同数据带来的不同行为模式"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20231116214719-q3kmp25",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231116214719-q3kmp25",
				"updated": "20231116214719"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "为了方便我们使用，我们可以利用ScriptableObject的可配置性来制作这些功能"
				}
			]
		},
		{
			"ID": "20231116214846-czno4j6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231116214846-czno4j6",
				"updated": "20231116214846"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "其实下面的例子中的功能就算不用ScriptableObject也是能够用面向对象的思想，结合配置文件来完成的\n但是ScriptableObject具备自己的几个优点"
				}
			]
		},
		{
			"ID": "20231116214828-wqb7ime",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20231116214828-wqb7ime",
				"updated": "20231116214850"
			},
			"Children": [
				{
					"ID": "20231116214846-2xbm87s",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20231116214846-2xbm87s",
						"updated": "20231116214846"
					},
					"Children": [
						{
							"ID": "20231116214846-8daqwxb",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231116214846-8daqwxb",
								"updated": "20231116214846"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "更方便的配置"
								}
							]
						}
					]
				},
				{
					"ID": "20231116214846-1han5c8",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20231116214846-1han5c8",
						"updated": "20231116214850"
					},
					"Children": [
						{
							"ID": "20231116214846-piz2crf",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231116214846-piz2crf",
								"updated": "20231116214850"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "共享数据节约内存\n"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20231116214850-jmmp08k",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231116214850-jmmp08k",
				"updated": "20231116214851"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在实现某些功能的时候，使用ScriptableObject会更加方便我们的使用"
				}
			]
		},
		{
			"ID": "20231116215331-zeeay0t",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20231116215331-zeeay0t",
				"updated": "20231116215332"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "举例说明"
				}
			]
		},
		{
			"ID": "20231116215333-uo0b0fv",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20231116215333-uo0b0fv",
				"updated": "20231116215343"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "随机音效"
				}
			]
		},
		{
			"ID": "20231116215343-que13nl",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20231116215343-que13nl",
				"style": "line-height: 22px;",
				"updated": "20231116220941"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "using UnityEngine;\n\npublic abstract class AudioPlayBase : ScriptableObject\n{\n    public abstract void Play(AudioSource source);\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20231116220943-9t31jxn",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20231116220943-9t31jxn",
				"style": "line-height: 22px;",
				"updated": "20231116220957"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "using System.Collections.Generic;\nusing UnityEngine;\n\n[CreateAssetMenu()]\npublic class RandomPlayAudio : AudioPlayBase\n{\n    //希望随机播放的音效文件\n    public List\u003cAudioClip\u003e clips;\n\n    public override void Play(AudioSource source)\n    {\n        if (clips.Count == 0)\n            return;\n        //设置音效切片文件\n        source.clip = clips[Random.Range(0, clips.Count)];\n        source.Play();\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20231116221007-2e18j98",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20231116221007-2e18j98",
				"style": "line-height: 22px;",
				"updated": "20231116221014"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "using UnityEngine;\n\npublic class Lesson7 : MonoBehaviour\n{\n    public AudioPlayBase audioPlay;\n\n    void Start()\n    {\n        audioPlay.Play(this.GetComponent\u003cAudioSource\u003e());\n    }\n}\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20231116221016-y2u7vcm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231116221016-y2u7vcm",
				"updated": "20231116221057"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "之后我们在Inspector窗口内设置随机播放的音效列表，即可实现随机播放音效"
				}
			]
		},
		{
			"ID": "20231116221057-f9zrgfb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231116221057-f9zrgfb",
				"updated": "20231116221612"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这里我们通过里氏替换原则来使"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Lesson7"
				},
				{
					"Type": "NodeText",
					"Data": "​用父类"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "(AudioPlayBase)"
				},
				{
					"Type": "NodeText",
					"Data": "​装子类"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "(RandomAudioPlay)"
				},
				{
					"Type": "NodeText",
					"Data": "​\n再通过依赖倒转原则使"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Lesson7"
				},
				{
					"Type": "NodeText",
					"Data": "​调用父类"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "(AudioPlayBase)"
				},
				{
					"Type": "NodeText",
					"Data": "​的抽象方法"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "(Play())"
				},
				{
					"Type": "NodeText",
					"Data": "​而实际执行子类"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "(RandomAudioPlay)"
				},
				{
					"Type": "NodeText",
					"Data": "​的方法"
				}
			]
		},
		{
			"ID": "20231116221348-tkjeoox",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231116221348-tkjeoox",
				"updated": "20231116222144"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "再写一个正常的播放音效的配置文件"
				}
			]
		},
		{
			"ID": "20231116222144-zemobfu",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20231116222144-zemobfu",
				"style": "line-height: 22px;",
				"updated": "20231116222150"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "using UnityEngine;\n\n[CreateAssetMenu()]\npublic class PlayAudio : AudioPlayBase\n{\n    public AudioClip clip;\n\n    public override void Play(AudioSource source)\n    {\n        source.clip = clip;\n        source.Play();\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20231116222151-thect85",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231116222151-thect85",
				"updated": "20231116222349"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "再让"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Lesson7"
				},
				{
					"Type": "NodeText",
					"Data": "​用父类"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "(AudioPlayBase)"
				},
				{
					"Type": "NodeText",
					"Data": "​装子类"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "(PlayAudio)"
				},
				{
					"Type": "NodeText",
					"Data": "​，调用父类"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "(AudioPlayBase)"
				},
				{
					"Type": "NodeText",
					"Data": "​的抽象方法"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "(Play())"
				},
				{
					"Type": "NodeText",
					"Data": "​而实际执行子类"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "(AudioPlay)"
				},
				{
					"Type": "NodeText",
					"Data": "​的方法"
				}
			]
		},
		{
			"ID": "20231116222443-tgtyxha",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231116222443-tgtyxha",
				"updated": "20231116222525"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这样"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Lesson7"
				},
				{
					"Type": "NodeText",
					"Data": "​在调用同样的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Play()"
				},
				{
					"Type": "NodeText",
					"Data": "​时，根据子类的不同，执行不同的方法\n这样就可以实现数据带来的多态行为"
				}
			]
		},
		{
			"ID": "20231116222412-q20lgq0",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20231116222412-q20lgq0",
				"updated": "20231116223719"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "物品拾取"
				}
			]
		},
		{
			"ID": "20231116223719-l1pf5m1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231116223719-l1pf5m1",
				"updated": "20231116223802"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "先实现一个抽象的物品效果类"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "ItemEffect"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20231116223802-1gsjflo",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20231116223802-1gsjflo",
				"style": "line-height: 22px;",
				"updated": "20231116223810"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "using UnityEngine;\n\npublic abstract class ItemEffect : ScriptableObject\n{\n    public abstract void AddEffect(GameObject obj);\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20231116223814-ndkjo19",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231116223814-ndkjo19",
				"updated": "20231116223858"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "再通过这个基类实现加攻击效果类"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "AddAtkItemEffect"
				},
				{
					"Type": "NodeText",
					"Data": "​和加生命效果类"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "AddHealthItemEffect"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20231116223859-63xmfh8",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20231116223859-63xmfh8",
				"style": "line-height: 22px;",
				"updated": "20231116223907"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "using UnityEngine;\n\n[CreateAssetMenu()]\npublic class AddHealthItemEffect : ItemEffect\n{\n    public int num;\n\n    public override void AddEffect(GameObject obj)\n    {\n        //通过获取到的对象，让其加血\n        //obj.GetComponent\u003c...\u003e().hp += num\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20231116223908-nbw6c0g",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20231116223908-nbw6c0g",
				"style": "line-height: 22px;",
				"updated": "20231116223919"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "using UnityEngine;\n\n[CreateAssetMenu()]\npublic class AddAtkItemEffect : ItemEffect\n{\n    public int num;\n\n    public override void AddEffect(GameObject obj)\n    {\n        //通过获取到的对象，让其攻击力\n        //obj.GetComponent\u003c...\u003e().atk += num\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20231116223921-1u6e0w9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231116223921-1u6e0w9",
				"updated": "20231116224013"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "再实现一个物品对象类，里面有物品效果类"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "ItemEffect"
				},
				{
					"Type": "NodeText",
					"Data": "​的成员变量"
				}
			]
		},
		{
			"ID": "20231116223950-jomlft2",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20231116223950-jomlft2",
				"style": "line-height: 22px;",
				"updated": "20231116223952"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "using UnityEngine;\n\npublic class ItemObj : MonoBehaviour\n{\n    public ItemEffect eff;\n\n    private void OnTriggerEnter(Collider other)\n    {\n        //为和物品产生碰撞的对象加效果\n        eff.AddEffect(other.gameObject);\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20231116224015-meo6hkf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231116224015-meo6hkf",
				"updated": "20231116224205"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "接下来，就可以通过"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "eff"
				},
				{
					"Type": "NodeText",
					"Data": "​变量关联的不同的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "ItemEffect"
				},
				{
					"Type": "NodeText",
					"Data": "​派生类生成的配置文件实现接触到"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "ItemObj"
				},
				{
					"Type": "NodeText",
					"Data": "​对象碰撞盒的对象产生不同的效果"
				}
			]
		},
		{
			"ID": "20231116224207-h3uhx5b",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231116224207-h3uhx5b"
			}
		}
	]
}