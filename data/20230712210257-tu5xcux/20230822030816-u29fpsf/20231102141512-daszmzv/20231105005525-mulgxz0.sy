{
	"ID": "20231105005525-mulgxz0",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20231105005525-mulgxz0",
		"scroll": "\u0026#123;\u0026quot;rootId\u0026quot;:\u0026quot;20231105005525-mulgxz0\u0026quot;,\u0026quot;startId\u0026quot;:\u0026quot;20231105010641-aqipgc3\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20231105010939-1yrt65r\u0026quot;,\u0026quot;scrollTop\u0026quot;:0,\u0026quot;focusId\u0026quot;:\u0026quot;20231105010641-aqipgc3\u0026quot;,\u0026quot;focusStart\u0026quot;:0,\u0026quot;focusEnd\u0026quot;:0\u0026#125;",
		"title": "U4S1L9——输入配置文件生成C#代码",
		"updated": "20231105170127"
	},
	"Children": [
		{
			"ID": "20231105010641-aqipgc3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231105010641-aqipgc3",
				"updated": "20231105010937"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "之前我们通过配置文件，可以做到一个配置文件管理多个"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "InputAction"
				},
				{
					"Type": "NodeText",
					"Data": "​类，那我们该如何在C"
				},
				{
					"Type": "NodeBackslash",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBackslashContent",
							"Data": "#"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "脚本里使用这些类呢？\n我们需要通过配置文件生成自动一个C"
				},
				{
					"Type": "NodeBackslash",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBackslashContent",
							"Data": "#"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "脚本，使我们可以让配置文件配置的输入方案使用C#代码监听"
				}
			]
		},
		{
			"ID": "20231105005525-hm03py9",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20231105005525-hm03py9",
				"updated": "20231105005543"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "根据配置文件生成C"
				},
				{
					"Type": "NodeBackslash",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBackslashContent",
							"Data": "#"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "代码"
				}
			]
		},
		{
			"ID": "20231105010139-ltp28qw",
			"Type": "NodeSuperBlock",
			"Properties": {
				"id": "20231105010139-ltp28qw",
				"updated": "20231105011105"
			},
			"Children": [
				{
					"Type": "NodeSuperBlockOpenMarker"
				},
				{
					"Type": "NodeSuperBlockLayoutMarker",
					"Data": "col"
				},
				{
					"ID": "20231105005544-s4bqg8i",
					"Type": "NodeList",
					"ListData": {
						"Typ": 1
					},
					"Properties": {
						"id": "20231105005544-s4bqg8i",
						"updated": "20231105011105"
					},
					"Children": [
						{
							"ID": "20231105005557-i90k9yh",
							"Type": "NodeListItem",
							"ListData": {
								"Typ": 1,
								"Delimiter": 46,
								"Marker": "MS4=",
								"Num": 1
							},
							"Properties": {
								"id": "20231105005557-i90k9yh",
								"updated": "20231105005557"
							},
							"Children": [
								{
									"ID": "20231105005557-j84pyx5",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20231105005557-j84pyx5",
										"updated": "20231105010950"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "选择InputActions文件"
										}
									]
								}
							]
						},
						{
							"ID": "20231105005557-vwx8thb",
							"Type": "NodeListItem",
							"ListData": {
								"Typ": 1,
								"Delimiter": 46,
								"Marker": "Mi4=",
								"Num": 2
							},
							"Properties": {
								"id": "20231105005557-vwx8thb",
								"updated": "20231105005557"
							},
							"Children": [
								{
									"ID": "20231105005557-g4l9i8x",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20231105005557-g4l9i8x",
										"updated": "20231105005557"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "在Inspector窗口设置生成路径，类名，命名空间"
										}
									]
								}
							]
						},
						{
							"ID": "20231105005557-uy9e4he",
							"Type": "NodeListItem",
							"ListData": {
								"Typ": 1,
								"Delimiter": 46,
								"Marker": "My4=",
								"Num": 3
							},
							"Properties": {
								"id": "20231105005557-uy9e4he",
								"updated": "20231105005557"
							},
							"Children": [
								{
									"ID": "20231105005557-3ol0gzf",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20231105005557-3ol0gzf",
										"updated": "20231105005557"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "应用后生成代码"
										}
									]
								}
							]
						},
						{
							"ID": "20231105010943-9jdj1ee",
							"Type": "NodeListItem",
							"ListData": {
								"Typ": 1,
								"Delimiter": 46,
								"Marker": "NC4=",
								"Num": 4
							},
							"Properties": {
								"id": "20231105010943-9jdj1ee",
								"updated": "20231105011105"
							},
							"Children": [
								{
									"ID": "20231105010943-10wak9k",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20231105010943-10wak9k",
										"updated": "20231105011105"
									},
									"Children": [
										{
											"Type": "NodeTextMark",
											"TextMarkType": "strong",
											"TextMarkTextContent": "注意生成的脚本名，不要将已有的C#脚本覆盖了！"
										},
										{
											"Type": "NodeText",
											"Data": "\n之后我们也要通过这个脚本中的类来监听输入"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20231105010132-no9yca9",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20231105010132-no9yca9",
						"updated": "20231105010132"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "​"
						},
						{
							"Type": "NodeImage",
							"Data": "span",
							"Properties": {
								"parent-style": "width: 332px;",
								"style": "width: 322px;"
							},
							"Children": [
								{
									"Type": "NodeBang"
								},
								{
									"Type": "NodeOpenBracket"
								},
								{
									"Type": "NodeLinkText",
									"Data": "image"
								},
								{
									"Type": "NodeCloseBracket"
								},
								{
									"Type": "NodeOpenParen"
								},
								{
									"Type": "NodeLinkDest",
									"Data": "assets/image-20231105010132-m1wl76y.png"
								},
								{
									"Type": "NodeCloseParen"
								}
							]
						},
						{
							"Type": "NodeKramdownSpanIAL",
							"Data": "{: style=\"width: 322px;\" parent-style=\"width: 332px;\"}"
						},
						{
							"Type": "NodeText",
							"Data": "​"
						}
					]
				},
				{
					"Type": "NodeSuperBlockCloseMarker"
				}
			]
		},
		{
			"ID": "20231105010143-oxwccrk",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20231105010143-oxwccrk",
				"updated": "20231105010636"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用C"
				},
				{
					"Type": "NodeBackslash",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBackslashContent",
							"Data": "#"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "代码进行监听"
				}
			]
		},
		{
			"ID": "20231105011735-jcgwn47",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231105011735-jcgwn47",
				"updated": "20231105011832"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "演示生成C"
				},
				{
					"Type": "NodeBackslash",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBackslashContent",
							"Data": "#"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "代码所使用的配置文件的情况如下：\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"parent-style": "width: 487px;",
						"style": "width: 477px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20231105011832-cgofish.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 477px;\" parent-style=\"width: 487px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​\n"
				}
			]
		},
		{
			"ID": "20231105010939-1yrt65r",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20231105010939-1yrt65r",
				"updated": "20231105013424"
			},
			"Children": [
				{
					"ID": "20231105011046-h528h74",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20231105011046-h528h74",
						"updated": "20231105011717"
					},
					"Children": [
						{
							"ID": "20231105011046-9mkpnex",
							"Type": "NodeHeading",
							"HeadingLevel": 3,
							"Properties": {
								"id": "20231105011046-9mkpnex",
								"updated": "20231105011557"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "创建生成的代码对象"
								}
							]
						},
						{
							"ID": "20231105011621-istxrnp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231105011621-istxrnp",
								"updated": "20231105011717"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "生成的输入类的类名取决于在通过配置文件生成C"
								},
								{
									"Type": "NodeBackslash",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeBackslashContent",
											"Data": "#"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "代码时使用的脚本名"
								}
							]
						},
						{
							"ID": "20231105011109-iinmsrw",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20231105011109-iinmsrw",
								"style": "line-height: 22px;",
								"updated": "20231105011253"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "void Start()\n{\n    Lesson9Input input = new Lesson9Input(); \n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20231105011046-4hj3xix",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20231105011046-4hj3xix",
						"name": "input.Enable()",
						"updated": "20231105013424"
					},
					"Children": [
						{
							"ID": "20231105011046-yeyp87h",
							"Type": "NodeHeading",
							"HeadingLevel": 3,
							"Properties": {
								"id": "20231105011046-yeyp87h",
								"updated": "20231105011600"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "激活输入"
								}
							]
						},
						{
							"ID": "20231105011721-v1omy37",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231105011721-v1omy37",
								"updated": "20231105013405"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "这里的input只是局部变量名，生成的输入类的类名取决于在通过配置文件生成C"
								},
								{
									"Type": "NodeBackslash",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeBackslashContent",
											"Data": "#"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "代码时使用的脚本名\n你不仅可以激活该配置文件内所有的输入，也可以只激活一个行为映射集内的输入，也可以只激活一个"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "InputAction"
								},
								{
									"Type": "NodeText",
									"Data": "​的输入"
								}
							]
						},
						{
							"ID": "20231105011211-n13puuq",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20231105011211-n13puuq",
								"style": "line-height: 22px;",
								"updated": "20231105013424"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "void Start()\n{\n    Lesson9Input input = new Lesson9Input();\n    input.Enable();\n    input.Action1.Enable();\n    input.Action1.Fire.Enable();\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20231105011046-fi0pg6b",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20231105011046-fi0pg6b",
						"name": "input.actions.inputAction",
						"updated": "20231105012525"
					},
					"Children": [
						{
							"ID": "20231105011046-u2hbwxh",
							"Type": "NodeHeading",
							"HeadingLevel": 3,
							"Properties": {
								"id": "20231105011046-u2hbwxh",
								"updated": "20231105011603"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "事件监听"
								}
							]
						},
						{
							"ID": "20231105012316-bc9cqzg",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231105012316-bc9cqzg",
								"updated": "20231105012434"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "这里的input只是局部变量名，Action1是在配置文件里行为映射集的名字，Fire是在配置文件里为"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "InputAction"
								},
								{
									"Type": "NodeText",
									"Data": "​命的名"
								}
							]
						},
						{
							"ID": "20231105011540-x6qj969",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231105011540-x6qj969",
								"updated": "20231105012525"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "通过生成的输入类，调用在"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "block-ref",
									"TextMarkBlockRefID": "20231105000541-jocv2xs",
									"TextMarkBlockRefSubtype": "s",
									"TextMarkTextContent": "ActionMaps里定义的行为映射集"
								},
								{
									"Type": "NodeText",
									"Data": "，再通过行为映射集调用"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "InputAction"
								},
								{
									"Type": "NodeText",
									"Data": "​，之后的内容就和"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "block-ref",
									"TextMarkBlockRefID": "20231104202351-ddgjbfk",
									"TextMarkBlockRefSubtype": "s",
									"TextMarkTextContent": "InputAction的使用"
								},
								{
									"Type": "NodeText",
									"Data": "一模一样了\n调用行为映射集的属性的名字和调用"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "InputAction"
								},
								{
									"Type": "NodeText",
									"Data": "​的属性的名字是由配置文件里使用的名字决定的"
								}
							]
						},
						{
							"ID": "20231105011213-3p8awui",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20231105011213-3p8awui",
								"style": "line-height: 22px;",
								"updated": "20231105011537"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "using UnityEngine;\n\npublic class Lesson9 : MonoBehaviour\n{\n    Lesson9Input input;\n\n    void Start()\n    {\n        input = new Lesson9Input();\n        input.Enable();\n        input.Action1.Fire.performed += (context) =\u003e\n        {\n            print(\"开火\");\n        };\n    }\n\n    void Update()\n    {\n        print(input.Action1.Move.ReadValue\u003cVector2\u003e());\n    }\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		}
	]
}