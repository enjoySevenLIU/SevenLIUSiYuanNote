{
	"ID": "20240316225257-f2bna2i",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20240316225257-f2bna2i",
		"title": "UN5L2——协议（消息）配置",
		"type": "doc",
		"updated": "20240319152503"
	},
	"Children": [
		{
			"ID": "20240316225257-55m9aoa",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240316225257-55m9aoa",
				"updated": "20240317155024"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "选择哪种格式配置协议？"
				}
			]
		},
		{
			"ID": "20240317191828-3924pmo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240317191828-3924pmo",
				"updated": "20240317191828"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "利用配置文件配置消息、数据结构、枚举的目的"
				}
			]
		},
		{
			"ID": "20240317191828-slmfgr1",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240317191828-slmfgr1",
				"updated": "20240317191828"
			},
			"Children": [
				{
					"ID": "20240317191828-eimb7ux",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20240317191828-eimb7ux",
						"updated": "20240317191828"
					},
					"Children": [
						{
							"ID": "20240317191828-vykgj58",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240317191828-vykgj58",
								"updated": "20240317191828"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "减少工作量，配置一次，之后自动化生成各种语言对应的类文件"
								}
							]
						}
					]
				},
				{
					"ID": "20240317191828-2sevzb5",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20240317191828-2sevzb5",
						"updated": "20240317191828"
					},
					"Children": [
						{
							"ID": "20240317191828-q4x5d4y",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240317191828-q4x5d4y",
								"updated": "20240317191828"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "减少沟通成本，避免前后端语言不同时，手动写代码出现前后端不统一的问题"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240317155045-0lrdu9f",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240317155045-0lrdu9f",
				"updated": "20240317155024"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们可以选择：xml、json、excel、自定义等等"
				}
			]
		},
		{
			"ID": "20240317155036-sgfpmkt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240317155036-sgfpmkt",
				"updated": "20240317155024"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们可以根据自己的喜好选择选择方便配置的，好用的即可\n配置的主要目的是确定类名、成员变量名"
				}
			]
		},
		{
			"ID": "20240317155029-1cusnc6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240317155029-1cusnc6",
				"updated": "20240317155024"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "之后根据读取的这些配置信息，再通过代码按照规则自动生成对应的类文件"
				}
			]
		},
		{
			"ID": "20240317155029-xqbo2y4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240317155029-xqbo2y4",
				"updated": "20240317155024"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "本课使用xml作为协议配置文件，学会xml配置，其它的方式都是大同小异的\n我们主要是学习制作思路和流程，以后的项目中，大家根据自己的喜好选择即可"
				}
			]
		},
		{
			"ID": "20240317155150-xoxtki3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240317155150-xoxtki3",
				"updated": "20240317155024"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "XML相关知识，可以在"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20230714234133-o6icpv2",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "数据持久化之XML"
				},
				{
					"Type": "NodeText",
					"Data": "中进行学习"
				}
			]
		},
		{
			"ID": "20240317155140-em8egs1",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240317155140-em8egs1",
				"updated": "20240317155141"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "以xml配置为例 —— 制定配置规则"
				}
			]
		},
		{
			"ID": "20240317155237-ohxm69j",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240317155237-ohxm69j",
				"updated": "20240317155244"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们主要执行以下步骤："
				}
			]
		},
		{
			"ID": "20240317155150-4h2vs0h",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240317155150-4h2vs0h",
				"updated": "20240319152503"
			},
			"Children": [
				{
					"ID": "20240317155150-9rbo14w",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20240317155150-9rbo14w",
						"updated": "20240317155150"
					},
					"Children": [
						{
							"ID": "20240317155150-irekwcz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240317155150-irekwcz",
								"updated": "20240317155150"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "创建xml配置文件"
								}
							]
						}
					]
				},
				{
					"ID": "20240317155150-v4fysn2",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20240317155150-v4fysn2",
						"updated": "20240319152503"
					},
					"Children": [
						{
							"ID": "20240317155150-ctmag3g",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240317155150-ctmag3g",
								"updated": "20240317155154"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "制定配置规则"
								}
							]
						},
						{
							"ID": "20240317165619-uwkffia",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240317165619-uwkffia",
								"updated": "20240317165811"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "首先，XML配置规则需要一个根节点，因此我们将"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "\u0026lt;messages\u0026gt;"
								},
								{
									"Type": "NodeText",
									"Data": "​作为根节点，其中包裹各个枚举、消息类和枚举的声明"
								}
							]
						},
						{
							"ID": "20240317165653-ffg4fdg",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240317165653-ffg4fdg",
								"style": "line-height: 22px;",
								"updated": "20240317165714"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "eG1s"
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n\u003cmessages\u003e\n\u003c/messages\u003e\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20240317155154-h0abvtv",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20240317155154-h0abvtv",
								"updated": "20240319152503"
							},
							"Children": [
								{
									"ID": "20240317155154-46np0es",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20240317155154-46np0es",
										"updated": "20240317155154"
									},
									"Children": [
										{
											"ID": "20240317155154-p3l091m",
											"Type": "NodeHeading",
											"HeadingLevel": 3,
											"Properties": {
												"id": "20240317155154-p3l091m",
												"updated": "20240317170516"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "枚举规则"
												}
											]
										},
										{
											"ID": "20240317163707-8vrrorw",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240317163707-8vrrorw",
												"updated": "20240317163719"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "假设我们要创建这样的枚举"
												}
											]
										},
										{
											"ID": "20240317163720-iy38cfz",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20240317163720-iy38cfz",
												"style": "line-height: 22px;",
												"updated": "20240317163723"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "YyM="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "namespace GamePlayer\n{\n    public enum E_PLAYER_TYPE\n    {\n        MAIN = 1,\n        OTHER,\n    }\n}\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										},
										{
											"ID": "20240317163725-szhxxvq",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240317163725-szhxxvq",
												"updated": "20240317164621"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "分析得到，要创建这样的枚举，必须要的消息是：枚举所在的命名空间，枚举名，各个字段名，各字段的默认值"
												}
											]
										},
										{
											"ID": "20240317163926-3xtiaxs",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240317163926-3xtiaxs",
												"updated": "20240317164429"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "因此，我们规定这样的XML配置规则："
												}
											]
										},
										{
											"ID": "20240317164430-solh862",
											"Type": "NodeList",
											"ListData": {},
											"Properties": {
												"id": "20240317164430-solh862",
												"updated": "20240317164431"
											},
											"Children": [
												{
													"ID": "20240317164431-hzl9fse",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20240317164431-hzl9fse",
														"updated": "20240317164431"
													},
													"Children": [
														{
															"ID": "20240317164431-2e1w6qo",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20240317164431-2e1w6qo",
																"updated": "20240317164642"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "用"
																},
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "code",
																	"TextMarkTextContent": "\u0026lt;enum\u0026gt;"
																},
																{
																	"Type": "NodeText",
																	"Data": "​节点代表一个枚举的声明，属性包括枚举名和命名空间名，其中包裹若干个字段"
																}
															]
														}
													]
												},
												{
													"ID": "20240317164431-nve1hmm",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20240317164431-nve1hmm"
													},
													"Children": [
														{
															"ID": "20240317164431-o4jqg7h",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20240317164431-o4jqg7h",
																"updated": "20240317164646"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "用"
																},
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "code",
																	"TextMarkTextContent": "\u0026lt;field\u0026gt;"
																},
																{
																	"Type": "NodeText",
																	"Data": "​节点代表一个字段，属性有名字，"
																},
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "code",
																	"TextMarkTextContent": "\u0026lt;field\u0026gt;"
																},
																{
																	"Type": "NodeText",
																	"Data": "​可以包裹值，包裹的值即该字段默认值，也可以不包裹值"
																}
															]
														}
													]
												}
											]
										},
										{
											"ID": "20240317164356-k6cee8f",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240317164356-k6cee8f",
												"updated": "20240317164739"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "按照如上规则，可以得到这样的XML配置文本"
												}
											]
										},
										{
											"ID": "20240317163945-ks3815g",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20240317163945-ks3815g",
												"style": "line-height: 22px;",
												"updated": "20240317165746"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "eG1s"
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n\u003cmessages\u003e\n    \u003c!-- 枚举配置规则 --\u003e\n    \u003cenum name=\"E_PLAYER_TYPE\" namespace=\"GamePlayer\"\u003e\n        \u003cfield name=\"MAIN\"\u003e2\u003c/field\u003e\n        \u003cfield name=\"OTHER\"/\u003e\n    \u003c/enum\u003e\n\u003c/messages\u003e\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										},
										{
											"ID": "20240317164436-fdzhzt1",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240317164436-fdzhzt1",
												"updated": "20240317164558"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "按照这个规则，我们就再用XML声明一个"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "E_MONSTER_TYPE"
												},
												{
													"Type": "NodeText",
													"Data": "​，声明得到："
												}
											]
										},
										{
											"ID": "20240317164518-7cv0vw9",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20240317164518-7cv0vw9",
												"style": "line-height: 22px;",
												"updated": "20240317165744"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "eG1s"
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n\u003cmessages\u003e\n    \u003c!-- 枚举配置规则 --\u003e\n    \u003cenum name=\"E_MONSTER_TYPE\" namespace=\"GameMonster\"\u003e\n        \u003cfield name=\"NORMAL\"\u003e2\u003c/field\u003e\n        \u003cfield name=\"BOSS\"/\u003e\n    \u003c/enum\u003e\n\u003c/messages\u003e\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								},
								{
									"ID": "20240317155154-rk0o2mu",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "Mi4=",
										"Num": 2
									},
									"Properties": {
										"id": "20240317155154-rk0o2mu",
										"updated": "20240319152503"
									},
									"Children": [
										{
											"ID": "20240317155154-k0em7gu",
											"Type": "NodeHeading",
											"HeadingLevel": 3,
											"Properties": {
												"id": "20240317155154-k0em7gu",
												"updated": "20240317170519"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "数据类规则"
												}
											]
										},
										{
											"ID": "20240317164611-w9n25s2",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240317164611-w9n25s2",
												"updated": "20240317164717"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "假设我们要创建这样的数据类："
												}
											]
										},
										{
											"ID": "20240317164611-e19dmws",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20240317164611-e19dmws",
												"style": "line-height: 22px;",
												"updated": "20240317164714"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "YyM="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "namespace GamePlayer\n{\n    public class PlayerData : BaseData\n    {\n        public int id;\n        public float atk;\n        public long lev;\n        public int[] arrays;\n        public List\u003cint\u003e list;\n        public Dictionary\u003cint, string\u003e dict;\n\n        public override int GetBytesNum()\n        {\n            throw new System.NotImplementedException();\n        }\n\n        public override int Reading(byte[] bytes, int beginIndex = 0)\n        {\n            throw new System.NotImplementedException();\n        }\n\n        public override byte[] Writeing()\n        {\n            throw new System.NotImplementedException();\n        }\n    }\n}\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										},
										{
											"ID": "20240317164611-kznsg2m",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240317164611-kznsg2m",
												"updated": "20240317165418"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "值得一提的是，在配置文件里"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "只需要各个字段（成员变量），而不需要方法，"
												},
												{
													"Type": "NodeText",
													"Data": "\n因为数据类的方法有哪些是固定的，而这些固定方法的具体实现依托于该数据类的各个字段\n因此配置文件内只需要各个字段的信息，就可以根据这些字段信息实现数据类的中的固定方法"
												}
											]
										},
										{
											"ID": "20240317165026-xc676f5",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240317165026-xc676f5",
												"updated": "20240317165129"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "最终分析得到，要创建这样的数据类，必须要的消息是：所在的命名空间，类名，各个字段名，类型，若有泛型则泛型参数是什么"
												}
											]
										},
										{
											"ID": "20240317165141-4fj3ub6",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240317165141-4fj3ub6",
												"updated": "20240317165141"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "因此，我们规定这样的XML配置规则："
												}
											]
										},
										{
											"ID": "20240317165141-aegu9o0",
											"Type": "NodeList",
											"ListData": {},
											"Properties": {
												"id": "20240317165141-aegu9o0",
												"updated": "20240317165141"
											},
											"Children": [
												{
													"ID": "20240317165141-g4w08qr",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20240317165141-g4w08qr",
														"updated": "20240317165141"
													},
													"Children": [
														{
															"ID": "20240317165141-e23xl12",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20240317165141-e23xl12",
																"updated": "20240317165606"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "用"
																},
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "code",
																	"TextMarkTextContent": "\u0026lt;data\u0026gt;"
																},
																{
																	"Type": "NodeText",
																	"Data": "​节点代表一个数据类的声明，属性包括类名和命名空间名，其中包裹若干个字段"
																}
															]
														}
													]
												},
												{
													"ID": "20240317165141-7az8qoc",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20240317165141-7az8qoc",
														"updated": "20240317165141"
													},
													"Children": [
														{
															"ID": "20240317165141-7eh1n7l",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20240317165141-7eh1n7l",
																"updated": "20240317165328"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "用"
																},
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "code",
																	"TextMarkTextContent": "\u0026lt;field\u0026gt;"
																},
																{
																	"Type": "NodeText",
																	"Data": "​节点代表一个字段，属性有名字，变量类型，泛型参数（有泛型的情况下），\n​"
																},
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "code",
																	"TextMarkTextContent": "\u0026lt;field\u0026gt;"
																},
																{
																	"Type": "NodeText",
																	"Data": "​可以包裹值，包裹的值即该字段默认值，也可以不包裹值"
																}
															]
														}
													]
												}
											]
										},
										{
											"ID": "20240317165349-kevcs0o",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240317165349-kevcs0o",
												"updated": "20240317165352"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "按照如上规则，可以得到这样的XML配置文本"
												}
											]
										},
										{
											"ID": "20240317165147-6jhmvsi",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20240317165147-6jhmvsi",
												"style": "line-height: 22px;",
												"updated": "20240319152503"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "eG1s"
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n\u003cmessages\u003e\n\t\u003c!-- 数据结构类配置规则 --\u003e\n    \u003cdata name=\"PlayerData\" namespace=\"GamePlayer\"\u003e\n        \u003cfield type=\"int\" name=\"id\"/\u003e\n        \u003cfield type=\"float\" name=\"atk\"/\u003e\n        \u003cfield type=\"bool\" name=\"sex\"/\u003e\n        \u003cfield type=\"long\" name=\"lev\"/\u003e\n        \u003cfield type=\"array\" data=\"int\" name=\"arrays\"/\u003e\n        \u003cfield type=\"list\" T=\"int\" name=\"list\"/\u003e\n        \u003cfield type=\"dic\" TKey=\"int\" TValue=\"string\" name=\"dic\"/\u003e\n    \u003c/data\u003e\n\u003c/messages\u003e\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								},
								{
									"ID": "20240317155154-9zaejgd",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "My4=",
										"Num": 3
									},
									"Properties": {
										"id": "20240317155154-9zaejgd",
										"updated": "20240317170523"
									},
									"Children": [
										{
											"ID": "20240317155154-x4z04i3",
											"Type": "NodeHeading",
											"HeadingLevel": 3,
											"Properties": {
												"id": "20240317155154-x4z04i3",
												"updated": "20240317170523"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "消息类规则"
												}
											]
										},
										{
											"ID": "20240317170534-khtkn5v",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240317170534-khtkn5v",
												"updated": "20240317170523"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "假设我们要创建这样的消息类："
												}
											]
										},
										{
											"ID": "20240317170534-r742fmn",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20240317170534-r742fmn",
												"style": "line-height: 22px;",
												"updated": "20240317170523"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "YyM="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "namespace GamePlayer\n{\n    public class PlayerMessage : BaseMessage\n    {\n        public int PlayerId;\n        public PlayerData PlayerData;\n\n        public override int GetID()\n        {\n            return 1001;\n        }\n    }\n}\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										},
										{
											"ID": "20240317170534-lfurvds",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240317170534-lfurvds",
												"updated": "20240317170523"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "所有的消息类都需要有一个自己的消息ID"
												}
											]
										},
										{
											"ID": "20240317170534-3b1jvxc",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240317170534-3b1jvxc",
												"updated": "20240317170523"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "最终分析得到，要创建这样的数据类，必须要的消息是：所在的命名空间，类名，消息ID，各个字段名，类型等"
												}
											]
										},
										{
											"ID": "20240317170534-y5qcxib",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240317170534-y5qcxib",
												"updated": "20240317170523"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "因此，我们规定这样的XML配置规则："
												}
											]
										},
										{
											"ID": "20240317170534-zhu4duj",
											"Type": "NodeList",
											"ListData": {},
											"Properties": {
												"id": "20240317170534-zhu4duj",
												"updated": "20240317170523"
											},
											"Children": [
												{
													"ID": "20240317170534-aw4n3o8",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20240317170534-aw4n3o8",
														"updated": "20240317170534"
													},
													"Children": [
														{
															"ID": "20240317170534-nqhvv73",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20240317170534-nqhvv73",
																"updated": "20240317170534"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "用"
																},
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "code",
																	"TextMarkTextContent": "\u0026lt;message\u0026gt;"
																},
																{
																	"Type": "NodeText",
																	"Data": "​节点代表一个数据类的声明，属性包括消息ID，类名和命名空间名，其中包裹若干个字段"
																}
															]
														}
													]
												},
												{
													"ID": "20240317170534-wjrq3o8",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20240317170534-wjrq3o8",
														"updated": "20240317170534"
													},
													"Children": [
														{
															"ID": "20240317170534-g47sjws",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20240317170534-g47sjws",
																"updated": "20240317170534"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "用"
																},
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "code",
																	"TextMarkTextContent": "\u0026lt;field\u0026gt;"
																},
																{
																	"Type": "NodeText",
																	"Data": "​节点代表一个字段，属性有名字，变量类型，泛型参数（有泛型的情况下），\n​"
																},
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "code",
																	"TextMarkTextContent": "\u0026lt;field\u0026gt;"
																},
																{
																	"Type": "NodeText",
																	"Data": "​可以包裹值，包裹的值即该字段默认值，也可以不包裹值"
																}
															]
														}
													]
												}
											]
										},
										{
											"ID": "20240317170534-cqr674w",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240317170534-cqr674w",
												"updated": "20240317170523"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "按照如上规则，可以得到这样的XML配置文本"
												}
											]
										},
										{
											"ID": "20240317170534-u6znn2o",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20240317170534-u6znn2o",
												"style": "line-height: 22px;",
												"updated": "20240317170523"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "eG1s"
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n\u003cmessages\u003e\n    \u003c!-- 消息类配置规则 --\u003e\n    \u003cmessage id=\"1001\" name=\"PlayerMsg\" namespace=\"GamePlayer\"\u003e\n        \u003cfield type=\"int\" name=\"playerID\"/\u003e`\n        \u003cfield type=\"PlayerData\" name=\"data\"/\u003e\n    \u003c/message\u003e\n\u003c/messages\u003e\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										},
										{
											"ID": "20240317170534-doje8es",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240317170534-doje8es",
												"updated": "20240317170523"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "根据以上规则，我们再声明一个心跳消息ID，因为心跳消息不包含其他数据，因此不需要包裹内容"
												}
											]
										},
										{
											"ID": "20240317170534-4pgxr0l",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20240317170534-4pgxr0l",
												"style": "line-height: 22px;",
												"updated": "20240317170523"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "eG1s"
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n\u003cmessages\u003e\n    \u003cmessage id=\"1002\" name=\"HeartMsg\" namespace=\"GameSystem\"/\u003e\n\u003c/messages\u003e\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240317155245-h74p3m6",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240317155245-h74p3m6",
				"updated": "20240317170601"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "读取配置信息"
				}
			]
		},
		{
			"ID": "20240318222922-3ddzks7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240318222922-3ddzks7",
				"updated": "20240318223013"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "对于XML消息的读取与解析，我们需要调用"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code block-ref",
					"TextMarkBlockRefID": "20230715190311-mfand82",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "XmlDocument"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20240318223020-hzhuiyu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240318223020-hzhuiyu",
				"updated": "20240318223033"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "读取配置消息的代码如下："
				}
			]
		},
		{
			"ID": "20240318223034-ln20ywe",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20240318223034-ln20ywe",
				"updated": "20240318223438"
			},
			"Children": [
				{
					"ID": "20240318223047-kfdymmx",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240318223047-kfdymmx"
					},
					"Children": [
						{
							"ID": "20240318223047-q4bbc74",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240318223047-q4bbc74",
								"updated": "20240318223102"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "首先读取配置文件和根节点"
								}
							]
						},
						{
							"ID": "20240318223102-ee242vu",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240318223102-ee242vu",
								"style": "line-height: 22px;",
								"updated": "20240318223235"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "XmlDocument xml = new XmlDocument();\nxml.Load(Application.dataPath + \"/Scripts/L35_协议（消息）配置/Lesson35.xml\");\nXmlNode root = xml.SelectSingleNode(\"messages\");\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20240318223035-vk8ob0x",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240318223035-vk8ob0x",
						"updated": "20240318223035"
					},
					"Children": [
						{
							"ID": "20240318223035-oml7nym",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240318223035-oml7nym",
								"updated": "20240318223040"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "读取枚举消息"
								}
							]
						},
						{
							"ID": "20240318223109-3bsih6c",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240318223109-3bsih6c",
								"updated": "20240318223251"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "先读取所有的"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "\u0026lt;enum\u0026gt;"
								},
								{
									"Type": "NodeText",
									"Data": "​节点，然后遍历，获取其枚举名和命名空间名，\n然后读取每个"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "\u0026lt;enum\u0026gt;"
								},
								{
									"Type": "NodeText",
									"Data": "​节点的所有"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "\u0026lt;field\u0026gt;"
								},
								{
									"Type": "NodeText",
									"Data": "​节点，然后遍历，读取其名字和值"
								}
							]
						},
						{
							"ID": "20240318223041-oinn3we",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240318223041-oinn3we",
								"style": "line-height: 22px;",
								"updated": "20240318223257"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "XmlNodeList enumList = root.SelectNodes(\"enum\");\nprint(\"**********枚举**********\");\nforeach (XmlNode enumNode in enumList)\n{\n    print(\"枚举名：\" + enumNode.Attributes[\"name\"].Value);\n    print(\"枚举命名空间名：\" + enumNode.Attributes[\"namespace\"].Value);\n    XmlNodeList fields = enumNode.SelectNodes(\"field\");\n    foreach (XmlNode fieldNode in fields)\n    {\n        string str = fieldNode.Attributes[\"name\"].Value;\n        if (!string.IsNullOrEmpty(fieldNode.InnerText))\n            str += \" = \" + fieldNode.InnerText;\n        str += \", \";\n        print(str);\n    }\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20240318223259-cdo4bab",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240318223259-cdo4bab"
					},
					"Children": [
						{
							"ID": "20240318223259-cbpv1dc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240318223259-cbpv1dc",
								"updated": "20240318223303"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "读取数据类"
								}
							]
						},
						{
							"ID": "20240318223306-3cjjxjo",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240318223306-3cjjxjo",
								"updated": "20240318223402"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "先读取所有的"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "\u0026lt;data\u0026gt;"
								},
								{
									"Type": "NodeText",
									"Data": "​节点，然后遍历，获取其数据类名和命名空间名，\n然后读取每个"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "\u0026lt;data\u0026gt;"
								},
								{
									"Type": "NodeText",
									"Data": "​节点的所有"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "\u0026lt;field\u0026gt;"
								},
								{
									"Type": "NodeText",
									"Data": "​节点，然后遍历，读取其变量类型，名字"
								}
							]
						},
						{
							"ID": "20240318223304-x4rmd7b",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240318223304-x4rmd7b",
								"style": "line-height: 22px;",
								"updated": "20240318223324"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "print(\"**********数据类**********\");\nXmlNodeList dataList = root.SelectNodes(\"data\");\nforeach (XmlNode dataNode in dataList)\n{\n    print(\"数据类名：\" + dataNode.Attributes[\"name\"].Value);\n    print(\"数据类命名空间名：\" + dataNode.Attributes[\"namespace\"].Value);\n    XmlNodeList fields = dataNode.SelectNodes(\"field\");\n    foreach (XmlNode fieldNode in fields)\n    {\n        print(fieldNode.Attributes[\"type\"].Value + \" \" + fieldNode.Attributes[\"name\"].Value + \";\");\n    }\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20240318223351-uogkarr",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240318223351-uogkarr",
						"updated": "20240318223438"
					},
					"Children": [
						{
							"ID": "20240318223351-djmqn0t",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240318223351-djmqn0t",
								"updated": "20240318223359"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "读取消息类"
								}
							]
						},
						{
							"ID": "20240318223407-qimz41o",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240318223407-qimz41o",
								"updated": "20240318223432"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "先读取所有的"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "\u0026lt;message\u0026gt;"
								},
								{
									"Type": "NodeText",
									"Data": "​节点，然后遍历，获取其消息类名和命名空间名，以及消息ID\n然后读取每个"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "\u0026lt;message\u0026gt;"
								},
								{
									"Type": "NodeText",
									"Data": "​节点的所有"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "\u0026lt;field\u0026gt;"
								},
								{
									"Type": "NodeText",
									"Data": "​节点，然后遍历，读取其变量类型，名字"
								}
							]
						},
						{
							"ID": "20240317191728-xj140rq",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240317191728-xj140rq",
								"style": "line-height: 22px;",
								"updated": "20240318223438"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "print(\"**********消息类**********\");\nXmlNodeList msgList = root.SelectNodes(\"message\");\nforeach (XmlNode msgNode in msgList)\n{\n    print(\"消息类名：\" + msgNode.Attributes[\"name\"].Value);\n    print(\"消息类命名空间名：\" + msgNode.Attributes[\"namespace\"].Value);\n    print(\"消息ID：\" + msgNode.Attributes[\"id\"].Value);\n    XmlNodeList fields = msgNode.SelectNodes(\"field\");\n    foreach (XmlNode fieldNode in fields)\n    {\n        print(fieldNode.Attributes[\"type\"].Value + \" \" + fieldNode.Attributes[\"name\"].Value + \";\");\n    }\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		}
	]
}