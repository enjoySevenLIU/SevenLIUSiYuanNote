{
	"ID": "20240313211334-0gj1hkg",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20240313211334-0gj1hkg",
		"title": "UN3L6——其它操作",
		"updated": "20240314121723"
	},
	"Children": [
		{
			"ID": "20240313211334-4keqnc1",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240313211334-4keqnc1",
				"updated": "20240314105817"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "其它操作"
				}
			]
		},
		{
			"ID": "20240314105818-6yybfhk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240314105818-6yybfhk",
				"updated": "20240314105845"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "除了上传和下载，我们可能会对FTP服务器上的内容进行其它操作，比如："
				}
			]
		},
		{
			"ID": "20240314105843-dkdrb31",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240314105843-dkdrb31",
				"updated": "20240314105843"
			},
			"Children": [
				{
					"ID": "20240314105843-h1k1kk3",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20240314105843-h1k1kk3",
						"updated": "20240314105843"
					},
					"Children": [
						{
							"ID": "20240314105843-a79635c",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240314105843-a79635c",
								"updated": "20240314105843"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "删除文件"
								}
							]
						}
					]
				},
				{
					"ID": "20240314105843-wyq8tpt",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20240314105843-wyq8tpt",
						"updated": "20240314105843"
					},
					"Children": [
						{
							"ID": "20240314105843-u0a5z1r",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240314105843-u0a5z1r",
								"updated": "20240314105843"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "获取文件大小"
								}
							]
						}
					]
				},
				{
					"ID": "20240314105843-lmf1b6q",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20240314105843-lmf1b6q",
						"updated": "20240314105843"
					},
					"Children": [
						{
							"ID": "20240314105843-9hctmwk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240314105843-9hctmwk",
								"updated": "20240314105843"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "创建文件夹"
								}
							]
						}
					]
				},
				{
					"ID": "20240314105843-zddvzzh",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20240314105843-zddvzzh",
						"updated": "20240314105843"
					},
					"Children": [
						{
							"ID": "20240314105843-edmvrsk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240314105843-edmvrsk",
								"updated": "20240314105843"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "获取文件列表"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240314105841-8uijt5i",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240314105841-8uijt5i",
				"updated": "20240314105841"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "等等"
				}
			]
		},
		{
			"ID": "20240314105848-wbk41n9",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240314105848-wbk41n9",
				"updated": "20240314105902"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "进行其他操作"
				}
			]
		},
		{
			"ID": "20240314105902-ctwcsjg",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20240314105902-ctwcsjg",
				"updated": "20240314121723"
			},
			"Children": [
				{
					"ID": "20240314105904-ysb9432",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240314105904-ysb9432",
						"updated": "20240314121139"
					},
					"Children": [
						{
							"ID": "20240314105904-cxqxzds",
							"Type": "NodeHeading",
							"HeadingLevel": 3,
							"Properties": {
								"id": "20240314105904-cxqxzds",
								"updated": "20240314105908"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "删除文件"
								}
							]
						},
						{
							"ID": "20240314120746-qm7fbgo",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240314120746-qm7fbgo",
								"updated": "20240314121139"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "删除哪个文件取决于在创建连接时传入了哪个文件的路径\n删除文件的命令通过"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "WebRequestMethods.Ftp.DeleteFile"
								},
								{
									"Type": "NodeText",
									"Data": "​获取，\n执行"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "FtpWebRequest.GetResponse()"
								},
								{
									"Type": "NodeText",
									"Data": "​就会真正的执行删除的逻辑"
								}
							]
						},
						{
							"ID": "20240314105930-vjavt5v",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240314105930-vjavt5v",
								"style": "line-height: 22px;",
								"updated": "20240314105908"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "//FtpManager内\n\n/// \u003csummary\u003e\n/// 移除指定的文件\n/// \u003c/summary\u003e\n/// \u003cparam name=\"fileName\"\u003e文件名\u003c/param\u003e\n/// \u003cparam name=\"action\"\u003e移除过后要做什么的委托\u003c/param\u003e\npublic async void DeleteFile(string fileName, UnityAction\u003cbool\u003e action = null)\n{\n    await Task.Run(() =\u003e\n    {\n        try\n        {\n            //创建一个Ftp连接\n            FtpWebRequest request = FtpWebRequest.Create(new Uri(FTP_PATH + fileName)) as FtpWebRequest;\n            //设置代理，凭证，是否保持连接，操作类型，是否使用二进制传输数据\n            request.Proxy = null;\n            request.Credentials = new NetworkCredential(USER_NAME, PASSWORD);\n            request.KeepAlive = false;\n            request.Method = WebRequestMethods.Ftp.DeleteFile;\n            request.UseBinary = true;\n            //真正的删除\n            FtpWebResponse response = request.GetResponse() as FtpWebResponse;\n            response.Close();\n            action?.Invoke(true);\n        }\n        catch (Exception e)\n        {\n            Debug.Log(\"移除失败！\" + e.Message);\n            action?.Invoke(false);\n        }\n    });\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20240314120732-er4vtur",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240314120732-er4vtur",
								"style": "line-height: 22px;",
								"updated": "20240314105908"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "FtpManager.Instance.DeleteFile(\"测试测试.txt\", (result) =\u003e\n{\n    print(result ? \"删除成功\" : \"删除失败\");\n});\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20240314105910-qcs3hb6",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240314105910-qcs3hb6",
						"updated": "20240314121203"
					},
					"Children": [
						{
							"ID": "20240314105910-8i5kumt",
							"Type": "NodeHeading",
							"HeadingLevel": 3,
							"Properties": {
								"id": "20240314105910-8i5kumt",
								"updated": "20240314105915"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "获取文件大小"
								}
							]
						},
						{
							"ID": "20240314121000-nqll9kd",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240314121000-nqll9kd",
								"updated": "20240314121203"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "获取哪个文件大小取决于在创建连接时传入了哪个文件的路径\n获取文件大小命令通过"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "WebRequestMethods.Ftp.GetFileSize"
								},
								{
									"Type": "NodeText",
									"Data": "​获取，\n执行"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "FtpWebRequest.GetResponse()"
								},
								{
									"Type": "NodeText",
									"Data": "​就会真正的执行获取文件大小的逻辑\n再通过"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "FtpWebResponse.ContentLength"
								},
								{
									"Type": "NodeText",
									"Data": "​就可以获取到文件大小"
								}
							]
						},
						{
							"ID": "20240314105933-pmbpljo",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240314105933-pmbpljo",
								"style": "line-height: 22px;",
								"updated": "20240314105915"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "//FtpManager内\n\n/// \u003csummary\u003e\n/// 获取FTP服务器上某个文件大小，单位是字节\n/// \u003c/summary\u003e\n/// \u003cparam name=\"fileName\"\u003e文件名\u003c/param\u003e\n/// \u003cparam name=\"action\"\u003e获取后要传递给外部的具体的大小\u003c/param\u003e\npublic async void GetFileSize(string fileName, UnityAction\u003clong\u003e action = null)\n{\n    await Task.Run(() =\u003e\n    {\n        try\n        {\n            //创建一个Ftp连接\n            FtpWebRequest request = FtpWebRequest.Create(new Uri(FTP_PATH + fileName)) as FtpWebRequest;\n            //设置代理，凭证，是否保持连接，操作类型，是否使用二进制传输数据\n            request.Proxy = null;\n            request.Credentials = new NetworkCredential(USER_NAME, PASSWORD);\n            request.KeepAlive = false;\n            request.Method = WebRequestMethods.Ftp.GetFileSize;\n            request.UseBinary = true;\n            //获取真正的长度\n            FtpWebResponse response = request.GetResponse() as FtpWebResponse;\n            response.Close();\n            action?.Invoke(response.ContentLength);\n        }\n        catch (Exception e)\n        {\n            Debug.Log(\"获取大小失败！\" + e.Message);\n            action?.Invoke(0);\n        }\n    });\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20240314120810-cw5611a",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240314120810-cw5611a",
								"style": "line-height: 22px;",
								"updated": "20240314105915"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "FtpManager.Instance.GetFileSize(\"下载测试.png\", (size) =\u003e\n{\n    print(\"文件大小为\" + size);\n});\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20240314105916-u98gxn8",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240314105916-u98gxn8",
						"updated": "20240314121440"
					},
					"Children": [
						{
							"ID": "20240314105916-69j0t2r",
							"Type": "NodeHeading",
							"HeadingLevel": 3,
							"Properties": {
								"id": "20240314105916-69j0t2r",
								"updated": "20240314105921"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "创建文件夹"
								}
							]
						},
						{
							"ID": "20240314121207-vr1qoxy",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240314121207-vr1qoxy",
								"updated": "20240314121440"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "文件夹创建到哪个路径下和文件夹使用什么名字取决于在创建连接时传入的路径\n创建文件夹命令通过"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "WebRequestMethods.Ftp.MakeDirectory"
								},
								{
									"Type": "NodeText",
									"Data": "​获取，\n执行"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "FtpWebRequest.GetResponse()"
								},
								{
									"Type": "NodeText",
									"Data": "​就会真正的执行创建文件夹的逻辑"
								}
							]
						},
						{
							"ID": "20240314121321-krcc7e6",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240314121321-krcc7e6",
								"style": "line-height: 22px;",
								"updated": "20240314121345"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "/// \u003csummary\u003e\n/// 创建一个文件夹在FTP服务器上\n/// \u003c/summary\u003e\n/// \u003cparam name=\"directoryName\"\u003e文件夹某种\u003c/param\u003e\n/// \u003cparam name=\"action\"\u003e创建完成后的回调\u003c/param\u003e\npublic async void CreateDirectory(string directoryName, UnityAction\u003cbool\u003e action = null)\n{\n    await Task.Run(() =\u003e\n    {\n        try\n        {\n            //创建一个Ftp连接\n            FtpWebRequest request = FtpWebRequest.Create(new Uri(FTP_PATH + directoryName)) as FtpWebRequest;\n            //设置代理，凭证，是否保持连接，操作类型，是否使用二进制传输数据\n            request.Proxy = null;\n            request.Credentials = new NetworkCredential(USER_NAME, PASSWORD);\n            request.KeepAlive = false;\n            request.Method = WebRequestMethods.Ftp.MakeDirectory;\n            request.UseBinary = true;\n            //创建文件夹\n            FtpWebResponse response = request.GetResponse() as FtpWebResponse;\n            response.Close();\n            action?.Invoke(true);\n        }\n        catch (Exception e)\n        {\n            Debug.Log(\"创建文件夹失败！\" + e.Message);\n            action?.Invoke(false);\n        }\n    });\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20240314105938-yq62i7b",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240314105938-yq62i7b",
								"style": "line-height: 22px;",
								"updated": "20240314105921"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "FtpManager.Instance.CreateDirectory(\"创建文件夹测试\", (result) =\u003e\n{\n    print(result ? \"创建成功\" : \"创建失败\");\n});\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20240314105921-5lg1qg1",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240314105921-5lg1qg1",
						"updated": "20240314121723"
					},
					"Children": [
						{
							"ID": "20240314105921-zwk9nze",
							"Type": "NodeHeading",
							"HeadingLevel": 3,
							"Properties": {
								"id": "20240314105921-zwk9nze",
								"updated": "20240314105928"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "获取文件列表"
								}
							]
						},
						{
							"ID": "20240314121446-w3huwi4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240314121446-w3huwi4",
								"updated": "20240314121705"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "获取哪个文件夹下的文件列表取决于在创建连接时传入了哪个文件的路径（不会去获取子文件夹及子文件夹下的文件）\n获取文件大小命令通过"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "WebRequestMethods.Ftp.ListDirectory"
								},
								{
									"Type": "NodeText",
									"Data": "​获取，\n执行"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "FtpWebRequest.GetResponse()"
								},
								{
									"Type": "NodeText",
									"Data": "​就会真正的执行获取文件列表的逻辑\n由于文件列表是以一行一行的文本形式传递的，因此，就像下载文件那样，可以通过文件流一行一行的读取文件名"
								}
							]
						},
						{
							"ID": "20240314121347-yer251s",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240314121347-yer251s",
								"style": "line-height: 22px;",
								"updated": "20240314121723"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "/// \u003csummary\u003e\n/// 获取某个文件夹下所有文件名\n/// \u003c/summary\u003e\n/// \u003cparam name=\"directoryName\"\u003e文件夹路径\u003c/param\u003e\n/// \u003cparam name=\"action\"\u003e获取后做什么\u003c/param\u003e\npublic async void GetFileList(string directoryName, UnityAction\u003cList\u003cstring\u003e\u003e action = null)\n{\n    await Task.Run(() =\u003e\n    {\n        try\n        {\n            //创建一个Ftp连接\n            FtpWebRequest request = FtpWebRequest.Create(new Uri(FTP_PATH + directoryName)) as FtpWebRequest;\n            //设置代理，凭证，是否保持连接，操作类型，是否使用二进制传输数据\n            request.Proxy = null;\n            request.Credentials = new NetworkCredential(USER_NAME, PASSWORD);\n            request.KeepAlive = false;\n            request.Method = WebRequestMethods.Ftp.ListDirectory;\n            request.UseBinary = true;\n            //获取文件列表，它是以流的形式传输的，返回一行一行的文件名信息\n            FtpWebResponse response = request.GetResponse() as FtpWebResponse;\n            //把下载的信息流转换成StreamReader对象，方便我们一行一行的读取信息\n            StreamReader streamReader = new StreamReader(response.GetResponseStream());\n            List\u003cstring\u003e nameStrs = new List\u003cstring\u003e();\n            //一行一行的读取\n            string line = streamReader.ReadLine();\n\t\t\t//循环读取文本\n            while (line != null)\n            {\n                nameStrs.Add(line);\n                line = streamReader.ReadLine();\n            }\n            response.Close();\n            action?.Invoke(nameStrs);\n        }\n        catch (Exception e)\n        {\n            Debug.Log(\"创建文件夹失败！\" + e.Message);\n            action?.Invoke(null);\n        }\n    });\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20240314105940-mqfutth",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240314105940-mqfutth",
								"style": "line-height: 22px;",
								"updated": "20240314105928"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "FtpManager.Instance.GetFileList(\"\", (list) =\u003e\n{\n    if (list == null)\n    {\n        print(\"获取失败！\");\n        return;\n    }\n    for (int i = 0; i \u003c list.Count; i++)\n    {\n        print(list[i]);\n    }\n});\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		}
	]
}