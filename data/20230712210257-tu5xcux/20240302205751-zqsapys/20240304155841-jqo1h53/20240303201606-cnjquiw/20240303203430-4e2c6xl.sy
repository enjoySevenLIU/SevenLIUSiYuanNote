{
	"ID": "20240303203430-4e2c6xl",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20240303203430-4e2c6xl",
		"title": "UN1L9-1——字节编码",
		"updated": "20240304161827"
	},
	"Children": [
		{
			"ID": "20240303203656-ic5jpho",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20240303203656-ic5jpho",
				"updated": "20240303203656"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "字符编码"
				}
			]
		},
		{
			"ID": "20240303203717-iamjrxh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240303203717-iamjrxh",
				"updated": "20240303203744"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "字符编码（英语：Character encoding）也称字集码，\n是把字符集中的字符，编码为指定集合中某一对象，以便文本在计算机中存储或通过网络进行传递。"
				}
			]
		},
		{
			"ID": "20240303203740-ya3s1z3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240303203740-ya3s1z3",
				"updated": "20240303203757"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "说人话：\n"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "计算机里只能存数字（2机制），所以如果文字字符想要进行存储的话，就需要把对应的文字字符转换为数字才能进行处理，\n而字符编码就是文字字符在计算机中和数值的对应关系，是人为定义的一种映射规则。"
				}
			]
		},
		{
			"ID": "20240303203803-m9o4x4p",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240303203803-m9o4x4p",
				"updated": "20240303203826"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "比如：\nASCII码（一种字符编码规则）中 数值65 用来映射 字符"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "A"
				},
				{
					"Type": "NodeText",
					"Data": "​，我们存储 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "A"
				},
				{
					"Type": "NodeText",
					"Data": "​ 这个字符，本质上存在内存中的是数值65对应的2进制是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "0100 0001"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20240303203825-4uc8mie",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240303203825-4uc8mie",
				"updated": "20240303203840"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "常见的一些字符编码规则有："
				}
			]
		},
		{
			"ID": "20240303203840-gbpn4gw",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20240303203840-gbpn4gw",
				"updated": "20240303203907"
			},
			"Children": [
				{
					"ID": "20240303203840-lgpc4g5",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240303203840-lgpc4g5",
						"updated": "20240303203840"
					},
					"Children": [
						{
							"ID": "20240303203840-dxvh5kh",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240303203840-dxvh5kh",
								"updated": "20240303203840"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "每个国家针对自己国家语言制定的编码规则（因为语言文字的数量各不相同）\n"
								}
							]
						},
						{
							"ID": "20240303203841-yyz2z8e",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240303203841-yyz2z8e"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "ASCII码（美国）、GB2312编码（中国）、Shift"
								},
								{
									"Type": "NodeBackslash",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "_"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "JIS编码（日本）、Euc-kr（韩国）等等\n"
								}
							]
						}
					]
				},
				{
					"ID": "20240303203841-zebs7wi",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240303203841-zebs7wi",
						"updated": "20240303203907"
					},
					"Children": [
						{
							"ID": "20240303203841-vl4011q",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240303203841-vl4011q"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "世界通用的编码规则（把所有语言统一到一套编码里）\n"
								}
							]
						},
						{
							"ID": "20240303203841-dsxdbav",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240303203841-dsxdbav",
								"updated": "20240303203907"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Unicode编码，以及基于Unicode实现的编码规则：UTF-8、UTF-16、UTF-32"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240303203908-78f7qrw",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240303203908-78f7qrw",
				"updated": "20240303203917"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "为何会出现乱码"
				}
			]
		},
		{
			"ID": "20240303203953-d4u8l6j",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240303203953-d4u8l6j",
				"updated": "20240303203956"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "很多人在查看文本文件时，经常会看到如下图中的这种乱码。那么为什么会出现这样的乱码呢？"
				}
			]
		},
		{
			"ID": "20240303203935-wx6xoks",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240303203935-wx6xoks",
				"updated": "20240303203917"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"parent-style": "width: 942px;",
						"style": "width: 932px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20240303203935-jvzsuhz.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 932px;\" parent-style=\"width: 942px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20240303203942-r6gsly0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240303203942-r6gsly0",
				"updated": "20240303204018"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "假设我们的一个文件是采用中国制定的GB2312编码进行编辑存储的，\n而此时我们并不使用GB2312这个编码规则去读取文件，而是采用其它的规则，比如日本制定的Shift"
				},
				{
					"Type": "NodeBackslash",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeText",
							"Data": "_"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "JIS编码读取该文件，\n那么由于"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "编码格式的存读不统一就会造成乱码的出现。因为不同的编码规则，字符和数值的映射关系是不同的。"
				}
			]
		},
		{
			"ID": "20240303204009-q1mofjz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240303204009-q1mofjz",
				"updated": "20240303204009"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "比如：130这个数值在法语编码中代表了é，在希伯来语编码中却代表了字母Gimel (ג)，在中文编码中又会代表另一个符号。"
				}
			]
		},
		{
			"ID": "20240303204019-bw2ceek",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240303204019-bw2ceek",
				"updated": "20240303204029"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "ASCII码"
				}
			]
		},
		{
			"ID": "20240303204030-cf1zmop",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240303204030-cf1zmop",
				"updated": "20240303204045"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们知道在计算机内部，所有的信息最终都是一个二进制值。\n一个二进制数就是一位（bit），有0和1两种状态。一个字节（byte）是8个二进制数组成的，所以1 byte "
				},
				{
					"Type": "NodeBackslash",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeText",
							"Data": "="
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 8 bit。\n也就是说一个字节一共可以用来表示256种不同的状态，从00000000到11111111。\n如果每一个状态都代表一个符号的话，那么一个字节可以用来表示256个符号。"
				}
			]
		},
		{
			"ID": "20240303204050-ojpx6rf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240303204050-ojpx6rf",
				"updated": "20240303204100"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "上个世界60年代，美国制定了一套算是最早的字符编码，制定了一套基于英文字符与二进制位之间的对应关系。\n这套标准被称为ASCII码，一直使用到今天。ASCII码一共规定了128个字符的编码。比如："
				}
			]
		},
		{
			"ID": "20240303204103-762llsq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240303204103-762llsq",
				"updated": "20240303204113"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "字符 A "
				},
				{
					"Type": "NodeBackslash",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeText",
							"Data": "="
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 65（十进制数）"
				},
				{
					"Type": "NodeBackslash",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeText",
							"Data": "="
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 0100 0001（二进制数）\n字符 1 "
				},
				{
					"Type": "NodeBackslash",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeText",
							"Data": "="
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 49（十进制数）"
				},
				{
					"Type": "NodeBackslash",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeText",
							"Data": "="
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 0011 0001（二进制数）等等"
				}
			]
		},
		{
			"ID": "20240303204113-07f99qb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240303204113-07f99qb",
				"updated": "20240303204116"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "下图为ASCII码的对照表："
				}
			]
		},
		{
			"ID": "20240303204133-3ezwa8s",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240303204133-3ezwa8s",
				"updated": "20240303204133"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"parent-style": "width: 661px;",
						"style": "width: 651px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20240303204133-twmg7uf.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 651px;\" parent-style=\"width: 661px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20240303204158-4eue1nl",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240303204158-4eue1nl",
				"updated": "20240303204201"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "非ASCII码"
				}
			]
		},
		{
			"ID": "20240303204205-r3ppaqu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240303204205-r3ppaqu",
				"updated": "20240303204617"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "非ASCII码基本都是基于ASCII码进行的扩充，他们都保留了ASCII码0"
				},
				{
					"Type": "NodeBackslash",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeText",
							"Data": "~"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "127这段编码的规范。\n也就是说"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "非ASCII码的前面部分往往是和ASCII码的规则是相同的。"
				}
			]
		},
		{
			"ID": "20240303204224-ynxf052",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240303204224-ynxf052",
				"updated": "20240303204625"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "对于一些欧洲国家，他们使用一个字节便可以表示完自己所有的文字，他们利用了字节中闲置的最高位编入新的符号，\n"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "因为我们知道ASCII码的编码规则是：一个字节中的8位，只占用了一个字节的后面7位，最前面的一位统一规定为0。\n所以这些语言系统中文字较少的国家让最前面的一位可以为1，他们就可以为自己的文字在128~255这一段加入新的对应规则。"
				}
			]
		},
		{
			"ID": "20240303204248-djz6555",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240303204248-djz6555",
				"updated": "20240303204248"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "比如：130这个数值在法语编码中代表了é，在希伯来语编码中却代表了字母Gimel (ג)"
				}
			]
		},
		{
			"ID": "20240303204250-qlgeino",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240303204250-qlgeino",
				"updated": "20240303204302"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这种一个字节就把字符表示完的做法只适用于语言系统中文字较少的国家，因为他们的语言的字母是有限的。"
				}
			]
		},
		{
			"ID": "20240303204306-5bdi5mo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240303204306-5bdi5mo",
				"updated": "20240303204317"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "对于使用象形文字的国家来说，一个字节完全不够用！比如中国，我们的汉字多达10万左右，一个字节最多也只能表示256种符号，是远远不够的。\n所以必须使用多个字节来表示一个符号。比如我们前面提到的中国的简体中文GB2312编码，\n是使用两个字节表示一个汉字，所以理论上来说可以表示256x256"
				},
				{
					"Type": "NodeBackslash",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeText",
							"Data": "="
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "65536个符号。"
				}
			]
		},
		{
			"ID": "20240303204319-bivs60i",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240303204319-bivs60i",
				"updated": "20240303204606"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "所以"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "所谓的非ASCII码，就是指的除了ASCII码以外的编码格式"
				},
				{
					"Type": "NodeText",
					"Data": "，每个国家都至少有1种针对自己语言文字的编码格式，\n每一个编码格式中数值和字符的对应关系都可能不相同。这也就造成了前面说到的乱码问题。\n在全世界范围内进行网络通信时，如果每个国家都使用不统一的编码格式，那么出现乱码的情况将随处可见。"
				}
			]
		},
		{
			"ID": "20240303204339-utuo9x7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240303204339-utuo9x7",
				"updated": "20240303204342"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "因此随着互联网的发展，人们决定要制定一套全世界统一的的编码规则，将世界上所有的符号都纳入其中，\n为每一个符号赋予独一无二的编码（2进制数值）。那么这样就不会出现乱码问题，影响信息的传递了。"
				}
			]
		},
		{
			"ID": "20240303204347-qpe93fm",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240303204347-qpe93fm",
				"updated": "20240303204352"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Unicode"
				}
			]
		},
		{
			"ID": "20240303204352-vupgxsh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240303204352-vupgxsh",
				"updated": "20240303204409"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Unicode可以理解为是 Unique Code 的简写，翻译过来是“唯一的编码”。"
				}
			]
		},
		{
			"ID": "20240303204410-05juz2u",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240303204410-05juz2u",
				"updated": "20240303204536"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "它出现的主要原因就是用来解决乱码问题的，它将世界上所有的符号都纳入其中，\n每一个符号都为其分配一个独一无二的二进制数表示它，那么乱码问题就会消失。"
				}
			]
		},
		{
			"ID": "20240303204416-lf1thda",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240303204416-lf1thda",
				"updated": "20240303204419"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Unicode是一个很大的集合，现在的规模可以容纳100多万个符号，每个符号对应的二进制数都不一样。这样就确保了不同语言的字符不会再有冲突。"
				}
			]
		},
		{
			"ID": "20240303204419-dmawwnm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240303204419-dmawwnm",
				"updated": "20240303204422"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "那么这样可能就存在一个问题，就是有的符号用1个字节8位就可以表示了，有的符号可能需要使用2个字节16位甚至3个字节24位才能表示。\n就比如说ASCII码，它的存储规则就是一个字节存储一个字符，那么当我们使用Unicode编码时，到底用几个字节来存储字符呢？"
				}
			]
		},
		{
			"ID": "20240303204425-elbs8gq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240303204425-elbs8gq",
				"style": "background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);",
				"updated": "20240303204425"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "因此我们需要注意：Unicode编码只是一个符号集，它只规定符号和二进制的对应关系，并没有规定这个二进制数值应该如何存储。"
				}
			]
		},
		{
			"ID": "20240303204525-4crkjq1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240303204525-4crkjq1",
				"updated": "20240303204525"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "而UTF-8、UTF-16、UTF-32三种编码格式才是基于Unicode实现的具体编码方案"
				}
			]
		},
		{
			"ID": "20240303204525-ep8ygbt",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20240303204525-ep8ygbt",
				"updated": "20240303204636"
			},
			"Children": [
				{
					"ID": "20240303204636-fvu7gqk",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240303204636-fvu7gqk",
						"updated": "20240303204636"
					},
					"Children": [
						{
							"ID": "20240303204636-2z4ctxk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240303204636-2z4ctxk",
								"updated": "20240303204636"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "UTF-8编码：可变字节编码方案，可以根据实际情况使用1个、2个、3个、4个字节来存储字符\n"
								}
							]
						}
					]
				},
				{
					"ID": "20240303204637-ksqkgka",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240303204637-ksqkgka"
					},
					"Children": [
						{
							"ID": "20240303204637-2w7iaq1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240303204637-2w7iaq1"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "UTF-16编码：可变字节编码方案，可以根据实际情况使用2个、4个字节来存储字符\n"
								}
							]
						}
					]
				},
				{
					"ID": "20240303204637-pmxs358",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240303204637-pmxs358"
					},
					"Children": [
						{
							"ID": "20240303204637-zd3elki",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240303204637-zd3elki"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "UTF-32编码：固定字节编码方案，用4个字节来存储字符"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240303204647-pll436o",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240303204647-pll436o",
				"updated": "20240303204653"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "UTF-8"
				}
			]
		},
		{
			"ID": "20240303204639-9mn5sq6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240303204639-9mn5sq6",
				"updated": "20240303204653"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "我们在这里主要讲解目前互联网中使用最广泛、最普及的UTF-8编码格式"
				}
			]
		},
		{
			"ID": "20240303204658-71b4jkv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240303204658-71b4jkv",
				"updated": "20240303204728"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "UTF-8是Unicode的实现方式之一，它的最大特点是：它是一种变长的编码方式，\n可以使用1~4个字节表示一个字符，根据不同的符号而变化字节的长度。"
				}
			]
		},
		{
			"ID": "20240303204723-cziqrjo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240303204723-cziqrjo",
				"updated": "20240303204737"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "它的编码规则主要有以下两点："
				}
			]
		},
		{
			"ID": "20240303204738-nzc4xk0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240303204738-nzc4xk0",
				"updated": "20240303204743"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"parent-style": "width: 609px;",
						"style": "width: 599px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://scb4a2cp-sb-qn.qiqiuyun.net/files/course/2022/04-05/171510e6ce4c764035.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 599px;\" parent-style=\"width: 609px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20240303204747-hra2qxp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240303204747-hra2qxp",
				"updated": "20240303204807"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们需要明确UTF-8和Unicode之间的关系："
				}
			]
		},
		{
			"ID": "20240303204807-pehwnih",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20240303204807-pehwnih",
				"updated": "20240303204816"
			},
			"Children": [
				{
					"ID": "20240303204807-hkmhl4a",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240303204807-hkmhl4a",
						"updated": "20240303204807"
					},
					"Children": [
						{
							"ID": "20240303204807-y3x57t2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240303204807-y3x57t2",
								"updated": "20240303204807"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Unicode是世界上所有符号对应二进制数据的关系集合\n"
								}
							]
						}
					]
				},
				{
					"ID": "20240303204808-adcrerl",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240303204808-adcrerl",
						"updated": "20240303204816"
					},
					"Children": [
						{
							"ID": "20240303204808-h3u6ife",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240303204808-h3u6ife",
								"updated": "20240303204816"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "UTF-8"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "是Unicode的实现方式之一"
								},
								{
									"Type": "NodeText",
									"Data": "：UTF-8 "
								},
								{
									"Type": "NodeBackslash",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "="
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " Unicode符号集 + 变长的编码规则"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240303204816-qqsff0z",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240303204816-qqsff0z",
				"updated": "20240303204840"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "总结"
				}
			]
		},
		{
			"ID": "20240303204840-yka3k4m",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240303204840-yka3k4m",
				"updated": "20240303204854"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们在进行网络游戏开发时，只要保证前后端的字符编码格式统一就可以避免乱码的出现，\n比如如果只有英文字符的情况下，我们可以统一使用ASCII码进行字符的2进制转换，\n如果有中文字符的情况下，可以选择使用GB2313编码格式进行转换。"
				}
			]
		},
		{
			"ID": "20240303204846-r9ar1r7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240303204846-r9ar1r7",
				"updated": "20240303205027"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "但是，建议大家，在进行文件存储、网络传输时，都采用UTF-8的编码格式，\n它相对其它格式来说在互联网通信中应用更广泛，更普遍，它包含各种语言符号"
				}
			]
		}
	]
}