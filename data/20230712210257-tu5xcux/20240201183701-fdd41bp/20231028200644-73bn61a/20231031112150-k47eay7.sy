{
	"ID": "20231031112150-k47eay7",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20231031112150-k47eay7",
		"scroll": "\u0026#123;\u0026quot;rootId\u0026quot;:\u0026quot;20231031112150-k47eay7\u0026quot;,\u0026quot;startId\u0026quot;:\u0026quot;20231031181944-ra1lv4k\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20231031114536-h9ldgs4\u0026quot;,\u0026quot;scrollTop\u0026quot;:0,\u0026quot;focusId\u0026quot;:\u0026quot;20231031112150-fzy5zgl\u0026quot;,\u0026quot;focusStart\u0026quot;:0,\u0026quot;focusEnd\u0026quot;:0\u0026#125;",
		"title": "CS5L8——CSharp 6 功能和语法",
		"type": "doc",
		"updated": "20240703135104"
	},
	"Children": [
		{
			"ID": "20231031181944-ra1lv4k",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20231031181944-ra1lv4k",
				"updated": "20231031181949"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "本章代码关键字"
				}
			]
		},
		{
			"ID": "20231031181950-vcohp3z",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20231031181950-vcohp3z",
				"style": "line-height: 22px;",
				"updated": "20231031182158"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "using static    //导入某个类的静态成员和嵌套类型，而无需指定类型名称即可访问其静态成员和嵌套类型\nwhen            //when的括号里面可以写bool表达式，以筛选异常\nnameof()        //通过该表达式可以得到变量、类、函数等信息的具体字符串名称\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20231031112150-fzy5zgl",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20231031112150-fzy5zgl",
				"updated": "20231101182352"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "C"
				},
				{
					"Type": "NodeBackslash",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBackslashContent",
							"Data": "#"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 6 的新增功能和语法"
				}
			]
		},
		{
			"ID": "20231031112455-rmzhv3u",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20231031112455-rmzhv3u",
				"updated": "20231031112551"
			},
			"Children": [
				{
					"ID": "20231031112551-rg9ye2r",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20231031112551-rg9ye2r",
						"updated": "20231031112551"
					},
					"Children": [
						{
							"ID": "20231031112551-wdhszwg",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231031112551-wdhszwg",
								"updated": "20231031112602"
							},
							"Children": [
								{
									"Type": "NodeBackslash",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeBackslashContent",
											"Data": "="
										}
									]
								},
								{
									"Type": "NodeBackslash",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeBackslashContent",
											"Data": "\u003e"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 运算符（C"
								},
								{
									"Type": "NodeBackslash",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeBackslashContent",
											"Data": "#"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "进阶套课——特殊语法 "
								},
								{
									"Type": "NodeBackslash",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeBackslashContent",
											"Data": "="
										}
									]
								},
								{
									"Type": "NodeBackslash",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeBackslashContent",
											"Data": "\u003e"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "）"
								}
							]
						}
					]
				},
				{
					"ID": "20231031112551-6xmgi33",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20231031112551-6xmgi33",
						"updated": "20231031112551"
					},
					"Children": [
						{
							"ID": "20231031112551-rrldbc0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231031112551-rrldbc0",
								"updated": "20231031112551"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Null 传播器（C"
								},
								{
									"Type": "NodeBackslash",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeBackslashContent",
											"Data": "#"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "进阶套课——特殊语法 ?）"
								}
							]
						}
					]
				},
				{
					"ID": "20231031112551-nt40eor",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20231031112551-nt40eor",
						"updated": "20231031112551"
					},
					"Children": [
						{
							"ID": "20231031112551-p2huubq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231031112551-p2huubq",
								"updated": "20231031112551"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "字符串内插（C"
								},
								{
									"Type": "NodeBackslash",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeBackslashContent",
											"Data": "#"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "进阶套课——特殊语法 "
								},
								{
									"Type": "NodeBackslash",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeBackslashContent",
											"Data": "$"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "）"
								}
							]
						}
					]
				},
				{
					"ID": "20231031112551-pimt2nx",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20231031112551-pimt2nx",
						"updated": "20231031112551"
					},
					"Children": [
						{
							"ID": "20231031112551-9o9kc4g",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231031112551-9o9kc4g",
								"updated": "20231031112551"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "静态导入"
								}
							]
						}
					]
				},
				{
					"ID": "20231031112551-ejfdyk9",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NS4=",
						"Num": 5
					},
					"Properties": {
						"id": "20231031112551-ejfdyk9",
						"updated": "20231031112551"
					},
					"Children": [
						{
							"ID": "20231031112551-8mm4adv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231031112551-8mm4adv",
								"updated": "20231031112551"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "异常筛选器"
								}
							]
						}
					]
				},
				{
					"ID": "20231031112551-5dvm4s0",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Ni4=",
						"Num": 6
					},
					"Properties": {
						"id": "20231031112551-5dvm4s0",
						"updated": "20231031112551"
					},
					"Children": [
						{
							"ID": "20231031112551-90a8zhr",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231031112551-90a8zhr",
								"updated": "20231031112551"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "nameof运算符"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20231031112607-v1gjege",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20231031112607-v1gjege",
				"name": "using static",
				"updated": "20231031112818"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "静态导入"
				}
			]
		},
		{
			"ID": "20231031112819-cj96pp2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231031112819-cj96pp2",
				"updated": "20231031113959"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "用法：在引用命名空间时，在"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "using"
				},
				{
					"Type": "NodeText",
					"Data": "​关键字后面加入"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "static"
				},
				{
					"Type": "NodeText",
					"Data": "​关键词\n作用："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "无需指定类型名称即可访问其静态成员和嵌套类型"
				},
				{
					"Type": "NodeText",
					"Data": "\n好处：节约代码量，可以写出更简洁的代码"
				}
			]
		},
		{
			"ID": "20231031112835-doqfswm",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20231031112835-doqfswm",
				"style": "line-height: 22px;",
				"updated": "20231031113833"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "using UnityEngine;\nusing static UnityEngine.Mathf;\nusing static TestA;\n\npublic class TestA\n{\n    public class TestB { }\n\n    public static void TTT()\n    {\n        Debug.Log(\"123123\");\n    }\n}\n\npublic class Lesson7 : MonoBehaviour\n{\n    void Start()\n    {\n        //Mathf.Max(10, 20);                    //可以省略前面的Mathf\n        Max(10, 20);\n        //TestA.TTT();                          //可以省略前面的TestA\n        TTT();\n        //TestA.TestB t = new TestA.TestB();    //可以省略前面的TestA\n        TestB t = new TestB();\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20231031113844-qn8qy7u",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20231031113844-qn8qy7u",
				"name": "when",
				"updated": "20231031113855"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "异常筛选器"
				}
			]
		},
		{
			"ID": "20231031113932-umj1soq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231031113932-umj1soq",
				"updated": "20231031114023"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "用法：\n在异常捕获语句块中的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "catch"
				},
				{
					"Type": "NodeText",
					"Data": "​语句后通过加入"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "when"
				},
				{
					"Type": "NodeText",
					"Data": "​关键词来筛选异常\n​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "when"
				},
				{
					"Type": "NodeText",
					"Data": "​（表达式）该表达式返回值必须为"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "bool"
				},
				{
					"Type": "NodeText",
					"Data": "​值，如果为"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "ture"
				},
				{
					"Type": "NodeText",
					"Data": "​则执行异常处理，如果为"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "false"
				},
				{
					"Type": "NodeText",
					"Data": "​，则不执行\n作用：用于筛选异常\n好处：帮助我们更准确的排查异常，根据异常类型进行对应的处理"
				}
			]
		},
		{
			"ID": "20231031113915-v7p5hpq",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20231031113915-v7p5hpq",
				"style": "line-height: 22px;",
				"updated": "20231031114451"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "try\n{\n    //用于检查异常的语句块\n}\n//当错误信息包括301时，做什么处理\ncatch (System.Exception e) when (e.Message.Contains(\"301\"))\n{\n    print(e.Message);\n}\n//当错误信息包括404时，做什么处理\ncatch (System.Exception e) when (e.Message.Contains(\"404\"))\n{\n    print(e.Message);\n}\n//当错误信息包括21时，做什么处理\ncatch (System.Exception e) when (e.Message.Contains(\"21\"))\n{\n    print(e.Message);\n}\n//可以在when里添加各种判断表达式，只要符合条件即可\n//当错误信息为其他时，做什么处理\ncatch (System.Exception e)\n{\n    print(e.Message);\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20231031113933-lklt8sz",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20231031113933-lklt8sz",
				"name": "nameof()",
				"updated": "20231031114519"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "nameof运算符"
				}
			]
		},
		{
			"ID": "20231031114528-5odvkf0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231031114528-5odvkf0",
				"updated": "20231031114929"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "用法：nameof(变量、类型、成员)通过该表达式，可以将他们的名称转为字符串\n作用：可以得到"
				},
				{
					"Type": "NodeTextMark",
					"Properties": {
						"style": "background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);"
					},
					"TextMarkType": "text",
					"TextMarkTextContent": "变量、类、函数等信息的具体字符串名称"
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);\"}"
				}
			]
		},
		{
			"ID": "20231031114536-h9ldgs4",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20231031114536-h9ldgs4",
				"style": "line-height: 22px;",
				"updated": "20231031115006"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "int i = 10;\nprint(nameof(i));\n//print(nameof(int));           //不能直接填写类型\nprint(nameof(List\u003cint\u003e));       //但是泛型类可以，返回结果是List\nprint(nameof(List\u003cint\u003e.Add));\nprint(nameof(UnityEngine.AI));\nList\u003cint\u003e list = new List\u003cint\u003e() { 1, 2, 3, 4 };\nprint(nameof(list));\nprint(nameof(List\u003cint\u003e.Count));\nprint(nameof(list.Add));\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		}
	]
}