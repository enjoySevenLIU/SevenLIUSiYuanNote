{
	"ID": "20231028221319-gv8de39",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20231028221319-gv8de39",
		"scroll": "\u0026#123;\u0026quot;rootId\u0026quot;:\u0026quot;20231028221319-gv8de39\u0026quot;,\u0026quot;startId\u0026quot;:\u0026quot;20231028230848-11110ed\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20231028230540-9ci93ml\u0026quot;,\u0026quot;scrollTop\u0026quot;:0,\u0026quot;focusId\u0026quot;:\u0026quot;20231028222800-l9txgem\u0026quot;,\u0026quot;focusStart\u0026quot;:45,\u0026quot;focusEnd\u0026quot;:45\u0026#125;",
		"title": "CS5L4——IL2CPP模式可能存在的问题处理",
		"type": "doc",
		"updated": "20240715095532"
	},
	"Children": [
		{
			"ID": "20231028230848-11110ed",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231028230848-11110ed",
				"updated": "20240715095352"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "对于我们目前开发的新项目，都建议大家使用IL2CPP脚本后处理模式来进行打包\n主要原因是因为它的效率相对 Mono 较高，同时由于它自带裁剪功能，包的大小也会小一些\n"
				},
				{
					"Type": "NodeTextMark",
					"Properties": {
						"style": "background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);"
					},
					"TextMarkType": "strong text",
					"TextMarkTextContent": "但是如果在测试时出现类型无法识别等问题，需要用到我们这节课学习的知识点来解决这些问题"
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);\"}"
				}
			]
		},
		{
			"ID": "20231028221319-o42qxa6",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20231028221319-o42qxa6",
				"updated": "20240715095532"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "安装IL2CPP打包工具"
				}
			]
		},
		{
			"ID": "20231028222157-t1o09xd",
			"Type": "NodeSuperBlock",
			"Properties": {
				"id": "20231028222157-t1o09xd",
				"updated": "20231028222426"
			},
			"Children": [
				{
					"Type": "NodeSuperBlockOpenMarker"
				},
				{
					"Type": "NodeSuperBlockLayoutMarker",
					"Data": "row"
				},
				{
					"ID": "20231028221831-mb34gft",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20231028221831-mb34gft",
						"updated": "20231028222258"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "Edit——Project Settings——Player——Scripting Backend里选择IL2CPP即可将IL2CPP作为脚本后处理方式"
						}
					]
				},
				{
					"ID": "20231028222138-vq748y5",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20231028222138-vq748y5",
						"updated": "20231028222138"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "​"
						},
						{
							"Type": "NodeImage",
							"Data": "span",
							"Properties": {
								"parent-style": "width: 761px;",
								"style": "width: 751px;"
							},
							"Children": [
								{
									"Type": "NodeBang"
								},
								{
									"Type": "NodeOpenBracket"
								},
								{
									"Type": "NodeLinkText",
									"Data": "image"
								},
								{
									"Type": "NodeCloseBracket"
								},
								{
									"Type": "NodeOpenParen"
								},
								{
									"Type": "NodeLinkDest",
									"Data": "assets/image-20231028222138-1ygkku5.png"
								},
								{
									"Type": "NodeCloseParen"
								}
							]
						},
						{
							"Type": "NodeKramdownSpanIAL",
							"Data": "{: style=\"width: 751px;\" parent-style=\"width: 761px;\"}"
						}
					]
				},
				{
					"ID": "20231028222303-41i2msn",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20231028222303-41i2msn",
						"updated": "20231028222341"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "但是在此之前，我们需要先到Unity Hub里下载IL2CPP模块才能使用IL2CPP打包"
						}
					]
				},
				{
					"ID": "20231028222616-8iy1udt",
					"Type": "NodeSuperBlock",
					"Properties": {
						"id": "20231028222616-8iy1udt",
						"updated": "20231028222426"
					},
					"Children": [
						{
							"Type": "NodeSuperBlockOpenMarker"
						},
						{
							"Type": "NodeSuperBlockLayoutMarker",
							"Data": "col"
						},
						{
							"ID": "20231028222426-deybih6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231028222426-deybih6",
								"updated": "20231028222426"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeImage",
									"Data": "span",
									"Properties": {
										"parent-style": "width: 588px;",
										"style": "width: 578px;"
									},
									"Children": [
										{
											"Type": "NodeBang"
										},
										{
											"Type": "NodeOpenBracket"
										},
										{
											"Type": "NodeLinkText",
											"Data": "image"
										},
										{
											"Type": "NodeCloseBracket"
										},
										{
											"Type": "NodeOpenParen"
										},
										{
											"Type": "NodeLinkDest",
											"Data": "assets/image-20231028222426-w7f90tj.png"
										},
										{
											"Type": "NodeCloseParen"
										}
									]
								},
								{
									"Type": "NodeKramdownSpanIAL",
									"Data": "{: style=\"width: 578px;\" parent-style=\"width: 588px;\"}"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"ID": "20231028222614-j4dwkux",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231028222614-j4dwkux",
								"updated": "20231028222617"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeImage",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeBang"
										},
										{
											"Type": "NodeOpenBracket"
										},
										{
											"Type": "NodeLinkText",
											"Data": "image"
										},
										{
											"Type": "NodeCloseBracket"
										},
										{
											"Type": "NodeOpenParen"
										},
										{
											"Type": "NodeLinkDest",
											"Data": "assets/image-20231028222614-jdvwqab.png"
										},
										{
											"Type": "NodeCloseParen"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"Type": "NodeSuperBlockCloseMarker"
						}
					]
				},
				{
					"Type": "NodeSuperBlockCloseMarker"
				}
			]
		},
		{
			"ID": "20231028222621-xld5hzg",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20231028222621-xld5hzg",
				"updated": "20240715095532"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "IL2CPP打包存在的问题"
				}
			]
		},
		{
			"ID": "20231028222720-97h7vhc",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20231028222720-97h7vhc",
				"updated": "20240715095532"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "类型裁剪"
				}
			]
		},
		{
			"ID": "20231028222730-a13wj0u",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231028222730-a13wj0u",
				"updated": "20231028222752"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "IL2CPP在打包时会自动对Unity工程的DLL进行裁剪，将代码中没有引用到的类型裁剪掉，以达到减小发布后包的尺寸的目的。\n然而"
				},
				{
					"Type": "NodeTextMark",
					"Properties": {
						"style": "background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);"
					},
					"TextMarkType": "text",
					"TextMarkTextContent": "在实际使用过程中，很多类型有可能会被意外剪裁掉，造成运行时抛出找不到某个类型的异常"
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);\"}"
				},
				{
					"Type": "NodeText",
					"Data": "。\n特别是"
				},
				{
					"Type": "NodeTextMark",
					"Properties": {
						"style": "background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);"
					},
					"TextMarkType": "text",
					"TextMarkTextContent": "通过反射等方式在编译时无法得知的函数调用，在运行时都很有可能遇到问题"
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);\"}"
				}
			]
		},
		{
			"ID": "20231028222800-71mncz8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231028222800-71mncz8",
				"updated": "20231028222800"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "解决方案："
				}
			]
		},
		{
			"ID": "20231028222730-jk9xxha",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20231028222730-jk9xxha",
				"updated": "20240715095516"
			},
			"Children": [
				{
					"ID": "20231028222800-nl1b8pa",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20231028222800-nl1b8pa",
						"updated": "20240326222557"
					},
					"Children": [
						{
							"ID": "20231028222914-v274zf8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231028222914-v274zf8",
								"updated": "20240204205313"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "IL2CPP处理模式时，将 PlayerSetting -\u003e Other Setting -\u003e Managed Stripping Level(代码剥离)设置为Low\n"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "（Unity2021版以后应当设置为Minimal）"
								}
							]
						},
						{
							"ID": "20231028224012-l8r3u5y",
							"Type": "NodeSuperBlock",
							"Properties": {
								"id": "20231028224012-l8r3u5y",
								"updated": "20240326222557"
							},
							"Children": [
								{
									"Type": "NodeSuperBlockOpenMarker"
								},
								{
									"Type": "NodeSuperBlockLayoutMarker",
									"Data": "col"
								},
								{
									"ID": "20231028223646-hv9i970",
									"Type": "NodeList",
									"ListData": {},
									"Properties": {
										"id": "20231028223646-hv9i970",
										"updated": "20240326222557"
									},
									"Children": [
										{
											"ID": "20231028223646-gqj6cs4",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20231028223646-gqj6cs4",
												"updated": "20231028223646"
											},
											"Children": [
												{
													"ID": "20231028223646-s6r52h4",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20231028223646-s6r52h4",
														"updated": "20231028224140"
													},
													"Children": [
														{
															"Type": "NodeTextMark",
															"TextMarkType": "strong",
															"TextMarkTextContent": "Disabled："
														},
														{
															"Type": "NodeText",
															"Data": "Unity不做任何的代码裁剪。\n"
														},
														{
															"Type": "NodeTextMark",
															"TextMarkType": "strong",
															"TextMarkTextContent": "这个配置只在我们使用Mono的时候可以选择，并且是默认配置"
														}
													]
												}
											]
										},
										{
											"ID": "20231028223646-ydndmnm",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20231028223646-ydndmnm",
												"updated": "20240326222557"
											},
											"Children": [
												{
													"ID": "20231028223646-mnyrtdr",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20231028223646-mnyrtdr",
														"updated": "20240326222557"
													},
													"Children": [
														{
															"Type": "NodeTextMark",
															"TextMarkType": "strong",
															"TextMarkTextContent": "Minimal："
														},
														{
															"Type": "NodeText",
															"Data": "最小剥离，Unity只会搜索Unity引擎未使用的.Net类库，不会删除任何用户编写的代码，该设置基本不会出现意外剥离，在使用IL2CPP模式后，该模式是默认模式，"
														},
														{
															"Type": "NodeTextMark",
															"TextMarkType": "strong",
															"TextMarkTextContent": "此配置是IL2CPP的默认配置（21版以后）"
														},
														{
															"Type": "NodeText",
															"Data": "\n这个配置最不可能会导致意料之外的运行时表现，此配置多用于可用性优先级高于包体积的产品中。"
														},
														{
															"Type": "NodeTextMark",
															"TextMarkType": "strong",
															"TextMarkTextContent": "（21版以后才有该选项）"
														}
													]
												}
											]
										},
										{
											"ID": "20231028223646-1y35yev",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20231028223646-1y35yev",
												"updated": "20231028223646"
											},
											"Children": [
												{
													"ID": "20231028223646-s6isuy2",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20231028223646-s6isuy2",
														"updated": "20231028224136"
													},
													"Children": [
														{
															"Type": "NodeTextMark",
															"TextMarkType": "strong",
															"TextMarkTextContent": "Low："
														},
														{
															"Type": "NodeText",
															"Data": "Unity搜索部分用户程序集以及所有的UnityEngine和.NET代码。"
														},
														{
															"Type": "NodeTextMark",
															"TextMarkType": "strong",
															"TextMarkTextContent": "此配置是IL2CPP的默认配置（20版以前）"
														},
														{
															"Type": "NodeText",
															"Data": "\n此设置应用一组规则，删除一些未使用的代码，但最大限度地减少出现意外后果的可能性，例如使用反射的运行时代码的行为变化。"
														}
													]
												}
											]
										},
										{
											"ID": "20231028223646-2h51fl9",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20231028223646-2h51fl9",
												"updated": "20231028223646"
											},
											"Children": [
												{
													"ID": "20231028223646-54ca3na",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20231028223646-54ca3na",
														"updated": "20231028224134"
													},
													"Children": [
														{
															"Type": "NodeTextMark",
															"TextMarkType": "strong",
															"TextMarkTextContent": "Medium："
														},
														{
															"Type": "NodeText",
															"Data": "Unity 部分地搜索所有程序集以查找无法访问的代码。\n不如低级别剥离谨慎，也不会达到高级别的极端\n此设置应用一组规则，该规则去除更多类型的代码模式，以减少生成大小。尽管Unity不会去掉所有可能的无法访问的代码，但此设置确实增加了不希望或意外行为更改的风险。"
														}
													]
												}
											]
										},
										{
											"ID": "20231028223646-k9vb0is",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20231028223646-k9vb0is",
												"updated": "20231028223646"
											},
											"Children": [
												{
													"ID": "20231028223646-jznye7f",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20231028223646-jznye7f",
														"updated": "20231028224144"
													},
													"Children": [
														{
															"Type": "NodeTextMark",
															"TextMarkType": "strong",
															"TextMarkTextContent": "High："
														},
														{
															"Type": "NodeText",
															"Data": "Unity对所有的程序集进行最广泛的检测，Unity 优先考虑缩小代码的大小，而不是代码的稳定性，并且尽可能多地删除代码。\n"
														},
														{
															"Type": "NodeTextMark",
															"Properties": {
																"style": "background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"
															},
															"TextMarkType": "strong text",
															"TextMarkTextContent": "如果选择该模式一般需要配合link.xml使用"
														},
														{
															"Type": "NodeKramdownSpanIAL",
															"Data": "{: style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"
														}
													]
												}
											]
										}
									]
								},
								{
									"ID": "20231028223950-wnabqwb",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20231028223950-wnabqwb",
										"updated": "20231028223950"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "​"
										},
										{
											"Type": "NodeImage",
											"Data": "span",
											"Children": [
												{
													"Type": "NodeBang"
												},
												{
													"Type": "NodeOpenBracket"
												},
												{
													"Type": "NodeLinkText",
													"Data": "image"
												},
												{
													"Type": "NodeCloseBracket"
												},
												{
													"Type": "NodeOpenParen"
												},
												{
													"Type": "NodeLinkDest",
													"Data": "assets/image-20231028223949-tk6f3k9.png"
												},
												{
													"Type": "NodeCloseParen"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "​"
										}
									]
								},
								{
									"Type": "NodeSuperBlockCloseMarker"
								}
							]
						}
					]
				},
				{
					"ID": "20231028222800-9g42cwu",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20231028222800-9g42cwu",
						"updated": "20240715095516"
					},
					"Children": [
						{
							"ID": "20231028222800-l9txgem",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231028222800-l9txgem",
								"updated": "20240715095516"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "通过Unity提供的 link.xml 方式来告诉Unity引擎，哪些类型是不能够被剪裁掉的\n在Unity工程的Assets目录中（或其任何子目录中）建立一个叫link.xml的XML文件"
								}
							]
						},
						{
							"ID": "20231028224312-mpdben6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231028224312-mpdben6",
								"updated": "20231113154622"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "link.xml编写格式参考："
								}
							]
						},
						{
							"ID": "20231028224329-i8lii49",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20231028224329-i8lii49",
								"style": "line-height: 22px;",
								"updated": "20231113155116"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "eG1s"
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n\u003clinker\u003e \n\n  \u003c!--保存整个程序集--\u003e\n  \u003cassembly fullname=\"UnityEngine\" preserve=\"all\"/\u003e\n  \u003c!--没有“preserve”属性，也没有指定类型意味着保留所有--\u003e\n  \u003cassembly fullname=\"UnityEngine\"/\u003e\n\n  \u003c!--完全限定程序集名称--\u003e\n  \u003cassembly fullname=\"Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null\"\u003e\n    \u003ctype fullname=\"Assembly-CSharp.Foo\" preserve=\"all\"/\u003e\n  \u003c/assembly\u003e\n\n  \u003c!--在程序集中保留类型和成员--\u003e\n  \u003cassembly fullname=\"Assembly-CSharp\"\u003e\n    \u003c!--保留整个类型--\u003e\n    \u003ctype fullname=\"MyGame.A\" preserve=\"all\"/\u003e\n    \u003c!--没有“保留”属性，也没有指定成员 意味着保留所有成员--\u003e\n    \u003ctype fullname=\"MyGame.B\"/\u003e\n    \u003c!--保留类型上的所有字段--\u003e\n    \u003ctype fullname=\"MyGame.C\" preserve=\"fields\"/\u003e\n    \u003c!--保留类型上的所有方法--\u003e\n    \u003ctype fullname=\"MyGame.D\" preserve=\"methods\"/\u003e\n    \u003c!--只保留类型--\u003e\n    \u003ctype fullname=\"MyGame.E\" preserve=\"nothing\"/\u003e\n    \u003c!--仅保留类型的特定成员--\u003e\n    \u003ctype fullname=\"MyGame.F\"\u003e\n      \u003c!--类型和名称保留--\u003e\n      \u003cfield signature=\"System.Int32 field1\" /\u003e\n      \u003c!--按名称而不是签名保留字段--\u003e\n      \u003cfield name=\"field2\" /\u003e\n      \u003c!--方法--\u003e\n      \u003cmethod signature=\"System.Void Method1()\" /\u003e\n      \u003c!--保留带有参数的方法--\u003e\n      \u003cmethod signature=\"System.Void Method2(System.Int32,System.String)\" /\u003e\n      \u003c!--按名称保留方法--\u003e\n      \u003cmethod name=\"Method3\" /\u003e\n\n      \u003c!--属性--\u003e\n      \u003c!--保留属性--\u003e\n      \u003cproperty signature=\"System.Int32 Property1\" /\u003e\n      \u003cproperty signature=\"System.Int32 Property2\" accessors=\"all\" /\u003e\n      \u003c!--保留属性、其支持字段（如果存在）和getter方法--\u003e\n      \u003cproperty signature=\"System.Int32 Property3\" accessors=\"get\" /\u003e\n      \u003c!--保留属性、其支持字段（如果存在）和setter方法--\u003e\n      \u003cproperty signature=\"System.Int32 Property4\" accessors=\"set\" /\u003e\n      \u003c!--按名称保留属性--\u003e\n      \u003cproperty name=\"Property5\" /\u003e\n\n      \u003c!--事件--\u003e\n      \u003c!--保存事件及其支持字段（如果存在），添加和删除方法--\u003e\n      \u003cevent signature=\"System.EventHandler Event1\" /\u003e\n      \u003c!--根据名字保留事件--\u003e\n      \u003cevent name=\"Event2\" /\u003e\n    \u003c/type\u003e\n\n    \u003c!--泛型相关保留--\u003e\n    \u003ctype fullname=\"MyGame.G`1\"\u003e\n      \u003c!--保留带有泛型的字段--\u003e\n      \u003cfield signature=\"System.Collections.Generic.List`1\u0026lt;System.Int32\u0026gt; field1\" /\u003e\n      \u003cfield signature=\"System.Collections.Generic.List`1\u0026lt;T\u0026gt; field2\" /\u003e\n\n      \u003c!--保留带有泛型的方法--\u003e\n      \u003cmethod signature=\"System.Void Method1(System.Collections.Generic.List`1\u0026lt;System.Int32\u0026gt;)\" /\u003e\n      \u003c!--保留带有泛型的事件--\u003e\n      \u003cevent signature=\"System.EventHandler`1\u0026lt;System.EventArgs\u0026gt; Event1\" /\u003e\n    \u003c/type\u003e\n\n\n    \u003c!--如果使用类型，则保留该类型的所有字段。如果类型不是用过的话会被移除--\u003e\n    \u003ctype fullname=\"MyGame.I\" preserve=\"fields\" required=\"0\"/\u003e\n\n    \u003c!--如果使用某个类型，则保留该类型的所有方法。如果未使用该类型，则会将其删除--\u003e\n    \u003ctype fullname=\"MyGame.J\" preserve=\"methods\" required=\"0\"/\u003e\n\n    \u003c!--保留命名空间中的所有类型--\u003e\n    \u003ctype fullname=\"MyGame.SomeNamespace*\" /\u003e\n\n    \u003c!--保留名称中带有公共前缀的所有类型--\u003e\n    \u003ctype fullname=\"Prefix*\" /\u003e\n\n  \u003c/assembly\u003e\n\n\u003c/linker\u003e\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20231028225125-5zmlgv3",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20231028225125-5zmlgv3",
				"updated": "20240715095532"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "泛型问题"
				}
			]
		},
		{
			"ID": "20231028225153-9cdnz3b",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231028225153-9cdnz3b",
				"updated": "20231028225200"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们上节课提到了IL2CPP和Mono最大的区别是 不能在运行时动态生成代码和类型\n"
				},
				{
					"Type": "NodeTextMark",
					"Properties": {
						"style": "background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);"
					},
					"TextMarkType": "strong text",
					"TextMarkTextContent": "就是说 泛型相关的内容，如果你在打包生成前没有把之后想要使用的泛型类型显示使用一次\n那么之后如果使用没有被编译的类型，就会出现找不到类型的报错"
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);\"}"
				}
			]
		},
		{
			"ID": "20231028225153-07om2nf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231028225153-07om2nf",
				"updated": "20240715095532"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "举例："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "List\u0026lt;A\u0026gt;"
				},
				{
					"Type": "NodeText",
					"Data": "​ 和 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "List\u0026lt;B\u0026gt;"
				},
				{
					"Type": "NodeText",
					"Data": "​ 中A和B是我们自定义的类，\n我能必须在代码中显示的调用过，IL2CPP才能保留 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "List\u0026lt;A\u0026gt;"
				},
				{
					"Type": "NodeText",
					"Data": "​ 和 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "List\u0026lt;B\u0026gt;"
				},
				{
					"Type": "NodeText",
					"Data": "​ 两个类型。\n如果在热更新时我们调用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "List\u0026lt;C\u0026gt;"
				},
				{
					"Type": "NodeText",
					"Data": "​，但是它之前并没有在代码中显示调用过，\n那么这时就会出现报错等问题。主要就是因为JIT和AOT两个编译模式的不同造成的"
				}
			]
		},
		{
			"ID": "20231028225243-tg100da",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20231028225243-tg100da",
				"style": "line-height: 22px;",
				"updated": "20231028225709"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public class A { }\npublic class B { }\npublic class C { }\n\npublic class Lesson1 : MonoBehaviour\n{\n    //这里就显式的声明并调用了List\u003cA\u003e与List\u003cB\u003e两种类型\n    List\u003cA\u003e list = new List\u003cA\u003e();\n    List\u003cB\u003e list = new List\u003cB\u003e();\n    //但我们没有声明和调用List\u003cC\u003e这种类型，这意味着在IL2CPP编译后一旦我们想通过热更新或者反射来构建List\u003cC\u003e就会报错\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20231113154910-ky220we",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20231113154910-ky220we",
				"updated": "20231113154913"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "解决方案"
				}
			]
		},
		{
			"ID": "20231028225218-yyp8rkk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231028225218-yyp8rkk",
				"updated": "20231113154910"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "泛型类：声明一个类，然后在这个类中声明一些public的泛型类变量"
				}
			]
		},
		{
			"ID": "20231028222903-wc1ywaa",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20231028222903-wc1ywaa",
				"style": "line-height: 22px;",
				"updated": "20231028230632"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public class GenericityClass\u003cT\u003e \n{\n    public void Test\u003cT\u003e (T info) { }\n}\n\npublic partial class IL2CPP_Info\n{\n    public List\u003cA\u003e listA;\n    public List\u003cB\u003e listB;\n    public list\u003cC\u003e listC;\n    public GenericityClass\u003cA\u003e genericityClassA;\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20231028225827-t7jjozw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231028225827-t7jjozw",
				"updated": "20231028225827"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "泛型方法：随便写一个静态方法，在将这个泛型方法在其中调用一下。这个静态方法无需被调用\n这样做的目的其实就是在预言编译之前让IL2CPP知道我们需要使用这个内容"
				}
			]
		},
		{
			"ID": "20231028225936-1x1dmmm",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20231028225936-1x1dmmm",
				"style": "line-height: 22px;",
				"updated": "20231028230805"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public partial class IL2CPP_Info\n{\n    public static void Test()\n    {\n        GenericityClass\u003cA\u003e classInfo = new GenericityClass\u003cA\u003e();\n        classInfo.Test\u003cint\u003e(1);\n        classInfo.Test\u003cfloat\u003e(1f);\n        classInfo.Test\u003cbool\u003e(true);\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20231028230540-9ci93ml",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231028230540-9ci93ml"
			}
		}
	]
}