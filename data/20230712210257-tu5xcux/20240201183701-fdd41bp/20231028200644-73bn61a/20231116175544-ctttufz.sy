{
	"ID": "20231116175544-ctttufz",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20231116175544-ctttufz",
		"scroll": "\u0026#123;\u0026quot;rootId\u0026quot;:\u0026quot;20231116175544-ctttufz\u0026quot;,\u0026quot;startId\u0026quot;:\u0026quot;20231116175544-5g3j68w\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20231117150911-kfcoyrm\u0026quot;,\u0026quot;scrollTop\u0026quot;:5770.66650390625\u0026#125;",
		"title": "CS5L13——LINQ入门实例",
		"type": "doc",
		"updated": "20240715110521"
	},
	"Children": [
		{
			"ID": "20231116175544-5g3j68w",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20231116175544-5g3j68w",
				"updated": "20240715110521"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "LINQ"
				}
			]
		},
		{
			"ID": "20231117105934-3gljx6w",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231117105934-3gljx6w",
				"updated": "20240716120008"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "语言集成查询（Language-Integrated Query），也就是LINQ\n语言集成的含义是，当你想对一个集合做查询操作时，\n不再需要额外引用第三方库，而是可以直接使用原生的语法获取。"
				}
			]
		},
		{
			"ID": "20231117105512-ko8a83r",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20231117105512-ko8a83r",
				"updated": "20240715103030"
			},
			"Children": [
				{
					"ID": "20231117105509-01lp2nn",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20231117105509-01lp2nn",
						"updated": "20240331124329"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "语言集成查询 (LINQ) 是一系列直接将查询功能集成到 C# 语言的技术统称。\n数据查询历来都表示为简单的字符串，没有编译时类型检查或 IntelliSense 支持。\n此外，需要针对每种类型的数据源了解不同的查询语言：SQL 数据库、XML 文档、各种 Web 服务等。\n借助 LINQ，查询成为了最高级的语言构造，就像类、方法和事件一样。"
						}
					]
				},
				{
					"ID": "20231117105506-v61jd7g",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20231117105506-v61jd7g",
						"updated": "20240715103030"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "对于编写查询的开发者来说，LINQ 最明显的“语言集成”部分就是查询表达式。\n查询表达式采用声明性 "
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "em",
							"TextMarkTextContent": "查询语法"
						},
						{
							"Type": "NodeText",
							"Data": " 编写而成。\n使用查询语法，可以用最少的代码对数据源执行筛选、排序和分组操作。\n可使用相同的基本查询表达式模式来查询和转换 SQL 数据库、ADO .NET 数据集、XML 文档和流以及 .NET 集合中的数据。"
						}
					]
				},
				{
					"ID": "20231117105520-5vkf05r",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20231117105520-5vkf05r",
						"style": "text-align: right;",
						"updated": "20240715103025"
					},
					"Children": [
						{
							"Type": "NodeTextMark",
							"Properties": {
								"parent-style": "text-align: right;"
							},
							"TextMarkType": "a",
							"TextMarkAHref": "https://learn.microsoft.com/zh-cn/dotnet/csharp/linq/",
							"TextMarkTextContent": "C# 中的语言集成查询 (LINQ) | Microsoft Learn"
						},
						{
							"Type": "NodeKramdownSpanIAL",
							"Data": "{: parent-style=\"text-align: right;\"}"
						}
					]
				},
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				}
			]
		},
		{
			"ID": "20231117110944-n3z3rwg",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20231117110944-n3z3rwg",
				"updated": "20240716122735"
			},
			"Children": [
				{
					"ID": "20231117110944-jozblxc",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "LQ=="
					},
					"Properties": {
						"id": "20231117110944-jozblxc",
						"updated": "20240716120141"
					},
					"Children": [
						{
							"ID": "20231117105633-xufoqw8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231117105633-xufoqw8",
								"updated": "20240716120125"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "LINQ可用于查询以下集合"
								}
							]
						},
						{
							"ID": "20231117105654-0j7nvux",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20231117105654-0j7nvux",
								"updated": "20240716120141"
							},
							"Children": [
								{
									"ID": "20231117105656-wjsillu",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20231117105656-wjsillu",
										"updated": "20240716120141"
									},
									"Children": [
										{
											"ID": "20231117105656-u3809sp",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20231117105656-u3809sp",
												"updated": "20240716120141"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": ".NET 原生集合（"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "List"
												},
												{
													"Type": "NodeText",
													"Data": "​，"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "Array"
												},
												{
													"Type": "NodeText",
													"Data": "​，"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "Dictionary"
												},
												{
													"Type": "NodeText",
													"Data": "​ 等）"
												}
											]
										}
									]
								},
								{
									"ID": "20231117105726-94jedey",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20231117105726-94jedey"
									},
									"Children": [
										{
											"ID": "20231117105726-zcvm1eu",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20231117105726-zcvm1eu",
												"updated": "20231117105756"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "SQL 数据库 （尤其是搭配ORM）"
												}
											]
										}
									]
								},
								{
									"ID": "20231117105749-nqtj5qc",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20231117105749-nqtj5qc"
									},
									"Children": [
										{
											"ID": "20231117105749-kbyex3u",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20231117105749-kbyex3u",
												"updated": "20231117105754"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "XML 文档"
												}
											]
										}
									]
								},
								{
									"ID": "20231117105800-t0p5xg1",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20231117105800-t0p5xg1",
										"updated": "20240715102821"
									},
									"Children": [
										{
											"ID": "20231117105800-6u7s06x",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20231117105800-6u7s06x",
												"updated": "20240715102821"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "JSON 文档（需要 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "Newtonsoft.Json"
												},
												{
													"Type": "NodeText",
													"Data": "​）"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20231117110953-by08o9e",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20231117110953-by08o9e",
						"updated": "20231117135748"
					},
					"Children": [
						{
							"ID": "20231117110958-dd53d4q",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231117110958-dd53d4q",
								"updated": "20231117135748"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "LINQ的常见功能"
								}
							]
						},
						{
							"ID": "20231117105835-mr6jr98",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20231117105835-mr6jr98",
								"updated": "20231117105837"
							},
							"Children": [
								{
									"ID": "20231117105837-go2gz6q",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20231117105837-go2gz6q",
										"updated": "20231117105837"
									},
									"Children": [
										{
											"ID": "20231117105837-4lfza13",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20231117105837-4lfza13",
												"updated": "20231117105844"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "排序、筛选、选择"
												}
											]
										}
									]
								},
								{
									"ID": "20231117105845-oomq0up",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20231117105845-oomq0up"
									},
									"Children": [
										{
											"ID": "20231117105845-2s7gpsg",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20231117105845-2s7gpsg",
												"updated": "20231117105854"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "分组、聚合、合并"
												}
											]
										}
									]
								},
								{
									"ID": "20231117105855-ztnnsv4",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20231117105855-ztnnsv4"
									},
									"Children": [
										{
											"ID": "20231117105855-grs5yu5",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20231117105855-grs5yu5",
												"updated": "20231117105906"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "最大值、最小值、求和、求平均"
												}
											]
										}
									]
								},
								{
									"ID": "20231117105910-zzbcmhi",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20231117105910-zzbcmhi"
									},
									"Children": [
										{
											"ID": "20231117105910-3yn1b6p",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20231117105910-3yn1b6p",
												"updated": "20231117105913"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "......"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20231117111003-4h9vs11",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20231117111003-4h9vs11",
						"updated": "20240716122735"
					},
					"Children": [
						{
							"ID": "20231117111009-ksa7f4q",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231117111009-ksa7f4q",
								"updated": "20231117141242"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "LINQ语法有两种形式，它们各有各自的适用场景"
								}
							]
						},
						{
							"ID": "20231117105946-42pnubc",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20231117105946-42pnubc",
								"updated": "20240716122735"
							},
							"Children": [
								{
									"ID": "20231117105947-x1fi0wq",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20231117105947-x1fi0wq",
										"updated": "20240716122624"
									},
									"Children": [
										{
											"ID": "20231117105947-pw8o6vs",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20231117105947-pw8o6vs",
												"updated": "20240716122624"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "查询表达式 query expression（类似于SQL语句）"
												}
											]
										},
										{
											"ID": "20231117135623-jd6c7ob",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20231117135623-jd6c7ob",
												"style": "line-height: 22px;",
												"updated": "20240716122657"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "YyM="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "var result = from x in list \n             /*..LINQ操作(这里换行不需要使用;)..*/\n             select x;\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								},
								{
									"ID": "20231117105952-a8dppz5",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20231117105952-a8dppz5",
										"updated": "20240716122735"
									},
									"Children": [
										{
											"ID": "20231117105952-68ay37f",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20231117105952-68ay37f",
												"updated": "20240716122735"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "链式表达式 chained expression（如同对一个对象连续调用方法那样，其实LINQ的本质就是对集合接口的拓展方法）"
												}
											]
										},
										{
											"ID": "20231117135720-awj6ip0",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20231117135720-awj6ip0",
												"style": "line-height: 22px;",
												"updated": "20240716122710"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "YyM="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "var result = list\n    .Where(n =\u003e n % 2 == 0 \u0026\u0026 n \u003e= 4)\n    .OrderBy(n =\u003e n);\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20231117135102-ter2fdh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231117135102-ter2fdh",
				"updated": "20240715110641"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "简单来说，接下来所展示的LINQ语法，很大程度上可以用来替代和简化一些通过 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "for"
				},
				{
					"Type": "NodeText",
					"Data": "​ 和 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "foreach"
				},
				{
					"Type": "NodeText",
					"Data": "​ 遍历集合来实现的排序查询等操作"
				}
			]
		},
		{
			"ID": "20240715103037-aslq7bb",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240715103037-aslq7bb",
				"updated": "20240715110521"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "LINQ相关内容"
				}
			]
		},
		{
			"ID": "20240715103103-hg8n2wn",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20240715103103-hg8n2wn",
				"updated": "20240715110521"
			},
			"Children": [
				{
					"ID": "20240715103104-m5jfoh2",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240715103104-m5jfoh2",
						"updated": "20240715103135"
					},
					"Children": [
						{
							"ID": "20240715103104-g9w0war",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240715103104-g9w0war",
								"updated": "20240715103135"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "block-ref",
									"TextMarkBlockRefID": "20240715103135-7bodhb9",
									"TextMarkBlockRefSubtype": "s",
									"TextMarkTextContent": "筛选和排序"
								}
							]
						}
					]
				},
				{
					"ID": "20240715103109-xwvzygh",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240715103109-xwvzygh",
						"updated": "20240715105721"
					},
					"Children": [
						{
							"ID": "20240715103109-zbvp8hd",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240715103109-zbvp8hd",
								"updated": "20240715105721"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "block-ref",
									"TextMarkBlockRefID": "20240715105721-v6eixny",
									"TextMarkBlockRefSubtype": "s",
									"TextMarkTextContent": "求两个数据集合的交集"
								}
							]
						}
					]
				},
				{
					"ID": "20240715103124-h6w8u1t",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240715103124-h6w8u1t",
						"updated": "20240715110521"
					},
					"Children": [
						{
							"ID": "20240715103124-564hmeu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240715103124-564hmeu",
								"updated": "20240715110521"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "block-ref",
									"TextMarkBlockRefID": "20240715105925-bimw5sr",
									"TextMarkBlockRefSubtype": "s",
									"TextMarkTextContent": "使用分组统计出现频率"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240715110647-d2dbeju",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240715110647-d2dbeju"
			}
		}
	]
}