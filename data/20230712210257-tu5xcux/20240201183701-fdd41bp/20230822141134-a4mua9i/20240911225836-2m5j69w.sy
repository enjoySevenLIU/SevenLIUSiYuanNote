{
	"ID": "20240911225836-2m5j69w",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20240911225836-2m5j69w",
		"title": "CS4L11——泛型栈和队列",
		"type": "doc",
		"updated": "20240911234600"
	},
	"Children": [
		{
			"ID": "20240911225836-ifzln45",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20240911225836-ifzln45",
				"updated": "20240911234533"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "泛型栈和泛型队列"
				}
			]
		},
		{
			"ID": "20240911230113-sf0efcq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240911230113-sf0efcq",
				"updated": "20240911233920"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Stack\u0026lt;\u0026gt;"
				},
				{
					"Type": "NodeText",
					"Data": "​ 和 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Queue\u0026lt;\u0026gt;"
				},
				{
					"Type": "NodeText",
					"Data": "​ 是 C# 为我们封装好的泛型容器，它们是 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Stack"
				},
				{
					"Type": "NodeText",
					"Data": "​ 和 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Queue"
				},
				{
					"Type": "NodeText",
					"Data": "​ 的泛型实现"
				}
			]
		},
		{
			"ID": "20240911234245-b8poost",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240911234245-b8poost",
				"updated": "20240911234249"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Stack\u0026lt;\u0026gt;"
				},
				{
					"Type": "NodeText",
					"Data": "​ 和 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Queue\u0026lt;\u0026gt;"
				},
				{
					"Type": "NodeText",
					"Data": "​ 需要引用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "System.Collections.Generic"
				},
				{
					"Type": "NodeText",
					"Data": "​ 这个命名空间"
				}
			]
		},
		{
			"ID": "20240911234245-bljibc8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240911234245-bljibc8",
				"updated": "20240911234253"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "实例化一个 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Stack\u0026lt;\u0026gt;"
				},
				{
					"Type": "NodeText",
					"Data": "​ 和 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Queue\u0026lt;\u0026gt;"
				},
				{
					"Type": "NodeText",
					"Data": "​ 必须要指明它要装载什么类型的元素"
				}
			]
		},
		{
			"ID": "20240911234254-e0w1z66",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240911234254-e0w1z66",
				"style": "line-height: 22px;",
				"updated": "20240911234339"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "using System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        Stack\u003cint\u003e stack = new Stack\u003cint\u003e();\n        Queue\u003cobject\u003e queue = new Queue\u003cobject\u003e();\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240911234321-5dkzstx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240911234321-5dkzstx",
				"updated": "20240911234418"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用上 和之前的 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code block-ref",
					"TextMarkBlockRefID": "20240906154922-4dwiedd",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "Stack"
				},
				{
					"Type": "NodeText",
					"Data": "​ 和 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code block-ref",
					"TextMarkBlockRefID": "20240906161252-6jtyajh",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "Queue"
				},
				{
					"Type": "NodeText",
					"Data": "​ 一样，这里不再详细解释"
				}
			]
		},
		{
			"ID": "20240911234419-68rja54",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240911234419-68rja54",
				"updated": "20240911234533"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Stack\u003c\u003e 关键字"
				}
			]
		},
		{
			"ID": "20240911234425-t0p9kfw",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240911234425-t0p9kfw",
				"style": "line-height: 22px;",
				"updated": "20240911234533"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Stack\u003c\u003e\t\t\t\t//栈类，使用object存储所有值\nstack\u003c\u003e.Push()\t\t//向栈压入值\nstack\u003c\u003e.Pop()\t\t//从栈弹出值\nstack\u003c\u003e.Peek()\t\t//查看栈顶部值，不弹出\nstack\u003c\u003e.Contains()\t//栈是否存在某个元素\nstack\u003c\u003e.Clear()\t\t//清空栈\nstack\u003c\u003e.Count\t\t//栈的数量\nstack\u003c\u003e.ToArray()\t//栈转换为数组\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240911234452-a9cvssq",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240911234452-a9cvssq",
				"updated": "20240911234600"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Queue\u003c\u003e 关键字"
				}
			]
		},
		{
			"ID": "20240911234501-67hu8zq",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240911234501-67hu8zq",
				"style": "line-height: 22px;",
				"updated": "20240911234600"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Queue\u003c\u003e\t\t\t\t//队列\nqueue\u003c\u003e.Enqueue()\t//向队列内存储值\nqueue\u003c\u003e.Dequeue()\t//从队列内取出值\nqueue\u003c\u003e.Peek()\t\t//查看队列首位的值\nqueue\u003c\u003e.Contains()\t//检查值是否存在于队列内部\nqueue\u003c\u003e.Clear()\t\t//清空队列\nqueue\u003c\u003e.Count\t\t//队列的元素数量\nqueue\u003c\u003e.ToArray()\t//将队列转换为数组\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		}
	]
}