{
	"ID": "20240906163608-d3kupk6",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20240906163608-d3kupk6",
		"title": "CS4L4——Hashtable",
		"type": "doc",
		"updated": "20240907195219"
	},
	"Children": [
		{
			"ID": "20240906165926-4gths57",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240906165926-4gths57",
				"updated": "20240907195200"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "本章代码关键字"
				}
			]
		},
		{
			"ID": "20240906165930-jn9l9if",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240906165930-jn9l9if",
				"style": "line-height: 22px;",
				"updated": "20240907195200"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Hashtable\t\t\t\t\t//散列表，基于键的哈希代码组织起来的键值对，使用object存储\nhashtable.Add() \t\t\t//添加键值对\nhashtable.Remove() \t\t\t//根据键移除键值对\nhashtable.Clear()\t\t\t//清空\nhashtable[]\t\t\t\t\t//索引器\nhashtable.Contains()\t\t//检测是否存在键\nhashtable.ContainsKey()\t\t//检测是否存在键\nhashtable.ContainsValue()\t//检测是否存在值\nhashtable.Count \t\t\t//获取键值对数量\nHashtable.Keys \t\t\t\t//获取键的集合\nhashtable.Values\t\t\t//获取值的集合\nhashtable.GetEnumerator()\t//获取迭代器\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240906163608-tt177s4",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20240906163608-tt177s4",
				"updated": "20240907192746"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Hashtable"
				}
			]
		},
		{
			"ID": "20240906165918-nxb5bbc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240906165918-nxb5bbc",
				"updated": "20240906165924"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Hashtable"
				},
				{
					"Type": "NodeText",
					"Data": "​（又称散列表）是基于键的哈希代码组织起来的 键/值对\n它的主要作用是提高数据查询的效率，使用键来访问集合中的元素"
				}
			]
		},
		{
			"ID": "20240906170031-ss4mh9m",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240906170031-ss4mh9m",
				"updated": "20240906170039"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Hashtable"
				},
				{
					"Type": "NodeText",
					"Data": "​ 需要引用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "System.Collections"
				},
				{
					"Type": "NodeText",
					"Data": "​ 这个命名空间"
				}
			]
		},
		{
			"ID": "20240906170031-mvet9ra",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240906170031-mvet9ra",
				"style": "line-height: 22px;",
				"updated": "20240907192632"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "using System.Collections;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        Hashtable hashtable = new Hashtable();\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240907192515-261to5s",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240907192515-261to5s",
				"updated": "20240907192746"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "增删查改"
				}
			]
		},
		{
			"ID": "20240907192534-6rrlcwz",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20240907192534-6rrlcwz",
				"name": "hashtable.Add()",
				"updated": "20240907192746"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "增"
				}
			]
		},
		{
			"ID": "20240907192551-4lal8se",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240907192551-4lal8se",
				"updated": "20240907192729"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "键与值都是 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "object"
				},
				{
					"Type": "NodeText",
					"Data": "​ 类型，可以添加任意 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "object"
				},
				{
					"Type": "NodeText",
					"Data": "​ 类型"
				}
			]
		},
		{
			"ID": "20240907192724-tv6em3m",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240907192724-tv6em3m",
				"style": "line-height: 22px;",
				"updated": "20240907192745"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Hashtable hashtable = new Hashtable();\nhashtable.Add(1, \"123\");\nhashtable.Add(\"123\", 2);\nhashtable.Add(true, false);\nhashtable.Add(false, true);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240907192537-zyaft6p",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20240907192537-zyaft6p",
				"name": "hashtable.Remove()",
				"updated": "20240907192912"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "删"
				}
			]
		},
		{
			"ID": "20240907192803-xq8r6yd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240907192803-xq8r6yd",
				"updated": "20240907192831"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "只能通过键去删除，删除不存在的键，会没有反应"
				}
			]
		},
		{
			"ID": "20240907192808-pctak8a",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240907192808-pctak8a",
				"style": "line-height: 22px;",
				"updated": "20240907192839"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Hashtable hashtable = new Hashtable();\nhashtable.Add(1, \"123\");\nhashtable.Remove(1);\nhashtable.Remove(2);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240907192843-r7nkub7",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20240907192843-r7nkub7",
				"name": "hashtable.Clear()",
				"updated": "20240907192912"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "清空"
				}
			]
		},
		{
			"ID": "20240907192849-at1iblp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240907192849-at1iblp",
				"updated": "20240907192859"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "清空哈希表"
				}
			]
		},
		{
			"ID": "20240907192859-vg0c7ss",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240907192859-vg0c7ss",
				"style": "line-height: 22px;",
				"updated": "20240907192912"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Hashtable hashtable = new Hashtable();\nhashtable.Add(1, \"123\");\nhashtable.Add(\"123\", 2);\nhashtable.Add(true, false);\nhashtable.Add(false, true);\nhashtable.Clear();\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240907192540-fj99k6r",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20240907192540-fj99k6r",
				"name": "hashtable[]",
				"updated": "20240907193918"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "查"
				}
			]
		},
		{
			"ID": "20240907192945-t85ffbz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240907192945-t85ffbz",
				"updated": "20240907193656"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用索引器通过键查看值，找不到返回空 ("
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "null"
				},
				{
					"Type": "NodeText",
					"Data": "​)"
				}
			]
		},
		{
			"ID": "20240907193002-480ni2q",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240907193002-480ni2q",
				"style": "line-height: 22px;",
				"updated": "20240907193050"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Hashtable hashtable = new Hashtable();\nhashtable.Add(1, \"123\");\nhashtable.Add(2, \"1234\");\nhashtable.Add(\"123123\", 12);\n\nConsole.WriteLine(hashtable[1]);\nConsole.WriteLine(hashtable[0]);    //找不到，因此返回空\nConsole.WriteLine(hashtable[\"123123\"]);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240907193051-znrgdlg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240907193051-znrgdlg",
				"updated": "20240907193053"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输出："
				}
			]
		},
		{
			"ID": "20240907193053-zwa7ta0",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240907193053-zwa7ta0",
				"style": "line-height: 22px;",
				"updated": "20240907193057"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "123\n\n12\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240907193124-of4ylhr",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"alias": "hashtable.ContainsKey(),hashtable.ContainsValue()",
				"id": "20240907193124-of4ylhr",
				"name": "hashtable.Contains()",
				"updated": "20240907193918"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "检测键或值是否存在于hashtable"
				}
			]
		},
		{
			"ID": "20240907193329-m0dr8nt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240907193329-m0dr8nt",
				"updated": "20240907193421"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "hashtable.Contains()"
				},
				{
					"Type": "NodeText",
					"Data": "​ 和 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "hashtable.ContainsKey()"
				},
				{
					"Type": "NodeText",
					"Data": "​ 都是检测键是否存在\n​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "hashtable.ContainsValue()"
				},
				{
					"Type": "NodeText",
					"Data": "​ 是检测值是否存在"
				}
			]
		},
		{
			"ID": "20240907193138-fefprhp",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240907193138-fefprhp",
				"style": "line-height: 22px;",
				"updated": "20240907193303"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Hashtable hashtable = new Hashtable();\nhashtable.Add(1, \"123\");\nhashtable.Add(2, \"1234\");\nhashtable.Add(\"123123\", 12);\n\nif (hashtable.Contains(2))\n{\n    Console.WriteLine(\"存在键为2的键值对\");\n}\n//上下两语句是相同作用的\nif (hashtable.ContainsKey(2))\n{\n    Console.WriteLine(\"存在键为2的键值对\");\n}\n\n//根据值检测\nif (hashtable.ContainsValue(12))\n{\n    Console.WriteLine(\"存在值为12的键值对\");\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240907193905-hu3j6oq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240907193905-hu3j6oq",
				"updated": "20240907193908"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输出："
				}
			]
		},
		{
			"ID": "20240907193908-bxfevku",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240907193908-bxfevku",
				"style": "line-height: 22px;",
				"updated": "20240907193918"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "存在键为2的键值对\n存在键为2的键值对\n存在值为12的键值对\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240907192546-to0ayq9",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20240907192546-to0ayq9",
				"updated": "20240907193646"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "改"
				}
			]
		},
		{
			"ID": "20240907193510-w575pqh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240907193510-w575pqh",
				"updated": "20240907193646"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "只能通过索引器改键对应的值内容，无法修改键"
				}
			]
		},
		{
			"ID": "20240907193516-xr1xean",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240907193516-xr1xean",
				"style": "line-height: 22px;",
				"updated": "20240907193547"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Hashtable hashtable = new Hashtable();\nhashtable.Add(1, \"123\");\nConsole.WriteLine(hashtable[1]);\nhashtable[1] = 100.5f;\nConsole.WriteLine(hashtable[1]);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240907193549-pknu8nv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240907193549-pknu8nv",
				"updated": "20240907193551"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输出："
				}
			]
		},
		{
			"ID": "20240907193551-xj0d8bg",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240907193551-xj0d8bg",
				"style": "line-height: 22px;",
				"updated": "20240907193555"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "123\n100.5\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240907193558-r2kjrwn",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20240907193558-r2kjrwn",
				"updated": "20240907193618"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "遍历"
				}
			]
		},
		{
			"ID": "20240907193606-qsd0b5k",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20240907193606-qsd0b5k",
				"name": "hashtable.Count",
				"updated": "20240907193618"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "得到键值对对数"
				}
			]
		},
		{
			"ID": "20240907193618-w0hzlv7",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240907193618-w0hzlv7",
				"style": "line-height: 22px;",
				"updated": "20240907193637"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Hashtable hashtable = new Hashtable();\nhashtable.Add(1, \"123\");\nhashtable.Add(2, \"1234\");\nhashtable.Add(\"123123\", 12);\n\nConsole.WriteLine(hashtable.Count);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240907193707-n7t0e10",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240907193707-n7t0e10",
				"updated": "20240907193709"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输出："
				}
			]
		},
		{
			"ID": "20240907193709-guvhl5l",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240907193709-guvhl5l",
				"style": "line-height: 22px;",
				"updated": "20240907193718"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "3\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240907193719-fzeejdm",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20240907193719-fzeejdm",
				"name": "hashtable.Keys",
				"updated": "20240907194005"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "遍历所有键"
				}
			]
		},
		{
			"ID": "20240907193729-50jhbsi",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240907193729-50jhbsi",
				"style": "line-height: 22px;",
				"updated": "20240907193931"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Hashtable hashtable = new Hashtable();\nhashtable.Add(1, \"123\");\nhashtable.Add(2, \"1234\");\nhashtable.Add(\"123123\", 12);\n\nforeach (var key in hashtable.Keys)\n{\n    Console.WriteLine(\"键：\" + key);\n    Console.WriteLine(\"值：\" + hashtable[key]);\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240907193933-z9xyry4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240907193933-z9xyry4",
				"updated": "20240907193935"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输出："
				}
			]
		},
		{
			"ID": "20240907193935-tkzrl7g",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240907193935-tkzrl7g",
				"style": "line-height: 22px;",
				"updated": "20240907193940"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "键：123123\n值：12\n键：2\n值：1234\n键：1\n值：123\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240907194005-ezb9wo4",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20240907194005-ezb9wo4",
				"name": "hashtable.Values",
				"updated": "20240907194314"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "遍历所有值"
				}
			]
		},
		{
			"ID": "20240907194031-outxpnq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240907194031-outxpnq",
				"updated": "20240907194314"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "hashtable.Values"
				},
				{
					"Type": "NodeText",
					"Data": "​ 不存在索引器，不能直接用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "for"
				},
				{
					"Type": "NodeText",
					"Data": "​ 循环遍历"
				}
			]
		},
		{
			"ID": "20240907194207-27axzh9",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240907194207-27axzh9",
				"updated": "20240907194207"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Hashtable hashtable = new Hashtable();\nhashtable.Add(1, \"123\");\nhashtable.Add(2, \"1234\");\nhashtable.Add(\"123123\", 12);\n\nforeach (var value in hashtable.Values)\n{\n    Console.WriteLine(\"值：\" + value);\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240907194211-15eew8l",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240907194211-15eew8l",
				"updated": "20240907194215"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输出："
				}
			]
		},
		{
			"ID": "20240907194216-giynhhp",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240907194216-giynhhp",
				"style": "line-height: 22px;",
				"updated": "20240907194217"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "值：12\n值：1234\n值：123\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240907194220-m66mq4k",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20240907194220-m66mq4k",
				"updated": "20240907194451"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "键值对一起遍历"
				}
			]
		},
		{
			"ID": "20240907194316-uupck9b",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240907194316-uupck9b",
				"style": "line-height: 22px;",
				"updated": "20240907194422"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Hashtable hashtable = new Hashtable();\nhashtable.Add(1, \"123\");\nhashtable.Add(2, \"1234\");\nhashtable.Add(\"123123\", 12);\n\nforeach (DictionaryEntry item in hashtable)\n{\n    Console.WriteLine(\"键：\" + item.Key + \"，值：\" + item.Value);\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240907194434-7tvtry9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240907194434-7tvtry9",
				"updated": "20240907194435"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输出："
				}
			]
		},
		{
			"ID": "20240907194435-ts3ac63",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240907194435-ts3ac63",
				"style": "line-height: 22px;",
				"updated": "20240907194444"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "键：123123，值：12\n键：2，值：1234\n键：1，值：123\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240907194451-q49qlfo",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20240907194451-q49qlfo",
				"name": "hashtable.GetEnumerator()",
				"updated": "20240907195219"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "迭代器遍历法"
				}
			]
		},
		{
			"ID": "20240907194456-0k3ok33",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240907194456-0k3ok33",
				"updated": "20240907194929"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "获取迭代器（"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "tag",
					"TextMarkTextContent": "TODO"
				},
				{
					"Type": "NodeText",
					"Data": "​）后，循环迭代，每次获取到一个值后就迭代"
				}
			]
		},
		{
			"ID": "20240907194510-9eoa5vo",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240907194510-9eoa5vo",
				"style": "line-height: 22px;",
				"updated": "20240907194555"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Hashtable hashtable = new Hashtable();\nhashtable.Add(1, \"123\");\nhashtable.Add(2, \"1234\");\nhashtable.Add(\"123123\", 12);\n\nIDictionaryEnumerator enumerator = hashtable.GetEnumerator();\nbool flag = enumerator.MoveNext();\nwhile (flag)\n{\n    Console.WriteLine(\"键：\" + enumerator.Key + \"，值：\" + enumerator.Value);\n    flag = enumerator.MoveNext();\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240907194556-z3bdi8k",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240907194556-z3bdi8k",
				"updated": "20240907194558"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输出："
				}
			]
		},
		{
			"ID": "20240907194558-gbs4egu",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240907194558-gbs4egu",
				"style": "line-height: 22px;",
				"updated": "20240907194607"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "键：123123，值：12\n键：2，值：1234\n键：1，值：123\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240907195219-i5cqs90",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240907195219-i5cqs90",
				"updated": "20240907195219"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "装箱拆箱"
				}
			]
		},
		{
			"ID": "20240907195219-jy2xdp1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240907195219-jy2xdp1",
				"updated": "20240907195219"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "由于用万物之父 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "object"
				},
				{
					"Type": "NodeText",
					"Data": "​ 来存储数据，自然存在装箱拆箱，\n当往其中进行值类型存储时就是在装箱，将值类型对象取出来转换使用时，就是在拆箱"
				}
			]
		}
	]
}