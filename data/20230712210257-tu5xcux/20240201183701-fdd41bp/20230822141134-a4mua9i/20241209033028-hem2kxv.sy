{"ID":"20241209033028-hem2kxv","Spec":"1","Type":"NodeDocument","Properties":{"id":"20241209033028-hem2kxv","title":"CS4L16——List排序","type":"doc","updated":"20250314113425"},"Children":[{"ID":"20241209034120-q4a3czk","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20241209034120-q4a3czk","updated":"20241209042726"},"Children":[{"Type":"NodeText","Data":"本章代码关键字"}]},{"ID":"20241209034126-vx2ucew","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20241209034126-vx2ucew","style":"line-height: 22px;","updated":"20241209042726"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"YyM="},{"Type":"NodeCodeBlockCode","Data":"list\u003c\u003e.Sort()\t// List的排序方法\nIComparable\u003c\u003e\t// 自定义类继承此接口并实现方法后，其List\u003c\u003e即可直接Sort()\nCompareTo()\t\t// IComparable\u003c\u003e需要实现的方法\nComparison\u003c\u003e\t// 参数为两个待比较的同类型对象，返回值为int类型排序结果的委托，可以传入到Sort()内，即可直接使用排序方法\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20241209033028-aqg2wuk","Type":"NodeHeading","HeadingLevel":1,"Properties":{"alias":"arrayList.Sort()","id":"20241209033028-aqg2wuk","name":"list\u0026lt;\u0026gt;.Sort()","updated":"20250314113425"},"Children":[{"Type":"NodeText","Data":"List 自带排序方法"}]},{"ID":"20241209033706-ymb7c99","Type":"NodeParagraph","Properties":{"id":"20241209033706-ymb7c99","updated":"20241209034043"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code block-ref","TextMarkBlockRefID":"20240907205940-6g84l89","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"List\u0026lt;\u0026gt;"},{"Type":"NodeText","Data":"​ 自带了 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Sort()"},{"Type":"NodeText","Data":"​ 方法，排序结果默认是升序的，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"ArrayList"},{"Type":"NodeText","Data":"​ 中也有 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Sort"},{"Type":"NodeText","Data":"​ 排序方法"}]},{"ID":"20241209042303-9cdias8","Type":"NodeParagraph","Properties":{"id":"20241209042303-9cdias8","updated":"20241209042452"},"Children":[{"Type":"NodeText","Data":"系统自带的变量（"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"int"},{"Type":"NodeText","Data":"​，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"float"},{"Type":"NodeText","Data":"​，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"double"},{"Type":"NodeText","Data":"​...）一般都可以直接 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Sort"},{"Type":"NodeText","Data":"​"}]},{"ID":"20241209033650-3vh586y","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20241209033650-3vh586y","style":"line-height: 22px;","updated":"20241209034523"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"YyM="},{"Type":"NodeCodeBlockCode","Data":"List\u003cint\u003e list = new List\u003cint\u003e() { 3, 2, 6, 1, 4, 5 };\nstring info = \"排序前：\";\nfor (int i = 0; i \u003c list.Count; i++)\n{\n    info += list[i];\n    info += \",\";\n}\nConsole.WriteLine(info);\n\n//list提供的排序方法(默认升序)\nlist.Sort();\ninfo = \"排序后：\";\nfor (int i = 0; i \u003c list.Count; i++)\n{\n    info += list[i];\n    info += \",\";\n}\nConsole.WriteLine(info);\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20241209033656-dfr3ceu","Type":"NodeParagraph","Properties":{"id":"20241209033656-dfr3ceu","updated":"20241209033658"},"Children":[{"Type":"NodeText","Data":"输出："}]},{"ID":"20241209033658-5xqhpys","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20241209033658-5xqhpys","style":"line-height: 22px;","updated":"20241209033702"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yw=="},{"Type":"NodeCodeBlockCode","Data":"排序前：3,2,6,1,4,5,\n排序后：1,2,3,4,5,6,\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20241209034053-5n01d8q","Type":"NodeHeading","HeadingLevel":2,"Properties":{"alias":"IComparable,CompareTo()","id":"20241209034053-5n01d8q","name":"IComparable\u0026lt;\u0026gt;","updated":"20250314113425"},"Children":[{"Type":"NodeText","Data":"自定义类的排序"}]},{"ID":"20241209034207-2jv4g74","Type":"NodeParagraph","Properties":{"id":"20241209034207-2jv4g74","updated":"20241209034322"},"Children":[{"Type":"NodeText","Data":"对于下面这种自定义类，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"List\u0026lt;\u0026gt;"},{"Type":"NodeText","Data":"​ 自带的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Sort()"},{"Type":"NodeText","Data":"​ 方法是不能直接排序的，会报错"}]},{"ID":"20241209034119-2icsxt1","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20241209034119-2icsxt1","style":"line-height: 22px;","updated":"20241209034336"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yw=="},{"Type":"NodeCodeBlockCode","Data":"class Item\n{\n    public int money;\n    public Item(int money)\n    {\n        this.money = money;\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20241209034250-pn35dct","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20241209034250-pn35dct","style":"line-height: 22px;","updated":"20241209035918"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"YyM="},{"Type":"NodeCodeBlockCode","Data":"List\u003cItem\u003e itemList = new List\u003cItem\u003e();\nitemList.Add(new Item(45));\nitemList.Add(new Item(10));\nitemList.Add(new Item(99));\nitemList.Add(new Item(24));\nitemList.Add(new Item(100));\nitemList.Add(new Item(12));\nitemList.Sort();\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20241209034304-lsshcoz","Type":"NodeParagraph","Properties":{"id":"20241209034304-lsshcoz","updated":"20241209034559"},"Children":[{"Type":"NodeText","Data":"输出（报错信息）："}]},{"ID":"20241209034537-nvywsl8","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20241209034537-nvywsl8","style":"line-height: 22px;","updated":"20241209035933"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"YyM="},{"Type":"NodeCodeBlockCode","Data":"Unhandled exception. System.InvalidOperationException: Failed to compare two elements in the array.\n ---\u003e System.ArgumentException: At least one object must implement IComparable.\n   at System.Collections.Comparer.Compare(Object a, Object b)\n   at System.Collections.Generic.ArraySortHelper`1.InsertionSort(Span`1 keys, Comparison`1 comparer)\n   at System.Collections.Generic.ArraySortHelper`1.IntroSort(Span`1 keys, Int32 depthLimit, Comparison`1 comparer)\n   at System.Collections.Generic.ArraySortHelper`1.IntrospectiveSort(Span`1 keys, Comparison`1 comparer)\n   at System.Collections.Generic.ArraySortHelper`1.Sort(Span`1 keys, IComparer`1 comparer)\n   --- End of inner exception stack trace ---\n   at System.Collections.Generic.ArraySortHelper`1.Sort(Span`1 keys, IComparer`1 comparer)\n   at System.Array.Sort[T](T[] array, Int32 index, Int32 length, IComparer`1 comparer)\n   at System.Collections.Generic.List`1.Sort(Int32 index, Int32 count, IComparer`1 comparer)\n   at Program.\u003cMain\u003e$(String[] args) in e:\\CodeField\\CSharpProjects\\CSharpTest\\Program.cs:line 8\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20241209034616-idh32sg","Type":"NodeParagraph","Properties":{"id":"20241209034616-idh32sg","updated":"20241209040235"},"Children":[{"Type":"NodeText","Data":"如果要让自定义类的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"List"},{"Type":"NodeText","Data":"​ 可以被排序，则该类必须要继承 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"IComparable\u0026lt;\u0026gt;"},{"Type":"NodeText","Data":"​接口！\n（也可以使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"IComparable"},{"Type":"NodeText","Data":"​ 接口，但是这个接口没有泛型，用的是 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"object"},{"Type":"NodeText","Data":"​）"}]},{"ID":"20241209034833-nlo8lh3","Type":"NodeParagraph","Properties":{"id":"20241209034833-nlo8lh3","updated":"20250314113425"},"Children":[{"Type":"NodeText","Data":"接口定义如下\n（其中 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"T?"},{"Type":"NodeText","Data":"​ 是代表 "},{"Type":"NodeTextMark","TextMarkType":"block-ref","TextMarkBlockRefID":"20241215011538-loa3j68","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"可空类型"},{"Type":"NodeText","Data":"，代表传入的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"other"},{"Type":"NodeText","Data":"​ 可能是 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"null"},{"Type":"NodeText","Data":"​，需要判断，"},{"Type":"NodeTextMark","TextMarkType":"code block-ref","TextMarkBlockRefID":"20241209042744-qx05hst","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"in"},{"Type":"NodeText","Data":"​ 是协变逆变的内容，详见："},{"Type":"NodeTextMark","TextMarkType":"block-ref","TextMarkBlockRefID":"20241209042744-uv63u50","TextMarkBlockRefSubtype":"d","TextMarkTextContent":"CS4L17——协变逆变"},{"Type":"NodeText","Data":"）："}]},{"ID":"20241209034715-pdt53m4","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20241209034715-pdt53m4","style":"line-height: 22px;","updated":"20241209034940"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"YyM="},{"Type":"NodeCodeBlockCode","Data":"public interface IComparable\u003cin T\u003e\n{\n    int CompareTo(T? other);\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20241209035030-71m2lat","Type":"NodeParagraph","Properties":{"id":"20241209035030-71m2lat","updated":"20241209035150"},"Children":[{"Type":"NodeText","Data":"因此，我们需要在自定义类实现 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"CompareTo"},{"Type":"NodeText","Data":"​ 方法，并按照接口要求返回规定的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"int"},{"Type":"NodeText","Data":"​ 返回值，其中返回值的含义为："}]},{"ID":"20241209035152-938rxa2","Type":"NodeList","ListData":{},"Properties":{"id":"20241209035152-938rxa2","updated":"20241209040240"},"Children":[{"ID":"20241209035152-sucrhjo","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20241209035152-sucrhjo","updated":"20241209040240"},"Children":[{"ID":"20241209035152-3rylzij","Type":"NodeParagraph","Properties":{"id":"20241209035152-3rylzij","updated":"20241209040240"},"Children":[{"Type":"NodeText","Data":"小于 0：放在传入对象的前面"}]}]},{"ID":"20241209035156-c8ikmj9","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20241209035156-c8ikmj9","updated":"20241209040239"},"Children":[{"ID":"20241209035156-t79p71s","Type":"NodeParagraph","Properties":{"id":"20241209035156-t79p71s","updated":"20241209040239"},"Children":[{"Type":"NodeText","Data":"等于 0：保持当前位置不变"}]}]},{"ID":"20241209035158-ja22tyg","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20241209035158-ja22tyg","updated":"20241209040239"},"Children":[{"ID":"20241209035158-2a5xtph","Type":"NodeParagraph","Properties":{"id":"20241209035158-2a5xtph","updated":"20241209040239"},"Children":[{"Type":"NodeText","Data":"大于 0：放在传入对象的后面"}]}]}]},{"ID":"20241209035139-6bm0mlv","Type":"NodeParagraph","Properties":{"id":"20241209035139-6bm0mlv","updated":"20241209035310"},"Children":[{"Type":"NodeText","Data":"可以简单理解为传入对象的位置，就是0"}]},{"ID":"20241209035310-w4sougy","Type":"NodeList","ListData":{},"Properties":{"id":"20241209035310-w4sougy","updated":"20241209035320"},"Children":[{"ID":"20241209035310-pohmi5e","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20241209035310-pohmi5e","updated":"20241209035318"},"Children":[{"ID":"20241209035310-zw6u543","Type":"NodeParagraph","Properties":{"id":"20241209035310-zw6u543","updated":"20241209035318"},"Children":[{"Type":"NodeText","Data":"如果返回值为负，就放在传入对象的左边，也就是前面"}]}]},{"ID":"20241209035311-lr2lb3y","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20241209035311-lr2lb3y","updated":"20241209035320"},"Children":[{"ID":"20241209035311-crz9zw8","Type":"NodeParagraph","Properties":{"id":"20241209035311-crz9zw8","updated":"20241209035320"},"Children":[{"Type":"NodeText","Data":"如果返回值为正，就放在传入对象的右边，也就是后面"}]}]},{"ID":"20241209035312-psl9gk6","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20241209035312-psl9gk6","updated":"20241209035315"},"Children":[{"ID":"20241209035312-fztn5dy","Type":"NodeParagraph","Properties":{"id":"20241209035312-fztn5dy","updated":"20241209035315"},"Children":[{"Type":"NodeText","Data":"如果返回值为 0，位置就不变"}]}]}]},{"ID":"20241209035222-apkhxkw","Type":"NodeParagraph","Properties":{"id":"20241209035222-apkhxkw","updated":"20241209035329"},"Children":[{"Type":"NodeText","Data":"可以用坐标轴去记忆，负数在左，正数在右"}]},{"ID":"20241209035313-zygc183","Type":"NodeParagraph","Properties":{"id":"20241209035313-zygc183","updated":"20241209035508"},"Children":[{"Type":"NodeText","Data":"假设自定义的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Item"},{"Type":"NodeText","Data":"​ 类以 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"money"},{"Type":"NodeText","Data":"​ 的大小来排列，那么 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Item"},{"Type":"NodeText","Data":"​ 的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"CompareTo"},{"Type":"NodeText","Data":"​ 实现为："}]},{"ID":"20241209035439-6gyrkbw","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20241209035439-6gyrkbw","style":"line-height: 22px;","updated":"20241209035737"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"YyM="},{"Type":"NodeCodeBlockCode","Data":"class Item : IComparable\u003cItem\u003e\n{\n    public int money;\n  \n    public Item(int money)\n    {\n        this.money = money;\n    }\n\n    public int CompareTo(Item? other)\n    {\n        if (other == null)\n        {\n            return 0;\n        }\n        else if (this.money \u003e other.money)\n        {\n            return 1;\n        }\n        else\n        {\n            return -1;\n        }\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20241209035408-7pzrc4k","Type":"NodeParagraph","Properties":{"id":"20241209035408-7pzrc4k","updated":"20241209035924"},"Children":[{"Type":"NodeText","Data":"此时再进行排序："}]},{"ID":"20241209035924-04dxqn3","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20241209035924-04dxqn3","style":"line-height: 22px;","updated":"20241209040012"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"YyM="},{"Type":"NodeCodeBlockCode","Data":"List\u003cItem\u003e itemList = new List\u003cItem\u003e();\nitemList.Add(new Item(45));\nitemList.Add(new Item(10));\nitemList.Add(new Item(99));\nitemList.Add(new Item(24));\nitemList.Add(new Item(100));\nitemList.Add(new Item(12));\nstring info = \"排序前：\";\nfor (int i = 0; i \u003c itemList.Count; i++)\n{\n    info += itemList[i].money;\n    info += \",\";\n}\nConsole.WriteLine(info);\n\n//list提供的排序方法(默认升序)\nitemList.Sort();\ninfo = \"排序后：\";\nfor (int i = 0; i \u003c itemList.Count; i++)\n{\n    info += itemList[i].money;\n    info += \",\";\n}\nConsole.WriteLine(info);\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20241209040013-irs5evk","Type":"NodeParagraph","Properties":{"id":"20241209040013-irs5evk","updated":"20241209040015"},"Children":[{"Type":"NodeText","Data":"输出："}]},{"ID":"20241209040015-bkjx6lr","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20241209040015-bkjx6lr","style":"line-height: 22px;","updated":"20241209040020"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"YyM="},{"Type":"NodeCodeBlockCode","Data":"排序前：45,10,99,24,100,12,\n排序后：10,12,24,45,99,100,\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20241209035921-2jzexu8","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20241209035921-2jzexu8","updated":"20241209042209"},"Children":[{"Type":"NodeText","Data":"通过委托函数进行排序"}]},{"ID":"20241209040306-unf14yk","Type":"NodeParagraph","Properties":{"id":"20241209040306-unf14yk","updated":"20241209041029"},"Children":[{"Type":"NodeText","Data":"如果要在不修改类定义的情况下让自定义类可以使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"List\u0026lt;\u0026gt;"},{"Type":"NodeText","Data":"​ 排序，除去继承 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"IComparable"},{"Type":"NodeText","Data":"​ 接口，还有一种更简单的方法，\n即使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"List\u0026lt;T\u0026gt;.Sort()"},{"Type":"NodeText","Data":"​ 的重载方法： "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"void Sort(Comparison\u0026lt;T\u0026gt; comparison)"},{"Type":"NodeText","Data":"​ 去排序，其中 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Comparison\u0026lt;\u0026gt;"},{"Type":"NodeText","Data":"​ 是一个委托，定义如下："}]},{"ID":"20241209040708-anqfczk","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20241209040708-anqfczk","style":"line-height: 22px;","updated":"20241209040737"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"YyM="},{"Type":"NodeCodeBlockCode","Data":"public delegate int Comparison\u003cin T\u003e(T x, T y);\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20241209041737-p0k0znv","Type":"NodeParagraph","Properties":{"id":"20241209041737-p0k0znv","updated":"20241209041910"},"Children":[{"Type":"NodeText","Data":"使用委托来让 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"List\u0026lt;\u0026gt;.Sort()"},{"Type":"NodeText","Data":"​ 排序是一种更灵活的做法，相比 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"IComparable"},{"Type":"NodeText","Data":"​ 接口，它可以同时利用自定义类的不同属性去做排序"}]},{"ID":"20241209040350-htq3odj","Type":"NodeParagraph","Properties":{"id":"20241209040350-htq3odj","updated":"20241209040459"},"Children":[{"Type":"NodeText","Data":"以下方的自定义类为例"}]},{"ID":"20241209040356-pzdqi8u","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20241209040356-pzdqi8u","style":"line-height: 22px;","updated":"20241209040500"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"YyM="},{"Type":"NodeCodeBlockCode","Data":"class ShopItem\n{\n    public int id;\n    public ShopItem(int id)\n    {\n        this.id = id;\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20241209040921-2f3f630","Type":"NodeParagraph","Properties":{"id":"20241209040921-2f3f630","updated":"20241209041219"},"Children":[{"Type":"NodeText","Data":"假设要在不修改上述代码的情况下，使用委托让 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"List\u0026lt;ShopItem\u0026gt;"},{"Type":"NodeText","Data":"​ 可以使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Sort"},{"Type":"NodeText","Data":"​，需要定义如下方法："}]},{"ID":"20241209041219-7chbsfp","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20241209041219-7chbsfp","style":"line-height: 22px;","updated":"20241209041521"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"YyM="},{"Type":"NodeCodeBlockCode","Data":"static int SortShopItem(ShopItem a, ShopItem b)\n{\n    if (a.id \u003e b.id)\n    {\n        return 1;\n    }\n    else if (a.id \u003c b.id)\n    {\n        return -1;\n    }\n    else\n    {\n        return 0;\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20241209041032-fcgtqeg","Type":"NodeParagraph","Properties":{"id":"20241209041032-fcgtqeg","updated":"20241209041919"},"Children":[{"Type":"NodeText","Data":"将这个方法传入到 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Sort"},{"Type":"NodeText","Data":"​ 方法内，就可以直接使用排序了："}]},{"ID":"20241209041546-6gle67r","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20241209041546-6gle67r","style":"line-height: 22px;","updated":"20241209041626"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"YyM="},{"Type":"NodeCodeBlockCode","Data":"List\u003cShopItem\u003e shopItems = new List\u003cShopItem\u003e();\nshopItems.Add(new ShopItem(2));\nshopItems.Add(new ShopItem(1));\nshopItems.Add(new ShopItem(4));\nshopItems.Add(new ShopItem(3));\nshopItems.Add(new ShopItem(6));\nshopItems.Add(new ShopItem(5));\nstring info = \"排序前：\";\nfor (int i = 0; i \u003c shopItems.Count; i++)\n{\n    info += shopItems[i].id;\n    info += \",\";\n}\nConsole.WriteLine(info);\n\n//list提供的排序方法(默认升序)\nshopItems.Sort(SortShopItem);\ninfo = \"排序后：\";\nfor (int i = 0; i \u003c shopItems.Count; i++)\n{\n    info += shopItems[i].id;\n    info += \",\";\n}\nConsole.WriteLine(info);\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20241209041627-ucs0dpg","Type":"NodeParagraph","Properties":{"id":"20241209041627-ucs0dpg","updated":"20241209041629"},"Children":[{"Type":"NodeText","Data":"输出："}]},{"ID":"20241209041629-3dgrg69","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20241209041629-3dgrg69","style":"line-height: 22px;","updated":"20241209041636"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"YyM="},{"Type":"NodeCodeBlockCode","Data":"排序前：2,1,4,3,6,5,\n排序后：1,2,3,4,5,6,\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20241209041639-qchp7rl","Type":"NodeParagraph","Properties":{"id":"20241209041639-qchp7rl","updated":"20241209041944"},"Children":[{"Type":"NodeText","Data":"如果要不额外定义函数，还可以使用 lambda 表达式："}]},{"ID":"20241209041944-u2rpcxt","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20241209041944-u2rpcxt","style":"line-height: 22px;","updated":"20241209042057"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"YyM="},{"Type":"NodeCodeBlockCode","Data":"List\u003cShopItem\u003e shopItems = new List\u003cShopItem\u003e();\nshopItems.Add(new ShopItem(2));\nshopItems.Add(new ShopItem(1));\nshopItems.Add(new ShopItem(4));\nshopItems.Add(new ShopItem(3));\nshopItems.Add(new ShopItem(6));\nshopItems.Add(new ShopItem(5));\nstring info = \"排序前：\";\nfor (int i = 0; i \u003c shopItems.Count; i++)\n{\n    info += shopItems[i].id;\n    info += \",\";\n}\nConsole.WriteLine(info);\n\n//list提供的排序方法(默认升序)\nshopItems.Sort((a, b) =\u003e { return a.id \u003e b.id ? 1 : -1; });\ninfo = \"排序后：\";\nfor (int i = 0; i \u003c shopItems.Count; i++)\n{\n    info += shopItems[i].id;\n    info += \",\";\n}\nConsole.WriteLine(info);\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20241209042101-diuvyyq","Type":"NodeParagraph","Properties":{"id":"20241209042101-diuvyyq","updated":"20241209042140"},"Children":[{"Type":"NodeText","Data":"因为 lambda 表达式只有一行，因此可以进一步简写为："}]},{"ID":"20241209042125-1i0sg9x","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20241209042125-1i0sg9x","style":"line-height: 22px;","updated":"20241209042209"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"YyM="},{"Type":"NodeCodeBlockCode","Data":"shopItems.Sort((a, b) =\u003e a.id \u003e b.id ? 1 : -1);\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}