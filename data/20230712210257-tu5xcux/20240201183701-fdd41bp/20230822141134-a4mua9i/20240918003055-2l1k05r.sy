{
	"ID": "20240918003055-2l1k05r",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20240918003055-2l1k05r",
		"title": "CS4L14——匿名函数",
		"type": "doc",
		"updated": "20240918014437"
	},
	"Children": [
		{
			"ID": "20240918003055-dvwo833",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20240918003055-dvwo833",
				"name": "delegate",
				"updated": "20240918014437"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "匿名函数"
				}
			]
		},
		{
			"ID": "20240918003237-67c7r8n",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240918003237-67c7r8n",
				"updated": "20240918004742"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "顾名思义，就是没有名字的函数，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "它主要用于传递一段简单且不会直接调用（主要通过委托调用）的逻辑"
				},
				{
					"Type": "NodeText",
					"Data": "\n匿名函数的使用主要是配合委托和事件进行使用，直接将函数逻辑传递出去，而不用额外声明一个函数\n脱离委托和事件 是不会使用匿名函数的（脱离委托事件也无法调用匿名函数，因为没有函数名让我们调用）"
				}
			]
		},
		{
			"ID": "20240918014348-1hnu0fw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240918014348-1hnu0fw",
				"updated": "20240918014437"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "关于匿名函数的简便写法以及闭包等，详见："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20240918005835-mosmabj",
					"TextMarkBlockRefSubtype": "d",
					"TextMarkTextContent": "CS4L15——Lambda表达式"
				}
			]
		},
		{
			"ID": "20240918003621-ccfhpoj",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240918003621-ccfhpoj",
				"updated": "20240918003749"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "基本语法"
				}
			]
		},
		{
			"ID": "20240918003727-3autjl1",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240918003727-3autjl1",
				"style": "line-height: 22px;",
				"updated": "20240918003731"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "delegate (参数列表)\n{\n    //函数逻辑\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240918003732-qonqtqj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240918003732-qonqtqj",
				"updated": "20240918003743"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "何时使用？"
				}
			]
		},
		{
			"ID": "20240918003743-wcoaacx",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240918003743-wcoaacx",
				"updated": "20240918003743"
			},
			"Children": [
				{
					"ID": "20240918003743-tppn5bp",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20240918003743-tppn5bp",
						"updated": "20240918003743"
					},
					"Children": [
						{
							"ID": "20240918003743-62awnqm",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240918003743-62awnqm",
								"updated": "20240918003743"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "函数中传递委托参数时"
								}
							]
						}
					]
				},
				{
					"ID": "20240918003743-lt4b3c3",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20240918003743-lt4b3c3",
						"updated": "20240918003743"
					},
					"Children": [
						{
							"ID": "20240918003743-8i8xob8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240918003743-8i8xob8",
								"updated": "20240918003743"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "委托或事件赋值时"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240918003749-5fp7e61",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240918003749-5fp7e61",
				"updated": "20240918005156"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "匿名函数的声明和使用"
				}
			]
		},
		{
			"ID": "20240918004104-rlt2ni4",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20240918004104-rlt2ni4",
				"style": "background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);",
				"updated": "20240918004340"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20240918004104-e0v3qal",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20240918004104-e0v3qal",
						"updated": "20240918004340"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "注意：使用 "
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "code",
							"TextMarkTextContent": "delegate"
						},
						{
							"Type": "NodeText",
							"Data": "​ 关键字定义的匿名函数最后要加 “"
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "code",
							"TextMarkTextContent": ";"
						},
						{
							"Type": "NodeText",
							"Data": "​” ！！！\n匿名函数必须要被一个委托或事件存储，或者作为参数传递，单独声明匿名函数是会报错的"
						}
					]
				}
			]
		},
		{
			"ID": "20240918004425-1a7mb5d",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240918004425-1a7mb5d",
				"updated": "20240918004649"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "真正调用匿名函数的时候，是在存储这个匿名函数的委托被调用的时候\n有返回值的匿名函数不需要在 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "delegate"
				},
				{
					"Type": "NodeText",
					"Data": "​ 前加变量类型，直接在 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Func"
				},
				{
					"Type": "NodeText",
					"Data": "​ 里或者接收逻辑的委托中指明返回值类型即可"
				}
			]
		},
		{
			"ID": "20240918004114-zbw05gc",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240918004114-zbw05gc",
				"updated": "20240918004130"
			},
			"Children": [
				{
					"ID": "20240918004130-y70xeve",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20240918004130-y70xeve",
						"updated": "20240918004130"
					},
					"Children": [
						{
							"ID": "20240918004130-mdp2go1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240918004130-mdp2go1",
								"updated": "20240918004131"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "无参无返回值"
								}
							]
						},
						{
							"ID": "20240918004401-85mjkar",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240918004401-85mjkar",
								"style": "line-height: 22px;",
								"updated": "20240918004417"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "Action a = delegate()\n{\n    //这里相当于直接把一个没名字的函数直接存储到委托a里\n    //这样申明 匿名函数只是在申明函数而已 还没有调用\n    Console.WriteLine(\"匿名函数逻辑\");\n};\n//真正调用匿名函数的时候 是在存储这个匿名函数的委托被调用的时候\na();\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20240918004430-bofra2a",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240918004430-bofra2a",
								"updated": "20240918004431"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "输出："
								}
							]
						},
						{
							"ID": "20240918004432-ytayfi8",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240918004432-ytayfi8",
								"style": "line-height: 22px;",
								"updated": "20240918004437"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "匿名函数逻辑\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20240918004137-76q22h6",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20240918004137-76q22h6",
						"updated": "20240918004137"
					},
					"Children": [
						{
							"ID": "20240918004137-2foukag",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240918004137-2foukag",
								"updated": "20240918004144"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "有参"
								}
							]
						},
						{
							"ID": "20240918004439-5pnry96",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240918004439-5pnry96",
								"style": "line-height: 22px;",
								"updated": "20240918004507"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "Action\u003cint, string\u003e b = delegate(int a, string b)\n{\n    Console.WriteLine(a);\n    Console.WriteLine(b);\n};\nb(100, \"123\");\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20240918004447-xmttmu5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240918004447-xmttmu5",
								"updated": "20240918004450"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "输出："
								}
							]
						},
						{
							"ID": "20240918004450-psxovrw",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240918004450-psxovrw",
								"style": "line-height: 22px;",
								"updated": "20240918004459"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "100\n123\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20240918004146-ax02otu",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20240918004146-ax02otu",
						"updated": "20240918004146"
					},
					"Children": [
						{
							"ID": "20240918004146-o53j55w",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240918004146-o53j55w",
								"updated": "20240918004152"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "有返回值"
								}
							]
						},
						{
							"ID": "20240918004547-5hznm9x",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240918004547-5hznm9x",
								"style": "line-height: 22px;",
								"updated": "20240918004556"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "Func\u003cstring\u003e c = delegate()\n{\n    //不需要在delegate前加变量类型，直接在Func里指明返回值类型即可\n    return \"123123\";\n};\nConsole.WriteLine(c());\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20240918004653-xn9zuzy",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240918004653-xn9zuzy",
								"updated": "20240918004656"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "输出："
								}
							]
						},
						{
							"ID": "20240918004656-2m7etny",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240918004656-2m7etny",
								"style": "line-height: 22px;",
								"updated": "20240918004720"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "123123\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240918004721-efusf9b",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240918004721-efusf9b",
				"updated": "20240918004729"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "匿名函数一般情况会作为函数参数传递 或者 作为函数返回值"
				}
			]
		},
		{
			"ID": "20240918004139-mw538cq",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20240918004139-mw538cq",
				"updated": "20240918005147"
			},
			"Children": [
				{
					"ID": "20240918004806-3seif2a",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240918004806-3seif2a",
						"updated": "20240918004806"
					},
					"Children": [
						{
							"ID": "20240918004806-8zz5jxw",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240918004806-8zz5jxw",
								"updated": "20240918004806"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "参数传递"
								}
							]
						},
						{
							"ID": "20240918004817-ttshlm2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240918004817-ttshlm2",
								"updated": "20240918004820"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "没有匿名函数时必须要先申明一个函数才能作为参数，学习匿名函数后可以立刻申明一个匿名函数作为参数"
								}
							]
						},
						{
							"ID": "20240918004822-qt8sqfk",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240918004822-qt8sqfk",
								"style": "line-height: 22px;",
								"updated": "20240918005056"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "class Test\n{\n    //作为参数传递时\n    public void DoSomething(int a, Action fun)\n    {\n        Console.WriteLine(a);\n        fun();\n    }\n}\n\ninternal class Program\n{\n    static void Main(string[] args)\n    {\n        //一般情况会作为函数参数传递 或者 作为函数返回值\n        Test t = new Test();\n        t.DoSomething(100, delegate() \n        {\n            Console.WriteLine(\"随参数传入的匿名函数\");\n        });\n        //也可以分步骤\n        Action ac = delegate()\n        {\n            Console.WriteLine(\"随参数传入的匿名函数\");\n        };\n        t.DoSomething(100, ac);\n    }\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20240918005005-n0773cm",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240918005005-n0773cm",
								"updated": "20240918005007"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "输出："
								}
							]
						},
						{
							"ID": "20240918005008-lz0wrq2",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240918005008-lz0wrq2",
								"style": "line-height: 22px;",
								"updated": "20240918005042"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "100\n随参数传入的匿名函数\n100\n随参数传入的匿名函数\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20240918004811-q966d45",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240918004811-q966d45",
						"updated": "20240918005147"
					},
					"Children": [
						{
							"ID": "20240918004811-xn88ofq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240918004811-xn88ofq",
								"updated": "20240918004816"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "函数返回值"
								}
							]
						},
						{
							"ID": "20240918004923-ltedrng",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240918004923-ltedrng",
								"style": "line-height: 22px;",
								"updated": "20240918005135"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "class Test\n{\n    //作为返回值\n    public Action GetFun()\n    {\n        return delegate() \n        {\n            Console.WriteLine(\"函数内部返回的一个匿名函数逻辑\");\n        };\n    }\n}\n\ninternal class Program\n{\n    static void Main(string[] args)\n    {\n        //一般情况会作为函数参数传递 或者 作为函数返回值\n        Test t = new Test();\n        //  返回值\n        Action ac2 = t.GetFun();\n        ac2();\n        //可以一步到位，直接调用返回的委托函数\n        t.GetFun()();\n    }\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20240918005138-7usbtza",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240918005138-7usbtza",
								"updated": "20240918005140"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "输出："
								}
							]
						},
						{
							"ID": "20240918005140-apoilbe",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240918005140-apoilbe",
								"style": "line-height: 22px;",
								"updated": "20240918005147"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "函数内部返回的一个匿名函数逻辑\n函数内部返回的一个匿名函数逻辑\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240918005156-9ky6b8u",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240918005156-9ky6b8u",
				"updated": "20240918005613"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "匿名函数的缺点"
				}
			]
		},
		{
			"ID": "20240918005201-1ls39ed",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240918005201-1ls39ed",
				"updated": "20240918005407"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "匿名函数由于没有名字，因此添加到委托或者事件容器后，如果不记录这个匿名函数，匿名函数是无法单独移除"
				}
			]
		},
		{
			"ID": "20240918005217-g2peke4",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240918005217-g2peke4",
				"style": "line-height: 22px;",
				"updated": "20240918005424"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Action ac3 = delegate ()\n{\n    Console.WriteLine(\"匿名函数一\");\n};\nac3 += delegate ()\n{\n    Console.WriteLine(\"匿名函数二\");\n};\n\nac3();\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240918005431-g6ir4wu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240918005431-g6ir4wu",
				"updated": "20240918005553"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这种情况下，因为匿名函数没有名字，无法再单独移除委托内某一个特定的匿名函数！！！\n即使重新再声明一个匿名函数，它也不是上一个匿名函数（哪怕逻辑完全相同），\n不可能通过看逻辑是否一样就证明这是同一个！因此 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "-="
				},
				{
					"Type": "NodeText",
					"Data": "​ 匿名函数没有意义"
				}
			]
		},
		{
			"ID": "20240918005433-r3r7bw0",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240918005433-r3r7bw0",
				"style": "line-height: 22px;",
				"updated": "20240918005441"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Action ac3 = delegate ()\n{\n    Console.WriteLine(\"匿名函数一\");\n};\nac3 += delegate ()\n{\n    Console.WriteLine(\"匿名函数二\");\n};\n\nac3();\n//注意这种情况下，因为匿名函数没有名字，无法再单独移除委托内某一个特定的匿名函数！！！\n//此匿名函数 非彼上一个匿名函数，不可能通过看逻辑是否一样就证明这是同一个！因此下面的语法没有意义\n//ac3 -= delegate ()\n//{\n//    Console.WriteLine(\"匿名函数一\");\n//};\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240918005603-5ifnib8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240918005603-5ifnib8",
				"updated": "20240918005604"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一旦要移除匿名函数，就只能全部清空"
				}
			]
		},
		{
			"ID": "20240918005604-3e1tapd",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240918005604-3e1tapd",
				"style": "line-height: 22px;",
				"updated": "20240918005609"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "ac3 = null;\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240918005609-wo4ip78",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240918005609-wo4ip78",
				"updated": "20240918005613"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "因此，只要委托有移除其中的指定函数的需要，该委托就不建议使用匿名函数"
				}
			]
		}
	]
}