{
	"ID": "20240716194755-f1nbu1k",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20240716194755-f1nbu1k",
		"title": "CS2L5——特殊的引用类型string",
		"type": "doc",
		"updated": "20240716195544"
	},
	"Children": [
		{
			"ID": "20240716194755-qpoh6la",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20240716194755-qpoh6la",
				"updated": "20240716194918"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20240716194851-rgccz74",
					"Type": "NodeHeading",
					"HeadingLevel": 2,
					"Properties": {
						"id": "20240716194851-rgccz74",
						"updated": "20240716194918"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "回顾值类型与引用类型"
						}
					]
				},
				{
					"ID": "20240716194906-3qh7osb",
					"Type": "NodeList",
					"ListData": {},
					"Properties": {
						"id": "20240716194906-3qh7osb",
						"updated": "20240716194918"
					},
					"Children": [
						{
							"ID": "20240716194918-llewoka",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20240716194918-llewoka",
								"updated": "20240716194918"
							},
							"Children": [
								{
									"ID": "20240716194918-yhhmp8v",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20240716194918-yhhmp8v",
										"updated": "20240716194918"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "引用类型："
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "code",
											"TextMarkTextContent": "string"
										},
										{
											"Type": "NodeText",
											"Data": "​ 数组 类（未学习）\n"
										}
									]
								}
							]
						},
						{
							"ID": "20240716194919-7to3cni",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20240716194919-7to3cni"
							},
							"Children": [
								{
									"ID": "20240716194919-fxvrbaa",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20240716194919-fxvrbaa"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "值类型：其他类型 结构体（未学习）"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20240716194906-jesrzmb",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20240716194906-jesrzmb",
						"updated": "20240716194906"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "值类型 在相互赋值时 把内容拷贝给了对方 它变我不变\n引用类型 在相互赋值时 是 让两者指向同一个值 它变我也变"
						}
					]
				},
				{
					"ID": "20240716194906-biqcxd1",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20240716194906-biqcxd1",
						"updated": "20240716194906"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "为什么有这样的区别\n值类型和引用类型 存储在内存的区域是不同的 存储方式是不同的"
						}
					]
				},
				{
					"ID": "20240716194912-yr0w12i",
					"Type": "NodeList",
					"ListData": {},
					"Properties": {
						"id": "20240716194912-yr0w12i",
						"updated": "20240716194913"
					},
					"Children": [
						{
							"ID": "20240716194913-kt42y71",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20240716194913-kt42y71",
								"updated": "20240716194913"
							},
							"Children": [
								{
									"ID": "20240716194913-60x1oba",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20240716194913-60x1oba",
										"updated": "20240716194913"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "值类型 存储在 栈空间 —— 系统分配，自动回收，小而快\n"
										}
									]
								}
							]
						},
						{
							"ID": "20240716194914-fxw5yon",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20240716194914-fxw5yon"
							},
							"Children": [
								{
									"ID": "20240716194914-mh99tnx",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20240716194914-mh99tnx"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "引用类型 存储在 堆空间 —— 手动申请和释放，大而慢，引用类型的地址存储在栈空间里，地址指向堆空间里的数据"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240716194929-u3w5q7l",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240716194929-u3w5q7l",
				"updated": "20240716195544"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "特殊的引用类型string"
				}
			]
		},
		{
			"ID": "20240716194944-5mpmi9j",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240716194944-5mpmi9j",
				"updated": "20240716195242"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "因为 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "string"
				},
				{
					"Type": "NodeText",
					"Data": "​ 是引用类型 按理说 应该是“它变我也变”，\n但是 C"
				},
				{
					"Type": "NodeBackslash",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeText",
							"Data": "#"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 做了特别处理，让 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "string"
				},
				{
					"Type": "NodeText",
					"Data": "​ 非常的特殊 它具备 值类型的特征 即“它变我不变”"
				}
			]
		},
		{
			"ID": "20240716195033-m6r28mx",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240716195033-m6r28mx",
				"style": "line-height: 22px;",
				"updated": "20240716195037"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "string str1 = \"123\";\nstring str2 = str1;\nstr2 = \"321\";\nConsole.WriteLine(str1);\nConsole.WriteLine(str2);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240716195039-uc7apif",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240716195039-uc7apif",
				"updated": "20240716195041"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输出："
				}
			]
		},
		{
			"ID": "20240716195041-iiohf6s",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240716195041-iiohf6s",
				"style": "line-height: 22px;",
				"updated": "20240716195049"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "123\n321\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240716195143-n4cvz15",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240716195143-n4cvz15",
				"updated": "20240716195232"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "string str2 = str1"
				},
				{
					"Type": "NodeText",
					"Data": "​ 时，栈空间内还是将 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "str1"
				},
				{
					"Type": "NodeText",
					"Data": "​ 的地址拷贝到 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "str2"
				},
				{
					"Type": "NodeText",
					"Data": "​ 了\n但是在 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "str2 = \u0026quot;321\u0026quot;"
				},
				{
					"Type": "NodeText",
					"Data": "​ 时，重新赋值让其在堆空间中重新分配了空间，同时让 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "str2"
				},
				{
					"Type": "NodeText",
					"Data": "​ 指向了新空间\n因此 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "string"
				},
				{
					"Type": "NodeText",
					"Data": "​ 具备了值类型的特征"
				}
			]
		},
		{
			"ID": "20240716195305-04ds0d0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240716195305-04ds0d0",
				"updated": "20240716195355"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "因此 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "string"
				},
				{
					"Type": "NodeText",
					"Data": "​ 虽然方便，但是有一个缺点，就是频繁的改变 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "string"
				},
				{
					"Type": "NodeText",
					"Data": "​ 重新赋值，会产生内存垃圾\n因为会有很多的字符串被复制出来占用内存，由此会有优化的替代方案，例如后续的 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "stringBuilder"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20240716195412-05i3g8n",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20240716195412-05i3g8n",
				"updated": "20240716195544"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "查看内存消息"
				}
			]
		},
		{
			"ID": "20240716195407-brj7pxv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240716195407-brj7pxv",
				"updated": "20240716195418"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "通过断点调试可以在监视窗口可以查看内存消息"
				}
			]
		},
		{
			"ID": "20240716195544-jzirfom",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240716195544-jzirfom",
				"updated": "20240716195544"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"parent-style": "width: 692px;",
						"style": "width: 682px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20240716195544-f27g0ek.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 682px;\" parent-style=\"width: 692px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		}
	]
}