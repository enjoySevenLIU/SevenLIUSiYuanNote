{
	"ID": "20240717231457-h5bb7m2",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20240717231457-h5bb7m2",
		"title": "CS2L8——变长参数和参数默认值",
		"type": "doc",
		"updated": "20240720214519"
	},
	"Children": [
		{
			"ID": "20240717231457-exeq6jg",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240717231457-exeq6jg",
				"name": "params",
				"updated": "20240720214313"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "变长参数"
				}
			]
		},
		{
			"ID": "20240718170543-q55vqhq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240718170543-q55vqhq",
				"updated": "20240720214310"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在遇到 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "函数传入的参数个数 无法确定"
				},
				{
					"Type": "NodeText",
					"Data": " 时，需要灵活控制传入参数个数时，即可使用变长参数 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "params"
				},
				{
					"Type": "NodeText",
					"Data": "​\n"
				}
			]
		},
		{
			"ID": "20240720213414-jkf9zbp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240720213414-jkf9zbp",
				"updated": "20240720214310"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "假设一个函数要计算 n 个整数的和，我们就可以使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "params"
				},
				{
					"Type": "NodeText",
					"Data": "​ 变长参数修饰一个 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "int[]"
				},
				{
					"Type": "NodeText",
					"Data": "​ 参数"
				}
			]
		},
		{
			"ID": "20240720214138-urjo9na",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240720214138-urjo9na",
				"updated": "20240720214310"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "params int[]"
				},
				{
					"Type": "NodeText",
					"Data": "​ 意味着可以传入 n 个 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "int"
				},
				{
					"Type": "NodeText",
					"Data": "​ 参数，n 可以等于 0，传入的参数会存在 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "arr"
				},
				{
					"Type": "NodeText",
					"Data": "​ 数组中"
				}
			]
		},
		{
			"ID": "20240720214146-xat9hy9",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20240720214146-xat9hy9",
				"updated": "20240720214310"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20240720214247-u41alfo",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20240720214247-u41alfo",
						"updated": "20240720214254"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "注意：\n​"
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "code",
							"TextMarkTextContent": "params"
						},
						{
							"Type": "NodeText",
							"Data": "​ 关键字后面必为"
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "strong",
							"TextMarkTextContent": "一维数组"
						},
						{
							"Type": "NodeText",
							"Data": "，数组的类型可以是任意的\n函数参数可以有别的参数和 "
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "code",
							"TextMarkTextContent": "params"
						},
						{
							"Type": "NodeText",
							"Data": "​ 关键字修饰的函数\n函数参数中只能最多出现一个 "
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "code",
							"TextMarkTextContent": "params"
						},
						{
							"Type": "NodeText",
							"Data": "​ 关键字 并且一定是最后一组参数 前面可以有 n 个其他参数"
						}
					]
				}
			]
		},
		{
			"ID": "20240720213359-qy8gyme",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240720213359-qy8gyme",
				"style": "line-height: 22px;",
				"updated": "20240720214310"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "static int Sum(params int[] arr)\n{\n    int sum = 0;\n    for (int i = 0; i \u003c arr.Length; i++)\n    {\n        sum += arr[i];\n    }\n    return sum;\n}\n\nstatic void Main(string[] args)\n{\n    int sum = Sum(1, 2, 3, 4, 5, 6, 7, 8, 9);\n    Console.WriteLine(sum);\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240720213941-4i2y19u",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240720213941-4i2y19u",
				"updated": "20240720214310"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输出："
				}
			]
		},
		{
			"ID": "20240720214019-6wazy6j",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240720214019-6wazy6j",
				"style": "line-height: 22px;",
				"updated": "20240720214310"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "45\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240720214113-dqhi7yp",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240720214113-dqhi7yp",
				"updated": "20240720214519"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "参数默认值"
				}
			]
		},
		{
			"ID": "20240720214314-gho5w4n",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240720214314-gho5w4n",
				"updated": "20240720214350"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "有参数默认值的函数，一般称为可选函数，作用是：当外部调用函数时可以不传入有默认值的参数，不传就会使用默认值作为参数的值"
				}
			]
		},
		{
			"ID": "20240720214354-6jvwl7l",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20240720214354-6jvwl7l",
				"updated": "20240720214510"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20240720214510-5u5vra2",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20240720214510-5u5vra2",
						"updated": "20240720214510"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "注意：支持多参数默认值，每个参数都可以有默认值，"
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "strong",
							"TextMarkTextContent": "如果要混用 可选参数 必须写在 普通参数后面"
						}
					]
				}
			]
		},
		{
			"ID": "20240720214411-oydbvm5",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240720214411-oydbvm5",
				"style": "line-height: 22px;",
				"updated": "20240720214500"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "static void Speak(string str = \"我没什么话可说\")\n{\n    Console.WriteLine(str);\n}\n\nstatic void Speak2(string test, string name = \"MrTang\", string str = \"我没什么话可说\")\n{\n    Console.WriteLine(\"只是示例\");\n}\n\nstatic void Main(string[] args)\n{\n    Speak();\n    Speak(\"hello,world!\");\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240720214505-cj6p7dz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240720214505-cj6p7dz",
				"updated": "20240720214507"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输出："
				}
			]
		},
		{
			"ID": "20240720214508-faufsoo",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240720214508-faufsoo",
				"style": "line-height: 22px;",
				"updated": "20240720214519"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "我没什么话可说\nhello,world!\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240720214459-ln3h92p",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240720214459-ln3h92p"
			}
		}
	]
}