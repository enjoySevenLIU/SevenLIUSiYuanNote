{
	"ID": "20240716213353-lhqih4t",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20240716213353-lhqih4t",
		"title": "CS2L6——函数基础",
		"type": "doc",
		"updated": "20240902202941"
	},
	"Children": [
		{
			"ID": "20240717172452-440etij",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240717172452-440etij",
				"updated": "20240717172527"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "本章代码关键字"
				}
			]
		},
		{
			"ID": "20240717172456-jw2uig6",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240717172456-jw2uig6",
				"style": "line-height: 22px;",
				"updated": "20240717172527"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "return\t\t//可以结束函数的执行，并返回其后边的值给外部\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240716213353-goeuux9",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20240716213353-goeuux9",
				"name": "return",
				"updated": "20240717172210"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "函数（方法）"
				}
			]
		},
		{
			"ID": "20240716213427-9uz2hll",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240716213427-9uz2hll",
				"updated": "20240716213436"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "函数（方法）本质是一块具有名称的代码块，可以使用函数（方法）的名称来执行该代码块。\n函数（方法）是封装代码进行重复使用的一种机制"
				}
			]
		},
		{
			"ID": "20240716213427-2tikmq6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240716213427-2tikmq6",
				"updated": "20240716213444"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "函数（方法）的主要作用："
				}
			]
		},
		{
			"ID": "20240716213439-eun3y9g",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20240716213439-eun3y9g",
				"updated": "20240716213439"
			},
			"Children": [
				{
					"ID": "20240716213439-qgl5yo0",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240716213439-qgl5yo0",
						"updated": "20240716213439"
					},
					"Children": [
						{
							"ID": "20240716213439-d9b1w1q",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240716213439-d9b1w1q",
								"updated": "20240716213439"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "封装代码\n"
								}
							]
						}
					]
				},
				{
					"ID": "20240716213439-s1lp0o9",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240716213439-s1lp0o9"
					},
					"Children": [
						{
							"ID": "20240716213439-dig980o",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240716213439-dig980o"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "提升代码复用率\n"
								}
							]
						}
					]
				},
				{
					"ID": "20240716213440-5o6itsk",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240716213440-5o6itsk"
					},
					"Children": [
						{
							"ID": "20240716213440-ln39s7s",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240716213440-ln39s7s"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "抽象化行为"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240716213513-mb36yug",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240716213513-mb36yug",
				"updated": "20240716213707"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "例如，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Main"
				},
				{
					"Type": "NodeText",
					"Data": "​ 就是一个函数，在程序启动时调用，为程序的起点，\n其中 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Console.WriteLine()"
				},
				{
					"Type": "NodeText",
					"Data": "​ 就是调用的 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Console"
				},
				{
					"Type": "NodeText",
					"Data": "​ 类中的 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "WriteLine()"
				},
				{
					"Type": "NodeText",
					"Data": "​ 函数"
				}
			]
		},
		{
			"ID": "20240716213552-j0as15y",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240716213552-j0as15y",
				"style": "line-height: 22px;",
				"updated": "20240716213559"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "static void Main(string[] args)\n{\n    Console.WriteLine(\"函数\")\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240717172158-ig17p9y",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240717172158-ig17p9y",
				"updated": "20240717172210"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "函数写在 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "class"
				},
				{
					"Type": "NodeText",
					"Data": "​ 或者 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "struct"
				},
				{
					"Type": "NodeText",
					"Data": "​ 里，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "return"
				},
				{
					"Type": "NodeText",
					"Data": "​ 可以提前结束函数逻辑 程序是线性执行的"
				}
			]
		},
		{
			"ID": "20240716213446-lbnyq8n",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240716213446-lbnyq8n",
				"updated": "20240716213746"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "函数写在哪里"
				}
			]
		},
		{
			"ID": "20240716213506-72uk5iv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240716213506-72uk5iv",
				"updated": "20240716213731"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一定写在 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "class"
				},
				{
					"Type": "NodeText",
					"Data": "​ 语句块 和 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "struct"
				},
				{
					"Type": "NodeText",
					"Data": "​ 语句块中！！！"
				}
			]
		},
		{
			"ID": "20240716213727-8fzj7uj",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240716213727-8fzj7uj",
				"updated": "20240902202941"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "函数基本语法"
				}
			]
		},
		{
			"ID": "20240716213746-rknm4qm",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240716213746-rknm4qm",
				"style": "line-height: 22px;",
				"updated": "20240716213802"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "//1      2       3      4\nstatic 返回类型 函数名 (参数类型 参数名1,参数类型 参数名2,...)\n//5\n{\n     写函数的代码逻辑;\n     写函数的代码逻辑;\n     ......\n     写函数的代码逻辑;\n     return 返回值;(如果有返回类型才返回)\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240716213847-f2a6cso",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240716213847-f2a6cso",
				"updated": "20240902202941"
			},
			"Children": [
				{
					"ID": "20240716213850-rh5vezn",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20240716213850-rh5vezn",
						"updated": "20240902202941"
					},
					"Children": [
						{
							"ID": "20240716213850-l3rcicw",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240716213850-l3rcicw",
								"updated": "20240902202941"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "关于 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "static"
								},
								{
									"Type": "NodeText",
									"Data": "​，这不是必须的，但在没有学结构体和类之前， "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code block-ref",
									"TextMarkBlockRefID": "20240902202732-e25kklw",
									"TextMarkBlockRefSubtype": "s",
									"TextMarkTextContent": "static"
								},
								{
									"Type": "NodeText",
									"Data": "​ 必须要写的"
								}
							]
						}
					]
				},
				{
					"ID": "20240716213859-udd1nq8",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20240716213859-udd1nq8",
						"updated": "20240716214144"
					},
					"Children": [
						{
							"ID": "20240716213859-a0xepwy",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240716213859-a0xepwy",
								"updated": "20240716214144"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "关于返回类型 引出一个新的关键字 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "void"
								},
								{
									"Type": "NodeText",
									"Data": "​，它"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "表示函数没有返回值"
								}
							]
						},
						{
							"ID": "20240716213917-dm6s25p",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240716213917-dm6s25p",
								"updated": "20240716213927"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "而返回类型可以写 任意的14种变量类型 + 复杂数据类型（数组、枚举、结构体、类 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "class"
								},
								{
									"Type": "NodeText",
									"Data": "​）"
								}
							]
						}
					]
				},
				{
					"ID": "20240716213928-julzu65",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20240716213928-julzu65"
					},
					"Children": [
						{
							"ID": "20240716213928-ibv00ey",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240716213928-ibv00ey",
								"updated": "20240716214022"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "关于函数名 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "使用帕斯卡命名法命名 即每个单词首字母都大写"
								}
							]
						}
					]
				},
				{
					"ID": "20240716213935-orkyybm",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20240716213935-orkyybm"
					},
					"Children": [
						{
							"ID": "20240716213935-ee84n99",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240716213935-ee84n99",
								"updated": "20240716214026"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "参数不是必须的，可以有0"
								},
								{
									"Type": "NodeBackslash",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "~"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "n个参数，参数的类型也是任意的：\n任意的14种变量类型 + 复杂数据类型（数组、枚举、结构体、类 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "class"
								},
								{
									"Type": "NodeText",
									"Data": "​），多个参数需要用逗号隔开\n参数名也是用"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "驼峰命名法"
								}
							]
						}
					]
				},
				{
					"ID": "20240716214028-dscvo7e",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NS4=",
						"Num": 5
					},
					"Properties": {
						"id": "20240716214028-dscvo7e",
						"updated": "20240716214044"
					},
					"Children": [
						{
							"ID": "20240716214028-v2egttq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240716214028-v2egttq",
								"updated": "20240716214044"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "当返回值类型不是 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "void"
								},
								{
									"Type": "NodeText",
									"Data": "​ 时 必须通过 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "return"
								},
								{
									"Type": "NodeText",
									"Data": "​ 来返回对于类型的内容 （注意即使是 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "void"
								},
								{
									"Type": "NodeText",
									"Data": "​ 也可以选择性使用 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "return"
								},
								{
									"Type": "NodeText",
									"Data": "​）"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240716214122-zlbo509",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240716214122-zlbo509",
				"updated": "20240717172422"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "函数实际运用"
				}
			]
		},
		{
			"ID": "20240716214134-go0sy4p",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20240716214134-go0sy4p",
				"updated": "20240717172033"
			},
			"Children": [
				{
					"ID": "20240716214153-nqbt49u",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240716214153-nqbt49u",
						"updated": "20240716214153"
					},
					"Children": [
						{
							"ID": "20240716214153-rs3k6g4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240716214153-rs3k6g4",
								"updated": "20240716214200"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "无参无返回值"
								}
							]
						},
						{
							"ID": "20240717171211-tegm0qs",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240717171211-tegm0qs",
								"style": "line-height: 22px;",
								"updated": "20240717171248"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "static void SayHallo()\n{\n    Console.WriteLine(\"Hallo world!\");\n    //返回值类型是void时，return可省略\n}\n\nstatic void Main(string[] args)\n{\n    SayHallo();\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20240717171248-qdt4m7n",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240717171248-qdt4m7n",
								"updated": "20240717171250"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "输出："
								}
							]
						},
						{
							"ID": "20240717171250-6zk9hfw",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240717171250-6zk9hfw",
								"style": "line-height: 22px;",
								"updated": "20240717171305"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "Hallo world!\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20240716214200-mua6t4f",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240716214200-mua6t4f"
					},
					"Children": [
						{
							"ID": "20240716214200-3obmbp9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240716214200-3obmbp9",
								"updated": "20240717171347"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "有参无返回值函数"
								}
							]
						},
						{
							"ID": "20240717171218-1g68ig3",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240717171218-1g68ig3",
								"style": "line-height: 22px;",
								"updated": "20240717171428"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "//有参无返回值函数\nstatic void SayYourName(string name)\n{\n    Console.WriteLine(\"你的名字是：{0}\", name);\n}\n\nstatic void Main(string[] args)\n{\n    //传入一个string常量\n    SayYourName(\"MrTang\");\n    //传入一个string变量\n    string str = \"MrTang\";\n    SayYourName(str);\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20240717171431-9une2te",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240717171431-9une2te",
								"updated": "20240717171435"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "输出："
								}
							]
						},
						{
							"ID": "20240717171436-5sphcob",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240717171436-5sphcob",
								"style": "line-height: 22px;",
								"updated": "20240717171448"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "你的名字是：MrTang\n你的名字是：MrTang\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20240717171513-odg2mdn",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240717171513-odg2mdn"
					},
					"Children": [
						{
							"ID": "20240717171513-h4eq95s",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240717171513-h4eq95s",
								"updated": "20240717171518"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "无参有返回值函数"
								}
							]
						},
						{
							"ID": "20240717171610-tz6bgix",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240717171610-tz6bgix",
								"updated": "20240717171631"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "有返回值的函数要不直接拿返回值使用，要不就是拿变量接收结果，\n虽然可以直接调用而不接收返回值，但是这样返回值就没有用了"
								}
							]
						},
						{
							"ID": "20240717171519-kzhfgbq",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240717171519-kzhfgbq",
								"style": "line-height: 22px;",
								"updated": "20240717171604"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "//有参无返回值函数\nstatic void SayYourName(string name)\n{\n    Console.WriteLine(\"你的名字是：{0}\", name);\n}\n\n//无参有返回值函数\nstatic string WhatYourName()\n{\n    return \"MrTang\";\n}\n\nstatic void Main(string[] args)\n{\n    //传入一个返回值是string的函数\n    SayYourName(WhatYourName());\n    //有返回值的函数要不直接拿返回值使用\n    //要不就是拿变量接收结果\n    //虽然可以直接调用，但是这样返回值就没有用了\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20240717171702-eydeyq8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240717171702-eydeyq8",
								"updated": "20240717171704"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "输出："
								}
							]
						},
						{
							"ID": "20240717171704-q65i0o3",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240717171704-q65i0o3",
								"style": "line-height: 22px;",
								"updated": "20240717171709"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "你的名字是：MrTang\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20240716214209-gesrf1s",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240716214209-gesrf1s"
					},
					"Children": [
						{
							"ID": "20240716214209-y928nm3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240716214209-y928nm3",
								"updated": "20240717171312"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "有参有返回值函数"
								}
							]
						},
						{
							"ID": "20240717171312-433q1z9",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240717171312-433q1z9",
								"style": "line-height: 22px;",
								"updated": "20240717171724"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "//有参有返回值函数\nstatic int Sum(int a, int b)\n{\n    //int c = a + b\n    //return c\n    //return右边也可以写表达式甚至是函数，会先将表达式计算完毕再return\n    return a + b;\n}\n\nstatic void Main(string[] args)\n{\n    Console.WriteLine(Sum(1, 2));\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20240717171725-08kxtzm",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240717171725-08kxtzm",
								"updated": "20240717171727"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "输出："
								}
							]
						},
						{
							"ID": "20240717171727-7k0epia",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240717171727-7k0epia",
								"style": "line-height: 22px;",
								"updated": "20240717171736"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "3\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20240716214255-8vjodob",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240716214255-8vjodob",
						"updated": "20240717172033"
					},
					"Children": [
						{
							"ID": "20240716214255-kerrf9d",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240716214255-kerrf9d",
								"updated": "20240716214302"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "有参有多返回值函数"
								}
							]
						},
						{
							"ID": "20240717171903-ap50xqu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240717171903-ap50xqu",
								"updated": "20240717171918"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "可以使用数组返回多个数，但是使用者需要知道这个数组的规则"
								}
							]
						},
						{
							"ID": "20240717171919-n1lwwqz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240717171919-n1lwwqz",
								"updated": "20240717172033"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "C# 7 及以上的版本，可以使用元组来返回多返回值，详见："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "block-ref",
									"TextMarkBlockRefID": "20231031181921-167bgc0",
									"TextMarkBlockRefSubtype": "d",
									"TextMarkTextContent": "CS5L9——CSharp 7 功能和语法"
								},
								{
									"Type": "NodeText",
									"Data": " 的元组部分"
								}
							]
						},
						{
							"ID": "20240717171642-c87uavn",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240717171642-c87uavn",
								"style": "line-height: 22px;",
								"updated": "20240717171811"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "//有参有多返回值函数（缺点：多返回值以数组的形式返回出去，使用者需要知道这个数组的规则）\n//例如：传入两个数 计算他们的和以及他们的平均数 得出结果返回出来\nstatic int[] Calc(int a, int b)\n{\n    int sum = a + b;\n    int avg = sum / 2;\n    //int [] arr = { sum, avg };\n    //return arr;\n    //不能是return {sum, avg}，因为这种没有申明一个数组！！！\n    return new int[] { sum, avg };\n}\n\nstatic void Main(string[] args)\n{\n    int[] arr = Calc(5, 7);\n    Console.WriteLine(arr[0] + \" \" + arr[1]);\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20240717171856-9j2v9er",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240717171856-9j2v9er",
								"updated": "20240717171858"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "输出："
								}
							]
						},
						{
							"ID": "20240717171859-5d8l1hi",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240717171859-5d8l1hi",
								"style": "line-height: 22px;",
								"updated": "20240717171900"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "总和为：12，平均值为：6\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240717172139-mg6cajm",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240717172139-mg6cajm",
				"updated": "20240717172422"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "关于return"
				}
			]
		},
		{
			"ID": "20240717172147-lqr1xhh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240717172147-lqr1xhh",
				"updated": "20240717172422"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "即使函数没有返回值，我们也可以使用"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "return"
				},
				{
					"Type": "NodeText",
					"Data": "​，return可以直接结束函数，不执行之后的代码，直接返回到函数外部"
				}
			]
		},
		{
			"ID": "20240717172341-n83kdky",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240717172341-n83kdky",
				"style": "line-height: 22px;",
				"updated": "20240717172422"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "static void Speak(string str)\n{\n    if (str == \"混蛋\") {\n        return;\n    }\n    Console.WriteLine(str);\n}\n\nstatic void Main(string[] args)\n{\n    //传入一个string变量\n    string str = \"MrTang\";\n\n    Speak(\"混蛋\");\n    Speak(str);\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240717172406-zl9uaq8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240717172406-zl9uaq8",
				"updated": "20240717172422"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输出："
				}
			]
		},
		{
			"ID": "20240717172408-lirus49",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240717172408-lirus49",
				"style": "line-height: 22px;",
				"updated": "20240717172422"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "MrTang\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		}
	]
}