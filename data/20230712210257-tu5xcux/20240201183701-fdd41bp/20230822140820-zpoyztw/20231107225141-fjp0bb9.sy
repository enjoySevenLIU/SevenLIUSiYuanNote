{
	"ID": "20231107225141-fjp0bb9",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20231107225141-fjp0bb9",
		"title": "CS2L3——数组",
		"type": "doc",
		"updated": "20231107230457"
	},
	"Children": [
		{
			"ID": "20231107225141-w9me7mh",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20231107225141-w9me7mh",
				"updated": "20231107225238"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "数组"
				}
			]
		},
		{
			"ID": "20231107225238-haczjbn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231107225238-haczjbn",
				"updated": "20231107225254"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "数组是存储一组相同类型数据的集合，数组分为一维、多维、交错数组\n一般情况下，一维数组就简称为数组"
				}
			]
		},
		{
			"ID": "20231107230428-kzeibrd",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20231107230428-kzeibrd",
				"updated": "20231107230457"
			},
			"Children": [
				{
					"ID": "20231107230433-vnftvej",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20231107230433-vnftvej",
						"updated": "20231107230457"
					},
					"Children": [
						{
							"ID": "20231107230433-a6x8188",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231107230433-a6x8188",
								"updated": "20231107230457"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "概念：同一变量类型的连续的数据集合"
								}
							]
						}
					]
				},
				{
					"ID": "20231107230433-ljcaklo",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20231107230433-ljcaklo",
						"updated": "20231107230433"
					},
					"Children": [
						{
							"ID": "20231107230433-jv3v6a2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231107230433-jv3v6a2",
								"updated": "20231107230433"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "一定要掌握的知识：申明，遍历，增删查改"
								}
							]
						}
					]
				},
				{
					"ID": "20231107230433-hycbg1k",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20231107230433-hycbg1k",
						"updated": "20231107230448"
					},
					"Children": [
						{
							"ID": "20231107230433-cql7uyw",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231107230433-cql7uyw",
								"updated": "20231107230448"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "所有的变量类型都可以申明为数组"
								}
							]
						}
					]
				},
				{
					"ID": "20231107230433-4dwr27d",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20231107230433-4dwr27d",
						"updated": "20231107230445"
					},
					"Children": [
						{
							"ID": "20231107230433-9kjzh8n",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231107230433-9kjzh8n",
								"updated": "20231107230445"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "她是用来批量存储游戏中的同一类型对象的容器，比如，所有的怪物，所有玩家"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20231107225255-2rst17k",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20231107225255-2rst17k",
				"updated": "20231107225303"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "数组的申明"
				}
			]
		},
		{
			"ID": "20231107225311-pyubccl",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20231107225311-pyubccl",
				"style": "line-height: 22px;",
				"updated": "20231107225350"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "变量类型[] 数组名;    //这只是申明一个数组，但是并没有为其开辟内存空间\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20231107225346-0uam8v5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231107225346-0uam8v5",
				"updated": "20231107225411"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "变量的类型，可以是我们学过的，或者没学过的，所有变量类型"
				}
			]
		},
		{
			"ID": "20231107225441-l3afdsb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231107225441-l3afdsb",
				"updated": "20231107225503"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "以下是5种数组声明方式"
				}
			]
		},
		{
			"ID": "20231107225413-0clvyfk",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20231107225413-0clvyfk",
				"style": "line-height: 22px;",
				"updated": "20231107225515"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "int[] arr1;\n\n// 变量类型[] 数组名 = new 变量类型[数组的长度];\nint[] arr2 = new int[5];                        //这种方式相当于开了五个房间 但是房间里的int值默认为0\n\n// 变量类型[] 数组名 = new 变量类型[数组的长度]{内容1，内容2，内容3...};\nint[] arr3 = new int[5] { 1, 2, 3, 4, 5 };      //如果要用这种命名方式就必须要在大括号内填入和长度一样多的数据\n\n// 变量类型[] 数组名 = new 变量类型[]{内容1，内容2, 内容3...}\nint[] arr4 = new int[] { 1, 2, 3, 4, 5, 6 };    //一开始不申明数组长度，用后面的数量决定数组的长度\n\n// 变量类型[] 数组名 = {内容1，内容2, 内容3...}\nint[] arr5 = { 1, 3, 4, 5, 6 };                 //用后面的数量决定数组的长度\n\n//注意：数组内一定要用一样的数据类型\nbool[] arr6 = { true, false, true };\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20231107225524-zrqjswj",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20231107225524-zrqjswj",
				"updated": "20231107225530"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "数组的使用"
				}
			]
		},
		{
			"ID": "20231107225541-qbfy17z",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20231107225541-qbfy17z",
				"style": "line-height: 22px;",
				"updated": "20231107225542"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "int[] array = { 1, 2, 3, 4, 5 };\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20231107225543-ym0v5mz",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20231107225543-ym0v5mz",
				"name": "array.Length",
				"updated": "20231107225551"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "获得数组的长度"
				}
			]
		},
		{
			"ID": "20231107225552-v40rrip",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20231107225552-v40rrip",
				"style": "line-height: 22px;",
				"updated": "20231107225558"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Console.WriteLine(array.Length);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20231107225645-3wv6vb0",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20231107225645-3wv6vb0",
				"updated": "20231107225645"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "获取数组中的元素"
				}
			]
		},
		{
			"ID": "20231107225624-le59lny",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231107225624-le59lny",
				"updated": "20231107225709"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "数组中的下标和索引 "
				},
				{
					"Type": "NodeTextMark",
					"Properties": {
						"style": "background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"
					},
					"TextMarkType": "text strong",
					"TextMarkTextContent": "他们是从"
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"
				},
				{
					"Type": "NodeTextMark",
					"Properties": {
						"style": "background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"
					},
					"TextMarkType": "code text strong",
					"TextMarkTextContent": "0"
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"
				},
				{
					"Type": "NodeTextMark",
					"Properties": {
						"style": "background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"
					},
					"TextMarkType": "text strong",
					"TextMarkTextContent": "开始的！！！！！"
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"
				},
				{
					"Type": "NodeTextMark",
					"Properties": {
						"style": "background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"
					},
					"TextMarkType": "text"
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"
				},
				{
					"Type": "NodeText",
					"Data": "通过索引下标取获得数组中的某一个元素值时，"
				},
				{
					"Type": "NodeTextMark",
					"Properties": {
						"style": "background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);"
					},
					"TextMarkType": "text strong",
					"TextMarkTextContent": "一定注意！！！！！！！！！不能越界"
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);\"}"
				},
				{
					"Type": "NodeText"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "界限是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code strong",
					"TextMarkTextContent": "0 ~ array.Length-1"
				}
			]
		},
		{
			"ID": "20231107225658-pb7paph",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20231107225658-pb7paph",
				"updated": "20231107225719"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "修改数组中的元素"
				}
			]
		},
		{
			"ID": "20231107225719-sb0nxas",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231107225719-sb0nxas",
				"updated": "20231107225748"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "通过下标填入指定的索引值来决定修改数组的哪个元素"
				}
			]
		},
		{
			"ID": "20231107225748-cxwbcya",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20231107225748-cxwbcya",
				"style": "line-height: 22px;",
				"updated": "20231107225758"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "array[0] = 99;\nConsole.WriteLine(array[0]);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20231107225759-fk4rhsa",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20231107225759-fk4rhsa",
				"updated": "20231107225806"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "遍历数组"
				}
			]
		},
		{
			"ID": "20231107225812-oxnemxw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231107225812-oxnemxw",
				"updated": "20231107225812"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "通过循环快速获得数组中的每一个元素"
				}
			]
		},
		{
			"ID": "20231107225813-clajx8j",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20231107225813-clajx8j",
				"style": "line-height: 22px;",
				"updated": "20231107225821"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "for (int i = 0; i \u003c array.Length; i++)\n{\n    Console.WriteLine(array[i]);\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20231107225822-hr1eqpe",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20231107225822-hr1eqpe",
				"updated": "20231107225828"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "增加数组的元素"
				}
			]
		},
		{
			"ID": "20231107225829-hifhnqi",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231107225829-hifhnqi",
				"updated": "20231107230043"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "数组初始化以后是不能够直接添加新元素的，只能搬家，盖新房子\n（重新申请一个更大的内存空间，然后将以前的数组的元素全部转移过去，再让变量指向新数组，最后添加新的元素）"
				}
			]
		},
		{
			"ID": "20231107225944-8dlb7ga",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20231107225944-8dlb7ga",
				"style": "line-height: 22px;",
				"updated": "20231107230021"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "//盖新房子\nint[] array2 = new int[6];\n//搬家\nfor (int i = 0; i \u003c array.Length; i++)\n{\n    array2[i] = array[i];\n}\n//让变量名指向新开的内存区，原内存会被自动回收\narray = array2;\nfor (int i = 0;i \u003c array.Length; i++)\n{\n    Console.WriteLine(array[i]);\n}\n//添加新元素\narray[5] = 999;\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20231107230009-o4j8ccu",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20231107230009-o4j8ccu",
				"updated": "20231107230053"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "删除数组的元素"
				}
			]
		},
		{
			"ID": "20231107230101-qeptb1c",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231107230101-qeptb1c",
				"updated": "20231107230229"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "同样数组初始化以后，数组初始化以后 是不能够直接删除元素的，只能搬家\n（重新申请一个更大的内存空间，然后将以前的数组中需要保留的元素全部转移过去，再让变量指向新数组）"
				}
			]
		},
		{
			"ID": "20231107230230-hr2nuzs",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20231107230230-hr2nuzs",
				"style": "line-height: 22px;",
				"updated": "20231107230254"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "int[] array3 = new int[5];\n//搬家\nfor (int i = 0; i \u003c array3.Length; i++)\n{\n    array3[i] = array[i];\n}\narray = array3;\nConsole.WriteLine(array.Length);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20231107230211-6wzlqvj",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20231107230211-6wzlqvj",
				"updated": "20231107230415"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "查找数组中的元素"
				}
			]
		},
		{
			"ID": "20231107230307-2tgp2yw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231107230307-2tgp2yw",
				"updated": "20231107230407"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "{ 99, 2, 3, 4, 5 }"
				},
				{
					"Type": "NodeText",
					"Data": "​ 这个数组中\n要查找"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "3"
				},
				{
					"Type": "NodeText",
					"Data": "​这个元素在哪个位置，只有通过遍历才能确定数组中是否存储了一个目标元素"
				}
			]
		},
		{
			"ID": "20231107230346-gu2qjnd",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20231107230346-gu2qjnd",
				"style": "line-height: 22px;",
				"updated": "20231107230357"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "int a = 3;\n\nfor (int i = 0; i \u003c array.Length; i++)\n{\n    if( a == array[i] )\n    {\n        Console.WriteLine(\"和a相等的元素在{0}索引位置\", i);\n        break;\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		}
	]
}