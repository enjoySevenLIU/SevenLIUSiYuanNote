{
	"ID": "20240716174128-u7og3r7",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20240716174128-u7og3r7",
		"title": "CS2L4——值类型和引用类型",
		"type": "doc",
		"updated": "20240716194552"
	},
	"Children": [
		{
			"ID": "20240716174128-8mee339",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20240716174128-8mee339",
				"updated": "20240716174358"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20240716174210-etmk82c",
					"Type": "NodeHeading",
					"HeadingLevel": 2,
					"Properties": {
						"id": "20240716174210-etmk82c",
						"updated": "20240716174358"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "变量类型的复习"
						}
					]
				},
				{
					"ID": "20240716174240-bwhwhp0",
					"Type": "NodeList",
					"ListData": {},
					"Properties": {
						"id": "20240716174240-bwhwhp0",
						"updated": "20240716174358"
					},
					"Children": [
						{
							"ID": "20240716174242-uaukv4a",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20240716174242-uaukv4a",
								"updated": "20240716174242"
							},
							"Children": [
								{
									"ID": "20240716174242-6o01d2c",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20240716174242-6o01d2c",
										"updated": "20240716174248"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "基本数据类型"
										}
									]
								}
							]
						},
						{
							"ID": "20240716174245-3avs3ak",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20240716174245-3avs3ak"
							},
							"Children": [
								{
									"ID": "20240716174213-7qokqjd",
									"Type": "NodeCodeBlock",
									"IsFencedCodeBlock": true,
									"Properties": {
										"id": "20240716174213-7qokqjd",
										"style": "line-height: 22px;",
										"updated": "20240716174229"
									},
									"Children": [
										{
											"Type": "NodeCodeBlockFenceOpenMarker",
											"Data": "```"
										},
										{
											"Type": "NodeCodeBlockFenceInfoMarker",
											"CodeBlockInfo": "YyM="
										},
										{
											"Type": "NodeCodeBlockCode",
											"Data": "//1、有符号的整形变量 能存储一定范围内的正负数包括0的变量类型\nsbyte sb = 1; // -128~127\nint i = 1;  //  -21亿~21亿\nshort s = 1;    //  -32768~32767\nlong l = 1;    //  -九百万兆~九百万兆\n//2、无符号的整型变量 能存储一定范围内0和正数的变量类型\nbyte b = 1;    //  0~255\nuint ui = 1;    //  0~42亿\nushort us = 1;  //  0~65535\nulong ul = 1;   //  0~18百万兆\n//3、浮点数（小数）\nfloat f = 0.1f;    // 数字后必须加f声明float，因为小数会被默认为double，从非0数算起为有效数字，7/8位有效数字，根据编译器不同有可能不同，超出部分会四舍五入\ndouble d = 0.1;    // 从非0数算起为有效数字，15~17位有效数字，超出部分会四舍五入\ndecimal de = 0.1m;    // 数字后必须加m声明，因为小数会被默认为double，27~28位有效数字，不建议使用\n//4、特殊类型\nbool bo = true; //  true或者false\nchar c = 'a';   //  需要加'',单个字符\nstring st = \"hello\";    //  需要加\"\",字符串\n"
										},
										{
											"Type": "NodeCodeBlockFenceCloseMarker",
											"Data": "```"
										}
									]
								}
							]
						},
						{
							"ID": "20240716174302-m3qhjxc",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20240716174302-m3qhjxc",
								"updated": "20240716174358"
							},
							"Children": [
								{
									"ID": "20240716174302-9isufdr",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20240716174302-9isufdr",
										"updated": "20240716174313"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "复杂数据类型"
										}
									]
								},
								{
									"ID": "20240716174345-jjfx8qq",
									"Type": "NodeList",
									"ListData": {},
									"Properties": {
										"id": "20240716174345-jjfx8qq",
										"updated": "20240716174358"
									},
									"Children": [
										{
											"ID": "20240716174316-hvzh2sl",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20240716174316-hvzh2sl"
											},
											"Children": [
												{
													"ID": "20240716174316-0x44sif",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20240716174316-0x44sif",
														"updated": "20240716174318"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "​"
														},
														{
															"Type": "NodeTextMark",
															"TextMarkType": "code",
															"TextMarkTextContent": "enum"
														},
														{
															"Type": "NodeText",
															"Data": "​ 枚举"
														}
													]
												}
											]
										},
										{
											"ID": "20240716174327-kj6ds1y",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20240716174327-kj6ds1y"
											},
											"Children": [
												{
													"ID": "20240716174327-mvz4vuo",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20240716174327-mvz4vuo",
														"updated": "20240716174327"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "数组（一维，二维，交错）"
														}
													]
												}
											]
										},
										{
											"ID": "20240716174348-24m91uy",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20240716174348-24m91uy",
												"updated": "20240716174358"
											},
											"Children": [
												{
													"ID": "20240716174348-rp03s7k",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20240716174348-rp03s7k",
														"updated": "20240716174358"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "结构体、类（未学习）"
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240716174401-hbx13ub",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20240716174401-hbx13ub",
				"updated": "20240716175505"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "值类型和引用类型"
				}
			]
		},
		{
			"ID": "20240716174427-qq5i9we",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240716174427-qq5i9we",
				"updated": "20240716174517"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在C"
				},
				{
					"Type": "NodeBackslash",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeText",
							"Data": "#"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "中，所有的变量类型都会分为值类型和引用类型，分类如下："
				}
			]
		},
		{
			"ID": "20240716174518-h9dot8l",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20240716174518-h9dot8l",
				"updated": "20240716174519"
			},
			"Children": [
				{
					"ID": "20240716174519-dhxv3zl",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240716174519-dhxv3zl",
						"updated": "20240716174519"
					},
					"Children": [
						{
							"ID": "20240716174519-80ddxrr",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240716174519-80ddxrr",
								"updated": "20240716174544"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "引用类型："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "string"
								},
								{
									"Type": "NodeText",
									"Data": "​，数组，类 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "class"
								},
								{
									"Type": "NodeText",
									"Data": "​（未学习）"
								}
							]
						}
					]
				},
				{
					"ID": "20240716174545-vaeryi4",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240716174545-vaeryi4"
					},
					"Children": [
						{
							"ID": "20240716174545-1lbwyqy",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240716174545-1lbwyqy",
								"updated": "20240716174614"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "值类型：除 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "string"
								},
								{
									"Type": "NodeText",
									"Data": "​ 以外的所有基本数据类型，结构体 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "struct"
								},
								{
									"Type": "NodeText",
									"Data": "​（未学习）"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240716174615-vy2hyy2",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240716174615-vy2hyy2",
				"updated": "20240716175505"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "值类型和引用类型在使用上的区别"
				}
			]
		},
		{
			"ID": "20240716174658-rob3gr6",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20240716174658-rob3gr6",
				"updated": "20240716175505"
			},
			"Children": [
				{
					"ID": "20240716174659-4ohhs4h",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240716174659-4ohhs4h",
						"updated": "20240716175503"
					},
					"Children": [
						{
							"ID": "20240716174659-rq684lc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240716174659-rq684lc",
								"updated": "20240716174701"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "值类型"
								}
							]
						},
						{
							"ID": "20240716174705-dsp3ea3",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240716174705-dsp3ea3",
								"style": "line-height: 22px;",
								"updated": "20240716174956"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "//值类型\nint a = 10;\n//申明了一个b让其等于之前的a\nint b = a;\nConsole.WriteLine(\"a={0},b={1}\", a, b);\n//修改b\nb = 20;\nConsole.WriteLine(\"修改了b和arr2[0]\");\nConsole.WriteLine(\"a={0},b={1}\", a, b);\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20240716174752-7cffjj4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240716174752-7cffjj4",
								"updated": "20240716174841"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "输出："
								}
							]
						},
						{
							"ID": "20240716174756-1va13o8",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240716174756-1va13o8",
								"style": "line-height: 22px;",
								"updated": "20240716174842"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "a=10,b=10\n修改了b和arr2[0]\na=10,b=20\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20240716175002-kl6iouz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240716175002-kl6iouz",
								"updated": "20240716175503"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "可见，值类型变量将自己的值赋值给另一个值类型变量时，"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "修改新变量的值，原来的变量的值不被影响"
								}
							]
						}
					]
				},
				{
					"ID": "20240716174701-l3n2y4l",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240716174701-l3n2y4l",
						"updated": "20240716175505"
					},
					"Children": [
						{
							"ID": "20240716174701-tnbal4v",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240716174701-tnbal4v",
								"updated": "20240716174704"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "引用类型"
								}
							]
						},
						{
							"ID": "20240716174904-txkb9h5",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240716174904-txkb9h5",
								"style": "line-height: 22px;",
								"updated": "20240716174939"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "//引用类型\nint[] arr = new int[] { 1, 2, 3, 4 };\n//申明了一个arr2让其等于之前的arr\nint[] arr2 = arr;\nConsole.WriteLine(\"arr={0},arr2={1}\", arr[0], arr2[0]);\n//修改arr[0]\narr2[0] = 5;\nConsole.WriteLine(\"修改了b和arr2[0]\");\nConsole.WriteLine(\"arr={0},arr2={1}\", arr[0], arr2[0]);\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20240716174813-0cjp8ms",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240716174813-0cjp8ms",
								"updated": "20240716174814"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "输出："
								}
							]
						},
						{
							"ID": "20240716174815-hjgdo9f",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240716174815-hjgdo9f",
								"style": "line-height: 22px;",
								"updated": "20240716174855"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "arr=1,arr2=1\n修改了b和arr2[0]\narr=5,arr2=5\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20240716175108-qs8xzeu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240716175108-qs8xzeu",
								"updated": "20240716175505"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "可见，引用类型变量将自己的值赋值给另一个引用类型变量时，"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "修改新变量的值，原来的变量的值也会被修改"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240716175200-1thi1am",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240716175200-1thi1am",
				"updated": "20240716181011"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "值类型和引用类型区别的原理"
				}
			]
		},
		{
			"ID": "20240716175234-ha8xa9t",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240716175234-ha8xa9t",
				"updated": "20240716175400"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "首先要知道，内存是划分为几块不同的空间的，其中就包括"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "栈空间"
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "堆空间："
				}
			]
		},
		{
			"ID": "20240716175344-es97h6g",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20240716175344-es97h6g",
				"updated": "20240716175705"
			},
			"Children": [
				{
					"ID": "20240716175345-o7h08g2",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240716175345-o7h08g2",
						"updated": "20240716175629"
					},
					"Children": [
						{
							"ID": "20240716175345-xgoqv3e",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240716175345-xgoqv3e",
								"updated": "20240716175629"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "栈空间 —— 系统分配，自动回收，"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "小而快"
								}
							]
						}
					]
				},
				{
					"ID": "20240716175346-rqvvmwu",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240716175346-rqvvmwu",
						"updated": "20240716175705"
					},
					"Children": [
						{
							"ID": "20240716175346-srwnw9d",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240716175346-srwnw9d",
								"updated": "20240716175705"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "堆空间 —— 手动申请和释放，"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "大而慢"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240716175231-nn6d64i",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240716175231-nn6d64i",
				"updated": "20240716175231"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "值类型和引用类型 存储在内存的区域是不同的 存储方式是不同的"
				}
			]
		},
		{
			"ID": "20240716175514-gxffe6s",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20240716175514-gxffe6s",
				"updated": "20240716181011"
			},
			"Children": [
				{
					"ID": "20240716175516-vr5x7nw",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240716175516-vr5x7nw",
						"updated": "20240716181011"
					},
					"Children": [
						{
							"ID": "20240716175516-f0tfk2h",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240716175516-f0tfk2h",
								"updated": "20240716175754"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "值类型 存储在 栈空间 —— 系统分配，自动回收，小而快，"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "u",
									"TextMarkTextContent": "值类型的值直接存储在栈空间内"
								}
							]
						},
						{
							"ID": "20240716175958-tzfg4uh",
							"Type": "NodeBlockquote",
							"Properties": {
								"id": "20240716175958-tzfg4uh",
								"updated": "20240716181011"
							},
							"Children": [
								{
									"Type": "NodeBlockquoteMarker",
									"Data": "\u003e"
								},
								{
									"ID": "20240716180039-zu20i6r",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20240716180039-zu20i6r",
										"updated": "20240716181011"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "注意，引用类型变量内的值类型成员值不是存储在栈上的，例如数组内的数值，类（"
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "code",
											"TextMarkTextContent": "class"
										},
										{
											"Type": "NodeText",
											"Data": "​）内部的数字等等\n直接在函数内部创建的值类型变量才是存储在栈空间的，而创建（"
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "code",
											"TextMarkTextContent": "new"
										},
										{
											"Type": "NodeText",
											"Data": "​）引用类型变量时，其中的值类型成员则存储于堆上"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20240716175517-y6z1ehe",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240716175517-y6z1ehe",
						"updated": "20240716175757"
					},
					"Children": [
						{
							"ID": "20240716175517-bon17g5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240716175517-bon17g5",
								"updated": "20240716175757"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "引用类型 存储在 堆空间 —— 手动申请和释放，大而慢，"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "u",
									"TextMarkTextContent": "引用类型数据的地址存储在栈空间里，地址指向堆空间里的数据"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240716175829-lgpbhon",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240716175829-lgpbhon",
				"updated": "20240716175846"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "因此，值类型和应用类型在内存内存储的模型大致如下："
				}
			]
		},
		{
			"ID": "20240716175904-iuhbwfs",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240716175904-iuhbwfs",
				"updated": "20240716175904"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"parent-style": "width: 407px;",
						"style": "width: 397px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20240716175904-n8q3q0l.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 397px;\" parent-style=\"width: 407px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20240716175911-05azc97",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240716175911-05azc97",
				"updated": "20240716180442"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "因此，当我们修改值类型变量的值时，不会影响其他值类型变量的数据，因为它们分别存储于不同内存空间内"
				}
			]
		},
		{
			"ID": "20240716180540-qmtw3wn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240716180540-qmtw3wn",
				"updated": "20240716180540"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"parent-style": "width: 407px;",
						"style": "width: 397px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20240716180540-gkx0835.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 397px;\" parent-style=\"width: 407px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20240716180814-j90jop8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240716180814-j90jop8",
				"updated": "20240716180835"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "因此在 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "int b = a"
				},
				{
					"Type": "NodeText",
					"Data": "​ 时，相当于在栈空间内拷贝了一份 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "10"
				},
				{
					"Type": "NodeText",
					"Data": "​ 的数据，因此当 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "b = 20"
				},
				{
					"Type": "NodeText",
					"Data": "​ 时，会直接修改那个拷贝的 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "10"
				},
				{
					"Type": "NodeText",
					"Data": "​ 数据而不影响原数据"
				}
			]
		},
		{
			"ID": "20240716180543-kl3tvl9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240716180543-kl3tvl9",
				"updated": "20240716180803"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "而当我们修改引用类型变量的值时，指向堆空间同一块内存空间的引用类型变量也会被影响，因为它们存储的地址是一致的"
				}
			]
		},
		{
			"ID": "20240716180744-o7wzdbx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240716180744-o7wzdbx",
				"updated": "20240716180744"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"parent-style": "width: 408px;",
						"style": "width: 398px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20240716180744-c8ci1aq.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 398px;\" parent-style=\"width: 408px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20240716180806-1h3mtvp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240716180806-1h3mtvp",
				"updated": "20240716180903"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "而在 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "int[] arr2 = arr"
				},
				{
					"Type": "NodeText",
					"Data": "​ 时，相当于在栈空间里拷贝了 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "int[] arr"
				},
				{
					"Type": "NodeText",
					"Data": "​ 的地址，\n因此在 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "arr2[0] = 5"
				},
				{
					"Type": "NodeText",
					"Data": "​ 时，会修改该地址指向的堆空间里的数据，因此打印指向同一地址 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "arr[0]"
				},
				{
					"Type": "NodeText",
					"Data": "​ 值也可以看到修改"
				}
			]
		},
		{
			"ID": "20240716175213-ivvhqnp",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240716175213-ivvhqnp",
				"updated": "20240716194552"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "浅拷贝和深拷贝"
				}
			]
		},
		{
			"ID": "20240716180935-fjpdyby",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240716180935-fjpdyby",
				"updated": "20240716181127"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "因为引用类型存在如上文所述的特性，因此，拷贝引用类型变量就存在浅拷贝和深拷贝的区别"
				}
			]
		},
		{
			"ID": "20240716181127-njrn8sp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240716181127-njrn8sp",
				"updated": "20240716194113"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "上边的引用类型变量赋值给新的引用类型变量就是浅拷贝，也就是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "u",
					"TextMarkTextContent": "只拷贝了指向具体数据的地址，而不重新复制一份具体数据"
				},
				{
					"Type": "NodeText",
					"Data": "\n对浅拷贝得到的变量的值进行修改，原来的变量值也会改变，因为原变量和拷贝得到的变量指向同一块内存"
				}
			]
		},
		{
			"ID": "20240716194006-br9ndks",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240716194006-br9ndks",
				"updated": "20240716194552"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "深拷贝就是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "额外创建"
				},
				{
					"Type": "NodeText",
					"Data": "一个一模一样的变量，并单独开辟一块内存空间存储，\n而拷贝的变量指向的内存空间和原变量指向的内存空间是不同的内存空间\n因此，对深拷贝得到的变量的值进行修改，原来的变量值不会改变"
				}
			]
		},
		{
			"ID": "20240716194516-vynnijm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240716194516-vynnijm",
				"updated": "20240716194522"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "类似于下面的代码就是深拷贝"
				}
			]
		},
		{
			"ID": "20240716194213-xflidag",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240716194213-xflidag",
				"style": "line-height: 22px;",
				"updated": "20240716194512"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "int[] arr3 = { 1, 2, 3, 4 };\nint[] arr4 = new int[4];\nfor (int i = 0; i \u003c arr2.Length; i++)\n{\n    arr4[i] = arr3[i];\n}\nConsole.WriteLine(\"arr3 = {0}, arr4 = {1}\", arr3[0], arr4[0]);\narr4[0] = 100;\nConsole.WriteLine(\"arr3 = {0}, arr4 = {1}\", arr3[0], arr4[0]);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240716180923-8j3d58x",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240716180923-8j3d58x",
				"updated": "20240716194527"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输出："
				}
			]
		},
		{
			"ID": "20240716194527-l7avdhd",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240716194527-l7avdhd",
				"style": "line-height: 22px;",
				"updated": "20240716194539"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "arr3 = 1, arr4 = 1\narr3 = 1, arr4 = 100\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		}
	]
}