{
	"ID": "20240903140336-wo7pbft",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20240903140336-wo7pbft",
		"title": "CS3L17——密封类",
		"type": "doc",
		"updated": "20240904140905"
	},
	"Children": [
		{
			"ID": "20240904140836-h4oiqrm",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240904140836-h4oiqrm",
				"updated": "20240904140905"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "本章代码关键字"
				}
			]
		},
		{
			"ID": "20240904140843-pldfz7s",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240904140843-pldfz7s",
				"style": "line-height: 22px;",
				"updated": "20240904140905"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "sealed\t\t//密封关键字修饰的类，无法再被继承\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240903140336-zk6mrw7",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20240903140336-zk6mrw7",
				"name": "sealed",
				"updated": "20240903140947"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "密封类"
				}
			]
		},
		{
			"ID": "20240903140403-14gk02n",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240903140403-14gk02n",
				"updated": "20240903140413"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "密封类，是使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "sealed"
				},
				{
					"Type": "NodeText",
					"Data": "​ 密封关键字修饰的类，它的作用是：让类无法再继承"
				}
			]
		},
		{
			"ID": "20240903140754-ix5gdgp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240903140754-ix5gdgp",
				"updated": "20240903140854"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在面向对象程序的设计中，密封类的主要作用就是不允许最底层子类被继承，\n可以保证程序的规范性，安全性，未来在制作复杂系统和程序框架时，密封的作用会显现出来。"
				}
			]
		},
		{
			"ID": "20240903140650-vrzf1eg",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240903140650-vrzf1eg",
				"updated": "20240903140947"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "示例"
				}
			]
		},
		{
			"ID": "20240903140658-13zkzqe",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240903140658-13zkzqe",
				"style": "line-height: 22px;",
				"updated": "20240903140947"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "class Father\n{\n\n}\n\nsealed class Son : Father\n{\n    //使用了sealed关键字的类不能被继承\n}\n\n//下面的类就无法继承密封类\n//class Test : Son\n//{\n//}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240903140736-qiud567",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240903140736-qiud567",
				"updated": "20240903140736"
			}
		}
	]
}