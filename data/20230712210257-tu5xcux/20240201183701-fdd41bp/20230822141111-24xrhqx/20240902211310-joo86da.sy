{
	"ID": "20240902211310-joo86da",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20240902211310-joo86da",
		"title": "CS3L11——运算符重载",
		"type": "doc",
		"updated": "20240904140630"
	},
	"Children": [
		{
			"ID": "20240904140612-e9557q4",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240904140612-e9557q4",
				"updated": "20240904140630"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "本章代码关键字"
				}
			]
		},
		{
			"ID": "20240904140617-jlbcy14",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240904140617-jlbcy14",
				"style": "line-height: 22px;",
				"updated": "20240904140630"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "operator\t\t//运算符重载关键字\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240902211310-fxyvl6f",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20240902211310-fxyvl6f",
				"name": "operator",
				"updated": "20240902214018"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "运算符重载"
				}
			]
		},
		{
			"ID": "20240902211347-ene8h9i",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240902211347-ene8h9i",
				"updated": "20240902211405"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "让自定义类和结构体，能够使用运算符，使用关键字 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "operator"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20240902212111-ys1e2vr",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20240902212111-ys1e2vr",
				"updated": "20240902212112"
			},
			"Children": [
				{
					"ID": "20240902212111-1ajfefx",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240902212111-1ajfefx",
						"updated": "20240902212112"
					},
					"Children": [
						{
							"ID": "20240902211347-f12rivp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240902211347-f12rivp",
								"updated": "20240902212112"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "特点：一定是一个公共的静态方法，返回值写在 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "operator"
								},
								{
									"Type": "NodeText",
									"Data": "​ 前，逻辑处理自定义"
								}
							]
						}
					]
				},
				{
					"ID": "20240902212111-rl29zp7",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240902212111-rl29zp7",
						"updated": "20240902212112"
					},
					"Children": [
						{
							"ID": "20240902211347-57udfw2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240902211347-57udfw2",
								"updated": "20240902212112"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "作用：使自定义类和结构体对象可以进行运算"
								}
							]
						}
					]
				},
				{
					"ID": "20240902212111-7e8b2t2",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240902212111-7e8b2t2",
						"updated": "20240902212112"
					},
					"Children": [
						{
							"ID": "20240902212009-rg6k2ex",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240902212009-rg6k2ex",
								"updated": "20240902212112"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "注意：条件运算符需要成对实现，一个符号可以多个重载，不能使用 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "ref"
								},
								{
									"Type": "NodeText",
									"Data": "​ 和 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "out"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240902212005-jx9vx7u",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240902212005-jx9vx7u",
				"updated": "20240902214018"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "运算符重载声明语法和使用"
				}
			]
		},
		{
			"ID": "20240902212909-r09krpx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240902212909-r09krpx",
				"updated": "20240902212914"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "基本语法："
				}
			]
		},
		{
			"ID": "20240902212029-lrumh56",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240902212029-lrumh56",
				"style": "line-height: 22px;",
				"updated": "20240902212033"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public static 返回类型 operator 运算符(参数列表)\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240902212102-qv89fm7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240902212102-qv89fm7",
				"updated": "20240902212927"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "声明和使用示例"
				}
			]
		},
		{
			"ID": "20240902212927-pgzxg9s",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240902212927-pgzxg9s",
				"style": "line-height: 22px;",
				"updated": "20240902213739"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "class Point\n{\n    public int x;\n    public int y;\n    //注意 运算符重载的两个参数的类型 至少要有一个 是当前所在的类，例如，两个参数类型都是int这种情况就不允许\n    public static Point operator +(Point p1, Point p2)\n    {\n        Point p = new Point();\n        p.x = p1.x + p2.x;\n        p.y = p1.y + p2.y;\n        return p;\n    }\n\n    //注意 这样只能实现 类的实例化对象 + int值，而不能做到 int值 + 类的实例化对象，如果要实现需要自行再重载运算符，代码如下\n    public static Point operator +(int value, Point p1)\n    {\n        Point p = new Point();\n        p.x = p1.x + value;\n        p.y = p1.y + value;\n        return p;\n    }\n\n    public static Point operator +(Point p1, int value)\n    {\n        Point p = new Point();\n        p.x = p1.x + value;\n        p.y = p1.y + value;\n        return p;\n    }\n}\n\ninternal class Program\n{\n    static void Main(string[] args)\n    {\n        Point point1 = new Point();\n        point1.x = 1;\n        point1.y = 1;\n        Point point2 = new Point();\n        point2.x = 2;\n        point2.y = 2;\n\n        Point point3 = point1 + point2;\n\n        Point point4 = point3 + 2;\n        Point point5 = 2 + point4;\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240902214018-7bqjxc2",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240902214018-7bqjxc2",
				"updated": "20240902214305"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可重载的运算符"
				}
			]
		},
		{
			"ID": "20240902214025-4bn0cg2",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20240902214025-4bn0cg2",
				"updated": "20240902214305"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "算数运算符"
				}
			]
		},
		{
			"ID": "20240902214031-7rd3t87",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240902214031-7rd3t87",
				"updated": "20240902214042"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "+ - * / %"
				},
				{
					"Type": "NodeText",
					"Data": "​ 需要两个参数"
				}
			]
		},
		{
			"ID": "20240902214043-essa9ev",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240902214043-essa9ev",
				"style": "line-height: 22px;",
				"updated": "20240902214256"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "class Point\n{\n    public static Point operator +(short value, Point p1)\n    {\n        return null;\n    }\n    public static Point operator -(Point p1, Point p2)\n    {\n        return null;\n    }\n    public static Point operator *(Point p1, Point p2)\n    {\n        return null;\n    }\n    public static Point operator /(Point p1, Point p2)\n    {\n        return null;\n    }\n    public static Point operator %(Point p1, Point p2)\n    {\n        return null;\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240902214210-ywlctnu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240902214210-ywlctnu",
				"updated": "20240902214305"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "++"
				},
				{
					"Type": "NodeText",
					"Data": "​ 和 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "--"
				},
				{
					"Type": "NodeText",
					"Data": "​ 只能有一个参数"
				}
			]
		},
		{
			"ID": "20240902214226-25f9l4a",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240902214226-25f9l4a",
				"style": "line-height: 22px;",
				"updated": "20240902214248"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "class Point\n{\n    public static Point operator ++(Point p1)\n    {\n        return null;\n    }\n    public static Point operator --(Point p1)\n    {\n        return null;\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240902214100-evv2zbw",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20240902214100-evv2zbw",
				"updated": "20240902214444"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "逻辑运算符"
				}
			]
		},
		{
			"ID": "20240902214358-0fjlbo4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240902214358-0fjlbo4",
				"updated": "20240902214406"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "只有非 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "!"
				},
				{
					"Type": "NodeText",
					"Data": "​ 可以运算符重载"
				}
			]
		},
		{
			"ID": "20240902214113-9io65gd",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240902214113-9io65gd",
				"style": "line-height: 22px;",
				"updated": "20240902214444"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "class Point\n{\n    public static Point operator !(Point p1)\n    {\n        return null;\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240902214108-o0sr4ho",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20240902214108-o0sr4ho",
				"updated": "20240902214744"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "位运算符"
				}
			]
		},
		{
			"ID": "20240902214452-4hfqu9n",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240902214452-4hfqu9n",
				"updated": "20240902214508"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "位或 位与 异或 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "| \u0026amp; ^"
				},
				{
					"Type": "NodeText",
					"Data": "​ 需要两个参数"
				}
			]
		},
		{
			"ID": "20240902214428-6zuisxr",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240902214428-6zuisxr",
				"style": "line-height: 22px;",
				"updated": "20240902214531"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "class Point\n{\n    public static Point operator |(Point p1, Point p2)\n    {\n        return null;\n    }\n    public static Point operator \u0026(Point p1, Point p2)\n    {\n        return null;\n    }\n    public static Point operator ^(Point p1, Point p2)\n    {\n        return null;\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240902214516-skj7b96",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240902214516-skj7b96",
				"updated": "20240902214553"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "取反 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "~"
				},
				{
					"Type": "NodeText",
					"Data": "​ 只需要一个参数"
				}
			]
		},
		{
			"ID": "20240902214517-77d1k2e",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240902214517-77d1k2e",
				"style": "line-height: 22px;",
				"updated": "20240902214613"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "class Point\n{\n    public static Point operator ~(Point p1)\n    {\n        return null;\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240902214538-qi7qssg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240902214538-qi7qssg",
				"updated": "20240902214546"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "左移 右移 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "\u0026lt;\u0026lt; \u0026gt;\u0026gt;"
				},
				{
					"Type": "NodeText",
					"Data": "​ 需要一个任意类型和int类型为参数"
				}
			]
		},
		{
			"ID": "20240902214559-rwooy9f",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240902214559-rwooy9f",
				"style": "line-height: 22px;",
				"updated": "20240902214744"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "class Point\n{\n    //左移 右移 需要一个任意类型和int类型为参数\n    public static Point operator \u003c\u003c(Point p1, int value)\n    {\n        return null;\n    }\n    public static Point operator \u003e\u003e(Point p1, int value)\n    {\n        return null;\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240902214622-uz5gek5",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20240902214622-uz5gek5",
				"updated": "20240902214756"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "条件运算符"
				}
			]
		},
		{
			"ID": "20240902214708-6fjpj8n",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240902214708-6fjpj8n",
				"updated": "20240902214732"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注意 条件运算符需要成对实现 即 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "\u0026lt;"
				},
				{
					"Type": "NodeText",
					"Data": "​ 对 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "\u0026gt;"
				},
				{
					"Type": "NodeText",
					"Data": "​ , "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "\u0026lt;="
				},
				{
					"Type": "NodeText",
					"Data": "​ 对 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "\u0026gt;="
				},
				{
					"Type": "NodeText",
					"Data": "​ , "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "=="
				},
				{
					"Type": "NodeText",
					"Data": "​ 对 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "!="
				},
				{
					"Type": "NodeText",
					"Data": "​，返回值一般是 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "bool"
				},
				{
					"Type": "NodeText",
					"Data": "​，但也允许是其他类型"
				}
			]
		},
		{
			"ID": "20240902214641-uy91a6d",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240902214641-uy91a6d",
				"style": "line-height: 22px;",
				"updated": "20240902214752"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "class Point\n{\n    //注意 条件运算符需要成对实现 即 \u003c 对 \u003e , \u003c= 对 \u003e= , == 对 !=\n    //返回值一般是bool，但也允许是其他类型\n    public static bool operator \u003c(Point p1, Point p2)\n    {\n        return false;\n    }\n    public static bool operator \u003e(Point p1, Point p2)\n    {\n        return false;\n    }\n    public static bool operator \u003c=(Point p1, Point p2)\n    {\n        return false;\n    }\n    public static bool operator \u003e=(Point p1, Point p2)\n    {\n        return false;\n    }\n    public static bool operator ==(Point p1, Point p2)\n    {\n        return false;\n    }\n    public static bool operator !=(Point p1, Point p2)\n    {\n        return false;\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240902214756-nmg4ep7",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240902214756-nmg4ep7",
				"updated": "20240902214923"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "不可重载的运算符"
				}
			]
		},
		{
			"ID": "20240902214807-5r7d215",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20240902214807-5r7d215",
				"updated": "20240902214923"
			},
			"Children": [
				{
					"ID": "20240902214833-12cmmlr",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240902214833-12cmmlr",
						"updated": "20240902214923"
					},
					"Children": [
						{
							"ID": "20240902214833-2qhzyuq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240902214833-2qhzyuq",
								"updated": "20240902214923"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "逻辑与 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "\u0026amp;\u0026amp;"
								},
								{
									"Type": "NodeText",
									"Data": "​   逻辑或 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "||"
								},
								{
									"Type": "NodeText",
									"Data": "​\n"
								}
							]
						}
					]
				},
				{
					"ID": "20240902214834-xn9v97u",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240902214834-xn9v97u",
						"updated": "20240902214834"
					},
					"Children": [
						{
							"ID": "20240902214834-mtee5u3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240902214834-mtee5u3",
								"updated": "20240902214834"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "索引符 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "[]"
								},
								{
									"Type": "NodeText",
									"Data": "​\n"
								}
							]
						}
					]
				},
				{
					"ID": "20240902214834-ogyliwk",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240902214834-ogyliwk",
						"updated": "20240902214834"
					},
					"Children": [
						{
							"ID": "20240902214834-jszbzkk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240902214834-jszbzkk",
								"updated": "20240902214834"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "强转运算符 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "()"
								},
								{
									"Type": "NodeText",
									"Data": "​\n"
								}
							]
						}
					]
				},
				{
					"ID": "20240902214835-de9olpq",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240902214835-de9olpq",
						"updated": "20240902214840"
					},
					"Children": [
						{
							"ID": "20240902214835-8l0bgyi",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240902214835-8l0bgyi",
								"updated": "20240902214840"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "特殊运算符：点 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "."
								},
								{
									"Type": "NodeText",
									"Data": "​ 、三目运算符 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "? :"
								},
								{
									"Type": "NodeText",
									"Data": "​ 、赋值符号 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "="
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						}
					]
				}
			]
		}
	]
}