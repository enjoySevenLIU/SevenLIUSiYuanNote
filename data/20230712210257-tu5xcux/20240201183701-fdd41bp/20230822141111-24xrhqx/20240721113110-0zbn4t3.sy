{
	"ID": "20240721113110-0zbn4t3",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20240721113110-0zbn4t3",
		"title": "CS3L2——类和对象",
		"type": "doc",
		"updated": "20240904215711"
	},
	"Children": [
		{
			"ID": "20240904135856-1eeclxs",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240904135856-1eeclxs",
				"updated": "20240904135937"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "本章代码关键字"
				}
			]
		},
		{
			"ID": "20240904135905-jcvkgyo",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240904135905-jcvkgyo",
				"style": "line-height: 22px;",
				"updated": "20240904135937"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "class\t\t//类声明关键字\nnew\t\t\t//实例化关键字\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240721113110-bko3hcu",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20240721113110-bko3hcu",
				"name": "class",
				"updated": "20240904215711"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "类"
				}
			]
		},
		{
			"ID": "20240721113128-t1rohrf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240721113128-t1rohrf",
				"updated": "20240902125252"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "具有相同特征，相同行为的一类事物的抽象，类是对象的模板，可以通过类来创造对象"
				}
			]
		},
		{
			"ID": "20240721113148-v2kfdyk",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20240721113148-v2kfdyk",
				"updated": "20240721113325"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20240721113148-1gcdwp4",
					"Type": "NodeHeading",
					"HeadingLevel": 2,
					"Properties": {
						"id": "20240721113148-1gcdwp4",
						"updated": "20240721113325"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "何为抽象"
						}
					]
				},
				{
					"ID": "20240721113212-n73zq4x",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20240721113212-n73zq4x",
						"updated": "20240721113325"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "抽象是从众多的事物中抽取出共同的、本质性的特征，而舍弃其非本质的特征的过程。\n例如：从众多的人中抽取出：姓名、肤色、国籍、性别、年龄、身高、体重等等的共同的特征"
						}
					]
				}
			]
		},
		{
			"ID": "20240721113144-wx03qbd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240721113144-wx03qbd",
				"updated": "20240721113146"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "类的关键词是 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "class"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20240902125255-yi1itbo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240902125255-yi1itbo",
				"updated": "20240902125255"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "类的申明 和 类对象的申明是两个概念\n类的声明 是申明对象的模板 用来抽象（形容）显示事物的\n类对象的申明 是用来表示现实中的对象个体的"
				}
			]
		},
		{
			"ID": "20240902125255-gthnyol",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240902125255-gthnyol",
				"updated": "20240902125310"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "类是一个自定义的变量类型，实例化一个类对象是申明变量"
				}
			]
		},
		{
			"ID": "20240904215649-3waoj83",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240904215649-3waoj83",
				"updated": "20240904215711"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "类与结构体的区别，详见："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20240904214910-oks5htj",
					"TextMarkBlockRefSubtype": "d",
					"TextMarkTextContent": "CS3L26——结构体和类的区别"
				}
			]
		},
		{
			"ID": "20240721113403-jve3yud",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240721113403-jve3yud",
				"updated": "20240902124420"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "类声明在哪里以及声明语法"
				}
			]
		},
		{
			"ID": "20240721113407-pa8wfzc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240721113407-pa8wfzc",
				"updated": "20240721113431"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "类 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "class"
				},
				{
					"Type": "NodeText",
					"Data": "​ 申明在 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "namespace"
				},
				{
					"Type": "NodeText",
					"Data": "​ 内"
				}
			]
		},
		{
			"ID": "20240721113422-ghj7tfy",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240721113422-ghj7tfy",
				"style": "line-height: 22px;",
				"updated": "20240721113450"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "namespace lesson1类和对象\n{\n    class 类名    //可加访问修饰符\n    {\n        //特征——成员变量\n        //行为——成员方法\n        //保护特征——成员特性\n\n        //构造函数和析构函数\n        //索引器\n        //运算符重载\n        //静态成员\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240721113453-a0gziq8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240721113453-a0gziq8",
				"updated": "20240902124315"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "类声明示例"
				}
			]
		},
		{
			"ID": "20240902124315-qxg3xut",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240902124315-qxg3xut",
				"style": "line-height: 22px;",
				"updated": "20240902124330"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "class Person    //用来形容人类\n{\n    //类名命名用帕斯卡命名法\n    //同一个语句块里不同类不可以重名！！\n}\n\nclass Machine   //用来形容机器\n{\n\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240902124420-rn2ddcq",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240902124420-rn2ddcq",
				"updated": "20240902124807"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "（类）对象"
				}
			]
		},
		{
			"ID": "20240902124438-ki3axbq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240902124438-ki3axbq",
				"updated": "20240902124515"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "类的声明 和 类对象（变量）声明是两个概念\n类的声明 类似与 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20231107222919-bbe1w8t",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "枚举"
				},
				{
					"Type": "NodeText",
					"Data": " 和 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20240720221741-bsl0nh5",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "结构体"
				},
				{
					"Type": "NodeText",
					"Data": " 的声明 相当于申明了一个"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "自定义变量类型"
				}
			]
		},
		{
			"ID": "20240902124519-tv8akkt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240902124519-tv8akkt",
				"updated": "20240902124807"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "而 对象 是类创建出来的，相当于申明一个指定类的变量\n类创建对象的过程 一般称为 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "实例化对象"
				},
				{
					"Type": "NodeText",
					"Data": "\n类对象 都是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20240716174128-u7og3r7",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "引用类型"
				},
				{
					"Type": "NodeText",
					"Data": "的（和数组，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "string"
				},
				{
					"Type": "NodeText",
					"Data": "​ 一样）（注意！结构体是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20240716174128-u7og3r7",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "值类型"
				},
				{
					"Type": "NodeText",
					"Data": "！！！)"
				}
			]
		},
		{
			"ID": "20240902124546-cc9b0mt",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240902124546-cc9b0mt",
				"updated": "20240902124618"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "实例化对象基本语法"
				}
			]
		},
		{
			"ID": "20240902124556-2d4byey",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240902124556-2d4byey",
				"style": "line-height: 22px;",
				"updated": "20240902124617"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "类名 变量名;\n类名 变量名 = null;\t// null代表空\n类名 变量名 = new 类名();\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240902124618-cgjl5f2",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240902124618-cgjl5f2",
				"updated": "20240902125449"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "实例化对象"
				}
			]
		},
		{
			"ID": "20240902124639-he9ewpo",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240902124639-he9ewpo",
				"style": "line-height: 22px;",
				"updated": "20240902125235"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Person p;   \t\t\t\t//相当于在栈空间已经开了一个房间，里面是 null，没有在堆上分配空间\nPerson p2 = null;   \t\t//等同于上面的代码\n\nPerson p3 = new Person();   //相当于在栈空间开了一个房间，在堆上也分配了空间，栈空间指向堆内存内的空间\nPerson p4 = new Person();   //相当于一个 人 对象，和 p3 指向的数据不同\nPerson p5 = new Person();   //相当于又创建了一个 人 对象，和 p3，p4 指向的数据不同\n\nMachine m = new Machine();\nMachine m2 = new Machine();\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240902124840-xmx4hbw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240902124840-xmx4hbw",
				"updated": "20240902125045"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这里的 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "p3"
				},
				{
					"Type": "NodeText",
					"Data": "​、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "p4"
				},
				{
					"Type": "NodeText",
					"Data": "​、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "p5"
				},
				{
					"Type": "NodeText",
					"Data": "​ 在栈上存储着指向堆空间的地址，它们指向不同的地址！"
				}
			]
		},
		{
			"ID": "20240902124703-60hoo52",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20240902124703-60hoo52",
				"style": "background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);",
				"updated": "20240902125034"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20240902124719-b7121cp",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20240902124719-b7121cp",
						"updated": "20240902125034"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "注意！它们虽然来自一个类的实例化 但是他们的特征 行为 等信息 都是他们独有的\n千万不要认为他们共享了数据，"
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "u",
							"TextMarkTextContent": "同类不同对象 彼此在内存里没有任何关系！！！"
						}
					]
				}
			]
		},
		{
			"ID": "20240902124731-dgw9tkx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240902124731-dgw9tkx",
				"updated": "20240902125138"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "面向对象编程类似于女娲造人，想要什么对象就 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "new"
				},
				{
					"Type": "NodeText",
					"Data": "​ 一个对象，一切的对象都是由我们控制的"
				}
			]
		},
		{
			"ID": "20240902125415-730vdgl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240902125415-730vdgl",
				"updated": "20240902125449"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "目前示例化出来的对象还什么都不能调用，因为我们没有在类声明的时候声明成员，后续我们会学习这些内容"
				}
			]
		}
	]
}