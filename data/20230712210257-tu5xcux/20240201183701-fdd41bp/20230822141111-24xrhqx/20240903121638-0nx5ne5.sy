{
	"ID": "20240903121638-0nx5ne5",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20240903121638-0nx5ne5",
		"title": "CS3L13——继承的基本规则",
		"type": "doc",
		"updated": "20240903123915"
	},
	"Children": [
		{
			"ID": "20240903121638-81rigwk",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20240903121638-81rigwk",
				"updated": "20240903123915"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "继承"
				}
			]
		},
		{
			"ID": "20240903121730-fmlgdmm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240903121730-fmlgdmm",
				"updated": "20240903121830"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一个类A 可以继承 另一个类B，继承的类A 会继承 被继承的类B 的所有成员，继承的类A 会拥有 被继承的类B 的所有特征和行为"
				}
			]
		},
		{
			"ID": "20240903121730-fdel2g6",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20240903121730-fdel2g6",
				"updated": "20240903121843"
			},
			"Children": [
				{
					"ID": "20240903121802-htasp6i",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240903121802-htasp6i",
						"updated": "20240903121841"
					},
					"Children": [
						{
							"ID": "20240903121802-023d1w4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240903121802-023d1w4",
								"updated": "20240903121841"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "被继承的类可以称为："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "u",
									"TextMarkTextContent": "父类、基类"
								},
								{
									"Type": "NodeText",
									"Data": "、超类"
								}
							]
						}
					]
				},
				{
					"ID": "20240903121803-y94yd36",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240903121803-y94yd36",
						"updated": "20240903121843"
					},
					"Children": [
						{
							"ID": "20240903121803-9w2kl5r",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240903121803-9w2kl5r",
								"updated": "20240903121843"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "继承的类可以称为："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "u",
									"TextMarkTextContent": "子类、派生类"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240903121730-db7azph",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240903121730-db7azph",
				"updated": "20240903121730"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "子类可以有自己的特征和行为"
				}
			]
		},
		{
			"ID": "20240903121730-3jutfd8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240903121730-3jutfd8",
				"updated": "20240903121816"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "特点"
				}
			]
		},
		{
			"ID": "20240903121816-9wxcjvq",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20240903121816-9wxcjvq",
				"updated": "20240903121911"
			},
			"Children": [
				{
					"ID": "20240903121816-jlw1h9a",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240903121816-jlw1h9a",
						"updated": "20240903121909"
					},
					"Children": [
						{
							"ID": "20240903121816-v8q4aoz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240903121816-v8q4aoz",
								"updated": "20240903121909"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "单根性：C#的子类只能有一个父类"
								}
							]
						}
					]
				},
				{
					"ID": "20240903121816-5sxifws",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240903121816-5sxifws",
						"updated": "20240903121911"
					},
					"Children": [
						{
							"ID": "20240903121816-n024u4t",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240903121816-n024u4t",
								"updated": "20240903121911"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "传递性：子类可以间接继承父类的父类"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240903121927-24ioogy",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240903121927-24ioogy",
				"updated": "20240903122055"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "继承基本语法"
				}
			]
		},
		{
			"ID": "20240903121931-aqao8lj",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240903121931-aqao8lj",
				"style": "line-height: 22px;",
				"updated": "20240903121939"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "class 类名 : 被继承的类名\n{\n  \n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240903123915-5yiv013",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240903123915-5yiv013",
				"updated": "20240903123915"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "访问修饰符的影响"
				}
			]
		},
		{
			"ID": "20240903123915-vwk8d79",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20240903123915-vwk8d79",
				"updated": "20240903123915"
			},
			"Children": [
				{
					"ID": "20240903123915-ouv5t87",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240903123915-ouv5t87",
						"updated": "20240903123915"
					},
					"Children": [
						{
							"ID": "20240903123915-devyfrz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240903123915-devyfrz",
								"updated": "20240903123915"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "public"
								},
								{
									"Type": "NodeText",
									"Data": "​ - 公共 内外部访问"
								}
							]
						}
					]
				},
				{
					"ID": "20240903123915-kl5779f",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240903123915-kl5779f",
						"updated": "20240903123915"
					},
					"Children": [
						{
							"ID": "20240903123915-4uf8pv6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240903123915-4uf8pv6",
								"updated": "20240903123915"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "private"
								},
								{
									"Type": "NodeText",
									"Data": "​ - 私有 内部访问"
								}
							]
						}
					]
				},
				{
					"ID": "20240903123915-1z3asvw",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240903123915-1z3asvw",
						"updated": "20240903123915"
					},
					"Children": [
						{
							"ID": "20240903123915-8ljb7h9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240903123915-8ljb7h9",
								"updated": "20240903123915"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "protected"
								},
								{
									"Type": "NodeText",
									"Data": "​ - 保护 内部和子类访问"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240903123915-tw7peue",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240903123915-tw7peue",
				"updated": "20240903123915"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在命名空间讲到："
				}
			]
		},
		{
			"ID": "20240903123915-pvgcqy6",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20240903123915-pvgcqy6",
				"updated": "20240903123915"
			},
			"Children": [
				{
					"ID": "20240903123915-xjojyt6",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240903123915-xjojyt6",
						"updated": "20240903123915"
					},
					"Children": [
						{
							"ID": "20240903123915-18ni156",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240903123915-18ni156",
								"updated": "20240903123915"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "internal"
								},
								{
									"Type": "NodeText",
									"Data": "​ - 内部的 只有在同一个项目程序集的文件中，内部类型或者是成员才可以访问"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240903122055-8v8py2k",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240903122055-8v8py2k",
				"updated": "20240903122713"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "继承使用实例"
				}
			]
		},
		{
			"ID": "20240903122239-cystk59",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240903122239-cystk59",
				"updated": "20240903122315"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果与基类的成员重名会导致基类的成员被隐藏，这不是好的写法，\n如果有意覆盖需要在变量类型前加上 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "new"
				},
				{
					"Type": "NodeText",
					"Data": "​，但即使这样也不建议这样写，这种写法仍然不好"
				}
			]
		},
		{
			"ID": "20240903122103-rcm0m3i",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240903122103-rcm0m3i",
				"style": "line-height: 22px;",
				"updated": "20240903122456"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "class Teacher\n{\n    public string name;\n    public int number;\n    protected int age;\t//protected是保护，意味着这个成员只能在 类 以及 它的子类内使用了\n    private bool sex;\t//private是私有，意味着这个成员只能在类里使用，子类不能使用\n  \n    public void SpeakName()\n    {\n        Console.WriteLine(name);\n    }\n}\n\nclass TeachingTeacher : Teacher\n{\n  \n    public string subject;\t\t//科目\n  \n    public void SpeakSubject()\n    {\n        Console.WriteLine(subject + \"老师\" + age);\t// protected 可以在子类使用，而 private 只能不能在类使用\n    }\n}\n\n//C#的类是具有单根性的，也就是说只能继承一个类，派生类的派生类可以继承到基类的成员\nclass ChineseTeacher : TeachingTeacher\n{\n    //如果与基类的成员重名会导致基类的成员被隐藏，这不是好的写法，如果有意覆盖需要在变量类型前加上new\n    //但即使这样也不建议这样写 这种写法仍然不好\n    public new string name;\n    public void Skill()\n    {\n        Console.WriteLine(\"语文老师的技能\");\n    }\n}\n\ninternal class Program\n{\n    static void Main(string[] args)\n    {\n        TeachingTeacher tt = new TeachingTeacher();\n        //派生类可以使用基类的成员和方法\n        tt.name = \"liuqi\";\n        tt.number = 1;\n        tt.SpeakName();\n        //派生类可以使用自己声明的成员和方法\n        tt.subject = \"unity\";\n        tt.SpeakSubject();\n\n        //派生类的派生类可以用基类的方法，派生类的方法\n        ChineseTeacher ct = new ChineseTeacher();\n        ct.name = \"liuqi\";\n        ct.number = 2;\n        ct.SpeakName();\n        ct.SpeakSubject();\n        ct.Skill();\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240903122353-bodab4n",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240903122353-bodab4n",
				"updated": "20240903122357"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输出："
				}
			]
		},
		{
			"ID": "20240903122357-5sxtiej",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240903122357-5sxtiej",
				"style": "line-height: 22px;",
				"updated": "20240903122452"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "MrTang\nunity老师0\n\n老师0\n语文老师的技能\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		}
	]
}