{
	"ID": "20240721111208-40vmqdg",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20240721111208-40vmqdg",
		"title": "CS3L1——面向对象的概念",
		"type": "doc",
		"updated": "20240721113001"
	},
	"Children": [
		{
			"ID": "20240721111208-te749y5",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240721111208-te749y5",
				"updated": "20240721111651"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "面向过程编程"
				}
			]
		},
		{
			"ID": "20240721111521-7afqo2b",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240721111521-7afqo2b",
				"updated": "20240721111617"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "面向过程编程是一种"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "以过程为中心"
				},
				{
					"Type": "NodeText",
					"Data": "的编程思想，分析出解决问题所需要的步骤，\n然后用函数把步骤一步一步实现，使用的时候一个一个依次调用"
				}
			]
		},
		{
			"ID": "20240721111645-6hnqp2k",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240721111645-6hnqp2k",
				"updated": "20240721113001"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "面向对象编程"
				}
			]
		},
		{
			"ID": "20240721111655-t351lpu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240721111655-t351lpu",
				"updated": "20240721111730"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "面向对象是一种"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "对现实世界理解和抽象"
				},
				{
					"Type": "NodeText",
					"Data": "的编程方法\n"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "把相关的数据和方法组织为一个整体来看待"
				},
				{
					"Type": "NodeText",
					"Data": "，从更高的层次来进行程序开发，更贴近事物的自然运行模式"
				}
			]
		},
		{
			"ID": "20240721111725-jh08cdj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240721111725-jh08cdj",
				"updated": "20240721111815"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "简单来说就是：万物皆对象，用程序来抽象（形容）对象，用面向对象的思想来编程"
				}
			]
		},
		{
			"ID": "20240721111815-l2mpvx7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240721111815-l2mpvx7",
				"updated": "20240721111913"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "例如，一个人即可抽象为一个包含：姓名、肤色、国籍、性别、年龄、身高、体重等等的对象"
				}
			]
		},
		{
			"ID": "20240721112016-k8vcse1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240721112016-k8vcse1",
				"updated": "20240721112033"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "套路：用中文去形容一类对象，把一类对象的共同点提取出来，然后用程序语言把它翻译过来，带着对象的概念在程序中使用它们"
				}
			]
		},
		{
			"ID": "20240721112938-c57g88t",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240721112938-c57g88t",
				"updated": "20240721113001"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "面向对象编程是最核心的知识点都是基于面向对象编程思想来制作的\n毫不夸张的说，学好了面向对象编程。你可以做任何事！\n游戏，软件，网站等等应用层面上的程序，都是基于面向对象编程思想来制作的"
				}
			]
		},
		{
			"ID": "20240721112112-t7z7qgb",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240721112112-t7z7qgb",
				"updated": "20240721112239"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "为何要学习面向对象编程"
				}
			]
		},
		{
			"ID": "20240721112122-hhvcx09",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20240721112122-hhvcx09",
				"updated": "20240721112146"
			},
			"Children": [
				{
					"ID": "20240721112123-nzzia5k",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240721112123-nzzia5k",
						"updated": "20240721112123"
					},
					"Children": [
						{
							"ID": "20240721112123-vq9di6i",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240721112123-vq9di6i",
								"updated": "20240721112128"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "提高代码复用率"
								}
							]
						}
					]
				},
				{
					"ID": "20240721112129-ve97qeu",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240721112129-ve97qeu"
					},
					"Children": [
						{
							"ID": "20240721112129-1nyycrg",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240721112129-1nyycrg",
								"updated": "20240721112133"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "提高开发效率"
								}
							]
						}
					]
				},
				{
					"ID": "20240721112133-mvcqjr8",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240721112133-mvcqjr8"
					},
					"Children": [
						{
							"ID": "20240721112133-kyp84r2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240721112133-kyp84r2",
								"updated": "20240721112140"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "提高程序可拓展性"
								}
							]
						}
					]
				},
				{
					"ID": "20240721112140-4fuasof",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240721112140-4fuasof",
						"updated": "20240721112146"
					},
					"Children": [
						{
							"ID": "20240721112140-rd0fzb0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240721112140-rd0fzb0",
								"updated": "20240721112146"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "清晰的逻辑关系"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240721112231-y7z0ro7",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240721112231-y7z0ro7",
				"updated": "20240721112832"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如何学习面向对象"
				}
			]
		},
		{
			"ID": "20240721112239-1a8hz6k",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240721112239-1a8hz6k",
				"updated": "20240721112318"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "面向对象的关键知识是：类（"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "class"
				},
				{
					"Type": "NodeText",
					"Data": "​ 关键字）"
				}
			]
		},
		{
			"ID": "20240721112319-8uibhzk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240721112319-8uibhzk",
				"updated": "20240721112511"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "类 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "class"
				},
				{
					"Type": "NodeText",
					"Data": "​ 可以封装一系列的成员变量，成员方法，表示一类对象，\n例如，人的类就包括：姓名、肤色、国籍等变量作为人的消息，包括说话，走动等方法作为人的行为"
				}
			]
		},
		{
			"ID": "20240721112513-4foawv8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240721112513-4foawv8",
				"updated": "20240721112532"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "面向对象包括三大特性：封装、继承、多态"
				}
			]
		},
		{
			"ID": "20240721112533-txxxmu0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240721112533-txxxmu0",
				"updated": "20240721112627"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "面向对象包括七大原则：开闭原则、依赖倒转原则、里氏替换原则、单一职责原则、接口隔离原则、合成复用原则、迪米特原则"
				}
			]
		},
		{
			"ID": "20240721112700-u4ota57",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240721112700-u4ota57",
				"updated": "20240721112713"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "学习重点就是：面向对象三大特性"
				}
			]
		},
		{
			"ID": "20240721112713-2ytic97",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20240721112713-2ytic97",
				"updated": "20240721112832"
			},
			"Children": [
				{
					"ID": "20240721112714-y7n40yf",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240721112714-y7n40yf",
						"updated": "20240721112714"
					},
					"Children": [
						{
							"ID": "20240721112714-gdm3vx8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240721112714-gdm3vx8",
								"updated": "20240721112726"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "封装：用程序语言来形容对象"
								}
							]
						}
					]
				},
				{
					"ID": "20240721112726-x8bfiu6",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240721112726-x8bfiu6"
					},
					"Children": [
						{
							"ID": "20240721112726-wo7xcui",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240721112726-wo7xcui",
								"updated": "20240721112800"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "继承：复用封装对象的代码，子类继承父类，复用现成代码"
								}
							]
						}
					]
				},
				{
					"ID": "20240721112800-gi8h8gb",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240721112800-gi8h8gb",
						"updated": "20240721112832"
					},
					"Children": [
						{
							"ID": "20240721112800-g4bf6y1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240721112800-g4bf6y1",
								"updated": "20240721112832"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "多态：同样行为的不同表现，子类继承父类的方法但是方法的行为不同"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240721112359-b25nxfp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240721112359-b25nxfp"
			}
		}
	]
}