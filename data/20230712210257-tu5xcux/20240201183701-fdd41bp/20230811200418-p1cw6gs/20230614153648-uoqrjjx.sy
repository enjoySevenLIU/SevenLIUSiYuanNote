{
	"ID": "20230614153648-uoqrjjx",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"custom-github-Hexo-yaml": "---_esc_newline_title: CS1L2——变量_esc_newline_date: '2023-06-14 15:36:48'_esc_newline_updated: '2024-07-01 21:56:59'_esc_newline_permalink: /post/cs1l2-variable-z2awnhq.html_esc_newline_comments: true_esc_newline_toc: true_esc_newline_categories:_esc_newline_  - C#_esc_newline_  - C#入门系列_esc_newline_---",
		"id": "20230614153648-uoqrjjx",
		"scroll": "\u0026#123;\u0026quot;rootId\u0026quot;:\u0026quot;20230614153648-uoqrjjx\u0026quot;,\u0026quot;startId\u0026quot;:\u0026quot;20230811203039-3ui0u0m\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20230614163958-2eswxgs\u0026quot;,\u0026quot;scrollTop\u0026quot;:2521,\u0026quot;focusId\u0026quot;:\u0026quot;20231107202334-sydn89f\u0026quot;,\u0026quot;focusStart\u0026quot;:0,\u0026quot;focusEnd\u0026quot;:0\u0026#125;",
		"title": "CS1L2——变量",
		"type": "doc",
		"updated": "20240701220611"
	},
	"Children": [
		{
			"ID": "20230811203039-3ui0u0m",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230811203039-3ui0u0m",
				"updated": "20240701220611"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "关键字"
				}
			]
		},
		{
			"ID": "20230811203054-p4gi3qg",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230811203054-p4gi3qg",
				"updated": "20230811203235"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "#region \n#endregion    //上下两句组成代码块折叠的预处理器语句，只在VS编辑器有效果\n//1、有符号的整形变量 能存储一定范围内的正负数包括0的变量类型\nsbyte sb = 1; // -128~127\nint i = 1;  //  -21亿~21亿\nshort s = 1;    //  -32768~32767\nlong l = 1;    //  -九百万兆~九百万兆\n//2、无符号的整型变量 能存储一定范围内0和正数的变量类型\nbyte b = 1;    //  0~255\nuint ui = 1;    //  0~42亿\nushort us = 1;  //  0~65535\nulong ul = 1;   //  0~18百万兆\n//3、浮点数（小数）\nfloat f = 0.1f;    // 数字后必须加f声明float，因为小数会被默认为double，从非0数算起为有效数字，7/8位有效数字，根据编译器不同有可能不同，超出部分会四舍五入\ndouble d = 0.1;    // 从非0数算起为有效数字，15~17位有效数字，超出部分会四舍五入\ndecimal de = 0.1m;    // 数字后必须加m声明，因为小数会被默认为double，27~28位有效数字，不建议使用\n//4、特殊类型\nbool bo = true; //  true或者false\nchar c = 'a';   //  需要加'',单个字符\nstring st = \"hello\";    //  需要加\"\",字符串\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230614162905-oyge0mn",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20230614162905-oyge0mn",
				"updated": "20240701220611"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "变量"
				}
			]
		},
		{
			"ID": "20230614161726-pnk9fd8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230614161726-pnk9fd8",
				"updated": "20240701220524"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "变量可以变化的容器，就是用来存储各种不同类型数值的一个容器\n不同的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20230614162908-v5k82nx",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "变量类型"
				},
				{
					"Type": "NodeText",
					"Data": "可以存储不同的类型的值"
				}
			]
		},
		{
			"ID": "20230614160508-kohz7dm",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230614160508-kohz7dm",
				"updated": "20230710232915"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "//变量类型固定格式：\n//变量类型 变量名 = 初始值;\nint i = 10;\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230614165402-qsyowmm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230614165402-qsyowmm",
				"updated": "20240616132155"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "变量名可以用中文命名，但是不建议使用，在某些环境下很可能会显示乱码，错误等\n"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "一个类的内部的两个变量不允许重名！\n变量的使用和修改，不能无中生有，必须要先声明才能用"
				}
			]
		},
		{
			"ID": "20230614155843-mtxq9xs",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230614155843-mtxq9xs",
				"name": "#region",
				"updated": "20240701220611"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "#region 折叠代码"
				}
			]
		},
		{
			"ID": "20230614155728-fwxmc7r",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230614155728-fwxmc7r",
				"updated": "20230614160504"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "#region 折叠块代码名字\n    //被折叠的代码块 在VS的编辑器页面可以折叠其中的内容\n    //#region与#endregion配对使用\n#endregion\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230614160025-1aemzp8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230614160025-1aemzp8",
				"updated": "20230614160659"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "主要作用是：让我们编程时逻辑更加清晰\n本质是 编辑器提供给我们的 预处理指令\n它只会在编辑时有用，发布代码和执行代码就会被自动删除"
				}
			]
		},
		{
			"ID": "20230614165331-6j5m26j",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230614165331-6j5m26j",
				"updated": "20240701220611"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "多个相同类型变量同时申明"
				}
			]
		},
		{
			"ID": "20230614165434-r1ttl21",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230614165434-r1ttl21",
				"updated": "20230614165806"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "int i2 = 1;\nfloat f2 = 3.2f;\nstring str2 = \"123\";\nbool bo3 = true;\n//多个同类型变量声明\n//变量类型 变量名 = 初始值, 变量名 = 初始值, 变量名 = 初始值, 变量名 = 初始值...\nint a1 = 1, b1 = 2, c1 = 3, d1 = 4; \nstring s1 = \"123\", s2 = \"234\";\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230614165914-p54xqeh",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230614165914-p54xqeh",
				"updated": "20240701220611"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "变量初始化相关"
				}
			]
		},
		{
			"ID": "20230614165940-pjl7j9c",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230614165940-pjl7j9c",
				"updated": "20230614170015"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "变量申明时 可以不设置初始值 但是不建议这样写 因为不安全 可能报错"
				}
			]
		},
		{
			"ID": "20230614162908-v5k82nx",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230614162908-v5k82nx",
				"updated": "20240701220611"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "变量类型"
				}
			]
		},
		{
			"ID": "20230614163140-lko6a1b",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230614163140-lko6a1b",
				"updated": "20240701220611"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "变量类型有14种变化，变量名我们自定义要按照一定的规则（"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20230614172636-62jwy1c",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "变量的命名规范"
				},
				{
					"Type": "NodeText",
					"Data": "）\n基本的变量类型可以分为四种大类："
				}
			]
		},
		{
			"ID": "20230614162252-01gbfey",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230614162252-01gbfey",
				"updated": "20230614163943"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "//1、有符号的整形变量 能存储一定范围内的正负数包括0的变量类型\nsbyte sb = 1; // -128~127\nint i = 1;  //  -21亿~21亿\nshort s = 1;    //  -32768~32767\nlong l = 1;    //  -九百万兆~九百万兆\n//2、无符号的整型变量 能存储一定范围内0和正数的变量类型\nbyte b = 1;    //  0~255\nuint ui = 1;    //  0~42亿\nushort us = 1;  //  0~65535\nulong ul = 1;   //  0~18百万兆\n//3、浮点数（小数）\nfloat f = 0.1f;    // 数字后必须加f声明float，因为小数会被默认为double，从非0数算起为有效数字，7/8位有效数字，根据编译器不同有可能不同，超出部分会四舍五入\ndouble d = 0.1;    // 从非0数算起为有效数字，15~17位有效数字，超出部分会四舍五入\ndecimal de = 0.1m;    // 数字后必须加m声明，因为小数会被默认为double，27~28位有效数字，不建议使用\n//4、特殊类型\nbool bo = true; //  true或者false\nchar c = 'a';   //  需要加'',单个字符\nstring st = \"hello\";    //  需要加\"\",字符串\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230614192909-xs3ju9g",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230614192909-xs3ju9g",
				"updated": "20230614192957"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "实际上并不止这些类型，以后的学习就会学到，但是基础的数据类型就是这些"
				}
			]
		},
		{
			"ID": "20230614164826-qw3gftj",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230614164826-qw3gftj",
				"updated": "20230614164909"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "为什么有那么多不同的变量类型"
				}
			]
		},
		{
			"ID": "20230614165025-ilrws4r",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230614165025-ilrws4r",
				"updated": "20230614165025"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "不同的变量 存储的范围和类型不一样 本质是占用的内存空间不同\n选择不同的数据类型装载不同的数据\n例如："
				}
			]
		},
		{
			"ID": "20230614164900-lkoy704",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230614164900-lkoy704",
				"updated": "20230614172501"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "//姓名\nstring myName = \"SevenL\";\n//年龄\nbyte age = 18;\n//身高\nfloat weight = 175.55f\n//性别 true为女 false为男\nbool sex = false;\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230614172636-62jwy1c",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230614172636-62jwy1c",
				"updated": "20230614172647"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "变量的命名规范"
				}
			]
		},
		{
			"ID": "20230614172842-y075btn",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230614172842-y075btn",
				"updated": "20231107202334"
			},
			"Children": [
				{
					"ID": "20231107202334-vsuu6eg",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20231107202334-vsuu6eg",
						"updated": "20231107202334"
					},
					"Children": [
						{
							"ID": "20231107202334-sydn89f",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231107202334-sydn89f",
								"updated": "20231107202334"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "不能重名"
								}
							]
						}
					]
				},
				{
					"ID": "20231107202334-7xh5rbe",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20231107202334-7xh5rbe",
						"updated": "20231107202334"
					},
					"Children": [
						{
							"ID": "20231107202334-gvn3nfk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231107202334-gvn3nfk",
								"updated": "20231107202334"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "不能以数值开头"
								}
							]
						}
					]
				},
				{
					"ID": "20231107202334-7y5kzjm",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20231107202334-7y5kzjm",
						"updated": "20231107202334"
					},
					"Children": [
						{
							"ID": "20231107202334-j4ampkg",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231107202334-j4ampkg",
								"updated": "20231107202334"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "不能用程序关键字命名"
								}
							]
						}
					]
				},
				{
					"ID": "20231107202334-2czjdjd",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20231107202334-2czjdjd",
						"updated": "20231107202334"
					},
					"Children": [
						{
							"ID": "20231107202334-bpi389g",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231107202334-bpi389g",
								"updated": "20231107202334"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "不能有特殊符号（下划线除外）"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230614173017-eflbzo3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230614173017-eflbzo3",
				"updated": "20230614173017"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "建议的命名规则：变量名要有含义——\u003e用英文（拼音）表示变量的作用\n不建议用汉字命名变量"
				}
			]
		},
		{
			"ID": "20230614172652-fqh9ajk",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230614172652-fqh9ajk",
				"updated": "20230614173025"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "常用的命名规范"
				}
			]
		},
		{
			"ID": "20230614173052-948n69v",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230614173052-948n69v",
				"updated": "20230614173220"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "驼峰命名法：首字母小写，之后单词首字母大写（一般用于变量）"
				}
			]
		},
		{
			"ID": "20230614173025-fpew05c",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230614173025-fpew05c",
				"updated": "20230614173117"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "string myName = \"SevenL\";\nint myAge = 20;\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230614173239-cw7urq9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230614173239-cw7urq9",
				"updated": "20230614173239"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "帕斯卡命名法：所有单词首字母都大写（一般用于函数和类的命名）"
				}
			]
		},
		{
			"ID": "20230614173122-ax3t2xg",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230614173122-ax3t2xg",
				"updated": "20230614173337"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "class Program\n{\n    static void Main(string[] args) { }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230614163958-2eswxgs",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230614163958-2eswxgs",
				"memo": "将两个变量用+拼接输出",
				"name": "Console的知识点——拼接",
				"updated": "20230614164553"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "//Console输出的潜在知识点\n//可以通过+进行拼接打印\nConsole.WriteLine(\"要拼接的字符串\" + v)\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		}
	]
}