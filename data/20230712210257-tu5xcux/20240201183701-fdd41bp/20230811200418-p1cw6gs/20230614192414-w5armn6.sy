{
	"ID": "20230614192414-w5armn6",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"custom-github-Hexo-yaml": "---_esc_newline_title: CS1L7——显式转换_esc_newline_date: '2023-06-14 19:24:14'_esc_newline_updated: '2024-07-01 22:33:36'_esc_newline_categories:_esc_newline_  - C#_esc_newline_  - C#入门系列_esc_newline_permalink: /post/cs1l7-expressing-conversion-jiem7.html_esc_newline_comments: true_esc_newline_toc: true_esc_newline_---",
		"id": "20230614192414-w5armn6",
		"scroll": "\u0026#123;\u0026quot;rootId\u0026quot;:\u0026quot;20230614192414-w5armn6\u0026quot;,\u0026quot;startId\u0026quot;:\u0026quot;20230614192414-pb03e8l\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20230614192437-hkdeprq\u0026quot;,\u0026quot;scrollTop\u0026quot;:0,\u0026quot;focusId\u0026quot;:\u0026quot;20230811203449-b57w1pc\u0026quot;,\u0026quot;focusStart\u0026quot;:2,\u0026quot;focusEnd\u0026quot;:2\u0026#125;",
		"title": "CS1L7——显式转换",
		"type": "doc",
		"updated": "20240616134054"
	},
	"Children": [
		{
			"ID": "20230614192414-pb03e8l",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20230614192414-pb03e8l",
				"updated": "20240616134054"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "显式转换"
				}
			]
		},
		{
			"ID": "20230614192550-td4uz12",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230614192550-td4uz12",
				"updated": "20230614193623"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "显式转换"
				},
				{
					"Type": "NodeText",
					"Data": "就是将不能"
				},
				{
					"Type": "NodeText",
					"Data": "隐式转换"
				},
				{
					"Type": "NodeText",
					"Data": "的"
				},
				{
					"Type": "NodeText",
					"Data": "变量类型"
				},
				{
					"Type": "NodeText",
					"Data": "手动强制转换为另一种类型，这种转换需要用额外的指令和语法（"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20230614193126-7cetq01",
					"TextMarkBlockRefSubtype": "d",
					"TextMarkTextContent": "显式转换的类型"
				},
				{
					"Type": "NodeText",
					"Data": "）进行强行转换\n"
				},
				{
					"Type": "NodeText",
					"Data": "显式转换"
				},
				{
					"Type": "NodeText",
					"Data": "主要有四种类型："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20230614193355-yfpkyvm",
					"TextMarkBlockRefSubtype": "d",
					"TextMarkTextContent": "括号强转"
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20230614193403-nb0xy4t",
					"TextMarkBlockRefSubtype": "d",
					"TextMarkTextContent": "Parse()"
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20230614193418-euf96br",
					"TextMarkBlockRefSubtype": "d",
					"TextMarkTextContent": "Convent()"
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20230614193446-r97elic",
					"TextMarkBlockRefSubtype": "d",
					"TextMarkTextContent": "ToString()"
				}
			]
		},
		{
			"ID": "20230811203444-tf6qg2i",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230811203444-tf6qg2i",
				"updated": "20240616134054"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "关键字"
				}
			]
		},
		{
			"ID": "20230811203449-b57w1pc",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230811203449-b57w1pc",
				"updated": "20230811203725"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "___.Parse()        //字符串类型转换为相应的类型\nConvert.To___()    //更准确的将各种类型进行相互转换\n.ToString()        //其他类型转string的方法\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230614193126-7cetq01",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230614193126-7cetq01",
				"name": "显式转换的类型",
				"updated": "20240616134054"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "显式转换的类型"
				}
			]
		},
		{
			"ID": "20230614193348-d94n86v",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230614193348-d94n86v",
				"updated": "20240616134054"
			},
			"Children": [
				{
					"ID": "20230614193355-yfpkyvm",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"fold": "0",
						"id": "20230614193355-yfpkyvm",
						"name": "括号强转",
						"updated": "20230614193508"
					},
					"Children": [
						{
							"ID": "20230614193355-10xy1ha",
							"Type": "NodeHeading",
							"HeadingLevel": 3,
							"Properties": {
								"id": "20230614193355-10xy1ha",
								"updated": "20230614193402"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "括号强转"
								}
							]
						},
						{
							"ID": "20230614194722-t36ogjb",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230614194722-t36ogjb",
								"updated": "20240616133346"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "括号强转是将高精度的类型转换为低精度的类型，"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code u strong",
									"TextMarkTextContent": "bool"
								},
								{
									"Type": "NodeText",
									"Data": " "
								},
								{
									"Type": "NodeText",
									"Data": " "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "u strong",
									"TextMarkTextContent": "和"
								},
								{
									"Type": "NodeText",
									"Data": " "
								},
								{
									"Type": "NodeText",
									"Data": " "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code u strong",
									"TextMarkTextContent": "string"
								},
								{
									"Type": "NodeText",
									"Data": " "
								},
								{
									"Type": "NodeText",
									"Data": " "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "u strong",
									"TextMarkTextContent": "不能通过括号强转"
								}
							]
						},
						{
							"ID": "20240616133048-ci0xl77",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240616133048-ci0xl77",
								"style": "background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);",
								"updated": "20240616133101"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"Properties": {
										"parent-style": "background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);",
										"style": "background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"
									},
									"TextMarkType": "strong u text",
									"TextMarkTextContent": "注意！括号强转时刻要注意当前变量是否超出要转换的类型的范围！否则可能会出现异常（溢出而导致数字显示不正确）"
								},
								{
									"Type": "NodeKramdownSpanIAL",
									"Data": "{: style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\" parent-style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"
								}
							]
						},
						{
							"ID": "20230614193810-t094nvj",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20230614193810-t094nvj",
								"style": "line-height: 22px;",
								"updated": "20230614194757"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "//语法：变量类型 变量名 = (变量类型)变量;\n//注意：精度问题 范围问题\nshort s = (short)i;\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20230614194730-z34mtot",
							"Type": "NodeHeading",
							"HeadingLevel": 4,
							"Properties": {
								"id": "20230614194730-z34mtot",
								"updated": "20230614194817"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "有符号整形的转换"
								}
							]
						},
						{
							"ID": "20230614194426-wlnzbgu",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20230614194426-wlnzbgu",
								"style": "line-height: 22px;",
								"updated": "20230614194759"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "//有符号整形\nint i = (int)l;\nsbyte sb = (sbyte)s;\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20230614194536-e6w0n6d",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230614194536-e6w0n6d",
								"updated": "20240616133113"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"Properties": {
										"style": "background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);"
									},
									"TextMarkType": "strong u text",
									"TextMarkTextContent": "括号强转可能会出现范围问题造成的异常（下面的结果就是超出范围导致溢出了）"
								},
								{
									"Type": "NodeKramdownSpanIAL",
									"Data": "{: style=\"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);\"}"
								}
							]
						},
						{
							"ID": "20230614194450-isqaron",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20230614194450-isqaron",
								"style": "line-height: 22px;",
								"updated": "20240616133135"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "i = 40000;\nshort s = (short)i;\nConsole.WriteLine(s);\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20240616133136-6bb2o8u",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240616133136-6bb2o8u",
								"updated": "20240616133138"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "输出："
								}
							]
						},
						{
							"ID": "20240616133139-eez08t9",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240616133139-eez08t9",
								"style": "line-height: 22px;",
								"updated": "20240616133151"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "-25536\t//结果是异常的\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20230614194604-4hvmzl9",
							"Type": "NodeHeading",
							"HeadingLevel": 4,
							"Properties": {
								"id": "20230614194604-4hvmzl9",
								"updated": "20230614194831"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "无符号整形的转换"
								}
							]
						},
						{
							"ID": "20230614194843-0w3m5w4",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20230614194843-0w3m5w4",
								"style": "line-height: 22px;",
								"updated": "20230614194848"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "//无符号整形\nb = (byte)ui;\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20230614194856-iiqsgfj",
							"Type": "NodeHeading",
							"HeadingLevel": 4,
							"Properties": {
								"id": "20230614194856-iiqsgfj",
								"updated": "20230614194944"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "浮点数之间的转换"
								}
							]
						},
						{
							"ID": "20230614194944-58yhgjq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230614194944-58yhgjq",
								"updated": "20230614194950"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "浮点数括号强转可能会出现精度丢失（四舍五入）"
								}
							]
						},
						{
							"ID": "20230614193625-5f7xic5",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20230614193625-5f7xic5",
								"style": "line-height: 22px;",
								"updated": "20240616133158"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "//浮点数之间\nd = 1.123456789123456789;\nf = (float)d;\nConsole.WriteLine(f);\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20240616133159-xez5d9r",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240616133159-xez5d9r",
								"updated": "20240616133202"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "输出："
								}
							]
						},
						{
							"ID": "20240616133202-893z821",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240616133202-893z821",
								"style": "line-height: 22px;",
								"updated": "20240616133206"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "1.1234568\t//浮点数括号强转可能会出现精度丢失（四舍五入）\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20230614195010-r77qg8c",
							"Type": "NodeHeading",
							"HeadingLevel": 4,
							"Properties": {
								"id": "20230614195010-r77qg8c",
								"updated": "20230614195023"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "无符号和有符号的相互转换"
								}
							]
						},
						{
							"ID": "20230614195032-j2dt6st",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230614195032-j2dt6st",
								"updated": "20230614195035"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "将负数转化为无符号会出现异常\n在转换时时刻注意范围，否则结果可能会出现异常"
								}
							]
						},
						{
							"ID": "20230614194836-zejdk56",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20230614194836-zejdk56",
								"style": "line-height: 22px;",
								"updated": "20240616133212"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "//无符号和有符号\ni = -1;\nui = (uint)i;\nConsole.WriteLine(ui);\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20240616133236-h0rz39g",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240616133236-h0rz39g",
								"updated": "20240616133239"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "输出："
								}
							]
						},
						{
							"ID": "20240616133213-aw5vk7j",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240616133213-aw5vk7j",
								"style": "line-height: 22px;",
								"updated": "20240616133219"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "4294967295\t//结果是异常的！\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20230614195112-8nq5j00",
							"Type": "NodeHeading",
							"HeadingLevel": 4,
							"Properties": {
								"id": "20230614195112-8nq5j00",
								"updated": "20230614195127"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "浮点与整形之间的转换"
								}
							]
						},
						{
							"ID": "20230614195149-ngurkhn",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230614195149-ngurkhn",
								"updated": "20230614195155"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "浮点转整形会直接抛弃小数点后的部分，不会四舍五入"
								}
							]
						},
						{
							"ID": "20230614195131-meyjz6n",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20230614195131-meyjz6n",
								"style": "line-height: 22px;",
								"updated": "20240616133224"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "//浮点与整形\ni = (int)1.789f;\nConsole.WriteLine(i);\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20240616133224-1kwixca",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240616133224-1kwixca",
								"updated": "20240616133229"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "输出："
								}
							]
						},
						{
							"ID": "20240616133229-o32jzi0",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240616133229-o32jzi0",
								"style": "line-height: 22px;",
								"updated": "20240616133234"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "1\t//浮点转整形会直接抛弃小数点后的部分，不会四舍五入\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20230614195233-m0ee0qn",
							"Type": "NodeHeading",
							"HeadingLevel": 4,
							"Properties": {
								"id": "20230614195233-m0ee0qn",
								"updated": "20230614195317"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "char和数值类型的转换"
								}
							]
						},
						{
							"ID": "20230614195317-lpbi5he",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20230614195317-lpbi5he",
								"style": "line-height: 22px;",
								"updated": "20240616133311"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": " i = 'A';\n c = (char)i;\n Console.WriteLine(i);\n Console.WriteLine(c);\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20240616133253-c4p2ue5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240616133253-c4p2ue5",
								"updated": "20240616133301"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "输出："
								}
							]
						},
						{
							"ID": "20240616133302-wtnqi93",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240616133302-wtnqi93",
								"style": "line-height: 22px;",
								"updated": "20240616133308"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "65\nA\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20230614193403-nb0xy4t",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230614193403-nb0xy4t",
						"name": "Parse()",
						"updated": "20230614193516"
					},
					"Children": [
						{
							"ID": "20230614193403-t9tt2ic",
							"Type": "NodeHeading",
							"HeadingLevel": 3,
							"Properties": {
								"id": "20230614193403-t9tt2ic",
								"updated": "20230614195647"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Parse法"
								}
							]
						},
						{
							"ID": "20230614195725-7a1ra0m",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230614195725-7a1ra0m",
								"updated": "20240616133527"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "作用：把字符串类型转换为相应的类型\n语法："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "变量类型.Parse(\u0026quot;字符串\u0026quot;)"
								},
								{
									"Type": "NodeText",
									"Data": "​\n注意：字符串必须能够转换为相应类型否则报错，填写超出变量类型的范围内的内容也会报错"
								}
							]
						},
						{
							"ID": "20240616133439-ahrck5e",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20240616133439-ahrck5e",
								"updated": "20240616133440"
							},
							"Children": [
								{
									"ID": "20240616133440-yknk0mg",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20240616133440-yknk0mg",
										"updated": "20240616133440"
									},
									"Children": [
										{
											"ID": "20240616133440-bom69d2",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240616133440-bom69d2",
												"updated": "20240616133443"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "有符号"
												}
											]
										},
										{
											"ID": "20240616133447-0gs2dsh",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20240616133447-0gs2dsh",
												"style": "line-height: 22px;",
												"updated": "20240616133541"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "YyM="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "//有符号\nint i4 = int.Parse(\"123\");\nConsole.WriteLine(i4);\nshort s5 = short.Parse(\"123\");\nConsole.WriteLine(s5);\t\t\t\t\t//注意！填写超出变量类型的范围内的内容也会报错\nConsole.WriteLine(sbyte.Parse(\"1\"));\t//直接打印语句的结果\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										},
										{
											"ID": "20240616133447-dk9uvr9",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240616133447-dk9uvr9",
												"updated": "20240616133447"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "输出："
												}
											]
										},
										{
											"ID": "20240616133447-okqr453",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20240616133447-okqr453",
												"style": "line-height: 22px;",
												"updated": "20240616133545"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "YyM="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "123\n123\n1\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								},
								{
									"ID": "20240616133552-yj5zbel",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20240616133552-yj5zbel"
									},
									"Children": [
										{
											"ID": "20240616133552-y6zhl1i",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240616133552-y6zhl1i",
												"updated": "20240616133555"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "无符号"
												}
											]
										},
										{
											"ID": "20240616133603-yry21y7",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240616133603-yry21y7",
												"updated": "20240616133603"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "规则与有符号相同"
												}
											]
										},
										{
											"ID": "20240616133555-35ss2b8",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20240616133555-35ss2b8",
												"style": "line-height: 22px;",
												"updated": "20240616133622"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "YyM="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "//无符号\nConsole.WriteLine(byte.Parse(\"2\"));\nConsole.WriteLine(ushort.Parse(\"3\"));\nConsole.WriteLine(uint.Parse(\"4\"));\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										},
										{
											"ID": "20240616133607-frd56ae",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240616133607-frd56ae",
												"updated": "20240616133609"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "输出："
												}
											]
										},
										{
											"ID": "20240616133610-v1gb5ei",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20240616133610-v1gb5ei",
												"style": "line-height: 22px;",
												"updated": "20240616133612"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "YyM="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "2\n3\n4\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								},
								{
									"ID": "20240616133628-84ozypm",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20240616133628-84ozypm"
									},
									"Children": [
										{
											"ID": "20240616133628-l3q1n8w",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240616133628-l3q1n8w",
												"updated": "20240616133630"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "浮点数"
												}
											]
										},
										{
											"ID": "20240616133659-16s1znp",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240616133659-16s1znp",
												"updated": "20240616133659"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "写超出范围的会四舍五入"
												}
											]
										},
										{
											"ID": "20240616133631-u5ydgjs",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20240616133631-u5ydgjs",
												"style": "line-height: 22px;",
												"updated": "20240616133656"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "YyM="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "float f4 = float.Parse(\"1.232323232323\");\t//写超出范围的会四舍五入\nConsole.WriteLine(f4);\ndouble d4 = double.Parse(\"1.2323\");\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										},
										{
											"ID": "20240616133635-vk9lvxj",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240616133635-vk9lvxj",
												"updated": "20240616133637"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "输出："
												}
											]
										},
										{
											"ID": "20240616133637-tx9fi3z",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20240616133637-tx9fi3z",
												"style": "line-height: 22px;",
												"updated": "20240616133643"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "YyM="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "1.2323233\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								},
								{
									"ID": "20240616133702-nwt93rh",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20240616133702-nwt93rh"
									},
									"Children": [
										{
											"ID": "20240616133702-4j9u7m1",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240616133702-4j9u7m1",
												"updated": "20240616133706"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "特殊类型"
												}
											]
										},
										{
											"ID": "20240616133706-cqoc17k",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20240616133706-cqoc17k",
												"style": "line-height: 22px;",
												"updated": "20240616133718"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "YyM="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "bool b5 = bool.Parse(\"true\");\nConsole.WriteLine(b5);\nchar c2 = char.Parse(\"A\");\nConsole.WriteLine(c2);\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										},
										{
											"ID": "20240616133719-mpd0vhw",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240616133719-mpd0vhw",
												"updated": "20240616133720"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "输出："
												}
											]
										},
										{
											"ID": "20240616133721-p7ra8li",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20240616133721-p7ra8li",
												"style": "line-height: 22px;",
												"updated": "20240616133728"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "YyM="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "True\nA\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20230614193418-euf96br",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20230614193418-euf96br",
						"name": "Convent()",
						"updated": "20230614193531"
					},
					"Children": [
						{
							"ID": "20230614193418-xp5fpm4",
							"Type": "NodeHeading",
							"HeadingLevel": 3,
							"Properties": {
								"id": "20230614193418-xp5fpm4",
								"updated": "20230614200050"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Convent法"
								}
							]
						},
						{
							"ID": "20230614200053-ybvyxps",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230614200053-ybvyxps",
								"updated": "20240616133123"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "作用：更准确的将各种类型进行相互转换\n语法："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Convert.To目标类型（变量或常量）"
								},
								{
									"Type": "NodeText",
									"Data": "​\n注意：填写的变量或常量必须正确，否则报错"
								}
							]
						},
						{
							"ID": "20240616133756-a8al49n",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20240616133756-a8al49n",
								"updated": "20240616133757"
							},
							"Children": [
								{
									"ID": "20240616133757-yvzlykt",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20240616133757-yvzlykt",
										"updated": "20240616133757"
									},
									"Children": [
										{
											"ID": "20240616133757-f0f4ybf",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240616133757-f0f4ybf",
												"updated": "20240616133800"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "字符串转其他"
												}
											]
										},
										{
											"ID": "20240616133819-dz6abao",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240616133819-dz6abao",
												"updated": "20240616133820"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "如果是字符串转其他类型，填写了不符合规则内的内容就会报错"
												}
											]
										},
										{
											"ID": "20240616133801-ec1s7qw",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20240616133801-ec1s7qw",
												"style": "line-height: 22px;",
												"updated": "20240616133805"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "YyM="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "int a = Convert.ToInt32(\"12\");\t//32是位数，4个字节有32位\nConsole.WriteLine(a);\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										},
										{
											"ID": "20240616133807-kt0i5b8",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240616133807-kt0i5b8",
												"updated": "20240616133812"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "输出："
												}
											]
										},
										{
											"ID": "20240616133812-650411f",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20240616133812-650411f",
												"style": "line-height: 22px;",
												"updated": "20240616133816"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "YyM="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "12\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								},
								{
									"ID": "20240616133828-q2qyrtu",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20240616133828-q2qyrtu"
									},
									"Children": [
										{
											"ID": "20240616133828-kox12d4",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240616133828-kox12d4",
												"updated": "20240616133835"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "浮点数转整数"
												}
											]
										},
										{
											"ID": "20240616133840-5a370k8",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240616133840-5a370k8",
												"updated": "20240616133848"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "​"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "Convent"
												},
												{
													"Type": "NodeText",
													"Data": "​ 比"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "block-ref",
													"TextMarkBlockRefID": "20230614193355-yfpkyvm",
													"TextMarkBlockRefSubtype": "s",
													"TextMarkTextContent": "括号强转"
												},
												{
													"Type": "NodeText",
													"Data": "更好，会四舍五入"
												}
											]
										},
										{
											"ID": "20240616133836-u68kzck",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20240616133836-u68kzck",
												"style": "line-height: 22px;",
												"updated": "20240616133853"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "YyM="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "a = Convert.ToInt32(1.654321f);\nConsole.WriteLine(a);\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										},
										{
											"ID": "20240616133854-5gm1b33",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240616133854-5gm1b33",
												"updated": "20240616133857"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "输出："
												}
											]
										},
										{
											"ID": "20240616133858-cqkz0an",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20240616133858-cqkz0an",
												"style": "line-height: 22px;",
												"updated": "20240616133900"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "YyM="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "2\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								},
								{
									"ID": "20240616133902-l3flkdr",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20240616133902-l3flkdr"
									},
									"Children": [
										{
											"ID": "20240616133902-7xrj5xa",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240616133902-7xrj5xa",
												"updated": "20240616133908"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "bool值可以转成数值类型"
												}
											]
										},
										{
											"ID": "20240616133913-wt4dofm",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240616133913-wt4dofm",
												"updated": "20240616133930"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "​"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "true"
												},
												{
													"Type": "NodeText",
													"Data": "​ 对应 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "1"
												},
												{
													"Type": "NodeText",
													"Data": "​，"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "false"
												},
												{
													"Type": "NodeText",
													"Data": "​ 对应 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "0"
												},
												{
													"Type": "NodeText",
													"Data": "​"
												}
											]
										},
										{
											"ID": "20240616133931-xpwm9sm",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20240616133931-xpwm9sm",
												"style": "line-height: 22px;",
												"updated": "20240616133952"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "YyM="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "a = Convert.ToInt32(true);\nConsole.WriteLine(a);\na = Convert.ToInt32(false);\nConsole.WriteLine(a);\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										},
										{
											"ID": "20240616133937-wl60hfc",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240616133937-wl60hfc",
												"updated": "20240616133938"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "输出："
												}
											]
										},
										{
											"ID": "20240616133939-dvai116",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20240616133939-dvai116",
												"style": "line-height: 22px;",
												"updated": "20240616133946"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "YyM="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "1\n0\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								},
								{
									"ID": "20240616134000-eppie2d",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20240616134000-eppie2d"
									},
									"Children": [
										{
											"ID": "20240616134000-riioufy",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240616134000-riioufy",
												"updated": "20240616134006"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "​"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "char"
												},
												{
													"Type": "NodeText",
													"Data": "​ 也可以转换为数值类型"
												}
											]
										},
										{
											"ID": "20240616134008-i866508",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240616134008-i866508",
												"updated": "20240616134022"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "会转换为字符对应的编码"
												}
											]
										},
										{
											"ID": "20240616134015-cqiz4eo",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20240616134015-cqiz4eo",
												"style": "line-height: 22px;",
												"updated": "20240616134020"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "YyM="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "a = Convert.ToInt32('A');\nConsole.WriteLine(a);\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										},
										{
											"ID": "20240616134023-lntpf5a",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240616134023-lntpf5a",
												"updated": "20240616134025"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "输出："
												}
											]
										},
										{
											"ID": "20240616134026-k13yzu9",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20240616134026-k13yzu9",
												"style": "line-height: 22px;",
												"updated": "20240616134029"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "YyM="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "65\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								}
							]
						},
						{
							"ID": "20240616134036-4hy6xmv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240616134036-4hy6xmv",
								"updated": "20240616134041"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "每种类型都存在对应类型的Convert方法："
								}
							]
						},
						{
							"ID": "20230614200123-94572kd",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20230614200123-94572kd",
								"style": "line-height: 22px;",
								"updated": "20240616134032"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "//每种类型都存在对应类型的Convert方法\nsbyte sb2 = Convert.ToSByte(\"1\");\nshort s3 = Convert.ToInt16(\"1\"); // short占16位，因此可以视为int16\nint s4 = Convert.ToInt32(\"1\");\nlong l4 = Convert.ToInt64(\"1\"); // long占64位，因此可以视为int64\n\nbyte b2 = Convert.ToByte(\"1\");\nushort us3 = Convert.ToUInt16(\"1\"); // ushort占16位，因此可以视为uint16\nuint us4 = Convert.ToUInt32(\"1\");\nulong ul4 = Convert.ToUInt64(\"1\"); // ulong占64位，因此可以视为uint64\n\nfloat f2 = Convert.ToSingle(\"1\"); // float是单精度，因此可称为single\ndouble d2 = Convert.ToDouble(\"1\");\ndecimal de2 = Convert.ToDecimal(\"1\");\n\nbool b3 = Convert.ToBoolean(\"true\"); //注意是Toboolean\nchar c4 = Convert.ToChar(\"A\");\n\nstring str5 = Convert.ToString(12345678);\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20230614193446-r97elic",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20230614193446-r97elic",
						"name": "ToString()",
						"updated": "20240616134054"
					},
					"Children": [
						{
							"ID": "20230614193446-a70bl0j",
							"Type": "NodeHeading",
							"HeadingLevel": 3,
							"Properties": {
								"id": "20230614193446-a70bl0j",
								"updated": "20240616134054"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "其他类型转string"
								}
							]
						},
						{
							"ID": "20230614200350-e3yiy94",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230614200350-e3yiy94",
								"updated": "20240616133126"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "作用：拼接打印\n语法："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "变量.toString();"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"ID": "20230614200312-ihfgw1y",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20230614200312-ihfgw1y",
								"style": "line-height: 22px;",
								"updated": "20240616134048"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "string str4 = 1.ToString();\nstr4 = true.ToString();\nstr4 = 'A'.ToString();\nstr4 = 1.2f.ToString();\n\nint aa = 1;\nstr4 = aa.ToString();\n\nConsole.WriteLine(\"123123\" + 1 + true);\nConsole.WriteLine(\"字符串拼接时会自动将非字符串类型使用.ToString()\");\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20240616134049-a85um7r",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240616134049-a85um7r",
								"updated": "20240616134050"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "输出："
								}
							]
						},
						{
							"ID": "20240616134051-je6luno",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240616134051-je6luno",
								"style": "line-height: 22px;",
								"updated": "20240616134054"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "1231231True\n字符串拼接时会自动将非字符串类型使用.ToString()\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230614192432-gelersk",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230614192432-gelersk",
				"updated": "20230614192436"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "本课源代码"
				}
			]
		},
		{
			"ID": "20230614192437-hkdeprq",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230614192437-hkdeprq",
				"updated": "20230614192513"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "namespace lesson7显式转换\n{\n    internal class Program\n    {\n        static void Main(string[] args)\n        {\n            Console.WriteLine(\"显式转换\");\n            //显式转换——\u003e手动强制转换变量类型\n\n            #region 变量申明\n            //1、有符号的整形变量 能存储一定范围内的正负数包括0的变量类型\n            sbyte sb = 1; // -128~127\n            int i = 1;  //  -21亿~21亿\n            short s = 1;    //  -32768~32767\n            long l = 1;    //  -九百万兆~九百万兆\n            //2、无符号的整型变量 能存储一定范围内0和正数的变量类型\n            byte b = 1;    //  0~255\n            uint ui = 1;    //  0~42亿\n            ushort us = 1;  //  0~65535\n            ulong ul = 1;   //  0~18百万兆\n            //3、浮点数（小数）\n            float f = 1.1f;    //  数字后必须加f声明float，因为小数会被默认为double，从非0数算起为有效数字，7/8位有效数字，根据编译器不同有可能不同，超出部分会四舍五入\n            double d = 1.11;    //  从非0数算起为有效数字，15~17位有效数字，超出部分会四舍五入\n            decimal de = 0.1m;    //  数字后必须加m声明，因为小数会被默认为double，27~28位有效数字，不建议使用\n            //4、特殊类型\n            bool bo = true; //  true或者false\n            char c = 'a';   //  需要加'',单个字符\n            string st = \"hello\";    //  需要加\"\",字符串\n            #endregion\n\n            #region 括号强转 将高精度的类型强制转换为低精度\n            Console.WriteLine(\"一般情况下将高精度的类型强制转换为低精度,在转换时时刻注意范围，否则结果可能会出现异常\");\n            //语法：   变量类型 变量名 = (变量类型)变量;\n            //注意：   精度问题 范围问题\n            //有符号整形\n            i = 40000;\n            s = (short)i;\n            Console.WriteLine(s);\n            //括号强转可能会出现范围问题造成的异常（上面就溢出了）\n            i = (int)l;\n            sb = (sbyte)s;\n            Console.WriteLine(sb);\n\n            //无符号整形\n            b = (byte)ui;\n\n            //浮点数之间\n            d = 1.123456789123456789;\n            f = (float)d;\n            Console.WriteLine(f);\n            //括号强转可能会出现精度丢失（四舍五入）\n\n            //无符号和有符号\n            i = -1;\n            ui = (uint)i;\n            Console.WriteLine(ui);\n            //将负数转化为无符号会出现异常\n            //在转换时时刻注意范围，否则结果可能会出现异常\n\n            //浮点与整形\n            i = (int)1.789f;\n            Console.WriteLine(i);\n            //浮点转整形会直接抛弃小数点后的部分，不会四舍五入\n\n            //char和数值类型\n            i = 'A';\n            c = (char)i;\n            Console.WriteLine(i);\n            Console.WriteLine(c);\n\n            //bool和string不能通过括号强转\n\n            #endregion\n\n            #region Parse法 常用于把字符串类型转换为相应的类型\n            //作用    把字符串类型转换为相应的类型\n            //语法    变量类型.Parse(\"字符串\")\n            //注意    字符串必须能够转换为相应类型否则报错\n\n            //有符号\n            int i4 = int.Parse(\"123\");\n            Console.WriteLine(i4);\n            //如果填写了不符合规则内的内容就会报错\n            short s5 = short.Parse(\"123\");\n            Console.WriteLine(s5);\n            //填写超出变量类型的范围内的内容也会报错\n            Console.WriteLine(sbyte.Parse(\"1\"));//  直接打印语句的结果\n\n            //无符号\n            Console.WriteLine(byte.Parse(\"2\"));\n            Console.WriteLine(ushort.Parse(\"3\"));\n            Console.WriteLine(uint.Parse(\"4\"));\n            //规则与有符号相同\n\n            //浮点数\n            float f4 = float.Parse(\"1.232323232323\");\n            Console.WriteLine(f4);\n            //写超出范围的会四舍五入\n            double d4 = double.Parse(\"1.2323\");\n\n            //特殊类型\n            bool b5 = bool.Parse(\"true\");\n            Console.WriteLine(b5);\n\n            char c2 = char.Parse(\"A\");\n            Console.WriteLine(c2);\n\n            #endregion\n\n            #region Convert法 更准确的将各种类型进行相互转换\n            //  作用 更准确的将各种类型进行相互转换\n            //  语法 Convert.To目标类型（变量或常量）\n            //  注意 填写的变量或常量必须正确，否则报错\n\n            //字符串转其他\n            int a = Convert.ToInt32(\"12\");//32是位数，4个字节有32位\n            Console.WriteLine(a);\n            //如果是字符串转其他类型，填写了不符合规则内的内容就会报错\n            a = Convert.ToInt32(1.654321f);\n            Console.WriteLine(a);\n            //Convent比括号强转更好，会四舍五入\n\n            //bool值可以转成数值类型 true对应1 false对应0\n            a = Convert.ToInt32(true);\n            Console.WriteLine(a);\n            a = Convert.ToInt32(false);\n            Console.WriteLine(a);\n\n            //char也可以转换为数值类型\n            a = Convert.ToInt32('A');\n            Console.WriteLine(a);\n\n            //每种类型都存在对应类型的Convert方法\n            sbyte sb2 = Convert.ToSByte(\"1\");\n            short s3 = Convert.ToInt16(\"1\"); // short占16位，因此可以视为int16\n            int s4 = Convert.ToInt32(\"1\");\n            long l4 = Convert.ToInt64(\"1\"); // long占64位，因此可以视为int64\n\n            byte b2 = Convert.ToByte(\"1\");\n            ushort us3 = Convert.ToUInt16(\"1\"); // ushort占16位，因此可以视为uint16\n            uint us4 = Convert.ToUInt32(\"1\");\n            ulong ul4 = Convert.ToUInt64(\"1\"); // ulong占64位，因此可以视为uint64\n\n            float f2 = Convert.ToSingle(\"1\"); // float是单精度，因此可称为single\n            double d2 = Convert.ToDouble(\"1\");\n            decimal de2 = Convert.ToDecimal(\"1\");\n\n            bool b3 = Convert.ToBoolean(\"true\"); //注意是Toboolean\n            char c4 = Convert.ToChar(\"A\");\n\n            string str5 = Convert.ToString(12345678);\n\n            #endregion\n\n            #region 其他类型转string\n            //作用：拼接打印\n            //语法：变量.toString();\n            string str4 = 1.ToString();\n            str4 = true.ToString();\n            str4 = 'A'.ToString();\n            str4 = 1.2f.ToString();\n\n            int aa = 1;\n            str4 = aa.ToString();\n\n            Console.WriteLine(\"123123\" + 1 + true);\n            Console.WriteLine(\"字符串拼接时会自动将非字符串类型使用.ToString()\");\n\n            #endregion\n\n            #region 练习\n            Console.WriteLine(\"将24069转成字符并打印\");\n            char c6 = Convert.ToChar(24069);\n            Console.WriteLine(c6);\n            Console.WriteLine(\"提示用户输入姓名、语文、数学、英语成绩，并将输入的三门成绩用整形变量存储\");\n            Console.Write(\"请输入你的姓名:\");\n            string name = Console.ReadLine();\n            Console.Write(\"请输入你的语文成绩:\");\n            int chinese = Convert.ToInt32(Console.ReadLine());\n            Console.Write(\"请输入你的数学成绩:\");\n            int math = int.Parse(Console.ReadLine());\n            Console.Write(\"请输入你的英语成绩:\");\n            int english = int.Parse(Console.ReadLine());\n\n\n            #endregion\n        }\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		}
	]
}