{
	"ID": "20250320005154-gj0q0mk",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20250320005154-gj0q0mk",
		"title": "MIL18——模拟面试题",
		"type": "doc",
		"updated": "20250327200917"
	},
	"Children": [
		{
			"ID": "20250327200917-vm0mu1z",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250327200917-vm0mu1z",
				"updated": "20250327200917"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "C#"
				}
			]
		},
		{
			"ID": "20250327200917-pjlio00",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20250327200917-pjlio00",
				"updated": "20250327200917"
			},
			"Children": [
				{
					"ID": "20250327200917-phzifam",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20250327200917-phzifam",
						"updated": "20250327200917"
					},
					"Children": [
						{
							"ID": "20250327200917-uh2qgv8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250327200917-uh2qgv8",
								"updated": "20250327200917"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "父类中定义了一个静态成员属性有两个子类都继承该父类请问打印结果是什么？为什么"
								}
							]
						}
					]
				},
				{
					"ID": "20250327200917-ywtlqhg",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20250327200917-ywtlqhg",
						"updated": "20250327200917"
					},
					"Children": [
						{
							"ID": "20250327200917-57u41qt",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250327200917-57u41qt",
								"updated": "20250327200917"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "泛型父类中定义了一个静态成员属性有两个子类都继承该泛型父类请问打印结果是什么？为什么"
								}
							]
						}
					]
				},
				{
					"ID": "20250327200917-dglfzw7",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20250327200917-dglfzw7",
						"updated": "20250327200917"
					},
					"Children": [
						{
							"ID": "20250327200917-6cldcvj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250327200917-6cldcvj",
								"updated": "20250327200917"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "使用 C"
								},
								{
									"Type": "NodeBackslash",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "#"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 制作游戏存档功能，请问有几种做法？（至少说出三种）"
								}
							]
						}
					]
				},
				{
					"ID": "20250327200917-qm2hlkd",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20250327200917-qm2hlkd",
						"updated": "20250327200917"
					},
					"Children": [
						{
							"ID": "20250327200917-v7lx0wi",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250327200917-v7lx0wi",
								"updated": "20250327200917"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "C"
								},
								{
									"Type": "NodeBackslash",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "#"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 中是否可以通过反射获取到类内部的私有成员？"
								}
							]
						}
					]
				},
				{
					"ID": "20250327200917-ofc0x7e",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NS4=",
						"Num": 5
					},
					"Properties": {
						"id": "20250327200917-ofc0x7e",
						"updated": "20250327200917"
					},
					"Children": [
						{
							"ID": "20250327200917-pxhisi9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250327200917-pxhisi9",
								"updated": "20250327200917"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在制作游戏存档功能时，C"
								},
								{
									"Type": "NodeBackslash",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "#"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 中反射主要可以发挥出哪些作用（至少说出三点）"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20250327200917-h9tr6k4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250327200917-h9tr6k4",
				"updated": "20250327200917"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "Unity"
				}
			]
		},
		{
			"ID": "20250327200917-5v3n932",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20250327200917-5v3n932",
				"updated": "20250327200917"
			},
			"Children": [
				{
					"ID": "20250327200917-7r2u6hl",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20250327200917-7r2u6hl",
						"updated": "20250327200917"
					},
					"Children": [
						{
							"ID": "20250327200917-401dnfg",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250327200917-401dnfg",
								"updated": "20250327200917"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果在 Unity 当中制作 FPS 游戏，如何模拟枪械开枪时的后坐力"
								}
							]
						}
					]
				},
				{
					"ID": "20250327200917-tf4qemn",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20250327200917-tf4qemn",
						"updated": "20250327200917"
					},
					"Children": [
						{
							"ID": "20250327200917-y2irjj3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250327200917-y2irjj3",
								"updated": "20250327200917"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Unity 当中存在多线程时，继承 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "MonoBehaviour"
								},
								{
									"Type": "NodeText",
									"Data": "​ 的脚本是否有必要对其中内容加锁？为什么？"
								}
							]
						}
					]
				},
				{
					"ID": "20250327200917-vqa7r5p",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20250327200917-vqa7r5p",
						"updated": "20250327200917"
					},
					"Children": [
						{
							"ID": "20250327200917-s8rbjx6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250327200917-s8rbjx6",
								"updated": "20250327200917"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "我们在 Unity 中进行一些复杂逻辑处理时，比如网路通讯、寻路算法、往往会开启多线程进行处理。\n我们如何保证数据能够和 Unity 主线程进行正常交互？（请至少说出 1 种方式）"
								}
							]
						}
					]
				},
				{
					"ID": "20250327200917-2brxgw9",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20250327200917-2brxgw9",
						"updated": "20250327200917"
					},
					"Children": [
						{
							"ID": "20250327200917-orweea0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250327200917-orweea0",
								"updated": "20250327200917"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Shader 当中的 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Blend"
								},
								{
									"Type": "NodeText",
									"Data": "​ 渲染命令主要用来干什么？"
								}
							]
						}
					]
				},
				{
					"ID": "20250327200917-0n8y8jh",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NS4=",
						"Num": 5
					},
					"Properties": {
						"id": "20250327200917-0n8y8jh",
						"updated": "20250327200917"
					},
					"Children": [
						{
							"ID": "20250327200917-6yh7vi6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250327200917-6yh7vi6",
								"updated": "20250327200917"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Shader 当中的 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Blend"
								},
								{
									"Type": "NodeText",
									"Data": "​ 渲染命令后面跟的参数是用来干嘛的？比如："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Blend SrcAlpha OneMinusSrcAlpha"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20250327200853-pxa0mgg",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20250327200853-pxa0mgg",
				"updated": "20250327200856"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "答案"
				}
			]
		},
		{
			"ID": "20250320005159-f6p551t",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250320005159-f6p551t",
				"updated": "20250320005159"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "C#"
				}
			]
		},
		{
			"ID": "20250320005159-ipuhz5u",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20250320005159-ipuhz5u",
				"updated": "20250320011141"
			},
			"Children": [
				{
					"ID": "20250320005328-4suz73h",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20250320005328-4suz73h",
						"updated": "20250320005328"
					},
					"Children": [
						{
							"ID": "20250320005328-cy3bg0e",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250320005328-cy3bg0e",
								"updated": "20250320005328"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "父类中定义了一个静态成员属性有两个子类都继承该父类请问打印结果是什么？为什么\n"
								}
							]
						},
						{
							"ID": "20250320005330-okbccn2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250320005330-okbccn2",
								"updated": "20250320005342"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeImage",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeBang"
										},
										{
											"Type": "NodeOpenBracket"
										},
										{
											"Type": "NodeLinkText",
											"Data": "image"
										},
										{
											"Type": "NodeCloseBracket"
										},
										{
											"Type": "NodeOpenParen"
										},
										{
											"Type": "NodeLinkDest",
											"Data": "assets/image-20250320005339-es5zbwm.png"
										},
										{
											"Type": "NodeCloseParen"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeImage",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeBang"
										},
										{
											"Type": "NodeOpenBracket"
										},
										{
											"Type": "NodeLinkText",
											"Data": "image"
										},
										{
											"Type": "NodeCloseBracket"
										},
										{
											"Type": "NodeOpenParen"
										},
										{
											"Type": "NodeLinkDest",
											"Data": "assets/image-20250320005342-0vbgfa3.png"
										},
										{
											"Type": "NodeCloseParen"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"ID": "20250320005949-axjiljv",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20250320005949-axjiljv",
								"style": "line-height: 22px;",
								"updated": "20250320010000"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "30\n30\n30\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20250320010001-iv8myrn",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250320010001-iv8myrn",
								"updated": "20250320010008"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "答案： 因为静态成员属于类而不是实例"
								}
							]
						}
					]
				},
				{
					"ID": "20250320005328-jn503om",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20250320005328-jn503om",
						"updated": "20250320005328"
					},
					"Children": [
						{
							"ID": "20250320005328-i5ves3x",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250320005328-i5ves3x",
								"updated": "20250320005328"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "泛型父类中定义了一个静态成员属性有两个子类都继承该泛型父类请问打印结果是什么？为什么\n"
								}
							]
						},
						{
							"ID": "20250320005333-agw6kux",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250320005333-agw6kux",
								"updated": "20250320005348"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeImage",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeBang"
										},
										{
											"Type": "NodeOpenBracket"
										},
										{
											"Type": "NodeLinkText",
											"Data": "image"
										},
										{
											"Type": "NodeCloseBracket"
										},
										{
											"Type": "NodeOpenParen"
										},
										{
											"Type": "NodeLinkDest",
											"Data": "assets/image-20250320005346-6zo4dks.png"
										},
										{
											"Type": "NodeCloseParen"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeImage",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeBang"
										},
										{
											"Type": "NodeOpenBracket"
										},
										{
											"Type": "NodeLinkText",
											"Data": "image"
										},
										{
											"Type": "NodeCloseBracket"
										},
										{
											"Type": "NodeOpenParen"
										},
										{
											"Type": "NodeLinkDest",
											"Data": "assets/image-20250320005348-r679mod.png"
										},
										{
											"Type": "NodeCloseParen"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"ID": "20250320010011-hnng1hp",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20250320010011-hnng1hp",
								"style": "line-height: 22px;",
								"updated": "20250320010025"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "0\n20\n20\n30\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20250320010039-rovu9gw",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250320010039-rovu9gw",
								"updated": "20250320010141"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "因为静态成员属于类而不是实例，而泛型 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "T"
								},
								{
									"Type": "NodeText",
									"Data": "​ 的变化，会让父类\"类型\"变化（也就是说，"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Father\u0026lt;Son1\u0026gt;"
								},
								{
									"Type": "NodeText",
									"Data": "​ 和 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Father\u0026lt;Son2\u0026gt;"
								},
								{
									"Type": "NodeText",
									"Data": "​）\n不同类型的泛型实例，它们的静态成员 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "static_I"
								},
								{
									"Type": "NodeText",
									"Data": "​ 是分别存在的，不会相互影响"
								}
							]
						}
					]
				},
				{
					"ID": "20250320005328-6at19dv",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20250320005328-6at19dv",
						"updated": "20250320005328"
					},
					"Children": [
						{
							"ID": "20250320005328-0au7hzm",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250320005328-0au7hzm",
								"updated": "20250320005328"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "使用 C"
								},
								{
									"Type": "NodeBackslash",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "#"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 制作游戏存档功能，请问有几种做法？（至少说出三种）"
								}
							]
						},
						{
							"ID": "20250320010249-eqze7ry",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20250320010249-eqze7ry",
								"updated": "20250320010301"
							},
							"Children": [
								{
									"ID": "20250320010301-xoyankr",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20250320010301-xoyankr",
										"updated": "20250320010301"
									},
									"Children": [
										{
											"ID": "20250320010301-g6cvz2t",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250320010301-g6cvz2t",
												"updated": "20250320010303"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "xml"
												}
											]
										}
									]
								},
								{
									"ID": "20250320010303-ho21szh",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20250320010303-ho21szh",
										"updated": "20250320010303"
									},
									"Children": [
										{
											"ID": "20250320010303-dmak6ri",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250320010303-dmak6ri",
												"updated": "20250320010304"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "json"
												}
											]
										}
									]
								},
								{
									"ID": "20250320010304-htsa2ba",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20250320010304-htsa2ba",
										"updated": "20250320010304"
									},
									"Children": [
										{
											"ID": "20250320010304-qc8w6si",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250320010304-qc8w6si",
												"updated": "20250320010306"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "2进制"
												}
											]
										}
									]
								},
								{
									"ID": "20250320010306-rqo5n0q",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20250320010306-rqo5n0q",
										"updated": "20250320010306"
									},
									"Children": [
										{
											"ID": "20250320010306-u15cqjt",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250320010306-u15cqjt",
												"updated": "20250320010308"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "自定义文档结构"
												}
											]
										}
									]
								},
								{
									"ID": "20250320010308-9k6kni7",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20250320010308-9k6kni7",
										"updated": "20250320010308"
									},
									"Children": [
										{
											"ID": "20250320010308-3czgrnh",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250320010308-3czgrnh",
												"updated": "20250320010308"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "数据库"
												}
											]
										}
									]
								}
							]
						},
						{
							"ID": "20250320010258-9ueozae",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250320010258-9ueozae",
								"updated": "20250320010258"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "等等"
								}
							]
						}
					]
				},
				{
					"ID": "20250320005328-rxhp2ps",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20250320005328-rxhp2ps",
						"updated": "20250320005328"
					},
					"Children": [
						{
							"ID": "20250320005328-k51iim0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250320005328-k51iim0",
								"updated": "20250320005328"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "C"
								},
								{
									"Type": "NodeBackslash",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "#"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 中是否可以通过反射获取到类内部的私有成员？"
								}
							]
						},
						{
							"ID": "20250320010321-q3l3j9t",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250320010321-q3l3j9t",
								"updated": "20250320010407"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在获取成员的相关方法中，可以通过传入参数，指定获取非公共的成员，\n其中的关键知识是，利用 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "BindingFlags"
								},
								{
									"Type": "NodeText",
									"Data": "​ 枚举，其中常用枚举类型是"
								}
							]
						},
						{
							"ID": "20250320010407-q4dtovo",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20250320010407-q4dtovo",
								"updated": "20250320010408"
							},
							"Children": [
								{
									"ID": "20250320010408-jgomr44",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20250320010408-jgomr44",
										"updated": "20250320010408"
									},
									"Children": [
										{
											"ID": "20250320010408-3ywvwfv",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250320010408-3ywvwfv",
												"updated": "20250320010608"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "​"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "Public"
												},
												{
													"Type": "NodeText",
													"Data": "​（"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "BindingFlags.Public"
												},
												{
													"Type": "NodeText",
													"Data": "​）: 包括公共成员。"
												}
											]
										}
									]
								},
								{
									"ID": "20250320010414-iyoayo6",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20250320010414-iyoayo6",
										"updated": "20250320010414"
									},
									"Children": [
										{
											"ID": "20250320010414-llvo3xj",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250320010414-llvo3xj",
												"updated": "20250320010556"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "​"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "NonPublic"
												},
												{
													"Type": "NodeText",
													"Data": "​（"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "BindingFlags.NonPublic"
												},
												{
													"Type": "NodeText",
													"Data": "​）：包括非公共成员。"
												}
											]
										}
									]
								},
								{
									"ID": "20250320010421-0nxjl4x",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20250320010421-0nxjl4x",
										"updated": "20250320010421"
									},
									"Children": [
										{
											"ID": "20250320010421-zbjk4a8",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250320010421-zbjk4a8",
												"updated": "20250320010544"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "​"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "Instance"
												},
												{
													"Type": "NodeText",
													"Data": "​（"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "BindingFlags.Instance"
												},
												{
													"Type": "NodeText",
													"Data": "​）：包括实例成员。"
												}
											]
										}
									]
								},
								{
									"ID": "20250320010425-f0o6kd2",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20250320010425-f0o6kd2",
										"updated": "20250320010425"
									},
									"Children": [
										{
											"ID": "20250320010425-q134f5z",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250320010425-q134f5z",
												"updated": "20250320010533"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "​"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "Static"
												},
												{
													"Type": "NodeText",
													"Data": "​（"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "BindingFlags.Static"
												},
												{
													"Type": "NodeText",
													"Data": "​）：包括静态成员。"
												}
											]
										}
									]
								},
								{
									"ID": "20250320010428-lv71ipy",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20250320010428-lv71ipy",
										"updated": "20250320010428"
									},
									"Children": [
										{
											"ID": "20250320010428-0p1cv1k",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250320010428-0p1cv1k",
												"updated": "20250320010518"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "​"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "FlattenHierarchy"
												},
												{
													"Type": "NodeText",
													"Data": "​（"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "BindingFlags.FlattenHierarchy"
												},
												{
													"Type": "NodeText",
													"Data": "​）：在层次结构中查找成员，包括继承的成员。"
												}
											]
										}
									]
								},
								{
									"ID": "20250320010431-bgo70ek",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20250320010431-bgo70ek",
										"updated": "20250320010431"
									},
									"Children": [
										{
											"ID": "20250320010431-vkw6i4d",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250320010431-vkw6i4d",
												"updated": "20250320010504"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "​"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "IgnoreCase"
												},
												{
													"Type": "NodeText",
													"Data": "​（"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "BindingFlags.IgnoreCase"
												},
												{
													"Type": "NodeText",
													"Data": "​）：忽略成员名称的大小写"
												}
											]
										}
									]
								}
							]
						},
						{
							"ID": "20250320010440-b5z0qxr",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250320010440-b5z0qxr",
								"updated": "20250320010633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "非公共的成员可通过以下枚举组合获取："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "BindingFlags.NonPublic | BindingFlags.Instance"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						}
					]
				},
				{
					"ID": "20250320005328-r13r1mj",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NS4=",
						"Num": 5
					},
					"Properties": {
						"id": "20250320005328-r13r1mj",
						"updated": "20250320011141"
					},
					"Children": [
						{
							"ID": "20250320005328-r4cbpls",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250320005328-r4cbpls",
								"updated": "20250320005359"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在制作游戏存档功能时，C"
								},
								{
									"Type": "NodeBackslash",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "#"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 中反射主要可以发挥出哪些作用（至少说出三点）"
								}
							]
						},
						{
							"ID": "20250320011134-339qkkz",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20250320011134-339qkkz",
								"updated": "20250320011141"
							},
							"Children": [
								{
									"ID": "20250320011141-32eize5",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20250320011141-32eize5",
										"updated": "20250320011141"
									},
									"Children": [
										{
											"ID": "20250320011141-pr0gsdx",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250320011141-pr0gsdx",
												"updated": "20250320011141"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "序列化时：动态获取数据结构类信息，可以动态获取字段用于存储"
												}
											]
										}
									]
								},
								{
									"ID": "20250320011141-ywpbfyf",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "Mi4=",
										"Num": 2
									},
									"Properties": {
										"id": "20250320011141-ywpbfyf",
										"updated": "20250320011141"
									},
									"Children": [
										{
											"ID": "20250320011141-fb7jjis",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250320011141-fb7jjis",
												"updated": "20250320011141"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "反序列化时：可以通过反射实例化对象，写入数据"
												}
											]
										}
									]
								},
								{
									"ID": "20250320011141-26fj5z1",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "My4=",
										"Num": 3
									},
									"Properties": {
										"id": "20250320011141-26fj5z1",
										"updated": "20250320011141"
									},
									"Children": [
										{
											"ID": "20250320011141-3135dzy",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250320011141-3135dzy",
												"updated": "20250320011141"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "结构发生变化时：我们可以利用反射机制进行判断，多的数据抛弃，少的数据自定义初始化"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20250320005159-vht3v5t",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250320005159-vht3v5t",
				"updated": "20250320005159"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "Unity"
				}
			]
		},
		{
			"ID": "20250320005159-o16nwmg",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20250320005159-o16nwmg",
				"updated": "20250320011736"
			},
			"Children": [
				{
					"ID": "20250320005416-e0gwtap",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20250320005416-e0gwtap",
						"updated": "20250320005416"
					},
					"Children": [
						{
							"ID": "20250320005416-6o7yod9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250320005416-6o7yod9",
								"updated": "20250320005418"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果在 Unity 当中制作 FPS 游戏，如何模拟枪械开枪时的后坐力"
								}
							]
						},
						{
							"ID": "20250320011230-e74i648",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250320011230-e74i648",
								"updated": "20250320011307"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "每次开枪时，可以给枪械、手臂 IK、摄像机等（根据实际视角情况决定） 一个绕 X 轴（往上偏移）和 Y 轴（左右偏移）的旋转角度\n并且每帧都会归位（角度四元数不停向原始位置归位）"
								}
							]
						}
					]
				},
				{
					"ID": "20250320005416-o2t5zcc",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20250320005416-o2t5zcc",
						"updated": "20250320005416"
					},
					"Children": [
						{
							"ID": "20250320005416-emtwtoz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250320005416-emtwtoz",
								"updated": "20250320011314"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Unity 当中存在多线程时，继承 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "MonoBehaviour"
								},
								{
									"Type": "NodeText",
									"Data": "​ 的脚本是否有必要对其中内容加锁？为什么？"
								}
							]
						},
						{
							"ID": "20250320011315-nzbxcqs",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250320011315-nzbxcqs",
								"updated": "20250320011334"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "分情况讨论："
								}
							]
						},
						{
							"ID": "20250320011334-shtzwwv",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20250320011334-shtzwwv",
								"updated": "20250320011334"
							},
							"Children": [
								{
									"ID": "20250320011334-sm861p6",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20250320011334-sm861p6",
										"updated": "20250320011334"
									},
									"Children": [
										{
											"ID": "20250320011334-gniuyeg",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250320011334-gniuyeg",
												"updated": "20250320011337"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "如果是想要通过多线程控制或访问场景上对象的相关行为，比如移动旋转、资源加载、动态销毁等等，那么不用加锁"
												}
											]
										},
										{
											"ID": "20250320011338-ltwgvrl",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250320011338-ltwgvrl",
												"updated": "20250320011407"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "因为 Unity 的整个执行模型是单线程的，所有的游戏逻辑和渲染都在主线中进行。\n大部分的 Unity API 都只能在主线程上调用，如果通过多线程去调用 Unity 场景上物体的相关API，\n或改变场景中对象的相关属性，会直接出现报错。因此加锁也没有意义"
												}
											]
										}
									]
								},
								{
									"ID": "20250320011343-7ll9n0u",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "Mi4=",
										"Num": 2
									},
									"Properties": {
										"id": "20250320011343-7ll9n0u",
										"updated": "20250320011343"
									},
									"Children": [
										{
											"ID": "20250320011343-v0aszwl",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250320011343-v0aszwl",
												"updated": "20250320011433"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "如果是想要通过多线程改变继承 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "MonoBehaviour"
												},
												{
													"Type": "NodeText",
													"Data": "​ 脚本中的某些公共成员，比如一个 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "int"
												},
												{
													"Type": "NodeText",
													"Data": "​，一个 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "List"
												},
												{
													"Type": "NodeText",
													"Data": "​。\n那么可以为这些公共成员加锁，防止线程并发带来的问题，\n但是建议尽量不要通过多线程和继承 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "MonoBehaviour"
												},
												{
													"Type": "NodeText",
													"Data": "​ 的挂载在场景对象中的脚本打交道"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20250320005416-vqb1lcb",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20250320005416-vqb1lcb",
						"updated": "20250320005416"
					},
					"Children": [
						{
							"ID": "20250320005416-gi2jjxd",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250320005416-gi2jjxd",
								"updated": "20250320011438"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "我们在 Unity 中进行一些复杂逻辑处理时，比如网路通讯、寻路算法、往往会开启多线程进行处理。\n我们如何保证数据能够和 Unity 主线程进行正常交互？（请至少说出 1 种方式）"
								}
							]
						},
						{
							"ID": "20250320011438-x1ymkzv",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20250320011438-x1ymkzv",
								"updated": "20250320011502"
							},
							"Children": [
								{
									"ID": "20250320011502-ogzgvp7",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20250320011502-ogzgvp7",
										"updated": "20250320011502"
									},
									"Children": [
										{
											"ID": "20250320011502-v1zeth0",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250320011502-v1zeth0",
												"updated": "20250320011505"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "对共享数据加锁，避免多线程并发带来的数据竞争问题"
												}
											]
										}
									]
								},
								{
									"ID": "20250320011505-8ffrzef",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "Mi4=",
										"Num": 2
									},
									"Properties": {
										"id": "20250320011505-8ffrzef",
										"updated": "20250320011505"
									},
									"Children": [
										{
											"ID": "20250320011505-e8awlh1",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250320011505-e8awlh1",
												"updated": "20250320011558"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "用 C"
												},
												{
													"Type": "NodeBackslash",
													"Data": "span",
													"Children": [
														{
															"Type": "NodeText",
															"Data": "#"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": " 中线程安全的数据结构存储共享数据，\n比如 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "System.Collections.Concurrent"
												},
												{
													"Type": "NodeText",
													"Data": "​ 命名空间中的 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "ConcurrentQueue\u0026lt;\u0026gt;"
												},
												{
													"Type": "NodeText",
													"Data": "​ 和 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "ConcurrentDictionary\u0026lt;\u0026gt;"
												},
												{
													"Type": "NodeText",
													"Data": "​"
												}
											]
										}
									]
								},
								{
									"ID": "20250320011530-604y8wv",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "My4=",
										"Num": 3
									},
									"Properties": {
										"id": "20250320011530-604y8wv",
										"updated": "20250320011530"
									},
									"Children": [
										{
											"ID": "20250320011530-92bv8hu",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250320011530-92bv8hu",
												"updated": "20250320011539"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "可以尝试使用 Unity 当中的 DOTS 系统"
												}
											]
										}
									]
								}
							]
						},
						{
							"ID": "20250320011526-8lqc9cc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250320011526-8lqc9cc",
								"updated": "20250320011527"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "等等"
								}
							]
						}
					]
				},
				{
					"ID": "20250320005416-9i8xjdx",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20250320005416-9i8xjdx",
						"updated": "20250320005416"
					},
					"Children": [
						{
							"ID": "20250320005416-zayrp7l",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250320005416-zayrp7l",
								"updated": "20250320005440"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Shader 当中的 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Blend"
								},
								{
									"Type": "NodeText",
									"Data": "​ 渲染命令主要用来干什么？"
								}
							]
						},
						{
							"ID": "20250320011600-d47uiz0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250320011600-d47uiz0",
								"updated": "20250320011618"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "用来进行颜色混合的，将当前片元的颜色和颜色缓冲区中的颜色进行混合计算，一般可以用来实现半透明相关效果，光照颜色叠加相关效果等等"
								}
							]
						}
					]
				},
				{
					"ID": "20250320005416-8ocml4l",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NS4=",
						"Num": 5
					},
					"Properties": {
						"id": "20250320005416-8ocml4l",
						"updated": "20250320011736"
					},
					"Children": [
						{
							"ID": "20250320005416-a09yi1y",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250320005416-a09yi1y",
								"updated": "20250320005450"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Shader 当中的 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Blend"
								},
								{
									"Type": "NodeText",
									"Data": "​ 渲染命令后面跟的参数是用来干嘛的？比如："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Blend SrcAlpha OneMinusSrcAlpha"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"ID": "20250320011634-4prinp8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250320011634-4prinp8",
								"updated": "20250320011736"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Blend"
								},
								{
									"Type": "NodeText",
									"Data": "​ 混合命令后面跟的参数有两种写法，这些因子其实就是一些特定的数，用于参与混合计算"
								}
							]
						},
						{
							"ID": "20250320011641-lebhcas",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20250320011641-lebhcas",
								"updated": "20250320011720"
							},
							"Children": [
								{
									"ID": "20250320011643-ypopodo",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20250320011643-ypopodo",
										"updated": "20250320011643"
									},
									"Children": [
										{
											"ID": "20250320011643-ucmigax",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250320011643-ucmigax",
												"updated": "20250320011646"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "写法一： "
												}
											]
										},
										{
											"ID": "20250320011655-6flrc30",
											"Type": "NodeList",
											"ListData": {},
											"Properties": {
												"id": "20250320011655-6flrc30",
												"updated": "20250320011655"
											},
											"Children": [
												{
													"ID": "20250320011655-8c18si2",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20250320011655-8c18si2",
														"updated": "20250320011655"
													},
													"Children": [
														{
															"ID": "20250320011655-eew9i87",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20250320011655-eew9i87",
																"updated": "20250320011703"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "​"
																},
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "code",
																	"TextMarkTextContent": "输出颜色rgb = 源因子 * 片元颜色的rgb + 目标因子 * 颜色缓冲区中颜色的rgb"
																},
																{
																	"Type": "NodeText",
																	"Data": "​"
																}
															]
														}
													]
												},
												{
													"ID": "20250320011704-2xh06xv",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20250320011704-2xh06xv",
														"updated": "20250320011704"
													},
													"Children": [
														{
															"ID": "20250320011704-m2zbpay",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20250320011704-m2zbpay",
																"updated": "20250320011707"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "​"
																},
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "code",
																	"TextMarkTextContent": "输出颜色a = 源透明因子 * 片元颜色的a + 目标透明因子 *颜色缓冲区中颜色的a"
																},
																{
																	"Type": "NodeText",
																	"Data": "​"
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"ID": "20250320011646-7cbyg0u",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20250320011646-7cbyg0u",
										"updated": "20250320011720"
									},
									"Children": [
										{
											"ID": "20250320011646-f99htii",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250320011646-f99htii",
												"updated": "20250320011646"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "写法二： "
												}
											]
										},
										{
											"ID": "20250320011710-ysk4lsa",
											"Type": "NodeList",
											"ListData": {},
											"Properties": {
												"id": "20250320011710-ysk4lsa",
												"updated": "20250320011720"
											},
											"Children": [
												{
													"ID": "20250320011710-i7hugfu",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20250320011710-i7hugfu",
														"updated": "20250320011717"
													},
													"Children": [
														{
															"ID": "20250320011710-d4dc1p3",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20250320011710-d4dc1p3",
																"updated": "20250320011717"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "​"
																},
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "code",
																	"TextMarkTextContent": "输出颜色rgb = 源因子 * 片元颜色的rgb + 目标因子 * 颜色缓冲区中颜色的rgb"
																},
																{
																	"Type": "NodeText",
																	"Data": "​"
																}
															]
														}
													]
												},
												{
													"ID": "20250320011713-wr502y0",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20250320011713-wr502y0",
														"updated": "20250320011720"
													},
													"Children": [
														{
															"ID": "20250320011713-304ggw3",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20250320011713-304ggw3",
																"updated": "20250320011720"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "​"
																},
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "code",
																	"TextMarkTextContent": "输出颜色a = 源因子 * 片元颜色的a + 目标因子 * 颜色缓冲区中颜色的a"
																},
																{
																	"Type": "NodeText",
																	"Data": "​"
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20250320011720-nt639sa",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250320011720-nt639sa",
				"updated": "20250320011720"
			}
		}
	]
}