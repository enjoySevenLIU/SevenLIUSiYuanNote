{
	"ID": "20240703173803-2q3c73d",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20240703173803-2q3c73d",
		"title": "MINo.1——模拟面试题",
		"type": "doc",
		"updated": "20240703175148"
	},
	"Children": [
		{
			"ID": "20240703174057-73uag72",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240703174057-73uag72",
				"updated": "20240703175148"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "问题"
				}
			]
		},
		{
			"ID": "20240703173816-dew2xg8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240703173816-dew2xg8",
				"updated": "20240703174131"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "C#"
				}
			]
		},
		{
			"ID": "20240703173816-n9szjwj",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240703173816-n9szjwj",
				"updated": "20240703174131"
			},
			"Children": [
				{
					"ID": "20240703173925-dyy2gkt",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20240703173925-dyy2gkt",
						"updated": "20240703173925"
					},
					"Children": [
						{
							"ID": "20240703173925-fu1d4zy",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240703173925-fu1d4zy",
								"updated": "20240703173925"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "装箱和拆箱是什么？"
								}
							]
						}
					]
				},
				{
					"ID": "20240703173925-2n9cbik",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20240703173925-2n9cbik",
						"updated": "20240703173925"
					},
					"Children": [
						{
							"ID": "20240703173925-f6pb2s5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240703173925-f6pb2s5",
								"updated": "20240703173925"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "值和引用类型在变量赋值时的区别是什么？"
								}
							]
						}
					]
				},
				{
					"ID": "20240703173925-a59ukyl",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20240703173925-a59ukyl",
						"updated": "20240703173925"
					},
					"Children": [
						{
							"ID": "20240703173925-wdxsh6c",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240703173925-wdxsh6c",
								"updated": "20240703173925"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "委托和事件在使用上的区别是什么？"
								}
							]
						}
					]
				},
				{
					"ID": "20240703173925-2162sp8",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20240703173925-2162sp8",
						"updated": "20240703173925"
					},
					"Children": [
						{
							"ID": "20240703173925-l8qdeyc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240703173925-l8qdeyc",
								"updated": "20240703173925"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "有两个接口IA和IB，他们中有一个同名方法Test()，一个类同时继承这两个接口，应该如何处理他们的同名方法？"
								}
							]
						}
					]
				},
				{
					"ID": "20240703173925-qidos8a",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NS4=",
						"Num": 5
					},
					"Properties": {
						"id": "20240703173925-qidos8a",
						"updated": "20240703173925"
					},
					"Children": [
						{
							"ID": "20240703173925-r0zjl1z",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240703173925-r0zjl1z",
								"updated": "20240703173925"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "请说明C#中的List是如何扩容的"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240703173816-00dao0f",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240703173816-00dao0f",
				"updated": "20240703174131"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "Unity"
				}
			]
		},
		{
			"ID": "20240703173816-xuyfzz8",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240703173816-xuyfzz8",
				"updated": "20240703174131"
			},
			"Children": [
				{
					"ID": "20240703174038-aqca3ku",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20240703174038-aqca3ku",
						"updated": "20240703174038"
					},
					"Children": [
						{
							"ID": "20240703174038-ipgqcrm",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240703174038-ipgqcrm",
								"updated": "20240703174038"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Unity中点乘和叉乘对于我们来说的作用是什么？"
								}
							]
						}
					]
				},
				{
					"ID": "20240703174038-eba7wj8",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20240703174038-eba7wj8",
						"updated": "20240703174038"
					},
					"Children": [
						{
							"ID": "20240703174038-0j04s25",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240703174038-0j04s25",
								"updated": "20240703174040"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Unity中多线程执行下面哪些代码会报错？"
								}
							]
						},
						{
							"ID": "20240703174040-h31y3x2",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20240703174040-h31y3x2",
								"updated": "20240703174040"
							},
							"Children": [
								{
									"ID": "20240703174040-7k9xadi",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20240703174040-7k9xadi",
										"updated": "20240703174040"
									},
									"Children": [
										{
											"ID": "20240703174040-6ta02w0",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240703174040-6ta02w0",
												"updated": "20240703174040"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "A. Application.persistentDataPath\n"
												}
											]
										}
									]
								},
								{
									"ID": "20240703174041-ylixx3o",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20240703174041-ylixx3o"
									},
									"Children": [
										{
											"ID": "20240703174041-i8ct3q4",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240703174041-i8ct3q4"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "B. File.Exists(\"文件名\")\n"
												}
											]
										}
									]
								},
								{
									"ID": "20240703174042-911d035",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20240703174042-911d035"
									},
									"Children": [
										{
											"ID": "20240703174042-kh2i8x7",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240703174042-kh2i8x7"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "C. transform.Translate\n"
												}
											]
										}
									]
								},
								{
									"ID": "20240703174043-wx3ryuj",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20240703174043-wx3ryuj"
									},
									"Children": [
										{
											"ID": "20240703174043-asnu2fq",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240703174043-asnu2fq"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "D. Object.Destroy(对象)"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20240703174038-r776aav",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20240703174038-r776aav",
						"updated": "20240703174038"
					},
					"Children": [
						{
							"ID": "20240703174038-32nsf62",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240703174038-32nsf62",
								"updated": "20240703174038"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Application.streamingAssetsPath 和 Application.persistentDataPath 两个路径有何区别？对于我们的意义是什么？"
								}
							]
						}
					]
				},
				{
					"ID": "20240703174038-8bmh3qh",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20240703174038-8bmh3qh",
						"updated": "20240703174038"
					},
					"Children": [
						{
							"ID": "20240703174038-isqdp9u",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240703174038-isqdp9u",
								"updated": "20240703174038"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "请简述Unity中协程的原理"
								}
							]
						}
					]
				},
				{
					"ID": "20240703174038-kcxvpqk",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NS4=",
						"Num": 5
					},
					"Properties": {
						"id": "20240703174038-kcxvpqk",
						"updated": "20240703174038"
					},
					"Children": [
						{
							"ID": "20240703174038-c5qk9gz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240703174038-c5qk9gz",
								"updated": "20240703174038"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Unity底层如何处理C#代码？"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240703174028-hd4ehq9",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240703174028-hd4ehq9",
				"updated": "20240703175148"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "答案"
				}
			]
		},
		{
			"ID": "20240703174149-4cszr2o",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20240703174149-4cszr2o",
				"updated": "20240703175148"
			},
			"Children": [
				{
					"ID": "20240703174149-cv6tcbv",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240703174149-cv6tcbv",
						"updated": "20240703175148"
					},
					"Children": [
						{
							"ID": "20240703174149-yqa3gt5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240703174149-yqa3gt5",
								"updated": "20240703174149"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "No.1模拟面试答案"
								}
							]
						},
						{
							"ID": "20240703174149-8h09aik",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20240703174149-8h09aik",
								"updated": "20240703175148"
							},
							"Children": [
								{
									"ID": "20240703174149-11hfcqn",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20240703174149-11hfcqn",
										"updated": "20240703175148"
									},
									"Children": [
										{
											"ID": "20240703174149-osk8044",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240703174149-osk8044",
												"updated": "20240703174149"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "C#"
												}
											]
										},
										{
											"ID": "20240703174149-drn5w38",
											"Type": "NodeList",
											"ListData": {},
											"Properties": {
												"id": "20240703174149-drn5w38",
												"updated": "20240703174220"
											},
											"Children": [
												{
													"ID": "20240703174149-lx357k9",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20240703174149-lx357k9",
														"updated": "20240703174220"
													},
													"Children": [
														{
															"ID": "20240703174149-svzo8p9",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20240703174149-svzo8p9",
																"updated": "20240703174149"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "装箱和拆箱是指什么？"
																}
															]
														},
														{
															"ID": "20240703174149-zv998vu",
															"Type": "NodeList",
															"ListData": {},
															"Properties": {
																"id": "20240703174149-zv998vu",
																"updated": "20240703174220"
															},
															"Children": [
																{
																	"ID": "20240703174149-sb46bhv",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"id": "20240703174149-sb46bhv",
																		"updated": "20240703174220"
																	},
																	"Children": [
																		{
																			"ID": "20240703174149-q002ma0",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20240703174149-q002ma0",
																				"updated": "20240703174149"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "答案： "
																				}
																			]
																		},
																		{
																			"ID": "20240703174220-1yl9br7",
																			"Type": "NodeList",
																			"ListData": {},
																			"Properties": {
																				"id": "20240703174220-1yl9br7"
																			},
																			"Children": [
																				{
																					"ID": "20240703174219-i7iqsbc",
																					"Type": "NodeListItem",
																					"ListData": {
																						"BulletChar": 42,
																						"Marker": "Kg=="
																					},
																					"Properties": {
																						"id": "20240703174219-i7iqsbc"
																					},
																					"Children": [
																						{
																							"ID": "20240703174219-qcufdie",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20240703174219-qcufdie"
																							},
																							"Children": [
																								{
																									"Type": "NodeText",
																									"Data": "装箱——把栈中内容迁移到堆中去（值转引用） "
																								}
																							]
																						}
																					]
																				},
																				{
																					"ID": "20240703174223-zdue1k4",
																					"Type": "NodeListItem",
																					"ListData": {
																						"BulletChar": 42,
																						"Marker": "Kg=="
																					},
																					"Properties": {
																						"id": "20240703174223-zdue1k4"
																					},
																					"Children": [
																						{
																							"ID": "20240703174223-ae61gzd",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20240703174223-ae61gzd"
																							},
																							"Children": [
																								{
																									"Type": "NodeText",
																									"Data": "拆箱——把堆中内容迁移到栈中去（引用转值）"
																								}
																							]
																						}
																					]
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"ID": "20240703174149-hvcy3hz",
											"Type": "NodeList",
											"ListData": {},
											"Properties": {
												"id": "20240703174149-hvcy3hz",
												"updated": "20240703174149"
											},
											"Children": [
												{
													"ID": "20240703174149-wwt7fxz",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20240703174149-wwt7fxz",
														"updated": "20240703174149"
													},
													"Children": [
														{
															"ID": "20240703174149-4ka1y0x",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20240703174149-4ka1y0x",
																"updated": "20240703174149"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "值和引用类型在变量赋值时的区别是什么？"
																}
															]
														},
														{
															"ID": "20240703174149-ik28w65",
															"Type": "NodeList",
															"ListData": {},
															"Properties": {
																"id": "20240703174149-ik28w65",
																"updated": "20240703174149"
															},
															"Children": [
																{
																	"ID": "20240703174149-fka5foa",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"id": "20240703174149-fka5foa",
																		"updated": "20240703174149"
																	},
																	"Children": [
																		{
																			"ID": "20240703174149-0op7u2i",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20240703174149-0op7u2i",
																				"updated": "20240703174149"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "答案： 举例说明"
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"ID": "20240703174149-pqoa0gg",
											"Type": "NodeList",
											"ListData": {},
											"Properties": {
												"id": "20240703174149-pqoa0gg",
												"updated": "20240703174300"
											},
											"Children": [
												{
													"ID": "20240703174149-f08x5tb",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20240703174149-f08x5tb",
														"updated": "20240703174300"
													},
													"Children": [
														{
															"ID": "20240703174149-2p6j8vo",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20240703174149-2p6j8vo",
																"updated": "20240703174149"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "委托和事件在使用上的区别是什么？"
																}
															]
														},
														{
															"ID": "20240703174149-2937h10",
															"Type": "NodeList",
															"ListData": {},
															"Properties": {
																"id": "20240703174149-2937h10",
																"updated": "20240703174300"
															},
															"Children": [
																{
																	"ID": "20240703174149-6p5a7iw",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"id": "20240703174149-6p5a7iw",
																		"updated": "20240703174300"
																	},
																	"Children": [
																		{
																			"ID": "20240703174149-8lzjupb",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20240703174149-8lzjupb",
																				"updated": "20240703174300"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "答案： 事件相对委托来说，事件在外部使用时只能 "
																				},
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "code",
																					"TextMarkTextContent": "+="
																				},
																				{
																					"Type": "NodeText",
																					"Data": "​、"
																				},
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "code",
																					"TextMarkTextContent": "-="
																				},
																				{
																					"Type": "NodeText",
																					"Data": "​"
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"ID": "20240703174149-gxncsht",
											"Type": "NodeList",
											"ListData": {},
											"Properties": {
												"id": "20240703174149-gxncsht",
												"updated": "20240703175148"
											},
											"Children": [
												{
													"ID": "20240703174149-989k5f8",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20240703174149-989k5f8",
														"updated": "20240703175148"
													},
													"Children": [
														{
															"ID": "20240703174149-kj18nvy",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20240703174149-kj18nvy",
																"updated": "20240703174149"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "有两个接口IA和IB，他们中有一个同名方法Test() 一个类同时继承这两个接口，应该如何处理他们的同名方法？"
																}
															]
														},
														{
															"ID": "20240703174149-mxy9z4s",
															"Type": "NodeList",
															"ListData": {},
															"Properties": {
																"id": "20240703174149-mxy9z4s",
																"updated": "20240703175148"
															},
															"Children": [
																{
																	"ID": "20240703174149-85fa7en",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"id": "20240703174149-85fa7en",
																		"updated": "20240703175148"
																	},
																	"Children": [
																		{
																			"ID": "20240703174149-4iu42uw",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20240703174149-4iu42uw",
																				"updated": "20240703175148"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "答案：显式的实现接口 "
																				},
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "code",
																					"TextMarkTextContent": "IA.Test()"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "​、"
																				},
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "code",
																					"TextMarkTextContent": "IB.Test()"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "​"
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"ID": "20240703174149-lf274g4",
											"Type": "NodeList",
											"ListData": {},
											"Properties": {
												"id": "20240703174149-lf274g4",
												"updated": "20240703175114"
											},
											"Children": [
												{
													"ID": "20240703174149-pq67b93",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20240703174149-pq67b93",
														"updated": "20240703175114"
													},
													"Children": [
														{
															"ID": "20240703174149-tae1aht",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20240703174149-tae1aht",
																"updated": "20240703174149"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "请说明C#中的List是如何扩容的"
																}
															]
														},
														{
															"ID": "20240703174149-lg6vtzy",
															"Type": "NodeList",
															"ListData": {},
															"Properties": {
																"id": "20240703174149-lg6vtzy",
																"updated": "20240703175114"
															},
															"Children": [
																{
																	"ID": "20240703174149-zjbg0fq",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"id": "20240703174149-zjbg0fq",
																		"updated": "20240703175114"
																	},
																	"Children": [
																		{
																			"ID": "20240703174149-2kcfbyz",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20240703174149-2kcfbyz",
																				"updated": "20240703174149"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "答案：List的本质是数组"
																				}
																			]
																		},
																		{
																			"ID": "20240703174606-mrp4uc3",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20240703174606-mrp4uc3",
																				"updated": "20240703174613"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "笔者查询得到："
																				}
																			]
																		},
																		{
																			"ID": "20240703174614-ru2mfp1",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20240703174614-ru2mfp1",
																				"updated": "20240703174614"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "在C#中，"
																				},
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "code",
																					"TextMarkTextContent": "List\u0026lt;T\u0026gt;"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "​的扩容机制是通过倍增算法实现的。当"
																				},
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "code",
																					"TextMarkTextContent": "List\u0026lt;T\u0026gt;"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "​的元素数量达到当前容量时，它会创建一个新的数组，其容量是原数组的两倍，然后将原数组的元素复制到新数组中。例如，如果原数组的容量是4，当添加第五个元素时，"
																				},
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "code",
																					"TextMarkTextContent": "List\u0026lt;T\u0026gt;"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "​会扩容到8，以此类推。"
																				}
																			]
																		},
																		{
																			"ID": "20240703174614-8c9a61w",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20240703174614-8c9a61w",
																				"updated": "20240703175031"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "具体来说，如果"
																				},
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "code",
																					"TextMarkTextContent": "List\u0026lt;T\u0026gt;"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "​的内部数组"
																				},
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "code",
																					"TextMarkTextContent": "_items"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "​的长度为0，它会初始化为4个容量。\n之后，每次需要扩容时，它会将"
																				},
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "code",
																					"TextMarkTextContent": "_items"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "​的长度翻倍。这里有一个C#代码示例来演示这个过程："
																				}
																			]
																		},
																		{
																			"ID": "20240703174614-u5havs2",
																			"Type": "NodeCodeBlock",
																			"IsFencedCodeBlock": true,
																			"Properties": {
																				"id": "20240703174614-u5havs2",
																				"style": "line-height: 22px;",
																				"updated": "20240703175114"
																			},
																			"Children": [
																				{
																					"Type": "NodeCodeBlockFenceOpenMarker",
																					"Data": "```"
																				},
																				{
																					"Type": "NodeCodeBlockFenceInfoMarker",
																					"CodeBlockInfo": "YyM="
																				},
																				{
																					"Type": "NodeCodeBlockCode",
																					"Data": "var list1 = Enumerable.Range(0, (int)Math.Pow(2, 22)).ToList();\nvar list2 = new List\u003cint\u003e(list1);\nlist2.Add(1); // 添加一个元素触发扩容\nConsole.WriteLine($\"list1.Capacity = {list1.Capacity}\"); // 输出原始容量\nConsole.WriteLine($\"list2.Capacity = {list2.Capacity}\"); // 输出扩容后的容量\n"
																				},
																				{
																					"Type": "NodeCodeBlockFenceCloseMarker",
																					"Data": "```"
																				}
																			]
																		},
																		{
																			"ID": "20240703174952-rcht6no",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20240703174952-rcht6no",
																				"updated": "20240703174954"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "输出："
																				}
																			]
																		},
																		{
																			"ID": "20240703174954-fqsflx1",
																			"Type": "NodeCodeBlock",
																			"IsFencedCodeBlock": true,
																			"Properties": {
																				"id": "20240703174954-fqsflx1",
																				"style": "line-height: 22px;",
																				"updated": "20240703175019"
																			},
																			"Children": [
																				{
																					"Type": "NodeCodeBlockFenceOpenMarker",
																					"Data": "```"
																				},
																				{
																					"Type": "NodeCodeBlockFenceInfoMarker",
																					"CodeBlockInfo": "Yw=="
																				},
																				{
																					"Type": "NodeCodeBlockCode",
																					"Data": "list1.Capacity = 4194304\nlist2.Capacity = 8388608\n"
																				},
																				{
																					"Type": "NodeCodeBlockFenceCloseMarker",
																					"Data": "```"
																				}
																			]
																		},
																		{
																			"ID": "20240703174614-ohy88jj",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20240703174614-ohy88jj",
																				"updated": "20240703175001"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "在这个例子中，"
																				},
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "code",
																					"TextMarkTextContent": "list1"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "​ 的容量是 "
																				},
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "code",
																					"TextMarkTextContent": "2^22"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "​，当向 "
																				},
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "code",
																					"TextMarkTextContent": "list2"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "​ 添加一个元素时，它的容量会从 "
																				},
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "code",
																					"TextMarkTextContent": "2^22"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "​ 扩容到 "
																				},
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "code",
																					"TextMarkTextContent": "2^23"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "​。"
																				}
																			]
																		},
																		{
																			"ID": "20240703174614-3kkgbt6",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20240703174614-3kkgbt6",
																				"updated": "20240703175050"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "这种扩容机制确保了"
																				},
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "code",
																					"TextMarkTextContent": "List\u0026lt;T\u0026gt;"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "​在添加元素时能够动态地调整其大小，\n但也意味着在某些情况下可能会有额外的内存开销，因为每次扩容都会创建一个新的数组并复制旧数组的元素。\n因此，在处理大量数据时，合理预估"
																				},
																				{
																					"Type": "NodeTextMark",
																					"TextMarkType": "code",
																					"TextMarkTextContent": "List\u0026lt;T\u0026gt;"
																				},
																				{
																					"Type": "NodeText",
																					"Data": "​的初始容量可以提高性能和内存使用效率。"
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"ID": "20240703174149-bh5zw8p",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20240703174149-bh5zw8p",
										"updated": "20240703174149"
									},
									"Children": [
										{
											"ID": "20240703174149-y0kba69",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240703174149-y0kba69",
												"updated": "20240703174149"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "Unity"
												}
											]
										},
										{
											"ID": "20240703174149-5nmk53w",
											"Type": "NodeList",
											"ListData": {},
											"Properties": {
												"id": "20240703174149-5nmk53w",
												"updated": "20240703174149"
											},
											"Children": [
												{
													"ID": "20240703174149-4tl86id",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20240703174149-4tl86id",
														"updated": "20240703174149"
													},
													"Children": [
														{
															"ID": "20240703174149-714hzob",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20240703174149-714hzob",
																"updated": "20240703174149"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "问题一"
																}
															]
														},
														{
															"ID": "20240703174149-e64k6u9",
															"Type": "NodeList",
															"ListData": {},
															"Properties": {
																"id": "20240703174149-e64k6u9",
																"updated": "20240703174149"
															},
															"Children": [
																{
																	"ID": "20240703174149-7pfnl53",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"id": "20240703174149-7pfnl53",
																		"updated": "20240703174149"
																	},
																	"Children": [
																		{
																			"ID": "20240703174149-706r033",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20240703174149-706r033",
																				"updated": "20240703174149"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "Unity中点乘和叉乘对于我们来说的作用是什么？"
																				}
																			]
																		},
																		{
																			"ID": "20240703174149-a024gzp",
																			"Type": "NodeList",
																			"ListData": {},
																			"Properties": {
																				"id": "20240703174149-a024gzp",
																				"updated": "20240703174149"
																			},
																			"Children": [
																				{
																					"ID": "20240703174149-ovbf5l0",
																					"Type": "NodeListItem",
																					"ListData": {
																						"BulletChar": 42,
																						"Marker": "Kg=="
																					},
																					"Properties": {
																						"id": "20240703174149-ovbf5l0",
																						"updated": "20240703174149"
																					},
																					"Children": [
																						{
																							"ID": "20240703174149-qqerqcw",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20240703174149-qqerqcw",
																								"updated": "20240703174149"
																							},
																							"Children": [
																								{
																									"Type": "NodeText",
																									"Data": "答案： 点乘作用 1.判断对象的方位 2.计算两向量之间的夹角 叉乘作用 1.获取一个平面的法向量 2.得到两向量之间的左右位置关系"
																								}
																							]
																						}
																					]
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												},
												{
													"ID": "20240703174149-90c2gic",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20240703174149-90c2gic",
														"updated": "20240703174149"
													},
													"Children": [
														{
															"ID": "20240703174149-gj14cey",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20240703174149-gj14cey",
																"updated": "20240703174149"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "问题二"
																}
															]
														},
														{
															"ID": "20240703174149-l8jopgq",
															"Type": "NodeList",
															"ListData": {},
															"Properties": {
																"id": "20240703174149-l8jopgq",
																"updated": "20240703174149"
															},
															"Children": [
																{
																	"ID": "20240703174149-ogrgwap",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"id": "20240703174149-ogrgwap",
																		"updated": "20240703174149"
																	},
																	"Children": [
																		{
																			"ID": "20240703174149-tr4r6qd",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20240703174149-tr4r6qd",
																				"updated": "20240703174149"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "Unity中多线程执行下面哪些代码会报错？ A. Application.persistentDataPath B. File.Exists(\"文件名\") C. transform.Translate D. Object.Destroy(对象)"
																				}
																			]
																		},
																		{
																			"ID": "20240703174149-ggk39zr",
																			"Type": "NodeList",
																			"ListData": {},
																			"Properties": {
																				"id": "20240703174149-ggk39zr",
																				"updated": "20240703174149"
																			},
																			"Children": [
																				{
																					"ID": "20240703174149-9agmg2i",
																					"Type": "NodeListItem",
																					"ListData": {
																						"BulletChar": 42,
																						"Marker": "Kg=="
																					},
																					"Properties": {
																						"id": "20240703174149-9agmg2i",
																						"updated": "20240703174149"
																					},
																					"Children": [
																						{
																							"ID": "20240703174149-skyts4r",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20240703174149-skyts4r",
																								"updated": "20240703174149"
																							},
																							"Children": [
																								{
																									"Type": "NodeText",
																									"Data": "答案： A、C、D UnityEngine命名空间中相关类基本都不能被Unity中多线程使用"
																								}
																							]
																						}
																					]
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												},
												{
													"ID": "20240703174149-khqimw5",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20240703174149-khqimw5",
														"updated": "20240703174149"
													},
													"Children": [
														{
															"ID": "20240703174149-smika4x",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20240703174149-smika4x",
																"updated": "20240703174149"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "问题三"
																}
															]
														},
														{
															"ID": "20240703174149-0x3vnps",
															"Type": "NodeList",
															"ListData": {},
															"Properties": {
																"id": "20240703174149-0x3vnps",
																"updated": "20240703174149"
															},
															"Children": [
																{
																	"ID": "20240703174149-56t8mwm",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"id": "20240703174149-56t8mwm",
																		"updated": "20240703174149"
																	},
																	"Children": [
																		{
																			"ID": "20240703174149-pv0ip2z",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20240703174149-pv0ip2z",
																				"updated": "20240703174149"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "Application.streamingAssetsPath 和 Application.persistentDataPath 两个路径有何区别？对于我们的意义是什么？"
																				}
																			]
																		},
																		{
																			"ID": "20240703174149-cwgpvtu",
																			"Type": "NodeList",
																			"ListData": {},
																			"Properties": {
																				"id": "20240703174149-cwgpvtu",
																				"updated": "20240703174149"
																			},
																			"Children": [
																				{
																					"ID": "20240703174149-3vp7gfa",
																					"Type": "NodeListItem",
																					"ListData": {
																						"BulletChar": 42,
																						"Marker": "Kg=="
																					},
																					"Properties": {
																						"id": "20240703174149-3vp7gfa",
																						"updated": "20240703174149"
																					},
																					"Children": [
																						{
																							"ID": "20240703174149-5zbu0p2",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20240703174149-5zbu0p2",
																								"updated": "20240703174149"
																							},
																							"Children": [
																								{
																									"Type": "NodeText",
																									"Data": "答案： Application.streamingAssetsPath 只读 Application.persistentDataPath 可读可写  Application.streamingAssetsPath 适合放置一些默认2进制配置文件 Application.persistentDataPath  用于处理数据持久化，或作为热更新下载内容的存放目录，因为它可读可写"
																								}
																							]
																						}
																					]
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												},
												{
													"ID": "20240703174149-vkckzed",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20240703174149-vkckzed",
														"updated": "20240703174149"
													},
													"Children": [
														{
															"ID": "20240703174149-elacadb",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20240703174149-elacadb",
																"updated": "20240703174149"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "问题四"
																}
															]
														},
														{
															"ID": "20240703174149-5j942o9",
															"Type": "NodeList",
															"ListData": {},
															"Properties": {
																"id": "20240703174149-5j942o9",
																"updated": "20240703174149"
															},
															"Children": [
																{
																	"ID": "20240703174149-2asw6qs",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"id": "20240703174149-2asw6qs",
																		"updated": "20240703174149"
																	},
																	"Children": [
																		{
																			"ID": "20240703174149-g86gx5f",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20240703174149-g86gx5f",
																				"updated": "20240703174149"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "请简述Unity中协程的原理"
																				}
																			]
																		},
																		{
																			"ID": "20240703174149-ncp3yg0",
																			"Type": "NodeList",
																			"ListData": {},
																			"Properties": {
																				"id": "20240703174149-ncp3yg0",
																				"updated": "20240703174149"
																			},
																			"Children": [
																				{
																					"ID": "20240703174149-1m7lco4",
																					"Type": "NodeListItem",
																					"ListData": {
																						"BulletChar": 42,
																						"Marker": "Kg=="
																					},
																					"Properties": {
																						"id": "20240703174149-1m7lco4",
																						"updated": "20240703174149"
																					},
																					"Children": [
																						{
																							"ID": "20240703174149-zgrpzrk",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20240703174149-zgrpzrk",
																								"updated": "20240703174149"
																							},
																							"Children": [
																								{
																									"Type": "NodeText",
																									"Data": "答案： Unity中的协同程序分为两部分 1.协程函数本体（迭代器函数） 2.协程调度器（协程管理器） 协程利用迭代器函数的分步执行的特点 加上 协程调度器对迭代器函数们进行统一管理 根据迭代器函数的返回值来决定下一次执行函数逻辑的时间点 从而实现逻辑分时分步执行的目的"
																								}
																							]
																						}
																					]
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												},
												{
													"ID": "20240703174149-icm6jzr",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20240703174149-icm6jzr",
														"updated": "20240703174149"
													},
													"Children": [
														{
															"ID": "20240703174149-svfjcrg",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20240703174149-svfjcrg",
																"updated": "20240703174149"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "问题五"
																}
															]
														},
														{
															"ID": "20240703174149-1kv1v4k",
															"Type": "NodeList",
															"ListData": {},
															"Properties": {
																"id": "20240703174149-1kv1v4k",
																"updated": "20240703174149"
															},
															"Children": [
																{
																	"ID": "20240703174149-vwarcbz",
																	"Type": "NodeListItem",
																	"ListData": {
																		"BulletChar": 42,
																		"Marker": "Kg=="
																	},
																	"Properties": {
																		"id": "20240703174149-vwarcbz",
																		"updated": "20240703174149"
																	},
																	"Children": [
																		{
																			"ID": "20240703174149-kndpb3f",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20240703174149-kndpb3f",
																				"updated": "20240703174149"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "Unity底层如何处理C#代码？"
																				}
																			]
																		},
																		{
																			"ID": "20240703174149-0rlj3m7",
																			"Type": "NodeList",
																			"ListData": {},
																			"Properties": {
																				"id": "20240703174149-0rlj3m7",
																				"updated": "20240703174149"
																			},
																			"Children": [
																				{
																					"ID": "20240703174149-xefbuz8",
																					"Type": "NodeListItem",
																					"ListData": {
																						"BulletChar": 42,
																						"Marker": "Kg=="
																					},
																					"Properties": {
																						"id": "20240703174149-xefbuz8",
																						"updated": "20240703174149"
																					},
																					"Children": [
																						{
																							"ID": "20240703174149-1c12qak",
																							"Type": "NodeParagraph",
																							"Properties": {
																								"id": "20240703174149-1c12qak",
																								"updated": "20240703174149"
																							},
																							"Children": [
																								{
																									"Type": "NodeText",
																									"Data": "答案： 两种方案 Mono和IL2CPP"
																								}
																							]
																						},
																						{
																							"ID": "20240703174149-8phrvgy",
																							"Type": "NodeList",
																							"ListData": {},
																							"Properties": {
																								"id": "20240703174149-8phrvgy",
																								"updated": "20240703174149"
																							},
																							"Children": [
																								{
																									"ID": "20240703174149-9u76etf",
																									"Type": "NodeListItem",
																									"ListData": {
																										"BulletChar": 42,
																										"Marker": "Kg=="
																									},
																									"Properties": {
																										"id": "20240703174149-9u76etf",
																										"updated": "20240703174149"
																									},
																									"Children": [
																										{
																											"ID": "20240703174149-obb5te1",
																											"Type": "NodeParagraph",
																											"Properties": {
																												"id": "20240703174149-obb5te1",
																												"updated": "20240703174149"
																											},
																											"Children": [
																												{
																													"Type": "NodeText",
																													"Data": "Mono"
																												}
																											]
																										}
																									]
																								},
																								{
																									"ID": "20240703174149-qtxfe9t",
																									"Type": "NodeListItem",
																									"ListData": {
																										"BulletChar": 42,
																										"Marker": "Kg=="
																									},
																									"Properties": {
																										"id": "20240703174149-qtxfe9t",
																										"updated": "20240703174149"
																									},
																									"Children": [
																										{
																											"ID": "20240703174149-6jb7x92",
																											"Type": "NodeParagraph",
																											"Properties": {
																												"id": "20240703174149-6jb7x92",
																												"updated": "20240703174149"
																											},
																											"Children": [
																												{
																													"Type": "NodeText",
																													"Data": "IL2CPP"
																												}
																											]
																										}
																									]
																								}
																							]
																						}
																					]
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		}
	]
}