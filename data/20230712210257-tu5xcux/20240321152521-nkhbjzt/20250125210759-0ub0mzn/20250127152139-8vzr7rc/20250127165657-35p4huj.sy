{
	"ID": "20250127165657-35p4huj",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20250127165657-35p4huj",
		"title": "US4L8-3——消融效果",
		"type": "doc",
		"updated": "20250127214121"
	},
	"Children": [
		{
			"ID": "20250127165657-sjj85c8",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20250127165657-sjj85c8",
				"updated": "20250127210619"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "消融效果"
				}
			]
		},
		{
			"ID": "20250127165952-n5oenlu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250127165952-n5oenlu",
				"updated": "20250127170032"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "消融效果是模拟物体逐渐从屏幕上消失或溶解的过程"
				},
				{
					"Type": "NodeText",
					"Data": "，它通常利用"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "噪声纹理"
				},
				{
					"Type": "NodeText",
					"Data": "实现，使物体按照某种规则逐渐透明或完全不可见。"
				}
			]
		},
		{
			"ID": "20250127170038-t4hefw2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250127170038-t4hefw2",
				"updated": "20250127170048"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这种效果常用于："
				}
			]
		},
		{
			"ID": "20250127170048-w0uxivg",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20250127170048-w0uxivg",
				"updated": "20250127170048"
			},
			"Children": [
				{
					"ID": "20250127170048-usiqnaj",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20250127170048-usiqnaj",
						"updated": "20250127170048"
					},
					"Children": [
						{
							"ID": "20250127170048-a2lzx8e",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127170048-a2lzx8e",
								"updated": "20250127170048"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "角色死亡、传送场景\n"
								}
							]
						}
					]
				},
				{
					"ID": "20250127170051-ny3eu7b",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20250127170051-ny3eu7b",
						"updated": "20250127170051"
					},
					"Children": [
						{
							"ID": "20250127170051-oep3v5m",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127170051-oep3v5m",
								"updated": "20250127170051"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "魔法消失，比如燃烧、消失等"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20250127210619-p2h5l4e",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250127210619-p2h5l4e",
				"updated": "20250127210619"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"style": "width: 332px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20250127205738-cxgbosk.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 332px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20250127170113-cqv9c3g",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20250127170113-cqv9c3g",
				"updated": "20250127195929"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "消融效果基本原理"
				}
			]
		},
		{
			"ID": "20250127170119-e1kqdnr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250127170119-e1kqdnr",
				"updated": "20250127170132"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一句话总结消融效果基本原理："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "通过对比噪声纹理值与消融进度参数，剔除低于阈值的像素，同时在边缘添加渐变颜色实现动态溶解效果。"
				}
			]
		},
		{
			"ID": "20250127170135-o8y6sbb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250127170135-o8y6sbb",
				"updated": "20250127170135"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "关键点："
				}
			]
		},
		{
			"ID": "20250127170124-eff1ufb",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20250127170124-eff1ufb",
				"updated": "20250127195929"
			},
			"Children": [
				{
					"ID": "20250127170124-9x0rjfi",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20250127170124-9x0rjfi",
						"updated": "20250127170124"
					},
					"Children": [
						{
							"ID": "20250127170124-39yb7ic",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127170124-39yb7ic",
								"updated": "20250127170124"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如何剔除像素"
								}
							]
						},
						{
							"ID": "20250127170145-bbngknu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127170145-bbngknu",
								"updated": "20250127170218"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "我们在片元着色器中对噪声纹理进行采样，由于噪声纹理是灰度图，只需取出其中的RGB中的任意一通道的颜色来使用。\n再自定义一个用于控制消融进度的参数（0"
								},
								{
									"Type": "NodeBackslash",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "~"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "1），最后利用该片元的 噪声纹理值 减去 进度参数\n若小于 0 则不渲染该片元，通过控制进度参数，便可以控制消融程度了"
								}
							]
						},
						{
							"ID": "20250127171517-dqb22h8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127171517-dqb22h8",
								"updated": "20250127171528"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeImage",
									"Data": "span",
									"Properties": {
										"style": "width: 154px;"
									},
									"Children": [
										{
											"Type": "NodeBang"
										},
										{
											"Type": "NodeOpenBracket"
										},
										{
											"Type": "NodeLinkText",
											"Data": "image"
										},
										{
											"Type": "NodeCloseBracket"
										},
										{
											"Type": "NodeOpenParen"
										},
										{
											"Type": "NodeLinkDest",
											"Data": "assets/image-20250127154324-xagqmk5.png"
										},
										{
											"Type": "NodeCloseParen"
										}
									]
								},
								{
									"Type": "NodeKramdownSpanIAL",
									"Data": "{: style=\"width: 154px;\"}"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"ID": "20250127170220-od1xhit",
							"Type": "NodeBlockquote",
							"Properties": {
								"id": "20250127170220-od1xhit",
								"updated": "20250127170233"
							},
							"Children": [
								{
									"Type": "NodeBlockquoteMarker",
									"Data": "\u003e"
								},
								{
									"ID": "20250127170233-l665jk8",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20250127170233-l665jk8",
										"updated": "20250127170255"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "Unity Shader中 提供了一个内置函数 "
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "code",
											"TextMarkTextContent": "clip(x)"
										},
										{
											"Type": "NodeText",
											"Data": "​，它的作用就是在片元着色器中调用时来丢弃片元的，\n传入的值x小于0，则会丢弃当前片元，被丢弃的片元不会被进一步处理也就不会被渲染了"
										}
									]
								},
								{
									"ID": "20250127170256-82pb0ov",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20250127170256-82pb0ov",
										"updated": "20250127170307"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "相关内容可见："
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "block-ref",
											"TextMarkBlockRefID": "20241120123139-t3fekhe",
											"TextMarkBlockRefSubtype": "d",
											"TextMarkTextContent": "US3S3L4——透明度测试"
										}
									]
								}
							]
						},
						{
							"ID": "20250127170309-fsd452o",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20250127170309-fsd452o",
								"style": "line-height: 22px;",
								"updated": "20250127170532"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "Yw=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "fixed4 frag(v2f i) : SV_Target\n{\n    // 噪声图上的颜色是线性随机的，我们通过一个消融阈值来控制，当颜色值（0~1）的值小于该阈值时，抛弃对应像素不渲染，使其出现局部镂空效果\n    fixed3 noiseColor = tex2D(_Noise, i.uv2.xy).rgb;\n    clip(noiseColor.r - _Dissolve);\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20250127170124-eg4dhbj",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20250127170124-eg4dhbj",
						"updated": "20250127195929"
					},
					"Children": [
						{
							"ID": "20250127170124-vq6ca6s",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127170124-vq6ca6s",
								"updated": "20250127170217"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如何处理边缘"
								}
							]
						},
						{
							"ID": "20250127170816-hz637ll",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127170816-hz637ll",
								"updated": "20250127170823"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在处理边缘渐变颜色效果时，我们将使用 Unity 中内置的三个 Shader 函数："
								}
							]
						},
						{
							"ID": "20250127170824-10qtv3k",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20250127170824-10qtv3k",
								"updated": "20250127170824"
							},
							"Children": [
								{
									"ID": "20250127170823-bpwjp29",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20250127170823-bpwjp29",
										"updated": "20250127170823"
									},
									"Children": [
										{
											"ID": "20250127170823-gfxq0uy",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127170823-gfxq0uy",
												"updated": "20250127170910"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "​"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "smoothstep(a, b, x)"
												}
											]
										},
										{
											"ID": "20250127170933-in8r9lz",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127170933-in8r9lz",
												"updated": "20250127171315"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "​"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "a"
												},
												{
													"Type": "NodeText",
													"Data": "​ 起始值；"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "b"
												},
												{
													"Type": "NodeText",
													"Data": "​ 结束值；"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "x"
												},
												{
													"Type": "NodeText",
													"Data": "​ 输入值（用于在 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "a"
												},
												{
													"Type": "NodeText",
													"Data": "​ 和 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "b"
												},
												{
													"Type": "NodeText",
													"Data": "​ 之间平滑插值），\n当 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "x \u0026lt; a"
												},
												{
													"Type": "NodeText",
													"Data": "​ 时，返回 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "0"
												},
												{
													"Type": "NodeText",
													"Data": "​；当 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "x \u0026gt; b"
												},
												{
													"Type": "NodeText",
													"Data": "​ 时，返回 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "1"
												},
												{
													"Type": "NodeText",
													"Data": "​；"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "a \u0026lt; x \u0026lt; b"
												},
												{
													"Type": "NodeText",
													"Data": "​ 时，返回 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "0~1"
												},
												{
													"Type": "NodeText",
													"Data": "​ 之间的值"
												}
											]
										}
									]
								},
								{
									"ID": "20250127170911-zdfiq2m",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20250127170911-zdfiq2m",
										"updated": "20250127170911"
									},
									"Children": [
										{
											"ID": "20250127170911-hfam7co",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127170911-hfam7co",
												"updated": "20250127170919"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "​"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "lerp(a, b, t)"
												},
												{
													"Type": "NodeText",
													"Data": "​"
												}
											]
										},
										{
											"ID": "20250127171135-6ja84zl",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127171135-6ja84zl",
												"updated": "20250127171313"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "​"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "a"
												},
												{
													"Type": "NodeText",
													"Data": "​ 起始值；"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "b"
												},
												{
													"Type": "NodeText",
													"Data": "​ 结束值；"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "t"
												},
												{
													"Type": "NodeText",
													"Data": "​ 插值因子，\n当 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "t = 0"
												},
												{
													"Type": "NodeText",
													"Data": "​ 时，返回 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "a"
												},
												{
													"Type": "NodeText",
													"Data": "​；当 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "t = 1"
												},
												{
													"Type": "NodeText",
													"Data": "​ 时，返回 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "b"
												},
												{
													"Type": "NodeText",
													"Data": "​；当 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "0 \u0026lt; t \u0026lt; 1"
												},
												{
													"Type": "NodeText",
													"Data": "​ 时；返回 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "a"
												},
												{
													"Type": "NodeText",
													"Data": "​ 和 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "b"
												},
												{
													"Type": "NodeText",
													"Data": "​ 之间的值"
												}
											]
										}
									]
								},
								{
									"ID": "20250127170920-tt53j2d",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20250127170920-tt53j2d",
										"updated": "20250127170920"
									},
									"Children": [
										{
											"ID": "20250127170920-b7xbmnn",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127170920-b7xbmnn",
												"updated": "20250127170929"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "​"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "step(value, x)"
												}
											]
										},
										{
											"ID": "20250127171236-3ywkjoa",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127171236-3ywkjoa",
												"updated": "20250127171309"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "​"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "value"
												},
												{
													"Type": "NodeText",
													"Data": "​ 阈值，"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "x"
												},
												{
													"Type": "NodeText",
													"Data": "​ 输入值；两值用于比较，"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "x \u0026lt; value"
												},
												{
													"Type": "NodeText",
													"Data": "​，返回 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "0"
												},
												{
													"Type": "NodeText",
													"Data": "​；"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "x \u0026gt;= value"
												},
												{
													"Type": "NodeText",
													"Data": "​，返回 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "1"
												},
												{
													"Type": "NodeText",
													"Data": "​"
												}
											]
										}
									]
								}
							]
						},
						{
							"ID": "20250127171420-d4lcmqq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127171420-d4lcmqq",
								"updated": "20250127195036"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "首先我们利用 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "smoothstep"
								},
								{
									"Type": "NodeText",
									"Data": "​ 函数决定边缘颜色，我们利用 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "噪声颜色值 减去 消融进度值"
								},
								{
									"Type": "NodeText",
									"Data": " 得到一个 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "剔除阈值Value"
								},
								{
									"Type": "NodeText",
									"Data": "\n然后自定义一个边缘范围值 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "_Range"
								},
								{
									"Type": "NodeText",
									"Data": "​，然后用 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "smoothstep"
								},
								{
									"Type": "NodeText",
									"Data": "​ 函数来得到一个值 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "t"
								},
								{
									"Type": "NodeText",
									"Data": "​，我们根据这个 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "t"
								},
								{
									"Type": "NodeText",
									"Data": "​ 来从渐变纹理采样\n这样就能做到，片元越接近消融的边缘，颜色就越接近纹理右侧的颜色的效果"
								}
							]
						},
						{
							"ID": "20250127194830-s92hc3l",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127194830-s92hc3l",
								"updated": "20250127194902"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeImage",
									"Data": "span",
									"Properties": {
										"style": "width: 149px;"
									},
									"Children": [
										{
											"Type": "NodeBang"
										},
										{
											"Type": "NodeOpenBracket"
										},
										{
											"Type": "NodeLinkText",
											"Data": "image"
										},
										{
											"Type": "NodeCloseBracket"
										},
										{
											"Type": "NodeOpenParen"
										},
										{
											"Type": "NodeLinkDest",
											"Data": "assets/image-20250127155900-6g89cw5.png"
										},
										{
											"Type": "NodeCloseParen"
										}
									]
								},
								{
									"Type": "NodeKramdownSpanIAL",
									"Data": "{: style=\"width: 149px;\"}"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"ID": "20250127194739-tx520yf",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127194739-tx520yf",
								"updated": "20250127195141"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "接着，我们在原本的颜色和渐变颜色之间进行 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "lerp"
								},
								{
									"Type": "NodeText",
									"Data": "​ 插值，决定使用哪个颜色"
								}
							]
						},
						{
							"ID": "20250127194415-s3jq75l",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20250127194415-s3jq75l",
								"style": "line-height: 22px;",
								"updated": "20250127195638"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "Yw=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "// 边缘越趋近于不渲染的像素点，noiseColor.r - _Dissolve的值就越小，进而t也就越趋近于1\nfixed t = 1 - smoothstep(0, _Range, noiseColor.r - _Dissolve);\nfixed3 gradientColor = tex2D(_Gradient, fixed2(t, 0.5)).rgb;\t// t越趋近于1，颜色就越趋近于外火焰颜色（渐变纹理右侧颜色）\n// 越趋近于边缘的像素点，越应该趋近于使用渐变纹理中的颜色，而step(0.00001, _Dissolve)的目的是当_Dissolve为0时，始终不会使用渐变纹理的颜色\nfixed3 finalColor = lerp(color, gradientColor, t * step(0.00001, _Dissolve));\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20250127195653-feedkkr",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127195653-feedkkr",
								"updated": "20250127195929"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "利用 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "smoothstep"
								},
								{
									"Type": "NodeText",
									"Data": "​ 结合消融阈值来决定在渐变纹理中采用的渐变颜色，\n利用 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "lerp"
								},
								{
									"Type": "NodeText",
									"Data": "​ 来决定在原始颜色和边缘渐变颜色中使用哪个颜色，\n利用 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "step"
								},
								{
									"Type": "NodeText",
									"Data": "​ 来确保尚未消融时（即 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "_Dissolve"
								},
								{
									"Type": "NodeText",
									"Data": "​ 为 0 时）不会使用渐变颜色，\n利用自定义参数来决定边缘范围，从而实现消融边缘渐变色"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20250127170133-763nx7o",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20250127170133-763nx7o",
				"updated": "20250127214121"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "消融效果具体实现"
				}
			]
		},
		{
			"ID": "20250127213951-wbt8tdv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250127213951-wbt8tdv",
				"updated": "20250127214004"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用如下的噪声图和渐变纹理："
				}
			]
		},
		{
			"ID": "20250127214023-48p5d1p",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250127214023-48p5d1p",
				"updated": "20250127214121"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"style": "width: 242px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Noise"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Noise-20250127214023-2b5g91r.jpg"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 242px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"style": "width: 241px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Gradient"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Gradient-20250127214023-lh6k9ex.jpg"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 241px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​​​"
				}
			]
		},
		{
			"ID": "20250127200055-thp335n",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20250127200055-thp335n",
				"updated": "20250127210241"
			},
			"Children": [
				{
					"ID": "20250127200106-0ilywck",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20250127200106-0ilywck",
						"updated": "20250127200106"
					},
					"Children": [
						{
							"ID": "20250127200106-kcosi3p",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127200106-kcosi3p",
								"updated": "20250127200143"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "新建 Shader "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Dissolve"
								},
								{
									"Type": "NodeText",
									"Data": "​，复用切线空间下法线纹理 Shader"
								}
							]
						},
						{
							"ID": "20250127200145-0voqx4h",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127200145-0voqx4h",
								"updated": "20250127200157"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "代码详见："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "block-ref",
									"TextMarkBlockRefID": "20241031103227-dkxubmy",
									"TextMarkBlockRefSubtype": "d",
									"TextMarkTextContent": "US3S2L6——切线空间下计算法线纹理贴图"
								}
							]
						}
					]
				},
				{
					"ID": "20250127200106-f1e5lwj",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20250127200106-f1e5lwj",
						"updated": "20250127200106"
					},
					"Children": [
						{
							"ID": "20250127200106-fiyqjr0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127200106-fiyqjr0",
								"updated": "20250127200106"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "添加属性"
								}
							]
						},
						{
							"ID": "20250127200210-ps7qfp8",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20250127200210-ps7qfp8",
								"updated": "20250127200213"
							},
							"Children": [
								{
									"ID": "20250127200213-vahrfur",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20250127200213-vahrfur",
										"updated": "20250127200213"
									},
									"Children": [
										{
											"ID": "20250127200213-nl0quyn",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127200213-nl0quyn",
												"updated": "20250127200221"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "​"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "_Noise"
												},
												{
													"Type": "NodeText",
													"Data": "​ 噪声纹理\n"
												}
											]
										}
									]
								},
								{
									"ID": "20250127200213-u6qacej",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20250127200213-u6qacej",
										"updated": "20250127200213"
									},
									"Children": [
										{
											"ID": "20250127200213-z2qg913",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127200213-z2qg913",
												"updated": "20250127200219"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "​"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "_Gradient"
												},
												{
													"Type": "NodeText",
													"Data": "​ 渐变纹理\n"
												}
											]
										}
									]
								},
								{
									"ID": "20250127200213-n683qrb",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20250127200213-n683qrb",
										"updated": "20250127200213"
									},
									"Children": [
										{
											"ID": "20250127200213-nxs31xc",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127200213-nxs31xc",
												"updated": "20250127200217"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "​"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "_Dissolve"
												},
												{
													"Type": "NodeText",
													"Data": "​ 消融进度\n"
												}
											]
										}
									]
								},
								{
									"ID": "20250127200214-0xo2el2",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20250127200214-0xo2el2",
										"updated": "20250127200214"
									},
									"Children": [
										{
											"ID": "20250127200214-r0yqmwz",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127200214-r0yqmwz",
												"updated": "20250127200215"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "​"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "_Range"
												},
												{
													"Type": "NodeText",
													"Data": "​ 边缘范围"
												}
											]
										}
									]
								}
							]
						},
						{
							"ID": "20250127200209-9ytqapy",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127200209-9ytqapy",
								"updated": "20250127200209"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "添加属性映射"
								}
							]
						},
						{
							"ID": "20250127201626-6o53hos",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20250127201626-6o53hos",
								"style": "line-height: 22px;",
								"updated": "20250127201632"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "Yw=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "Properties\n{\n    _MainColor(\"MainColor\", Color) = (1, 1, 1, 1)\n    _MainTex(\"MainTex\", 2D) = \"\"{}\n    _BumpMap(\"BumpMap\", 2D) = \"\"{}\n    _BumpScale(\"BumpScale\", Range(0, 1)) = 1\n    _SpecularColor(\"SpecularColor\", Color) = (1, 1, 1, 1)\n    _SpecularNum(\"SpecularNum\", Range(0, 20)) = 18\n    _Noise(\"Noise\", 2D) = \"\"{}                              // 噪声纹理\n    _Gradient(\"Gradient\", 2D) = \"\"{}                        // 渐变纹理\n    _Dissolve(\"Dissolve\", Range(0, 1)) = 0                  // 消融进度\n    _EdgeRange(\"EdgeRange\", Range(0, 1)) = 0                // 消融边界范围\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20250127200106-ori7u3d",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20250127200106-ori7u3d",
						"updated": "20250127200106"
					},
					"Children": [
						{
							"ID": "20250127200106-46qpmme",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127200106-46qpmme",
								"updated": "20250127200226"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "结构体 加入一个噪声纹理 UV"
								}
							]
						},
						{
							"ID": "20250127201636-hbgbqm6",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20250127201636-hbgbqm6",
								"style": "line-height: 22px;",
								"updated": "20250127201643"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "Yw=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "struct v2f\n{\n    float4 pos: SV_POSITION;\n    //float2 uvTex: TEXCOORD0;\n    //float2 uvBump: TEXCOORD1; //可以使用两个float2来分别存储主要纹理的uv和法线纹理的uv\n    float4 uv: TEXCOORD0;       //可以使用一个float4来同时存储主要纹理的uv（xy存储）和法线纹理的uv（zw存储）\n    float2 uvNoise: TEXCOORD1;  //噪声纹理的UV，用于之后计算偏移缩放\n    float3 lightDir: TEXCOORD2; //相对于切线空间下的光的方向\n    float3 viewDir: TEXCOORD3;  //相对于切线空间下的视角方向\n};\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20250127201536-i1ssszl",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20250127201536-i1ssszl",
						"updated": "20250127204936"
					},
					"Children": [
						{
							"ID": "20250127201536-z4a9s92",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127201536-z4a9s92",
								"updated": "20250127201555"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "顶点着色器"
								}
							]
						},
						{
							"ID": "20250127201555-arwtog4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127201555-arwtog4",
								"updated": "20250127201611"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "计算噪声纹理的偏移和缩放"
								}
							]
						},
						{
							"ID": "20250127204918-x56zmsm",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20250127204918-x56zmsm",
								"style": "line-height: 22px;",
								"updated": "20250127204936"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "Yw=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "v2f vert (appdata_full v)\n{\n    v2f data;\n  \n    data.pos = UnityObjectToClipPos(v.vertex);  //计算裁剪空间下顶点坐标\n    // 分别计算主纹理和法线纹理和噪声纹理的缩放平移\n    data.uv.xy = v.texcoord.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    data.uv.zw = v.texcoord.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n    data.uvNoise = v.texcoord.xy * _Noise_ST.xy + _Noise_ST.zw;\n\n    // 计算副切线\n    float3 binormal = cross(normalize(v.tangent), normalize(v.normal)) * v.tangent.w;\n    // 得到模型空间到切线空间的转换矩阵\n    float3x3 rotation = float3x3(\n        v.tangent.xyz,  //切线\n        binormal,       //副切线\n        v.normal        //法线\n    );\n  \n    data.lightDir = mul(rotation, ObjSpaceLightDir(v.vertex));  // 切线空间下的光的方向\n    data.viewDir = mul(rotation, ObjSpaceViewDir(v.vertex));    // 切线空间下的视角方向\n    data.worldPos = mul(unity_ObjectToWorld, v.vertex).xyz;     // 世界空间下的顶点位置\n\n    return data;\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20250127200106-ouxe7l1",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NS4=",
						"Num": 5
					},
					"Properties": {
						"id": "20250127200106-ouxe7l1",
						"updated": "20250127200106"
					},
					"Children": [
						{
							"ID": "20250127200106-25nhkp6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127200106-25nhkp6",
								"updated": "20250127200230"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "片元着色器\n"
								}
							]
						},
						{
							"ID": "20250127200231-4if5894",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20250127200231-4if5894",
								"updated": "20250127200232"
							},
							"Children": [
								{
									"ID": "20250127200232-tx4t8b2",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20250127200232-tx4t8b2",
										"updated": "20250127200232"
									},
									"Children": [
										{
											"ID": "20250127200232-8nx8gns",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127200232-8nx8gns",
												"updated": "20250127200234"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "剔除效果制作\n"
												}
											]
										},
										{
											"ID": "20250127200236-cq06xzc",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127200236-cq06xzc",
												"updated": "20250127200240"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "从噪声纹理中采样，利用 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "clip"
												},
												{
													"Type": "NodeText",
													"Data": "​ 函数进行剔除"
												}
											]
										}
									]
								},
								{
									"ID": "20250127200234-ra1xpg3",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "Mi4=",
										"Num": 2
									},
									"Properties": {
										"id": "20250127200234-ra1xpg3",
										"updated": "20250127200234"
									},
									"Children": [
										{
											"ID": "20250127200234-0o1c3rj",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127200234-0o1c3rj",
												"updated": "20250127200234"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "边缘渐变采样，范围控制，颜色插值\n"
												}
											]
										},
										{
											"ID": "20250127200250-6b7wd8k",
											"Type": "NodeList",
											"ListData": {},
											"Properties": {
												"id": "20250127200250-6b7wd8k",
												"updated": "20250127200253"
											},
											"Children": [
												{
													"ID": "20250127200253-nmgka2x",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20250127200253-nmgka2x",
														"updated": "20250127200253"
													},
													"Children": [
														{
															"ID": "20250127200253-fqfk5jh",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20250127200253-fqfk5jh",
																"updated": "20250127200302"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "利用 "
																},
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "code",
																	"TextMarkTextContent": "smoothstep"
																},
																{
																	"Type": "NodeText",
																	"Data": "​ 函数计算出采样系数"
																}
															]
														}
													]
												},
												{
													"ID": "20250127200254-47m3gd9",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20250127200254-47m3gd9",
														"updated": "20250127200254"
													},
													"Children": [
														{
															"ID": "20250127200254-oyvifj2",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20250127200254-oyvifj2",
																"updated": "20250127200258"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "利用 "
																},
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "code",
																	"TextMarkTextContent": "lerp"
																},
																{
																	"Type": "NodeText",
																	"Data": "​ 函数决定是用哪个颜色"
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"ID": "20250127204915-hxzhowc",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20250127204915-hxzhowc",
								"style": "line-height: 22px;",
								"updated": "20250127204915"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "Yw=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "fixed4 frag (v2f i) : SV_Target\n{\n    // 剔除 —— 消融\n    fixed3 noiseColor = tex2D(_Noise, i.uvNoise.xy).rgb;\n    // 用三目运算符来确保完全消融时不会出现出现残留\n    clip(_Dissolve == 1 ? -1 : noiseColor.r - _Dissolve);\n\n    float4 packedNormal = tex2D(_BumpMap, i.uv.zw);     // 获取法线纹理的颜色数据\n    float3 tangentNormal = UnpackNormal(packedNormal);  // 将颜色数据逆运算并解压缩，得到切线空间下法线数据\n    // 将法线数据的xy乘以凹凸系数，根据xy修正z，避免凹凸系数影响光照亮度\n    tangentNormal.xy *= _BumpScale;                 \n    tangentNormal.z = sqrt(1.0 - saturate(dot(tangentNormal.xy, tangentNormal.xy)));\n\n    // 计算带纹理颜色的BlinnPhong光照计算，这里使用已经计算好的切线数据\n    fixed3 albedo = tex2D(_MainTex, i.uv.xy).rgb * _MainColor.rgb;  // 反射率\n\n    // 漫反射光照计算：这里需要使用已经计算完毕的切线数据和光照方向，注意！这里的 tangentNormal 无需归一化\n    fixed3 lambertColor = _LightColor0.rgb * albedo.rgb * max(0, dot(tangentNormal, normalize(i.lightDir)));\n    // 高光反射光照计算：这里需要使用已经计算完毕的切线数据和光照方向\n    float3 halfA = normalize(normalize(i.viewDir) + normalize(i.lightDir));     // 半角向量\n    fixed3 specularColor = _LightColor0.rgb * _SpecularColor.rgb * pow(max(0, dot(tangentNormal, halfA)), _SpecularNum);\n    // 最终颜色计算\n    fixed3 color = UNITY_LIGHTMODEL_AMBIENT.rgb * albedo + lambertColor + specularColor;\n\n    // 需要在模型原本的颜色 和 消融边缘的颜色之间 选择\n    fixed value = 1 - smoothstep(0, _EdgeRange, noiseColor.r - _Dissolve);\n    fixed3 gradientColor = tex2D(_Gradient, fixed2(value, 0.5)).rgb;\n    // step(0.00001, _Dissolve)的目的是当_Dissolve为0时，始终不会使用渐变纹理的颜色\n    fixed3 finalColor = lerp(color, gradientColor, value * step(0.00001, _Dissolve));\n\n    return fixed4(finalColor.rgb, 1);\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20250127200318-s7s0jq8",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Ni4=",
						"Num": 6
					},
					"Properties": {
						"id": "20250127200318-s7s0jq8",
						"updated": "20250127200318"
					},
					"Children": [
						{
							"ID": "20250127200318-36vw035",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127200318-36vw035",
								"updated": "20250127200326"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "阴影相关添加"
								}
							]
						},
						{
							"ID": "20250127203849-31dtiqh",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20250127203849-31dtiqh",
								"updated": "20250127203849"
							},
							"Children": [
								{
									"ID": "20250127203849-b66kplj",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20250127203849-b66kplj",
										"updated": "20250127203849"
									},
									"Children": [
										{
											"ID": "20250127203849-xwl91yb",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127203849-xwl91yb",
												"updated": "20250127203849"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "加入 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "SHADOW_COORDS"
												},
												{
													"Type": "NodeText",
													"Data": "​、"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "TRANSFER_SHADOW"
												},
												{
													"Type": "NodeText",
													"Data": "​、"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "UNITY_LIGHT_ATTENUATION"
												},
												{
													"Type": "NodeText",
													"Data": "​"
												}
											]
										}
									]
								},
								{
									"ID": "20250127203849-518pe2w",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20250127203849-518pe2w",
										"updated": "20250127203849"
									},
									"Children": [
										{
											"ID": "20250127203849-ov6xkkt",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127203849-ov6xkkt",
												"updated": "20250127203849"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "加入 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "FallBack \u0026quot;Diffuse\u0026quot;"
												},
												{
													"Type": "NodeText",
													"Data": "​"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20250127200327-e9cp09p",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Ny4=",
						"Num": 7
					},
					"Properties": {
						"id": "20250127200327-e9cp09p",
						"updated": "20250127210241"
					},
					"Children": [
						{
							"ID": "20250127200327-vhmszoi",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127200327-vhmszoi",
								"updated": "20250127200331"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "阴影消融效果处理"
								}
							]
						},
						{
							"ID": "20250127204555-lx5bk9b",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127204555-lx5bk9b",
								"updated": "20250127204801"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "目前投射的阴影是没有消融效果的："
								}
							]
						},
						{
							"ID": "20250127204802-d7p4v3p",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127204802-d7p4v3p",
								"updated": "20250127204802"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeImage",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeBang"
										},
										{
											"Type": "NodeOpenBracket"
										},
										{
											"Type": "NodeLinkText",
											"Data": "image"
										},
										{
											"Type": "NodeCloseBracket"
										},
										{
											"Type": "NodeOpenParen"
										},
										{
											"Type": "NodeLinkDest",
											"Data": "assets/image-20250127204802-utvwgob.png"
										},
										{
											"Type": "NodeCloseParen"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"ID": "20250127204804-4e3gc3z",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127204804-4e3gc3z",
								"updated": "20250127204824"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "因此还需要以下的步骤让影子也可以消融："
								}
							]
						},
						{
							"ID": "20250127204555-7jmx34e",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20250127204555-7jmx34e",
								"updated": "20250127210241"
							},
							"Children": [
								{
									"ID": "20250127200346-nr5h97p",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20250127200346-nr5h97p",
										"updated": "20250127210241"
									},
									"Children": [
										{
											"ID": "20250127200346-o8xwqns",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127200346-o8xwqns",
												"updated": "20250127200401"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "复用自定义投射阴影 Shader 相关代码"
												}
											]
										},
										{
											"ID": "20250127200402-1e0nu14",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127200402-1e0nu14",
												"updated": "20250127210241"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "代码详见："
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "block-ref",
													"TextMarkBlockRefID": "20241204123549-jqerwvn",
													"TextMarkBlockRefSubtype": "d",
													"TextMarkTextContent": "US3S6L3——让物体投射阴影"
												},
												{
													"Type": "NodeText",
													"Data": " 的 让物体投射阴影的部分"
												}
											]
										}
									]
								},
								{
									"ID": "20250127200346-z67qj24",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "Mi4=",
										"Num": 2
									},
									"Properties": {
										"id": "20250127200346-z67qj24",
										"updated": "20250127200346"
									},
									"Children": [
										{
											"ID": "20250127200346-rsxp361",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127200346-rsxp361",
												"updated": "20250127200346"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "加入噪声纹理和消融进度属性映射"
												}
											]
										}
									]
								},
								{
									"ID": "20250127200346-8iel5cx",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "My4=",
										"Num": 3
									},
									"Properties": {
										"id": "20250127200346-8iel5cx",
										"updated": "20250127200346"
									},
									"Children": [
										{
											"ID": "20250127200346-ay3g00f",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127200346-ay3g00f",
												"updated": "20250127205220"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "结构体中加入 UV"
												}
											]
										},
										{
											"ID": "20250127205516-abwdlcb",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20250127205516-abwdlcb",
												"style": "line-height: 22px;",
												"updated": "20250127205524"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "Yw=="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "struct v2f\n{\n    float2 uvNoise: TEXCOORD0;  //噪声纹理的UV，用于之后计算偏移缩放\n    V2F_SHADOW_CASTER;\t// 顶点到片元着色器阴影投射结构体数据宏，定义了一些标准的成员变量，这些变量用于在阴影投射路径中传递顶点数据到片元着色器\n};\n\nsampler2D _Noise;       // 噪声纹理\nfloat4 _Noise_ST;       // 噪声纹理的缩放和平移\nfixed _Dissolve;        // 消融进度\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								},
								{
									"ID": "20250127200346-2ag46vy",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "NC4=",
										"Num": 4
									},
									"Properties": {
										"id": "20250127200346-2ag46vy",
										"updated": "20250127200346"
									},
									"Children": [
										{
											"ID": "20250127200346-0q6baks",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127200346-0q6baks",
												"updated": "20250127205223"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "顶点着色器中计算 UV 缩放偏移"
												}
											]
										},
										{
											"ID": "20250127205526-iuo9c18",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20250127205526-iuo9c18",
												"style": "line-height: 22px;",
												"updated": "20250127205535"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "Yw=="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "v2f vert(appdata_base v)\n{\n    v2f data;\n    data.uvNoise = v.texcoord.xy * _Noise_ST.xy + _Noise_ST.zw; // 计算噪声纹理的缩放平移\n    TRANSFER_SHADOW_CASTER_NORMALOFFSET(data);\t// 转移阴影投射器法线偏移宏，用于在顶点着色器中计算和传递阴影投射所需的变量\n    return data;\n}\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								},
								{
									"ID": "20250127200346-36r1sl5",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "NS4=",
										"Num": 5
									},
									"Properties": {
										"id": "20250127200346-36r1sl5",
										"updated": "20250127205543"
									},
									"Children": [
										{
											"ID": "20250127200346-5u0q5wi",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127200346-5u0q5wi",
												"updated": "20250127200346"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "片元着色器中剔除"
												}
											]
										},
										{
											"ID": "20250127205537-efuzu1k",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20250127205537-efuzu1k",
												"style": "line-height: 22px;",
												"updated": "20250127205543"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "Yw=="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "fixed4 frag(v2f i) : SV_Target\n{\n    // 剔除 —— 消融\n    fixed3 noiseColor = tex2D(_Noise, i.uvNoise.xy).rgb;\n    // 用三目运算符来确保完全消融时不会出现出现残留\n    clip(_Dissolve == 1 ? -1 : noiseColor.r - _Dissolve);\n    SHADOW_CASTER_FRAGMENT(i);\t//阴影投射片元宏，将深度值写入到阴影映射纹理中\n}\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20250127205635-t7vomof",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250127205635-t7vomof",
				"updated": "20250127205644"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "完整 Shader 代码如下："
				}
			]
		},
		{
			"ID": "20250127205645-aq9i4s0",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20250127205645-aq9i4s0",
				"style": "line-height: 22px;",
				"updated": "20250127205650"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Shader \"TeachShader/Dissolve\"\n{\n    Properties\n    {\n        _MainColor(\"MainColor\", Color) = (1, 1, 1, 1)\n        _MainTex(\"MainTex\", 2D) = \"\"{}\n        _BumpMap(\"BumpMap\", 2D) = \"\"{}\n        _BumpScale(\"BumpScale\", Range(0, 1)) = 1\n        _SpecularColor(\"SpecularColor\", Color) = (1, 1, 1, 1)\n        _SpecularNum(\"SpecularNum\", Range(0, 20)) = 18\n        _Noise(\"Noise\", 2D) = \"\"{}                              // 噪声纹理\n        _Gradient(\"Gradient\", 2D) = \"\"{}                        // 渐变纹理\n        _Dissolve(\"Dissolve\", Range(0, 1)) = 0                  // 消融进度\n        _EdgeRange(\"EdgeRange\", Range(0, 1)) = 0                // 消融边界范围\n    }\n    SubShader\n    {\n        // Bass Pass 基础渲染通道\n        Pass\n        {\n            Tags { \"LightMode\" = \"ForwardBase\" }\n\n            CGPROGRAM\n            #pragma vertex vert\n            #pragma fragment frag\n            #pragma multi_compile_fwdbase\n\n            #include \"UnityCG.cginc\"\n            #include \"Lighting.cginc\"\n            #include \"AutoLight.cginc\"\n\n            struct v2f\n            {\n                float4 pos: SV_POSITION;\n                //float2 uvTex: TEXCOORD0;\n                //float2 uvBump: TEXCOORD1; //可以使用两个float2来分别存储主要纹理的uv和法线纹理的uv\n                float4 uv: TEXCOORD0;       //可以使用一个float4来同时存储主要纹理的uv（xy存储）和法线纹理的uv（zw存储）\n                float2 uvNoise: TEXCOORD1;  //噪声纹理的UV，用于之后计算偏移缩放\n                float3 lightDir: TEXCOORD2; //相对于切线空间下的光的方向\n                float3 viewDir: TEXCOORD3;  //相对于切线空间下的视角方向\n                float3 worldPos: TEXCOORD4; //世界空间下的顶点坐标\n                SHADOW_COORDS(5)            //阴影坐标宏\n            };\n\n            float4 _MainColor;      // 漫反射颜色\n            sampler2D _MainTex;     // 颜色纹理\n            float4 _MainTex_ST;     // 颜色纹理的缩放和平移\n            sampler2D _BumpMap;     // 法线纹理\n            float4 _BumpMap_ST;     // 法线纹理的缩放和平移\n            float _BumpScale;       // 凹凸程度\n            float4 _SpecularColor;  // 高光颜色\n            fixed _SpecularNum;     // 光泽度\n            sampler2D _Noise;       // 噪声纹理\n            float4 _Noise_ST;       // 噪声纹理的缩放和平移\n            sampler2D _Gradient;    // 渐变纹理\n            float4 _Gradient_ST;    // 渐变纹理的缩放和平移\n            fixed _Dissolve;        // 消融进度\n            fixed _EdgeRange;       // 消融边界范围\n\n            v2f vert (appdata_full v)\n            {\n                v2f data;\n            \n                data.pos = UnityObjectToClipPos(v.vertex);  //计算裁剪空间下顶点坐标\n                // 分别计算主纹理和法线纹理和噪声纹理的缩放平移\n                data.uv.xy = v.texcoord.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n                data.uv.zw = v.texcoord.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n                data.uvNoise = v.texcoord.xy * _Noise_ST.xy + _Noise_ST.zw;\n\n                // 计算副切线\n                float3 binormal = cross(normalize(v.tangent), normalize(v.normal)) * v.tangent.w;\n                // 得到模型空间到切线空间的转换矩阵\n                float3x3 rotation = float3x3(\n                    v.tangent.xyz,  //切线\n                    binormal,       //副切线\n                    v.normal        //法线\n                );\n            \n                data.lightDir = mul(rotation, ObjSpaceLightDir(v.vertex));  // 切线空间下的光的方向\n                data.viewDir = mul(rotation, ObjSpaceViewDir(v.vertex));    // 切线空间下的视角方向\n                data.worldPos = mul(unity_ObjectToWorld, v.vertex).xyz;     // 世界空间下的顶点位置\n                TRANSFER_SHADOW(data);                                      // 阴影转换坐标相关宏\n\n                return data;\n            }\n\n            fixed4 frag (v2f i) : SV_Target\n            {\n                // 剔除 —— 消融\n                fixed3 noiseColor = tex2D(_Noise, i.uvNoise.xy).rgb;\n                // 用三目运算符来确保完全消融时不会出现出现残留\n                clip(_Dissolve == 1 ? -1 : noiseColor.r - _Dissolve);\n\n                float4 packedNormal = tex2D(_BumpMap, i.uv.zw);     // 获取法线纹理的颜色数据\n                float3 tangentNormal = UnpackNormal(packedNormal);  // 将颜色数据逆运算并解压缩，得到切线空间下法线数据\n                // 将法线数据的xy乘以凹凸系数，根据xy修正z，避免凹凸系数影响光照亮度\n                tangentNormal.xy *= _BumpScale;                 \n                tangentNormal.z = sqrt(1.0 - saturate(dot(tangentNormal.xy, tangentNormal.xy)));\n\n                // 计算带纹理颜色的BlinnPhong光照计算，这里使用已经计算好的切线数据\n                fixed3 albedo = tex2D(_MainTex, i.uv.xy).rgb * _MainColor.rgb;  // 反射率\n\n                // 漫反射光照计算：这里需要使用已经计算完毕的切线数据和光照方向，注意！这里的 tangentNormal 无需归一化\n                fixed3 lambertColor = _LightColor0.rgb * albedo.rgb * max(0, dot(tangentNormal, normalize(i.lightDir)));\n                // 高光反射光照计算：这里需要使用已经计算完毕的切线数据和光照方向\n                float3 halfA = normalize(normalize(i.viewDir) + normalize(i.lightDir));     // 半角向量\n                fixed3 specularColor = _LightColor0.rgb * _SpecularColor.rgb * pow(max(0, dot(tangentNormal, halfA)), _SpecularNum);\n                // 光照衰减计算\n                UNITY_LIGHT_ATTENUATION(atten, i, i.worldPos);\n                // 最终颜色计算\n                fixed3 color = UNITY_LIGHTMODEL_AMBIENT.rgb * albedo + lambertColor * atten + specularColor;\n\n                // 需要在模型原本的颜色 和 消融边缘的颜色之间 选择\n                fixed value = 1 - smoothstep(0, _EdgeRange, noiseColor.r - _Dissolve);\n                fixed3 gradientColor = tex2D(_Gradient, fixed2(value, 0.5)).rgb;\n                // step(0.00001, _Dissolve)的目的是当_Dissolve为0时，始终不会使用渐变纹理的颜色\n                fixed3 finalColor = lerp(color, gradientColor, value * step(0.00001, _Dissolve));\n\n                return fixed4(finalColor.rgb, 1);\n            }\n            ENDCG\n        }\n\n        // ShadowCaster Pass 投影阴影通道\n        Pass\n        {\n            Tags { \"LightMode\" = \"ShadowCaster\" }\n    \n            CGPROGRAM\n            #pragma vertex vert\n            #pragma fragment frag\n            // 告诉Unity编译器生成多个着色器变体，用于支持不同类型的阴影（SM，SSSM等等），确保着色器能够在所有可能的阴影投射模式下正确渲染\n            #pragma multi_compile_shadowcaster\n    \n            #include \"UnityCG.cginc\"\n    \n            struct v2f\n            {\n                float2 uvNoise: TEXCOORD0;  //噪声纹理的UV，用于之后计算偏移缩放\n                V2F_SHADOW_CASTER;\t// 顶点到片元着色器阴影投射结构体数据宏，定义了一些标准的成员变量，这些变量用于在阴影投射路径中传递顶点数据到片元着色器\n            };\n\n            sampler2D _Noise;       // 噪声纹理\n            float4 _Noise_ST;       // 噪声纹理的缩放和平移\n            fixed _Dissolve;        // 消融进度\n    \n            v2f vert(appdata_base v)\n            {\n                v2f data;\n                data.uvNoise = v.texcoord.xy * _Noise_ST.xy + _Noise_ST.zw; // 计算噪声纹理的缩放平移\n                TRANSFER_SHADOW_CASTER_NORMALOFFSET(data);\t// 转移阴影投射器法线偏移宏，用于在顶点着色器中计算和传递阴影投射所需的变量\n                return data;\n            }\n    \n            fixed4 frag(v2f i) : SV_Target\n            {\n                // 剔除 —— 消融\n                fixed3 noiseColor = tex2D(_Noise, i.uvNoise.xy).rgb;\n                // 用三目运算符来确保完全消融时不会出现出现残留\n                clip(_Dissolve == 1 ? -1 : noiseColor.r - _Dissolve);\n                SHADOW_CASTER_FRAGMENT(i);\t//阴影投射片元宏，将深度值写入到阴影映射纹理中\n            }\n            ENDCG\n        }\n\n    }\n\n    Fallback \"Diffuse\"\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20250127205701-lrra7a3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250127205701-lrra7a3",
				"updated": "20250127205725"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "显示效果（消融进度0.5，消融边界范围0.1）："
				}
			]
		},
		{
			"ID": "20250127205738-xriyz15",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250127205738-xriyz15",
				"updated": "20250127205738"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"style": "width: 332px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20250127205738-cxgbosk.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 332px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20250127205739-vg50z0o",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250127205739-vg50z0o",
				"updated": "20250127205901"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可见，控制消融进度即可让模型和阴影呈现消融效果，之后我们就可以通过 C"
				},
				{
					"Type": "NodeBackslash",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeText",
							"Data": "#"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 脚本等方式来控制模型的动态消融"
				}
			]
		}
	]
}