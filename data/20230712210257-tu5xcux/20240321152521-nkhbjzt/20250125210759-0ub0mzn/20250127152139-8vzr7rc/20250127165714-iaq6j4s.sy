{
	"ID": "20250127165714-iaq6j4s",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20250127165714-iaq6j4s",
		"title": "US4L8-4——水波效果",
		"type": "doc",
		"updated": "20250127222626"
	},
	"Children": [
		{
			"ID": "20250127165714-3eodufa",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20250127165714-3eodufa",
				"updated": "20250127212310"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "水波效果"
				}
			]
		},
		{
			"ID": "20250127210515-yx96mq2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250127210515-yx96mq2",
				"updated": "20250127210520"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "水波效果指在计算机图形学中模拟水面波纹的视觉效果，通常用于游戏、动画或者其他虚拟场景中。\n主要用于体现水体的动态感，比如水的波动、反射、折射、透明等，可以让人感觉像真实的水一样流动闪耀。"
				}
			]
		},
		{
			"ID": "20250127210522-ryv1iby",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250127210522-ryv1iby",
				"updated": "20250127210524"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "水波效果的核心特点就是："
				}
			]
		},
		{
			"ID": "20250127210524-ayh8whe",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20250127210524-ayh8whe",
				"updated": "20250127210524"
			},
			"Children": [
				{
					"ID": "20250127210524-12vmuqh",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20250127210524-12vmuqh",
						"updated": "20250127210524"
					},
					"Children": [
						{
							"ID": "20250127210524-12vu7md",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127210524-12vu7md",
								"updated": "20250127210524"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "动态波纹"
								}
							]
						}
					]
				},
				{
					"ID": "20250127210524-4tldvgt",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20250127210524-4tldvgt",
						"updated": "20250127210524"
					},
					"Children": [
						{
							"ID": "20250127210524-jiui3x9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127210524-jiui3x9",
								"updated": "20250127210524"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "光学特性（反射、折射、菲涅耳效应）"
								}
							]
						}
					]
				},
				{
					"ID": "20250127210524-gtwva66",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20250127210524-gtwva66",
						"updated": "20250127210524"
					},
					"Children": [
						{
							"ID": "20250127210524-r3khz1u",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127210524-r3khz1u",
								"updated": "20250127210526"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "透明度\n"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20250127210527-zx314ir",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250127210527-zx314ir",
				"updated": "20250127210527"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "等等"
				}
			]
		},
		{
			"ID": "20250127210657-byrhpks",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250127210657-byrhpks",
				"updated": "20250127210727"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"style": "width: 370px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20250127210657-y6pvcom.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 370px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20250127210540-bas1gcb",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20250127210540-bas1gcb",
				"updated": "20250127212310"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "水波效果基本原理"
				}
			]
		},
		{
			"ID": "20250127210546-amd8foz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250127210546-amd8foz",
				"updated": "20250127210823"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一句话总结水波效果基本原理："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "水波效果可以基于我们之前实现的带法线纹理的玻璃效果进行修改，通过添加噪声法线纹理结合 Shader 内置时间变量实现水波动态效果，加入菲涅耳计算公式实现水面的光学特性"
				}
			]
		},
		{
			"ID": "20250127210549-c7yvloj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250127210549-c7yvloj",
				"updated": "20250127210550"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "关键点："
				}
			]
		},
		{
			"ID": "20250127210550-12wbsnm",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20250127210550-12wbsnm",
				"updated": "20250127212233"
			},
			"Children": [
				{
					"ID": "20250127210550-5481agp",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20250127210550-5481agp",
						"updated": "20250127210550"
					},
					"Children": [
						{
							"ID": "20250127210550-99iojde",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127210550-99iojde",
								"updated": "20250127210550"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "噪声纹理的使用"
								}
							]
						},
						{
							"ID": "20250127210742-0p9q75c",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127210742-0p9q75c",
								"updated": "20250127210926"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "我们可以利用沃利噪声（细胞噪声）生成的噪声纹理灰度图，在 Unity 中将该噪声纹理灰度图作为高度图使用\n用它代表水面的法线信息，只需要在 Unity 中将该灰度图设置为 Normal map，并勾选 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "block-ref",
									"TextMarkBlockRefID": "20241102181425-dytt4ke",
									"TextMarkBlockRefSubtype": "s",
									"TextMarkTextContent": "Create from Grayscale"
								},
								{
									"Type": "NodeText",
									"Data": " 后应用即可"
								}
							]
						},
						{
							"ID": "20250127211144-2y5fdps",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127211144-2y5fdps",
								"updated": "20250127211144"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeImage",
									"Data": "span",
									"Properties": {
										"style": "width: 404px;"
									},
									"Children": [
										{
											"Type": "NodeBang"
										},
										{
											"Type": "NodeOpenBracket"
										},
										{
											"Type": "NodeLinkText",
											"Data": "image"
										},
										{
											"Type": "NodeCloseBracket"
										},
										{
											"Type": "NodeOpenParen"
										},
										{
											"Type": "NodeLinkDest",
											"Data": "assets/image-20250127211144-xak03eh.png"
										},
										{
											"Type": "NodeCloseParen"
										}
									]
								},
								{
									"Type": "NodeKramdownSpanIAL",
									"Data": "{: style=\"width: 404px;\"}"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"ID": "20250127210842-qlokiz4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127210842-qlokiz4",
								"updated": "20250127210852"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeImage",
									"Data": "span",
									"Properties": {
										"style": "width: 199px;"
									},
									"Children": [
										{
											"Type": "NodeBang"
										},
										{
											"Type": "NodeOpenBracket"
										},
										{
											"Type": "NodeLinkText",
											"Data": "image"
										},
										{
											"Type": "NodeCloseBracket"
										},
										{
											"Type": "NodeOpenParen"
										},
										{
											"Type": "NodeLinkDest",
											"Data": "assets/image-20250127210842-l5ud11l.png"
										},
										{
											"Type": "NodeCloseParen"
										}
									]
								},
								{
									"Type": "NodeKramdownSpanIAL",
									"Data": "{: style=\"width: 199px;\"}"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeImage",
									"Data": "span",
									"Properties": {
										"style": "width: 197px;"
									},
									"Children": [
										{
											"Type": "NodeBang"
										},
										{
											"Type": "NodeOpenBracket"
										},
										{
											"Type": "NodeLinkText",
											"Data": "image"
										},
										{
											"Type": "NodeCloseBracket"
										},
										{
											"Type": "NodeOpenParen"
										},
										{
											"Type": "NodeLinkDest",
											"Data": "assets/image-20250127210852-pe8yrvr.png"
										},
										{
											"Type": "NodeCloseParen"
										}
									]
								},
								{
									"Type": "NodeKramdownSpanIAL",
									"Data": "{: style=\"width: 197px;\"}"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						}
					]
				},
				{
					"ID": "20250127210550-2fnlnjm",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20250127210550-2fnlnjm",
						"updated": "20250127210550"
					},
					"Children": [
						{
							"ID": "20250127210550-vbn9tng",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127210550-vbn9tng",
								"updated": "20250127210550"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "动态效果的实现"
								}
							]
						},
						{
							"ID": "20250127211204-s6rthrx",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127211204-s6rthrx",
								"updated": "20250127211256"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "自定义两个属性，代表水平面 x 和 y 轴的速度。在片元着色器中利用 Shader 内置时间参数 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "_Time.y"
								},
								{
									"Type": "NodeText",
									"Data": "​ 得到累积速度变化。\n然后用该速度变量从噪声法线纹理中进行两次采样，再讲两次采样的结果相加得到扰动后的法线，\n最后用该法线处理折射、反射、菲涅耳效果，这样看起来就会有动态效果了"
								}
							]
						},
						{
							"ID": "20250127211917-ygfvoh0",
							"Type": "NodeBlockquote",
							"Properties": {
								"id": "20250127211917-ygfvoh0",
								"updated": "20250127211917"
							},
							"Children": [
								{
									"Type": "NodeBlockquoteMarker",
									"Data": "\u003e"
								},
								{
									"ID": "20250127211917-u13x4ai",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20250127211917-u13x4ai",
										"updated": "20250127212049"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "​"
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "code",
											"TextMarkTextContent": "float4 _Time"
										},
										{
											"Type": "NodeText",
											"Data": "​ 是内置的时间变量，4个分量的值分别是 "
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "code",
											"TextMarkTextContent": "(t/20, t, 2t, 3t)"
										},
										{
											"Type": "NodeText",
											"Data": "​，具体详见："
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "block-ref",
											"TextMarkBlockRefID": "20241224122504-l30l6c3",
											"TextMarkBlockRefSubtype": "d",
											"TextMarkTextContent": "US3S9L1——如何制作动态效果"
										}
									]
								}
							]
						},
						{
							"ID": "20250127211304-qggrcki",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20250127211304-qggrcki",
								"style": "line-height: 22px;",
								"updated": "20250127211848"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "Yw=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "// 加入一个水波移动速度的变量\nfloat speed = _Time.y * float2(_WaveXSpeed, _WaveYSpeed);\n// 由原本的法线相关计算，改为从噪声法线中进行偏移获取，+和-的目的是为了生成一个更加平滑且动态变化的法线扰动，模拟水波的真实感\n// 通过让UV坐标沿相反方向移动，分别计算两个独立的动态法线扰动，这样可以模拟水波的波浪效果，即一个播放和一个波谷的反向运动\nfixed3 bump1 = UnpackNormal(tex2D(_BumpMap, i.uv.zw + speed)).rgb;\nfixed3 bump2 = UnpackNormal(tex2D(_BumpMap, i.uv.zw - speed)).rgb;\n// 将两个动态扰动法线叠加在一起，形成一个综合的扰动效果。这样会让法线扰动更加复杂且自然，避免单一扰动的生硬感\nfixed3 bump = normalize(bump1 + bump2);\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20250127211258-bjzul6y",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127211258-bjzul6y",
								"updated": "20250127211258"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "该算法是图形学前辈们总结的高效的模拟流动感的算法，水波、火焰、玻璃折射都可以用"
								}
							]
						}
					]
				},
				{
					"ID": "20250127210551-u1v7wfv",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20250127210551-u1v7wfv",
						"updated": "20250127212233"
					},
					"Children": [
						{
							"ID": "20250127210551-zdp820s",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127210551-zdp820s",
								"updated": "20250127210551"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "菲涅耳公式的运用"
								}
							]
						},
						{
							"ID": "20250127212141-yiy00po",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127212141-yiy00po",
								"updated": "20250127212219"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "我们只需要将之前学习过的菲涅耳近似公式在最后的颜色计算中进行运用，便可以让水面呈现出菲涅耳现象效果\n菲涅尔反射相关，详见："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "block-ref",
									"TextMarkBlockRefID": "20241221182240-f77j2o6",
									"TextMarkBlockRefSubtype": "d",
									"TextMarkTextContent": "US3S8L6——菲涅尔反射"
								}
							]
						},
						{
							"ID": "20250127212148-1thhlbk",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20250127212148-1thhlbk",
								"style": "line-height: 22px;",
								"updated": "20250127212233"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "Yw=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "// 根据schlick菲涅尔近似公式，计算菲涅尔反射率\nfixed fresnal = _FresnelScale + (1 - _FresnelScale) * pow((1 - dot(normalize(i.worldViewDir), normalize(i.worldNormal))), 5);\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20250127212310-mccf7jm",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20250127212310-mccf7jm",
				"updated": "20250127222626"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "水波效果具体实现"
				}
			]
		},
		{
			"ID": "20250127214810-2r6gilv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250127214810-2r6gilv",
				"updated": "20250127214900"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用如下的水面颜色纹理和噪声纹理来实现水面效果："
				}
			]
		},
		{
			"ID": "20250127214848-ox3xi3v",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250127214848-ox3xi3v",
				"updated": "20250127214848"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"style": "width: 223px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Water_Diffuse"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Water_Diffuse-20250127214848-80qt9yf.jpg"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 223px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"style": "width: 224px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "water_noise"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/water_noise-20250127214848-kprh9ka.jpg"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 224px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20250127214147-kqq5m8w",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20250127214147-kqq5m8w",
				"updated": "20250127214229"
			},
			"Children": [
				{
					"ID": "20250127215042-pbj0r10",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20250127215042-pbj0r10",
						"updated": "20250127215042"
					},
					"Children": [
						{
							"ID": "20250127215042-waaisd5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127215042-waaisd5",
								"updated": "20250127215150"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "新建 Shader，命名为 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "WaterWave"
								},
								{
									"Type": "NodeText",
									"Data": "​，复用带法线的玻璃效果 Shader"
								}
							]
						},
						{
							"ID": "20250127215151-hwz5ubd",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127215151-hwz5ubd",
								"updated": "20250127215213"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "代码详见："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "block-ref",
									"TextMarkBlockRefID": "20241222142809-o3sp4p9",
									"TextMarkBlockRefSubtype": "d",
									"TextMarkTextContent": "US3S8L9——玻璃效果"
								},
								{
									"Type": "NodeText",
									"Data": " 中的 带法线的玻璃效果 Shader"
								}
							]
						}
					]
				},
				{
					"ID": "20250127214229-iedwqs2",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20250127214229-iedwqs2",
						"updated": "20250127214229"
					},
					"Children": [
						{
							"ID": "20250127214229-fr05vgs",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127214229-fr05vgs",
								"updated": "20250127214318"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "属性相关"
								}
							]
						},
						{
							"ID": "20250127214318-bkacv27",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20250127214318-bkacv27",
								"updated": "20250127214318"
							},
							"Children": [
								{
									"ID": "20250127214318-bkv6m6o",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20250127214318-bkv6m6o",
										"updated": "20250127214318"
									},
									"Children": [
										{
											"ID": "20250127214318-hni0n0t",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127214318-hni0n0t",
												"updated": "20250127214322"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "添加用于控制动态效果的 x 和 y 轴方向的速度属性\n"
												}
											]
										},
										{
											"ID": "20250127214330-f7bzl6m",
											"Type": "NodeList",
											"ListData": {
												"Typ": 1
											},
											"Properties": {
												"id": "20250127214330-f7bzl6m",
												"updated": "20250127214330"
											},
											"Children": [
												{
													"ID": "20250127214329-enyeznj",
													"Type": "NodeListItem",
													"ListData": {
														"Typ": 1,
														"Delimiter": 46,
														"Marker": "MS4=",
														"Num": 1
													},
													"Properties": {
														"id": "20250127214329-enyeznj",
														"updated": "20250127214329"
													},
													"Children": [
														{
															"ID": "20250127214329-tupom2h",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20250127214329-tupom2h",
																"updated": "20250127214335"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "​"
																},
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "code",
																	"TextMarkTextContent": "_WaveXSpeed"
																},
																{
																	"Type": "NodeText",
																	"Data": "​"
																}
															]
														}
													]
												},
												{
													"ID": "20250127214332-qd65e60",
													"Type": "NodeListItem",
													"ListData": {
														"Typ": 1,
														"Delimiter": 46,
														"Marker": "Mi4=",
														"Num": 2
													},
													"Properties": {
														"id": "20250127214332-qd65e60",
														"updated": "20250127214332"
													},
													"Children": [
														{
															"ID": "20250127214332-2m81qoj",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20250127214332-2m81qoj",
																"updated": "20250127214337"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "​"
																},
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "code",
																	"TextMarkTextContent": "_WaveYSpeed"
																},
																{
																	"Type": "NodeText",
																	"Data": "​"
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"ID": "20250127214318-hmdlmd3",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "Mi4=",
										"Num": 2
									},
									"Properties": {
										"id": "20250127214318-hmdlmd3",
										"updated": "20250127214318"
									},
									"Children": [
										{
											"ID": "20250127214318-gqx8vsl",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127214318-gqx8vsl",
												"updated": "20250127214318"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "将玻璃种的折射属性删除，改为之后菲涅耳效果会用到的反射率\n"
												}
											]
										},
										{
											"ID": "20250127214342-fnzdsua",
											"Type": "NodeList",
											"ListData": {
												"Typ": 1
											},
											"Properties": {
												"id": "20250127214342-fnzdsua",
												"updated": "20250127214342"
											},
											"Children": [
												{
													"ID": "20250127214341-fuu6sah",
													"Type": "NodeListItem",
													"ListData": {
														"Typ": 1,
														"Delimiter": 46,
														"Marker": "MS4=",
														"Num": 1
													},
													"Properties": {
														"id": "20250127214341-fuu6sah",
														"updated": "20250127214341"
													},
													"Children": [
														{
															"ID": "20250127214341-fjt13ak",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20250127214341-fjt13ak",
																"updated": "20250127214352"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "删除 "
																},
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "code",
																	"TextMarkTextContent": "_RefractAmount"
																},
																{
																	"Type": "NodeText",
																	"Data": "​"
																}
															]
														}
													]
												},
												{
													"ID": "20250127214348-vu5gvrq",
													"Type": "NodeListItem",
													"ListData": {
														"Typ": 1,
														"Delimiter": 46,
														"Marker": "Mi4=",
														"Num": 2
													},
													"Properties": {
														"id": "20250127214348-vu5gvrq",
														"updated": "20250127214348"
													},
													"Children": [
														{
															"ID": "20250127214348-9p1nwsq",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20250127214348-9p1nwsq",
																"updated": "20250127214350"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "添加 "
																},
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "code",
																	"TextMarkTextContent": "_FresnelScale"
																},
																{
																	"Type": "NodeText",
																	"Data": "​"
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"ID": "20250127214345-cexe9g9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127214345-cexe9g9",
								"updated": "20250127214346"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "修改对应的属性映射"
								}
							]
						},
						{
							"ID": "20250127215634-f3x18ue",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20250127215634-f3x18ue",
								"style": "line-height: 22px;",
								"updated": "20250127220010"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "Yw=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "Properties\n{\n    _MainTex(\"MainTex\", 2D) = \"\"{}                      // 主纹理\n    _BumpMap(\"BumpMap\", 2D) = \"\"{}                      // 法线纹理\n    _Cube(\"Cubemap\", Cube) = \"\"{}                       // 立方体纹理\n    _Distortion(\"Distortion\", Range(0, 10)) = 0         // 控制扭曲程度的变量\n    _WaveXSpeed(\"WaveXSpeed\", Range(-0.1, 0.1)) = 0.01  // 控制水波水平速度偏移的属性\n    _WaveYSpeed(\"WaveYSpeed\", Range(-0.1, 0.1)) = 0.01  // 控制水波竖直速度偏移的属性\n    _FresnelScale(\"FresnelScale\", Range(0, 1)) = 1      // 菲涅尔反射率\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20250127214229-gmkcf2a",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20250127214229-gmkcf2a",
						"updated": "20250127214229"
					},
					"Children": [
						{
							"ID": "20250127214229-wgypm0v",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127214229-wgypm0v",
								"updated": "20250127214237"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "修改片元着色器"
								}
							]
						},
						{
							"ID": "20250127214237-hw2g8ao",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20250127214237-hw2g8ao",
								"updated": "20250127214237"
							},
							"Children": [
								{
									"ID": "20250127214237-lvi8ao8",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20250127214237-lvi8ao8",
										"updated": "20250127214237"
									},
									"Children": [
										{
											"ID": "20250127214237-5hddcmv",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127214237-5hddcmv",
												"updated": "20250127214311"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "将原来的法线相关采样 修改为扰动算法（对噪声法线纹理进行 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "+"
												},
												{
													"Type": "NodeText",
													"Data": "​ 和 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "-"
												},
												{
													"Type": "NodeText",
													"Data": "​ 偏移采样，采样后叠加单位化）"
												}
											]
										},
										{
											"ID": "20250127221016-ba2we4t",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20250127221016-ba2we4t",
												"style": "line-height: 22px;",
												"updated": "20250127221024"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "Yw=="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "// 加入一个水波移动速度的变量\nfloat2 speed = _Time.y * float2(_WaveXSpeed, _WaveYSpeed);\n// 通过让UV坐标沿相反方向移动，分别计算两个独立的动态法线扰动，这样可以模拟水波的波浪效果，即一个播放和一个波谷的反向运动\nfixed3 bump1 = UnpackNormal(tex2D(_BumpMap, i.uv.zw + speed)).rgb;\nfixed3 bump2 = UnpackNormal(tex2D(_BumpMap, i.uv.zw - speed)).rgb;\n// 将两个动态扰动法线叠加在一起，形成一个综合的扰动效果。这样会让法线扰动更加复杂且自然，避免单一扰动的生硬感\nfixed3 bump = normalize(bump1 + bump2);\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								},
								{
									"ID": "20250127214237-va5lyor",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "Mi4=",
										"Num": 2
									},
									"Properties": {
										"id": "20250127214237-va5lyor",
										"updated": "20250127214237"
									},
									"Children": [
										{
											"ID": "20250127214237-my071wr",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127214237-my071wr",
												"updated": "20250127214300"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "修改折射相关计算，将对应法线换为新法线"
												}
											]
										},
										{
											"ID": "20250127221027-v7gdlsq",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20250127221027-v7gdlsq",
												"style": "line-height: 22px;",
												"updated": "20250127221055"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "Yw=="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "// 折射颜色获取（即从物体遮挡的后边的屏幕内容采样，获取类似透明效果的颜色）\nfloat2 offset = bump.xy * _Distortion;              // 在采样前计算xy屏幕坐标的偏移量\ni.grabPos.xy = offset * i.grabPos.z + i.grabPos.xy; // 用偏移量和屏幕空间深度值相乘，模拟出真实的折射效果\nfloat2 screenUV = i.grabPos.xy / i.grabPos.w;       // 利用透视除法，将屏幕坐标转换到0~1范围内，然后再从屏幕纹理内采样\nfixed4 grabColor = tex2D(_GrabTexture, screenUV);\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								},
								{
									"ID": "20250127214237-7y1y427",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "My4=",
										"Num": 3
									},
									"Properties": {
										"id": "20250127214237-7y1y427",
										"updated": "20250127214237"
									},
									"Children": [
										{
											"ID": "20250127214237-sck61kx",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127214237-sck61kx",
												"updated": "20250127214237"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "修改反射相关计算，世界空间下法线用扰动后发现进行计算，使用它计算反射相关内容"
												}
											]
										},
										{
											"ID": "20250127221043-6axwtlf",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20250127221043-6axwtlf",
												"style": "line-height: 22px;",
												"updated": "20250127221047"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "Yw=="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "// 将切线空间下法线数据转换到世界空间下\nfloat3 worldNormal = float3(\n    dot(i.tangentToWorld0.xyz, bump),\n    dot(i.tangentToWorld1.xyz, bump),\n    dot(i.tangentToWorld2.xyz, bump)\n);\n// 根据逆向视角方向和法线纹理内得到的法线纹理贴图计算反射向量\nfloat3 reflection = reflect(-viewDir, worldNormal);\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								},
								{
									"ID": "20250127214237-xf5a5zo",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "NC4=",
										"Num": 4
									},
									"Properties": {
										"id": "20250127214237-xf5a5zo",
										"updated": "20250127214237"
									},
									"Children": [
										{
											"ID": "20250127214237-teehu18",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127214237-teehu18",
												"updated": "20250127214256"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "处理菲涅耳效应，复制相关菲涅耳近似公式代码，用计算出来的系数处理最终的折射和反射相关内容"
												}
											]
										},
										{
											"ID": "20250127221134-yhuq67q",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20250127221134-yhuq67q",
												"style": "line-height: 22px;",
												"updated": "20250127221557"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "Yw=="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "// 根据schlick菲涅尔近似公式，计算菲涅尔反射率\nfixed fresnal = _FresnelScale + (1 - _FresnelScale) * pow((1 - dot(normalize(viewDir), normalize(worldNormal))), 5);\n// 通过折射程度，控制反射颜色和屏幕颜色的叠加，得到最终颜色\nfixed4 color = reflectColor * fresnal + grabColor * (1 - fresnal);\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										},
										{
											"ID": "20250127221117-2uonxv1",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127221117-2uonxv1",
												"updated": "20250127221131"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "菲涅耳近似公式代码，详见："
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "block-ref",
													"TextMarkBlockRefID": "20241221182240-f77j2o6",
													"TextMarkBlockRefSubtype": "d",
													"TextMarkTextContent": "US3S8L6——菲涅尔反射"
												}
											]
										}
									]
								},
								{
									"ID": "20250127222032-ln7rkxy",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "NS4=",
										"Num": 5
									},
									"Properties": {
										"id": "20250127222032-ln7rkxy",
										"updated": "20250127222032"
									},
									"Children": [
										{
											"ID": "20250127222032-xndsr8s",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127222032-xndsr8s",
												"updated": "20250127222109"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "让主纹理的采样也受到 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "speed"
												},
												{
													"Type": "NodeText",
													"Data": "​ 影响，让水面贴图可以跟着水波动"
												}
											]
										},
										{
											"ID": "20250127222107-bt6ge6v",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20250127222107-bt6ge6v",
												"style": "line-height: 22px;",
												"updated": "20250127222117"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "Yw=="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "// 把立方体反射纹理采样颜色叠加到物体主纹理采样颜色上，得到反射颜色\nfixed4 mainTex = tex2D(_MainTex, i.uv + speed);     // 物体主纹理采样颜色，为其加上speed让水面贴图跟着水波动\nfixed4 reflectColor = texCUBE(_Cube, reflection) * mainTex;\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								}
							]
						},
						{
							"ID": "20250127220340-8qb1ggl",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20250127220340-8qb1ggl",
								"style": "line-height: 22px;",
								"updated": "20250127222028"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "Yw=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "fixed4 frag(v2f i): SV_TARGET\n{\n    // 计算世界空间下视角方向\n    float3 worldPos = float3(i.tangentToWorld0.w, i.tangentToWorld1.w, i.tangentToWorld2.w);\n    fixed3 viewDir = normalize(UnityWorldSpaceViewDir(worldPos));\n\n    // 加入一个水波移动速度的变量\n    float2 speed = _Time.y * float2(_WaveXSpeed, _WaveYSpeed);\n    // 通过让UV坐标沿相反方向移动，分别计算两个独立的动态法线扰动，这样可以模拟水波的波浪效果，即一个播放和一个波谷的反向运动\n    fixed3 bump1 = UnpackNormal(tex2D(_BumpMap, i.uv.zw + speed)).rgb;\n    fixed3 bump2 = UnpackNormal(tex2D(_BumpMap, i.uv.zw - speed)).rgb;\n    // 将两个动态扰动法线叠加在一起，形成一个综合的扰动效果。这样会让法线扰动更加复杂且自然，避免单一扰动的生硬感\n    fixed3 bump = normalize(bump1 + bump2);\n\n    // 将切线空间下法线数据转换到世界空间下\n    float3 worldNormal = float3(\n        dot(i.tangentToWorld0.xyz, bump),\n        dot(i.tangentToWorld1.xyz, bump),\n        dot(i.tangentToWorld2.xyz, bump)\n    );\n    // 根据逆向视角方向和法线纹理内得到的法线纹理贴图计算反射向量\n    float3 reflection = reflect(-viewDir, worldNormal);\n\n    // 把立方体反射纹理采样颜色叠加到物体主纹理采样颜色上，得到反射颜色\n    fixed4 mainTex = tex2D(_MainTex, i.uv + speed);     // 物体主纹理采样颜色，为其加上speed让水面贴图跟着水波动\n    fixed4 reflectColor = texCUBE(_Cube, reflection) * mainTex;\n    // 折射颜色获取（即从物体遮挡的后边的屏幕内容采样，获取类似透明效果的颜色）\n    float2 offset = bump.xy * _Distortion;              // 在采样前计算xy屏幕坐标的偏移量\n    i.grabPos.xy = offset * i.grabPos.z + i.grabPos.xy; // 用偏移量和屏幕空间深度值相乘，模拟出真实的折射效果\n    float2 screenUV = i.grabPos.xy / i.grabPos.w;       // 利用透视除法，将屏幕坐标转换到0~1范围内，然后再从屏幕纹理内采样\n    fixed4 grabColor = tex2D(_GrabTexture, screenUV);\n    // 根据schlick菲涅尔近似公式，计算菲涅尔反射率\n    fixed fresnal = _FresnelScale + (1 - _FresnelScale) * pow((1 - dot(normalize(viewDir), normalize(worldNormal))), 5);\n    // 通过折射程度，控制反射颜色和屏幕颜色的叠加，得到最终颜色\n    fixed4 color = reflectColor * fresnal + grabColor * (1 - fresnal);\n    return color;\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20250127222309-0pdegfm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250127222309-0pdegfm",
				"updated": "20250127222315"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "完整 Shader 如下："
				}
			]
		},
		{
			"ID": "20250127222315-bv4di2e",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20250127222315-bv4di2e",
				"style": "line-height: 22px;",
				"updated": "20250127222318"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Shader \"TeachShader/WaterWave\"\n{\n    Properties\n    {\n        _MainTex(\"MainTex\", 2D) = \"\"{}                      // 主纹理\n        _BumpMap(\"BumpMap\", 2D) = \"\"{}                      // 法线纹理\n        _Cube(\"Cubemap\", Cube) = \"\"{}                       // 立方体纹理\n        _Distortion(\"Distortion\", Range(0, 10)) = 0         // 控制扭曲程度的变量\n        _WaveXSpeed(\"WaveXSpeed\", Range(-0.1, 0.1)) = 0.01  // 控制水波水平速度偏移的属性\n        _WaveYSpeed(\"WaveYSpeed\", Range(-0.1, 0.1)) = 0.01  // 控制水波竖直速度偏移的属性\n        _FresnelScale(\"FresnelScale\", Range(0, 1)) = 1      // 菲涅尔反射率\n    }\n    SubShader\n    {\n        Tags { \"RenderType\" = \"Opaque\" \"Queue\" = \"Transparent\" }\n\n        GrabPass {}     // 捕获渲染此物体之前当前的屏幕内容，并存储到默认的渲染纹理变量内\n\n        Pass\n        {\n            Tags { \"LightMode\" = \"ForwardBase\" }\n\n            CGPROGRAM\n            #pragma vertex vert\n            #pragma fragment frag\n\n            #include \"UnityCG.cginc\"\n            #include \"Lighting.cginc\"\n\n            sampler2D _MainTex;     // 颜色纹理\n            float4 _MainTex_ST;     // 颜色纹理的缩放和平移\n            sampler2D _BumpMap;     // 法线纹理\n            float4 _BumpMap_ST;     // 法线纹理的缩放和平移\n            samplerCUBE _Cube;      // 反射用的立方体纹理\n            sampler2D _GrabTexture; // GrabPass 默认存储的纹理变量\n            float _Distortion;      // 扭曲程度\n            fixed _WaveXSpeed;      // 控制水波水平速度偏移的属性\n            fixed _WaveYSpeed;      // 控制水波竖直速度偏移的属性\n            float _FresnelScale;    // 菲涅尔反射率\n\n            struct v2f\n            {\n                float4 pos: SV_POSITION;            // 裁剪空间下的顶点坐标\n                float4 grabPos: TEXCOORD0;          // 用于存储从屏幕图像中采样的坐标\n                float4 uv: TEXCOORD1;               // 用于在颜色纹理（xy）和法线纹理（zw）中采样的UV坐标\n                float4 tangentToWorld0: TEXCOORD3;  // 它用来存储变换矩阵和顶点相对于世界坐标的位置的第一行\n                float4 tangentToWorld1: TEXCOORD4;  // 它用来存储变换矩阵和顶点相对于世界坐标的位置的第二行\n                float4 tangentToWorld2: TEXCOORD5;  // 它用来存储变换矩阵和顶点相对于世界坐标的位置的第三行\n            };\n\n            v2f vert(appdata_full v)\n            {\n                v2f data;\n                data.pos = UnityObjectToClipPos(v.vertex);                      // 顶点坐标转裁剪坐标\n                data.grabPos = ComputeScreenPos(data.pos);                      // 将裁剪坐标转换到屏幕坐标\n                data.uv.xy = v.texcoord.xy * _MainTex_ST.xy + _MainTex_ST.zw;   // 颜色纹理uv坐标计算\n                data.uv.zw = v.texcoord.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;   // 法线纹理uv坐标计算\n                float3 worldNormal = UnityObjectToWorldNormal(v.normal);        // 顶点法线转世界坐标\n                fixed3 worldPos = mul(unity_ObjectToWorld, v.vertex).xyz;       // 顶点坐标装世界坐标\n                // 将模型空间下的切线转换到世界空间下，并计算世界空间下的副切线\n                float3 worldTangent = UnityObjectToWorldDir(v.tangent);\n                float3 worldBinormal = cross(normalize(worldTangent), normalize(worldNormal)) * v.tangent.w;\n                // 将切线空间到世界空间的转换矩阵，以及世界坐标存储到三个贴图变量内\n                data.tangentToWorld0 = float4(worldTangent.x, worldBinormal.x, worldNormal.x, worldPos.x);\n                data.tangentToWorld1 = float4(worldTangent.y, worldBinormal.y, worldNormal.y, worldPos.y);\n                data.tangentToWorld2 = float4(worldTangent.z, worldBinormal.z, worldNormal.z, worldPos.z);\n\n                return data;\n            }\n\n            fixed4 frag(v2f i): SV_TARGET\n            {\n                // 计算世界空间下视角方向\n                float3 worldPos = float3(i.tangentToWorld0.w, i.tangentToWorld1.w, i.tangentToWorld2.w);\n                fixed3 viewDir = normalize(UnityWorldSpaceViewDir(worldPos));\n\n                // 加入一个水波移动速度的变量\n                float2 speed = _Time.y * float2(_WaveXSpeed, _WaveYSpeed);\n                // 通过让UV坐标沿相反方向移动，分别计算两个独立的动态法线扰动，这样可以模拟水波的波浪效果，即一个播放和一个波谷的反向运动\n                fixed3 bump1 = UnpackNormal(tex2D(_BumpMap, i.uv.zw + speed)).rgb;\n                fixed3 bump2 = UnpackNormal(tex2D(_BumpMap, i.uv.zw - speed)).rgb;\n                // 将两个动态扰动法线叠加在一起，形成一个综合的扰动效果。这样会让法线扰动更加复杂且自然，避免单一扰动的生硬感\n                fixed3 bump = normalize(bump1 + bump2);\n\n                // 将切线空间下法线数据转换到世界空间下\n                float3 worldNormal = float3(\n                    dot(i.tangentToWorld0.xyz, bump),\n                    dot(i.tangentToWorld1.xyz, bump),\n                    dot(i.tangentToWorld2.xyz, bump)\n                );\n                // 根据逆向视角方向和法线纹理内得到的法线纹理贴图计算反射向量\n                float3 reflection = reflect(-viewDir, worldNormal);\n\n                // 把立方体反射纹理采样颜色叠加到物体主纹理采样颜色上，得到反射颜色\n                fixed4 mainTex = tex2D(_MainTex, i.uv + speed);     // 物体主纹理采样颜色，为其加上speed让水面贴图跟着水波动\n                fixed4 reflectColor = texCUBE(_Cube, reflection) * mainTex;\n                // 折射颜色获取（即从物体遮挡的后边的屏幕内容采样，获取类似透明效果的颜色）\n                float2 offset = bump.xy * _Distortion;              // 在采样前计算xy屏幕坐标的偏移量\n                i.grabPos.xy = offset * i.grabPos.z + i.grabPos.xy; // 用偏移量和屏幕空间深度值相乘，模拟出真实的折射效果\n                float2 screenUV = i.grabPos.xy / i.grabPos.w;       // 利用透视除法，将屏幕坐标转换到0~1范围内，然后再从屏幕纹理内采样\n                fixed4 grabColor = tex2D(_GrabTexture, screenUV);\n                // 根据schlick菲涅尔近似公式，计算菲涅尔反射率\n                fixed fresnal = _FresnelScale + (1 - _FresnelScale) * pow((1 - dot(normalize(viewDir), normalize(worldNormal))), 5);\n                // 通过折射程度，控制反射颜色和屏幕颜色的叠加，得到最终颜色\n                fixed4 color = reflectColor * fresnal + grabColor * (1 - fresnal);\n                return color;\n            }\n            ENDCG\n        }\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20250127222254-7b9sjx6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250127222254-7b9sjx6",
				"updated": "20250127222513"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "显示效果（对一个平面使用，扭动程度为5，XY轴移动速度为0.1，菲涅尔反射率为0.5）："
				}
			]
		},
		{
			"ID": "20250127222258-x0k5k7k",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250127222258-x0k5k7k",
				"updated": "20250127222258"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"style": "width: 534px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20250127222258-eikgb6y.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 534px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20250127222301-nex31lq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250127222301-nex31lq",
				"updated": "20250127222626"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可见，这时的水面呈现出了波浪扭动的效果，且垂直向下看水面更透明，向水平方向看水面反射率更高"
				}
			]
		}
	]
}