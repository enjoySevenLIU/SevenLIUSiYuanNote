{
	"ID": "20250127000853-kzspt4r",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20250127000853-kzspt4r",
		"title": "US4L6——卡通风格渲染",
		"type": "doc",
		"updated": "20250127143853"
	},
	"Children": [
		{
			"ID": "20250127000853-zpbj62y",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20250127000853-zpbj62y",
				"updated": "20250127013044"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "卡通风格渲染"
				}
			]
		},
		{
			"ID": "20250127000934-8nexu1b",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250127000934-8nexu1b",
				"updated": "20250127000940"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "卡通风格渲染（Cartoon Shading），也称为非真实感渲染（NPR）或卡通渲染（Toon Shading）\n主要目的是使 3D 模型看起来更像手绘的二维卡通或漫画风格，而不是逼真写实的 3D 渲染效果。\n这种风格的渲染常用于游戏、动画和电影中，用来创造一种独特的艺术风格"
				}
			]
		},
		{
			"ID": "20250127000956-rn0krbq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250127000956-rn0krbq",
				"updated": "20250127001010"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"style": "width: 215px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20250127000956-t9s038l.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 215px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"style": "width: 249px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20250127001010-qw3nuvw.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 249px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20250127001014-57m2ggy",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20250127001014-57m2ggy",
				"updated": "20250127013044"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "卡通风格渲染基本原理"
				}
			]
		},
		{
			"ID": "20250127001031-yrckc07",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250127001031-yrckc07",
				"updated": "20250127001312"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一句话总结卡通风格渲染基本原理："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "让光的过渡效果变硬并且实现轮廓描边！"
				}
			]
		},
		{
			"ID": "20250127001312-d1ll03f",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250127001312-d1ll03f",
				"updated": "20250127001312"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "关键点："
				}
			]
		},
		{
			"ID": "20250127001042-8cdfwx6",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20250127001042-8cdfwx6",
				"updated": "20250127013044"
			},
			"Children": [
				{
					"ID": "20250127001042-2gitl1r",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20250127001042-2gitl1r",
						"updated": "20250127013025"
					},
					"Children": [
						{
							"ID": "20250127001042-8r7ivaa",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127001042-8r7ivaa",
								"updated": "20250127013025"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "如何让光的过渡效果变硬"
								}
							]
						},
						{
							"ID": "20250127002901-tnfmee9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127002901-tnfmee9",
								"updated": "20250127002906"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "影响对象光照效果的部分主要是：漫反射的计算 + 高光反射的计算\n因此，想要光的过渡效果变硬，只需要从这两方面去考虑即可"
								}
							]
						},
						{
							"ID": "20250127002908-g61l8ui",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127002908-g61l8ui",
								"updated": "20250127002947"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "这里可以从 Blinn Phong 光照模型公式下手：详见："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "block-ref",
									"TextMarkBlockRefID": "20240706225150-b2tfjfl",
									"TextMarkBlockRefSubtype": "d",
									"TextMarkTextContent": "US3S1L7——Blinn-Phong光照模型"
								}
							]
						},
						{
							"ID": "20250127002952-po4c8hp",
							"Type": "NodeMathBlock",
							"Properties": {
								"id": "20250127002952-po4c8hp",
								"updated": "20250127003007"
							},
							"Children": [
								{
									"Type": "NodeMathBlockOpenMarker"
								},
								{
									"Type": "NodeMathBlockContent",
									"Data": "物体表面光照颜色 = 环境光颜色 + 兰伯特光照模型所得颜色 + BlinnPhong式高光反射光照模型所得颜色"
								},
								{
									"Type": "NodeMathBlockCloseMarker"
								}
							]
						},
						{
							"ID": "20250127003008-4lbkdic",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127003008-4lbkdic",
								"updated": "20250127003008"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "其中："
								}
							]
						},
						{
							"ID": "20250127003008-4bo3ehw",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20250127003008-4bo3ehw",
								"updated": "20250127003008"
							},
							"Children": [
								{
									"ID": "20250127003008-tzm5t88",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20250127003008-tzm5t88",
										"updated": "20250127003008"
									},
									"Children": [
										{
											"ID": "20250127003008-ddj83fr",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127003008-ddj83fr",
												"updated": "20250127003008"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "环境光颜色 = "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "UNITY_LIGHTMODEL_AMBIENT"
												},
												{
													"Type": "NodeText",
													"Data": "​ ("
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "unity_AmbientSky"
												},
												{
													"Type": "NodeText",
													"Data": "​、"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "unity_AmbientEquator"
												},
												{
													"Type": "NodeText",
													"Data": "​、"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "unity_AmbientGround"
												},
												{
													"Type": "NodeText",
													"Data": "​)"
												}
											]
										},
										{
											"ID": "20250127003008-qsvgjdy",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127003008-qsvgjdy",
												"updated": "20250127003008"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "关于上边四个变量，详见："
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "block-ref",
													"TextMarkBlockRefID": "20240625223357-zmse81n",
													"TextMarkBlockRefSubtype": "d",
													"TextMarkTextContent": "US3S1L5——Phong光照模型"
												}
											]
										}
									]
								},
								{
									"ID": "20250127003008-b7ngnvn",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20250127003008-b7ngnvn",
										"updated": "20250127003008"
									},
									"Children": [
										{
											"ID": "20250127003008-szw3r27",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127003008-szw3r27",
												"updated": "20250127003105"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "漫反射光颜色 = "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "block-ref",
													"TextMarkBlockRefID": "20240625114859-ag9w64z",
													"TextMarkBlockRefSubtype": "s",
													"TextMarkTextContent": "兰伯特光照模型"
												},
												{
													"Type": "NodeText",
													"Data": " 或 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "block-ref",
													"TextMarkBlockRefID": "20240625170147-7xe5112",
													"TextMarkBlockRefSubtype": "s",
													"TextMarkTextContent": "半兰伯特光照模型"
												},
												{
													"Type": "NodeText",
													"Data": " 计算得到的颜色"
												}
											]
										}
									]
								},
								{
									"ID": "20250127003008-vowxx99",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20250127003008-vowxx99",
										"updated": "20250127003008"
									},
									"Children": [
										{
											"ID": "20250127003008-z8apbbj",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127003008-z8apbbj",
												"updated": "20250127012002"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "高光反射光颜色 = "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "block-ref",
													"TextMarkBlockRefID": "20240706214436-vaa7be1",
													"TextMarkBlockRefSubtype": "s",
													"TextMarkTextContent": "Blinn Phong 式高光反射光照模型"
												},
												{
													"Type": "NodeText",
													"Data": " 计算得到的颜色"
												}
											]
										}
									]
								}
							]
						},
						{
							"ID": "20250127011725-59c08w3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127011725-59c08w3",
								"updated": "20250127011755"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "漫反射部分的变硬我们需要回顾之前学习的渐变纹理知识，详见："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "block-ref",
									"TextMarkBlockRefID": "20241104080014-ss6f42p",
									"TextMarkBlockRefSubtype": "d",
									"TextMarkTextContent": "US3S2L8——渐变纹理基本概念"
								}
							]
						},
						{
							"ID": "20250127011755-pf528vx",
							"Type": "NodeBlockquote",
							"Properties": {
								"id": "20250127011755-pf528vx",
								"updated": "20250127011755"
							},
							"Children": [
								{
									"Type": "NodeBlockquoteMarker",
									"Data": "\u003e"
								},
								{
									"ID": "20250127011755-uxih736",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20250127011755-uxih736",
										"updated": "20250127011813"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "渐变纹理的基本原理就是在计算漫反射时利用 "
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "block-ref",
											"TextMarkBlockRefID": "20240625170147-7xe5112",
											"TextMarkBlockRefSubtype": "s",
											"TextMarkTextContent": "半兰伯特光照模型"
										},
										{
											"Type": "NodeText",
											"Data": " 公式中后半部分"
										}
									]
								},
								{
									"ID": "20250127011837-jhy7nc3",
									"Type": "NodeMathBlock",
									"Properties": {
										"id": "20250127011837-jhy7nc3",
										"updated": "20250127011857"
									},
									"Children": [
										{
											"Type": "NodeMathBlockOpenMarker"
										},
										{
											"Type": "NodeMathBlockContent",
											"Data": "Color_{漫反射光照} = Color_{光源} \\times Color_{材质的漫反射} \\times ((\\overrightarrow{标准化后物体表面法线向量} \\cdot \\overrightarrow{标准化后光源方向向量}) \\times 0.5 + 0.5)"
										},
										{
											"Type": "NodeMathBlockCloseMarker"
										}
									]
								},
								{
									"ID": "20250127011825-mrjicff",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20250127011825-mrjicff",
										"updated": "20250127011825"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "半兰伯特光照模型后半部分会得到一个 0"
										},
										{
											"Type": "NodeBackslash",
											"Data": "span",
											"Children": [
												{
													"Type": "NodeText",
													"Data": "~"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "1 区间的值，将这个值作为 uv 坐标中的 uv 值，从渐变纹理中取出颜色\n与公式中前面部分进行颜色叠加，最终得到漫反射光照颜色。"
										}
									]
								},
								{
									"ID": "20250127011825-w1qg3vn",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20250127011825-w1qg3vn",
										"updated": "20250127011825"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "也就是说，"
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "strong",
											"TextMarkTextContent": "决定漫反射明暗的不再是单由 0~1 这个值决定，而是通过"
										},
										{
											"Type": "NodeText",
											"Data": " "
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "strong",
											"TextMarkTextContent": "0~1 这个值从渐变纹理中取出的颜色进行叠加达到最终效果"
										},
										{
											"Type": "NodeText",
											"Data": "\n这意味着，原本由光照带来的明暗变化会变成通过从渐变纹理内映射颜色来叠加颜色，这样可以改变一个模型光照的明暗表现"
										}
									]
								},
								{
									"ID": "20250127011903-qu7zpxr",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20250127011903-qu7zpxr",
										"updated": "20250127011904"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "​"
										},
										{
											"Type": "NodeImage",
											"Data": "span",
											"Properties": {
												"style": "width: 323px;"
											},
											"Children": [
												{
													"Type": "NodeBang"
												},
												{
													"Type": "NodeOpenBracket"
												},
												{
													"Type": "NodeLinkText",
													"Data": "image"
												},
												{
													"Type": "NodeCloseBracket"
												},
												{
													"Type": "NodeOpenParen"
												},
												{
													"Type": "NodeLinkDest",
													"Data": "assets/image-20241104080548-9lgior7.png"
												},
												{
													"Type": "NodeCloseParen"
												}
											]
										},
										{
											"Type": "NodeKramdownSpanIAL",
											"Data": "{: style=\"width: 323px;\"}"
										},
										{
											"Type": "NodeText",
											"Data": "​"
										}
									]
								}
							]
						},
						{
							"ID": "20250127011912-hf0tlr9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127011912-hf0tlr9",
								"updated": "20250127011936"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "高光反射部分的变硬，我们只需要基于它的公式修改计算规则即可："
								}
							]
						},
						{
							"ID": "20250127011937-kfr6aem",
							"Type": "NodeBlockquote",
							"Properties": {
								"id": "20250127011937-kfr6aem",
								"updated": "20250127011942"
							},
							"Children": [
								{
									"Type": "NodeBlockquoteMarker",
									"Data": "\u003e"
								},
								{
									"ID": "20250127012014-zbgc4la",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20250127012014-zbgc4la",
										"updated": "20250127012014"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "公式："
										}
									]
								},
								{
									"ID": "20250127012014-jqpsnbr",
									"Type": "NodeMathBlock",
									"Properties": {
										"id": "20250127012014-jqpsnbr",
										"updated": "20250127012056"
									},
									"Children": [
										{
											"Type": "NodeMathBlockOpenMarker"
										},
										{
											"Type": "NodeMathBlockContent",
											"Data": "高光反射光照颜色 = 光源的颜色 \\times 材质高光反射颜色 \\times \\max(0,\\ \\overrightarrow{标准化后顶点法线方向} \\cdot \\overrightarrow{标准化后半角向量方向})^{光泽度}"
										},
										{
											"Type": "NodeMathBlockCloseMarker"
										}
									]
								},
								{
									"ID": "20250127012014-3ckvxi5",
									"Type": "NodeList",
									"ListData": {
										"Typ": 1
									},
									"Properties": {
										"id": "20250127012014-3ckvxi5",
										"updated": "20250127012014"
									},
									"Children": [
										{
											"ID": "20250127012014-4oqu5ka",
											"Type": "NodeListItem",
											"ListData": {
												"Typ": 1,
												"Delimiter": 46,
												"Marker": "MS4=",
												"Num": 1
											},
											"Properties": {
												"id": "20250127012014-4oqu5ka",
												"updated": "20250127012014"
											},
											"Children": [
												{
													"ID": "20250127012014-kk3iuwr",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20250127012014-kk3iuwr",
														"updated": "20250127012014"
													},
													"Children": [
														{
															"Type": "NodeTextMark",
															"TextMarkType": "inline-math",
															"TextMarkInlineMathContent": "\\overrightarrow{标准化后顶点法线方向} \\cdot \\overrightarrow{标准化后半角向量方向}"
														},
														{
															"Type": "NodeText",
															"Data": " 得到的结果就是 "
														},
														{
															"Type": "NodeTextMark",
															"TextMarkType": "inline-math",
															"TextMarkInlineMathContent": "\\cos\\theta"
														},
														{
															"Type": "NodeText",
															"Data": "\n"
														}
													]
												}
											]
										},
										{
											"ID": "20250127012014-6q3zwtq",
											"Type": "NodeListItem",
											"ListData": {
												"Typ": 1,
												"Delimiter": 46,
												"Marker": "Mi4=",
												"Num": 2
											},
											"Properties": {
												"id": "20250127012014-6q3zwtq",
												"updated": "20250127012014"
											},
											"Children": [
												{
													"ID": "20250127012014-x4kmez6",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20250127012014-x4kmez6",
														"updated": "20250127012014"
													},
													"Children": [
														{
															"Type": "NodeTextMark",
															"TextMarkType": "inline-math",
															"TextMarkInlineMathContent": "\\overrightarrow{半角向量方向} = \\overrightarrow{视角单位向量} + \\overrightarrow{入射光单位向量}"
														},
														{
															"Type": "NodeText",
															"Data": "\n"
														}
													]
												}
											]
										},
										{
											"ID": "20250127012014-15ye8d5",
											"Type": "NodeListItem",
											"ListData": {
												"Typ": 1,
												"Delimiter": 46,
												"Marker": "My4=",
												"Num": 3
											},
											"Properties": {
												"id": "20250127012014-15ye8d5",
												"updated": "20250127012014"
											},
											"Children": [
												{
													"ID": "20250127012014-auxw9kt",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20250127012014-auxw9kt",
														"updated": "20250127012029"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "光泽度是幂运算，假设光泽度为 "
														},
														{
															"Type": "NodeTextMark",
															"TextMarkType": "inline-math",
															"TextMarkInlineMathContent": "n"
														},
														{
															"Type": "NodeText",
															"Data": " ，相当于："
														},
														{
															"Type": "NodeTextMark",
															"TextMarkType": "inline-math",
															"TextMarkInlineMathContent": "(max(0,\\cos\\theta))^n"
														},
														{
															"Type": "NodeText",
															"Data": "\n"
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"ID": "20250127012016-t81co6v",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127012016-t81co6v",
								"updated": "20250127012102"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "我们把 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "inline-math",
									"TextMarkInlineMathContent": "\\max(0,\\ \\overrightarrow{标准化后顶点法线方向} \\cdot \\overrightarrow{标准化后半角向量方向})^{光泽度}"
								},
								{
									"Type": "NodeText",
									"Data": " 这部分直接进行简化"
								}
							]
						},
						{
							"ID": "20250127012104-mp985yo",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20250127012104-mp985yo",
								"style": "line-height: 22px;",
								"updated": "20250127012334"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "Yw=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "fixed spec = dot(worldNormal, worldHalfDir);\t// 直接利用法线和半角向量的点乘结果进行计算\nspec = step(_SpecularScale, spec);\t\t\t\t// 用一个阈值来进行比较，如果小于这个阈值，系数为0，大于阈值则系数为1\nfixed3 specular = _Specular.rgb * spec;\t\t\t// 直接用0或者1乘以高光颜色，进行叠加即可\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20250127012342-14dvor0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127012342-14dvor0",
								"updated": "20250127012357"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "相当于之前平滑的值变化变得只有 1 和 0 两种情况，要不有，要不没有"
								}
							]
						}
					]
				},
				{
					"ID": "20250127001043-nhzlyam",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20250127001043-nhzlyam",
						"updated": "20250127013044"
					},
					"Children": [
						{
							"ID": "20250127001043-i8lzd5z",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127001043-i8lzd5z",
								"updated": "20250127013029"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "如何实现轮廓描边"
								}
							]
						},
						{
							"ID": "20250127012412-i4q0ky7",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127012412-i4q0ky7",
								"updated": "20250127012447"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "我们之前其实已经学习过模型描边效果的实现，它的基本原理是："
								}
							]
						},
						{
							"ID": "20250127012652-i480urq",
							"Type": "NodeBlockquote",
							"Properties": {
								"id": "20250127012652-i480urq",
								"updated": "20250127013044"
							},
							"Children": [
								{
									"Type": "NodeBlockquoteMarker",
									"Data": "\u003e"
								},
								{
									"ID": "20250127012654-0n627u9",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20250127012654-0n627u9",
										"updated": "20250127012654"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "使用两个 "
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "code",
											"TextMarkTextContent": "Pass"
										},
										{
											"Type": "NodeText",
											"Data": "​ 渲染对象："
										}
									]
								},
								{
									"ID": "20250127012654-oceznku",
									"Type": "NodeList",
									"ListData": {},
									"Properties": {
										"id": "20250127012654-oceznku",
										"updated": "20250127012654"
									},
									"Children": [
										{
											"ID": "20250127012654-9tiz47v",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20250127012654-9tiz47v",
												"updated": "20250127012654"
											},
											"Children": [
												{
													"ID": "20250127012654-bu8wv1a",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20250127012654-bu8wv1a",
														"updated": "20250127012654"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "一个 "
														},
														{
															"Type": "NodeTextMark",
															"TextMarkType": "code",
															"TextMarkTextContent": "Pass"
														},
														{
															"Type": "NodeText",
															"Data": "​ 用于渲染沿法线方向放大的模型"
														}
													]
												}
											]
										},
										{
											"ID": "20250127012654-g92fbk7",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20250127012654-g92fbk7",
												"updated": "20250127012654"
											},
											"Children": [
												{
													"ID": "20250127012654-maanxea",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20250127012654-maanxea",
														"updated": "20250127012654"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "一个 "
														},
														{
															"Type": "NodeTextMark",
															"TextMarkType": "code",
															"TextMarkTextContent": "Pass"
														},
														{
															"Type": "NodeText",
															"Data": "​ 用于正常渲染正常模型"
														}
													]
												}
											]
										}
									]
								},
								{
									"ID": "20250127012654-bre8w4k",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20250127012654-bre8w4k",
										"updated": "20250127012654"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "相当于先用纯色渲染一次放大后的模型，再用模型本来的颜色覆盖重合部分。"
										}
									]
								},
								{
									"ID": "20250127013034-8iokmn9",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20250127013034-8iokmn9",
										"updated": "20250127013044"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "详见："
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "block-ref",
											"TextMarkBlockRefID": "20250125221407-u54a45w",
											"TextMarkBlockRefSubtype": "d",
											"TextMarkTextContent": "US4L2——模型描边效果"
										}
									]
								}
							]
						},
						{
							"ID": "20250127012558-w09ywjx",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127012558-w09ywjx",
								"updated": "20250127012605"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "但是我们在实现卡通风格渲染时不会使用这种方式，我们将采用一种新的方式来制作轮廓描边。"
								}
							]
						},
						{
							"ID": "20250127012512-ik6j1c1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127012512-ik6j1c1",
								"updated": "20250127012541"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "新的方法同样两个 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Pass"
								},
								{
									"Type": "NodeText",
									"Data": "​ 渲染对象："
								}
							]
						},
						{
							"ID": "20250127012541-mc99e80",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20250127012541-mc99e80",
								"updated": "20250127012541"
							},
							"Children": [
								{
									"ID": "20250127012541-v7636zf",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20250127012541-v7636zf",
										"updated": "20250127012541"
									},
									"Children": [
										{
											"ID": "20250127012541-80ftceq",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127012541-80ftceq",
												"updated": "20250127012608"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "一个"
												},
												{
													"Type": "NodeText",
													"Data": " "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code strong",
													"TextMarkTextContent": "Pass"
												},
												{
													"Type": "NodeText",
													"Data": " "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "渲染背面将模型背面顶点沿法线方向偏移扩大"
												}
											]
										}
									]
								},
								{
									"ID": "20250127012542-bzpg4pb",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20250127012542-bzpg4pb",
										"updated": "20250127012542"
									},
									"Children": [
										{
											"ID": "20250127012542-p7ewkro",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127012542-p7ewkro",
												"updated": "20250127012610"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "一个"
												},
												{
													"Type": "NodeText",
													"Data": " "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code strong",
													"TextMarkTextContent": "Pass"
												},
												{
													"Type": "NodeText",
													"Data": " "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "渲染正面正常渲染"
												}
											]
										}
									]
								}
							]
						},
						{
							"ID": "20250127012529-ubwt12e",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127012529-ubwt12e",
								"updated": "20250127012722"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "这样实现的效果会让模型上有重叠的结构出现描边效果"
								}
							]
						},
						{
							"ID": "20250127012737-egdcxe6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127012737-egdcxe6",
								"updated": "20250127013007"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeImage",
									"Data": "span",
									"Properties": {
										"style": "width: 324px;"
									},
									"Children": [
										{
											"Type": "NodeBang"
										},
										{
											"Type": "NodeOpenBracket"
										},
										{
											"Type": "NodeLinkText",
											"Data": "image"
										},
										{
											"Type": "NodeCloseBracket"
										},
										{
											"Type": "NodeOpenParen"
										},
										{
											"Type": "NodeLinkDest",
											"Data": "assets/image-20250127012737-j5274u7.png"
										},
										{
											"Type": "NodeLinkSpace"
										},
										{
											"Type": "NodeLinkTitle",
											"Data": "左边是原来的描边效果，它只在模型的轮廓处描边"
										},
										{
											"Type": "NodeCloseParen"
										}
									]
								},
								{
									"Type": "NodeKramdownSpanIAL",
									"Data": "{: style=\"width: 324px;\"}"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeImage",
									"Data": "span",
									"Properties": {
										"style": "width: 318px;"
									},
									"Children": [
										{
											"Type": "NodeBang"
										},
										{
											"Type": "NodeOpenBracket"
										},
										{
											"Type": "NodeLinkText",
											"Data": "image"
										},
										{
											"Type": "NodeCloseBracket"
										},
										{
											"Type": "NodeOpenParen"
										},
										{
											"Type": "NodeLinkDest",
											"Data": "assets/image-20250127012745-synljvw.png"
										},
										{
											"Type": "NodeLinkSpace"
										},
										{
											"Type": "NodeLinkTitle",
											"Data": "右边是新描边效果，让模型的重叠处也能描边"
										},
										{
											"Type": "NodeCloseParen"
										}
									]
								},
								{
									"Type": "NodeKramdownSpanIAL",
									"Data": "{: style=\"width: 318px;\"}"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"ID": "20250127012623-3txzcma",
							"Type": "NodeBlockquote",
							"Properties": {
								"id": "20250127012623-3txzcma",
								"style": "background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color); --b3-parent-background: var(--b3-card-warning-background);",
								"updated": "20250127012635"
							},
							"Children": [
								{
									"Type": "NodeBlockquoteMarker",
									"Data": "\u003e"
								},
								{
									"ID": "20250127012635-q4iq4dp",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20250127012635-q4iq4dp",
										"updated": "20250127012635"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "注意："
										}
									]
								},
								{
									"ID": "20250127012632-oi98u3g",
									"Type": "NodeList",
									"ListData": {},
									"Properties": {
										"id": "20250127012632-oi98u3g",
										"updated": "20250127012632"
									},
									"Children": [
										{
											"ID": "20250127012632-zci5h5w",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20250127012632-zci5h5w",
												"updated": "20250127012632"
											},
											"Children": [
												{
													"ID": "20250127012632-fweyz2y",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20250127012632-fweyz2y",
														"updated": "20250127012632"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "模型背面就是法线方向和摄像机面朝向呈锐角的部分\n"
														}
													]
												}
											]
										},
										{
											"ID": "20250127012633-q131ol1",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20250127012633-q131ol1",
												"updated": "20250127012633"
											},
											"Children": [
												{
													"ID": "20250127012633-b75faw0",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20250127012633-b75faw0",
														"updated": "20250127012633"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "模型正面就是法线方向和摄像机面朝向呈钝角的部分"
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20250127012504-8qf6jhk",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20250127012504-8qf6jhk",
				"updated": "20250127143835"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "实现漫反射变硬和外轮廓效果"
				}
			]
		},
		{
			"ID": "20250127114803-zijfiwo",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20250127114803-zijfiwo",
				"updated": "20250127143835"
			},
			"Children": [
				{
					"ID": "20250127114813-oth1fpf",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20250127114813-oth1fpf",
						"updated": "20250127114813"
					},
					"Children": [
						{
							"ID": "20250127114813-16w7vsa",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127114813-16w7vsa",
								"updated": "20250127115017"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "新建 Shader ，将渐变纹理的综合实践相关代码直接复制过来"
								}
							]
						},
						{
							"ID": "20250127115019-cabm5hx",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127115019-cabm5hx",
								"updated": "20250127115026"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "代码详见："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "block-ref",
									"TextMarkBlockRefID": "20241104090125-ylbglk8",
									"TextMarkBlockRefSubtype": "d",
									"TextMarkTextContent": "US3S2L10——渐变纹理综合实现"
								}
							]
						}
					]
				},
				{
					"ID": "20250127114813-zepjgnp",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20250127114813-zepjgnp",
						"updated": "20250127114813"
					},
					"Children": [
						{
							"ID": "20250127114813-6f4znkw",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127114813-6f4znkw",
								"updated": "20250127114817"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "将复制过来的代码的 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Pass"
								},
								{
									"Type": "NodeText",
									"Data": "​ 改为只渲染背面"
								}
							]
						},
						{
							"ID": "20250127121033-bgag3wl",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20250127121033-bgag3wl",
								"style": "line-height: 22px;",
								"updated": "20250127121055"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "Yw=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "// Base Pass 基础渲染通道\nPass\n{\n    Tags { \"LightMode\" = \"ForwardBase\" }\n    Cull Back\n\n    CGPROGRAM\n    // ...\n    ENDCG\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20250127114813-uyp2as0",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20250127114813-uyp2as0",
						"updated": "20250127114813"
					},
					"Children": [
						{
							"ID": "20250127114813-h17yref",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127114813-h17yref",
								"updated": "20250127114821"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "加入阴影接收相关内容\n"
								}
							]
						},
						{
							"ID": "20250127114821-pj7kz4b",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20250127114821-pj7kz4b",
								"updated": "20250127114831"
							},
							"Children": [
								{
									"ID": "20250127114831-2u1dfav",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20250127114831-2u1dfav",
										"updated": "20250127114831"
									},
									"Children": [
										{
											"ID": "20250127114831-a8yvaix",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127114831-a8yvaix",
												"updated": "20250127114835"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "编译指令 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "#pragma multi_compile_fwdbase"
												},
												{
													"Type": "NodeText",
													"Data": "​"
												}
											]
										}
									]
								},
								{
									"ID": "20250127114831-51firdu",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "Mi4=",
										"Num": 2
									},
									"Properties": {
										"id": "20250127114831-51firdu",
										"updated": "20250127114831"
									},
									"Children": [
										{
											"ID": "20250127114831-4avu8ct",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127114831-4avu8ct",
												"updated": "20250127114838"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "内置文件 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "#include \u0026quot;AutoLight.cginc\u0026quot;"
												},
												{
													"Type": "NodeText",
													"Data": "​"
												}
											]
										}
									]
								},
								{
									"ID": "20250127114831-yc1a58w",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "My4=",
										"Num": 3
									},
									"Properties": {
										"id": "20250127114831-yc1a58w",
										"updated": "20250127114831"
									},
									"Children": [
										{
											"ID": "20250127114831-1ya8yg2",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127114831-1ya8yg2",
												"updated": "20250127114850"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "​"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "v2f"
												},
												{
													"Type": "NodeText",
													"Data": "​ 结构体中加入 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "float3 worldPos"
												},
												{
													"Type": "NodeText",
													"Data": "​ 和 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "SHADOW_COORDS(4)"
												},
												{
													"Type": "NodeText",
													"Data": "​"
												}
											]
										},
										{
											"ID": "20250127121109-jpcixov",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20250127121109-jpcixov",
												"style": "line-height: 22px;",
												"updated": "20250127121122"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "Yw=="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "#pragma vertex vert\n#pragma fragment frag\n#pragma multi_compile_fwdbase\n\n#include \"UnityCG.cginc\"\n#include \"Lighting.cginc\"\n#include \"AutoLight.cginc\"\n\nstruct v2f\n{\n    float4 pos: SV_POSITION;\n    float4 uv: TEXCOORD0;       //可以使用一个float4来同时存储主要纹理的uv（xy存储）和法线纹理的uv（zw存储）\n    float3 lightDir: TEXCOORD1; //相对于切线空间下的光的方向\n    float3 viewDir: TEXCOORD2;  //相对于切线空间下的视角方向\n    float3 worldPos: TEXCOORD3; //世界空间下顶点坐标\n    SHADOW_COORDS(4)            //阴影坐标宏\n};\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								},
								{
									"ID": "20250127114831-dsv4avp",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "NC4=",
										"Num": 4
									},
									"Properties": {
										"id": "20250127114831-dsv4avp",
										"updated": "20250127114831"
									},
									"Children": [
										{
											"ID": "20250127114831-ctaspt6",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127114831-ctaspt6",
												"updated": "20250127114831"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "顶点着色器计算中加入\n"
												}
											]
										},
										{
											"ID": "20250127114853-nq2e9kd",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127114853-nq2e9kd",
												"updated": "20250127114856"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "世界空间顶点坐标计算："
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "TRANSFER_SHADOW(o);"
												},
												{
													"Type": "NodeText",
													"Data": "​"
												}
											]
										},
										{
											"ID": "20250127121125-8vra1j6",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20250127121125-8vra1j6",
												"style": "line-height: 22px;",
												"updated": "20250127121134"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "Yw=="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "v2f vert (appdata_full v)\n{\n    v2f data;\n  \n    data.pos = UnityObjectToClipPos(v.vertex);  //计算裁剪空间下顶点坐标\n    // 分别计算主纹理和法线纹理的缩放平移\n    data.uv.xy = v.texcoord.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    data.uv.zw = v.texcoord.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n\n    // 计算副切线\n    float3 binormal = cross(normalize(v.tangent), normalize(v.normal)) * v.tangent.w;\n    // 得到模型空间到切线空间的转换矩阵\n    float3x3 rotation = float3x3(\n        v.tangent.xyz,  //切线\n        binormal,       //副切线\n        v.normal        //法线\n    );\n  \n    data.lightDir = mul(rotation, ObjSpaceLightDir(v.vertex));  // 切线空间下的光的方向\n    data.viewDir = mul(rotation, ObjSpaceViewDir(v.vertex));    // 切线空间下的视角方向\n    data.worldPos = mul(unity_ObjectToWorld, v.vertex).xyz;     // 世界空间下的顶点坐标\n    TRANSFER_SHADOW(data);                                      // 阴影坐标转换宏\n\n    return data;\n}\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								},
								{
									"ID": "20250127114831-5h4eylt",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "NS4=",
										"Num": 5
									},
									"Properties": {
										"id": "20250127114831-5h4eylt",
										"updated": "20250127114831"
									},
									"Children": [
										{
											"ID": "20250127114831-d5mpi6a",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127114831-d5mpi6a",
												"updated": "20250127114831"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "光照衰减相关计算\n"
												}
											]
										},
										{
											"ID": "20250127114901-ccl1dam",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127114901-ccl1dam",
												"updated": "20250127114910"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "​"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "UNITY_LIGHT_ATTENUATION(atten, i, i.worldPos);"
												},
												{
													"Type": "NodeText",
													"Data": "​ 用来和 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "halfLambertNum"
												},
												{
													"Type": "NodeText",
													"Data": "​ 进行乘法运算"
												}
											]
										},
										{
											"ID": "20250127121136-ez6gmtw",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20250127121136-ez6gmtw",
												"style": "line-height: 22px;",
												"updated": "20250127121203"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "Yw=="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "fixed4 frag (v2f i) : SV_Target\n{\n    float4 packedNormal = tex2D(_BumpMap, i.uv.zw);     // 获取法线纹理的颜色数据\n    float3 tangentNormal = UnpackNormal(packedNormal);  // 将颜色数据逆运算并解压缩，得到切线空间下法线数据\n    // 将法线数据的xy乘以凹凸系数，根据xy修正z，避免凹凸系数影响光照亮度\n    tangentNormal.xy *= _BumpScale;                   \n    tangentNormal.z = sqrt(1.0 - saturate(dot(tangentNormal.xy, tangentNormal.xy)));\n\n    // 计算带纹理颜色的BlinnPhong光照计算，这里使用已经计算好的切线数据\n    fixed3 albedo = tex2D(_MainTex, i.uv.xy).rgb * _MainColor.rgb;  // 反射率\n\n    // 漫反射光照计算：使用已经计算完毕的切线数据和光照方向，结合渐变纹理，先计算渐变纹理的uv坐标，再计算漫反射颜色\n    fixed halfLambertNum = dot(tangentNormal, normalize(i.lightDir)) * 0.5 + 0.5;\n\n    UNITY_LIGHT_ATTENUATION(atten, i, i.worldPos);                  // 使用UNITY_LIGHT_ATTENUATION计算光照衰减\n    halfLambertNum *= atten;\n  \n    fixed3 diffuseColor = _LightColor0.rgb * albedo.rgb * tex2D(_RampTex, fixed2(halfLambertNum, halfLambertNum)).rgb;\n    // 高光反射光照计算：这里需要使用已经计算完毕的切线数据和光照方向\n    float3 halfA = normalize(normalize(i.viewDir) + normalize(i.lightDir));     // 半角向量\n    fixed3 specularColor = _LightColor0.rgb * _SpecularColor.rgb * pow(max(0, dot(tangentNormal, halfA)), _SpecularNum);\n    // 最终颜色计算\n    fixed3 color = UNITY_LIGHTMODEL_AMBIENT.rgb * albedo + diffuseColor + specularColor;\n\n    return fixed4(color.rgb, 1);\n}\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								},
								{
									"ID": "20250127114831-udnc4tv",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "Ni4=",
										"Num": 6
									},
									"Properties": {
										"id": "20250127114831-udnc4tv",
										"updated": "20250127114831"
									},
									"Children": [
										{
											"ID": "20250127114831-yzovnr9",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127114831-yzovnr9",
												"updated": "20250127114912"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "​"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "FallBack \u0026quot;Diffuse\u0026quot;"
												},
												{
													"Type": "NodeText",
													"Data": "​"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20250127114813-6imvpj8",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20250127114813-6imvpj8",
						"updated": "20250127143835"
					},
					"Children": [
						{
							"ID": "20250127114813-acst6bj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127114813-acst6bj",
								"updated": "20250127114915"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "处理渲染外轮廓（描边）\n"
								}
							]
						},
						{
							"ID": "20250127114916-jhlzp6z",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20250127114916-jhlzp6z",
								"updated": "20250127143835"
							},
							"Children": [
								{
									"ID": "20250127114918-fe7xovp",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20250127114918-fe7xovp",
										"updated": "20250127114918"
									},
									"Children": [
										{
											"ID": "20250127114918-xob7ofk",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127114918-xob7ofk",
												"updated": "20250127114925"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "加入边缘线颜色和宽度属性 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "_OutLineColor"
												},
												{
													"Type": "NodeText",
													"Data": "​、"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "_OutLineWidth"
												},
												{
													"Type": "NodeText",
													"Data": "​"
												}
											]
										},
										{
											"ID": "20250127121209-7u6s8db",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20250127121209-7u6s8db",
												"style": "line-height: 22px;",
												"updated": "20250127121225"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "Yw=="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "Properties\n{\n    _MainColor(\"MainColor\", Color) = (1, 1, 1, 1)\n    _MainTex(\"MainTex\", 2D) = \"\"{}\n    _BumpMap(\"BumpMap\", 2D) = \"\"{}\n    _BumpScale(\"BumpScale\", Range(0, 1)) = 1\n    _RampTex(\"_RampTex\", 2D) = \"\"{}\n    _SpecularColor(\"SpecularColor\", Color) = (1, 1, 1, 1)\n    _SpecularNum(\"SpecularNum\", Range(0, 20)) = 18\n    _OutLineColor(\"OutLineColor\", Color) = (0, 0, 0, 0)\n    _OutLineWidth(\"OutLineWidth\", Float) = 0.005\n}\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								},
								{
									"ID": "20250127114918-ikqctkf",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "Mi4=",
										"Num": 2
									},
									"Properties": {
										"id": "20250127114918-ikqctkf",
										"updated": "20250127143835"
									},
									"Children": [
										{
											"ID": "20250127114918-lhaw4jj",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127114918-lhaw4jj",
												"updated": "20250127114928"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "加入背面渲染的 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "Pass"
												},
												{
													"Type": "NodeText",
													"Data": "​，用于处理轮廓描边"
												}
											]
										},
										{
											"ID": "20250127121253-zk2h1zp",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250127121253-zk2h1zp",
												"updated": "20250127143744"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "使用 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "Cull Front"
												},
												{
													"Type": "NodeText",
													"Data": "​ 剔除正面，让背面的顶点沿其法线方向拓展\n这里使用 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code block-ref",
													"TextMarkBlockRefID": "20240615173000-w7xmejd",
													"TextMarkBlockRefSubtype": "s",
													"TextMarkTextContent": "Name"
												},
												{
													"Type": "NodeText",
													"Data": "​ 为 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "Pass"
												},
												{
													"Type": "NodeText",
													"Data": "​ 命名，方便后续 Shader 复用"
												}
											]
										},
										{
											"ID": "20250127121240-m4j4mi1",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20250127121240-m4j4mi1",
												"style": "line-height: 22px;",
												"updated": "20250127143835"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "Yw=="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "// OutLine Pass 描边渲染通道\nPass\n{\n    Name \"OutLinePass\"\n    Cull Front\n\n    CGPROGRAM\n    #pragma vertex vert\n    #pragma fragment frag\n\n    #include \"UnityCG.cginc\"\n\n    struct v2f\n    {\n        float4 pos: SV_POSITION;\n    };\n\n    fixed4 _OutLineColor;   // 边缘线颜色\n    float _OutLineWidth;    // 边缘线宽度\n\n    v2f vert(appdata_base v)\n    {\n        v2f o;\n        // 把背面看不到的顶点朝法线方向往外扩展\n        v.vertex.xyz += normalize(v.normal) * _OutLineWidth;\n        o.pos = UnityObjectToClipPos(v.vertex);\n\n        return o;\n    }\n\n    fixed4 frag(v2f i) : SV_Target\n    {\n        // 直接返回边缘线颜色，相当于背面是纯色\n        return _OutLineColor;\n    }\n\n    ENDCG\n}\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20250127114756-dn9gtp6",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20250127114756-dn9gtp6",
				"updated": "20250127122335"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "实现高光变硬效果"
				}
			]
		},
		{
			"ID": "20250127114952-zsyx40h",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250127114952-zsyx40h",
				"updated": "20250127114956"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "主要修改高光反射颜色计算相关内容"
				}
			]
		},
		{
			"ID": "20250127114956-xdirbyv",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20250127114956-xdirbyv",
				"updated": "20250127121833"
			},
			"Children": [
				{
					"ID": "20250127114956-70l36e1",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20250127114956-70l36e1",
						"updated": "20250127114956"
					},
					"Children": [
						{
							"ID": "20250127114956-t9dr03g",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127114956-t9dr03g",
								"updated": "20250127114956"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "计算出半角向量"
								}
							]
						}
					]
				},
				{
					"ID": "20250127114956-s5o7s4x",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20250127114956-s5o7s4x",
						"updated": "20250127114956"
					},
					"Children": [
						{
							"ID": "20250127114956-3axvjds",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127114956-3axvjds",
								"updated": "20250127114956"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "用法线和半角向量进行点乘"
								}
							]
						}
					]
				},
				{
					"ID": "20250127114956-yvbcnco",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20250127114956-yvbcnco",
						"updated": "20250127121833"
					},
					"Children": [
						{
							"ID": "20250127114956-n1uz4h0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127114956-n1uz4h0",
								"updated": "20250127121712"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "用点乘的结果和一个阈值进行比较 如果小于阈值，取0、大于阈值，取1"
								}
							]
						},
						{
							"ID": "20250127121713-x13jzy3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127121713-x13jzy3",
								"updated": "20250127121812"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "对原来的 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "_SpecularNum"
								},
								{
									"Type": "NodeText",
									"Data": "​ 属性修改，让其变为光照的阈值"
								}
							]
						},
						{
							"ID": "20250127121813-fkz7hmj",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20250127121813-fkz7hmj",
								"style": "line-height: 22px;",
								"updated": "20250127121833"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "Yw=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "Properties\n{\n    _MainColor(\"MainColor\", Color) = (1, 1, 1, 1)\n    _MainTex(\"MainTex\", 2D) = \"\"{}\n    _BumpMap(\"BumpMap\", 2D) = \"\"{}\n    _BumpScale(\"BumpScale\", Range(0, 1)) = 1\n    _RampTex(\"_RampTex\", 2D) = \"\"{}\n    _SpecularColor(\"SpecularColor\", Color) = (1, 1, 1, 1)\n    _SpecularNum(\"SpecularNum\", Range(0, 1)) = 0.5          // 高光阈值\n    _OutLineColor(\"OutLineColor\", Color) = (0, 0, 0, 0)\n    _OutLineWidth(\"OutLineWidth\", Float) = 0.005\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20250127114956-puv7gp9",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20250127114956-puv7gp9",
						"updated": "20250127114956"
					},
					"Children": [
						{
							"ID": "20250127114956-h6rfiuz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127114956-h6rfiuz",
								"updated": "20250127114956"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "利用这个结果和高光颜色进行叠加"
								}
							]
						}
					]
				},
				{
					"ID": "20250127114956-jnp80tl",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NS4=",
						"Num": 5
					},
					"Properties": {
						"id": "20250127114956-jnp80tl",
						"updated": "20250127114956"
					},
					"Children": [
						{
							"ID": "20250127114956-3yvk3yt",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250127114956-3yvk3yt",
								"updated": "20250127114956"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "最后参与到布林方颜色公式计算中"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20250127121416-8mpsgnc",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20250127121416-8mpsgnc",
				"style": "line-height: 22px;",
				"updated": "20250127122333"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "fixed4 frag (v2f i) : SV_Target\n{\n    float4 packedNormal = tex2D(_BumpMap, i.uv.zw);     // 获取法线纹理的颜色数据\n    float3 tangentNormal = UnpackNormal(packedNormal);  // 将颜色数据逆运算并解压缩，得到切线空间下法线数据\n    // 将法线数据的xy乘以凹凸系数，根据xy修正z，避免凹凸系数影响光照亮度\n    tangentNormal.xy *= _BumpScale;                 \n    tangentNormal.z = sqrt(1.0 - saturate(dot(tangentNormal.xy, tangentNormal.xy)));\n\n    // 计算带纹理颜色的BlinnPhong光照计算，这里使用已经计算好的切线数据\n    fixed3 albedo = tex2D(_MainTex, i.uv.xy).rgb * _MainColor.rgb;  // 反射率\n\n    // 漫反射光照计算：使用已经计算完毕的切线数据和光照方向，结合渐变纹理，先计算渐变纹理的uv坐标，再计算漫反射颜色\n    fixed halfLambertNum = dot(tangentNormal, normalize(i.lightDir)) * 0.5 + 0.5;\n\n    UNITY_LIGHT_ATTENUATION(atten, i, i.worldPos);      // 使用UNITY_LIGHT_ATTENUATION计算光照衰减\n    halfLambertNum *= atten;\n  \n    fixed3 diffuseColor = _LightColor0.rgb * albedo.rgb * tex2D(_RampTex, fixed2(halfLambertNum, halfLambertNum)).rgb;\n    // 高光反射光照计算：这里需要使用已经计算完毕的切线数据和光照方向\n    float3 halfA = normalize(normalize(i.viewDir) + normalize(i.lightDir));     // 半角向量\n    fixed spec = dot(normalize(tangentNormal), normalize(halfA));\n    spec = step(_SpecularNum, spec);                    // 用高光阈值与计算结果比较，小于阈值取0，大于阈值取1\n    fixed3 specularColor = _LightColor0.rgb * _SpecularColor.rgb * spec;\n\n    //fixed3 specularColor = _LightColor0.rgb * _SpecularColor.rgb * pow(max(0, dot(tangentNormal, halfA)), _SpecularNum);\n    // 最终颜色计算\n    fixed3 color = UNITY_LIGHTMODEL_AMBIENT.rgb * albedo + diffuseColor + specularColor;\n\n    return fixed4(color.rgb, 1);\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20250127122335-woa9btq",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20250127122335-woa9btq",
				"updated": "20250127143853"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "显示效果"
				}
			]
		},
		{
			"ID": "20250127143842-4dadlcu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250127143842-4dadlcu",
				"updated": "20250127143848"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "完整 Shader 代码如下："
				}
			]
		},
		{
			"ID": "20250127143848-xft6grx",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20250127143848-xft6grx",
				"style": "line-height: 22px;",
				"updated": "20250127143853"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Shader \"TeachShader/ToonShader\"\n{\n    Properties\n    {\n        _MainColor(\"MainColor\", Color) = (1, 1, 1, 1)\n        _MainTex(\"MainTex\", 2D) = \"\"{}\n        _BumpMap(\"BumpMap\", 2D) = \"\"{}\n        _BumpScale(\"BumpScale\", Range(0, 1)) = 1\n        _RampTex(\"_RampTex\", 2D) = \"\"{}\n        _SpecularColor(\"SpecularColor\", Color) = (1, 1, 1, 1)\n        _SpecularNum(\"SpecularNum\", Range(0, 1)) = 0.5          // 高光阈值\n        _OutLineColor(\"OutLineColor\", Color) = (0, 0, 0, 0)\n        _OutLineWidth(\"OutLineWidth\", Float) = 0.005\n    }\n    SubShader\n    {\n        // OutLine Pass 描边渲染通道\n        Pass\n        {\n            Name \"OutLinePass\"\n            Cull Front\n\n            CGPROGRAM\n            #pragma vertex vert\n            #pragma fragment frag\n\n            #include \"UnityCG.cginc\"\n\n            struct v2f\n            {\n                float4 pos: SV_POSITION;\n            };\n\n            fixed4 _OutLineColor;   // 边缘线颜色\n            float _OutLineWidth;    // 边缘线宽度\n\n            v2f vert(appdata_base v)\n            {\n                v2f o;\n                // 把背面看不到的顶点朝法线方向往外扩展\n                v.vertex.xyz += normalize(v.normal) * _OutLineWidth;\n                o.pos = UnityObjectToClipPos(v.vertex);\n\n                return o;\n            }\n\n            fixed4 frag(v2f i) : SV_Target\n            {\n                // 直接返回边缘线颜色，相当于背面是纯色\n                return _OutLineColor;\n            }\n\n            ENDCG\n        }\n\n        // Base Pass 基础渲染通道\n        Pass\n        {\n            Tags { \"LightMode\" = \"ForwardBase\" }\n            Cull Back\n\n            CGPROGRAM\n            #pragma vertex vert\n            #pragma fragment frag\n            #pragma multi_compile_fwdbase\n\n            #include \"UnityCG.cginc\"\n            #include \"Lighting.cginc\"\n            #include \"AutoLight.cginc\"\n\n            struct v2f\n            {\n                float4 pos: SV_POSITION;\n                float4 uv: TEXCOORD0;       //可以使用一个float4来同时存储主要纹理的uv（xy存储）和法线纹理的uv（zw存储）\n                float3 lightDir: TEXCOORD1; //相对于切线空间下的光的方向\n                float3 viewDir: TEXCOORD2;  //相对于切线空间下的视角方向\n                float3 worldPos: TEXCOORD3; //世界空间下顶点坐标\n                SHADOW_COORDS(4)            //阴影坐标宏\n            };\n\n            float4 _MainColor;      //漫反射颜色\n            sampler2D _MainTex;     //颜色纹理\n            float4 _MainTex_ST;     //颜色纹理的缩放和平移\n            sampler2D _BumpMap;     //法线纹理\n            float4 _BumpMap_ST;     //法线纹理的缩放和平移\n            sampler2D _RampTex;     //渐变纹理\n            float4 _RampTex_ST;     //渐变纹理的缩放和平移（很少使用）\n            float _BumpScale;       //凹凸程度\n            float4 _SpecularColor;  //高光颜色\n            fixed _SpecularNum;     //高光阈值\n\n            v2f vert (appdata_full v)\n            {\n                v2f data;\n            \n                data.pos = UnityObjectToClipPos(v.vertex);  //计算裁剪空间下顶点坐标\n                // 分别计算主纹理和法线纹理的缩放平移\n                data.uv.xy = v.texcoord.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n                data.uv.zw = v.texcoord.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n\n                // 计算副切线\n                float3 binormal = cross(normalize(v.tangent), normalize(v.normal)) * v.tangent.w;\n                // 得到模型空间到切线空间的转换矩阵\n                float3x3 rotation = float3x3(\n                    v.tangent.xyz,  //切线\n                    binormal,       //副切线\n                    v.normal        //法线\n                );\n            \n                data.lightDir = mul(rotation, ObjSpaceLightDir(v.vertex));  // 切线空间下的光的方向\n                data.viewDir = mul(rotation, ObjSpaceViewDir(v.vertex));    // 切线空间下的视角方向\n                data.worldPos = mul(unity_ObjectToWorld, v.vertex).xyz;     // 世界空间下的顶点坐标\n                TRANSFER_SHADOW(data);                                      // 阴影坐标转换宏\n\n                return data;\n            }\n\n            fixed4 frag (v2f i) : SV_Target\n            {\n                float4 packedNormal = tex2D(_BumpMap, i.uv.zw);     // 获取法线纹理的颜色数据\n                float3 tangentNormal = UnpackNormal(packedNormal);  // 将颜色数据逆运算并解压缩，得到切线空间下法线数据\n                // 将法线数据的xy乘以凹凸系数，根据xy修正z，避免凹凸系数影响光照亮度\n                tangentNormal.xy *= _BumpScale;                 \n                tangentNormal.z = sqrt(1.0 - saturate(dot(tangentNormal.xy, tangentNormal.xy)));\n\n                // 计算带纹理颜色的BlinnPhong光照计算，这里使用已经计算好的切线数据\n                fixed3 albedo = tex2D(_MainTex, i.uv.xy).rgb * _MainColor.rgb;  // 反射率\n\n                // 漫反射光照计算：使用已经计算完毕的切线数据和光照方向，结合渐变纹理，先计算渐变纹理的uv坐标，再计算漫反射颜色\n                fixed halfLambertNum = dot(tangentNormal, normalize(i.lightDir)) * 0.5 + 0.5;\n\n                UNITY_LIGHT_ATTENUATION(atten, i, i.worldPos);      // 使用UNITY_LIGHT_ATTENUATION计算光照衰减\n                halfLambertNum *= atten;\n            \n                fixed3 diffuseColor = _LightColor0.rgb * albedo.rgb * tex2D(_RampTex, fixed2(halfLambertNum, halfLambertNum)).rgb;\n                // 高光反射光照计算：这里需要使用已经计算完毕的切线数据和光照方向\n                float3 halfA = normalize(normalize(i.viewDir) + normalize(i.lightDir));     // 半角向量\n                fixed spec = dot(normalize(tangentNormal), normalize(halfA));\n                spec = step(_SpecularNum, spec);                    // 用高光阈值与计算结果比较，小于阈值取0，大于阈值取1\n                fixed3 specularColor = _LightColor0.rgb * _SpecularColor.rgb * spec;\n\n                //fixed3 specularColor = _LightColor0.rgb * _SpecularColor.rgb * pow(max(0, dot(tangentNormal, halfA)), _SpecularNum);\n                // 最终颜色计算\n                fixed3 color = UNITY_LIGHTMODEL_AMBIENT.rgb * albedo + diffuseColor + specularColor;\n\n                return fixed4(color.rgb, 1);\n            }\n            ENDCG\n        }\n    }\n    Fallback \"Diffuse\"\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20250127122345-f8t7pey",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250127122345-f8t7pey",
				"updated": "20250127122507"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "将高光阈值设置为0.95，边缘线宽度设置为0.005"
				}
			]
		},
		{
			"ID": "20250127122523-7isib6p",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250127122523-7isib6p",
				"updated": "20250127122523"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"style": "width: 353px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20250127122523-ilh5ikg.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 353px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20250127122525-l8e9jxz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250127122525-l8e9jxz",
				"updated": "20250127122619"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可见，图内的机器人出现了的阴影和描边效果，光照颜色和高光颜色的过渡也变得更硬了"
				}
			]
		}
	]
}