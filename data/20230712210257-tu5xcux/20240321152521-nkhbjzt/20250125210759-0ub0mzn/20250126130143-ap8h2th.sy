{
	"ID": "20250126130143-ap8h2th",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20250126130143-ap8h2th",
		"title": "US4L4——物体切割效果",
		"type": "doc",
		"updated": "20250126231942"
	},
	"Children": [
		{
			"ID": "20250126224047-7hde7oi",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20250126224047-7hde7oi",
				"updated": "20250126231942"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "本章代码关键字"
				}
			]
		},
		{
			"ID": "20250126224054-yt4pmwn",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20250126224054-yt4pmwn",
				"style": "line-height: 22px;",
				"updated": "20250126231942"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "VFACE\t\t\t\t// 片元位于模型正面还是反面的语义，一般在片元着色器的浮点数参数中使用，Unity Shader会自动传入，1表示为正面，-1表示为背面\n#pragma target 3.0\t// 设置着色器模型版本，可以让VFACE​语义使用上的兼容性和稳定性更好\nstep()\t\t\t\t// 传入两个参数，若第二个参数大于等于第一个参数，则返回1，否则返回0\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20250126130143-dkmpjog",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20250126130143-dkmpjog",
				"updated": "20250126221456"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "物体切割效果"
				}
			]
		},
		{
			"ID": "20250126130241-6yirvuj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250126130241-6yirvuj",
				"updated": "20250126130327"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在游戏开发中，物体切割效果就是，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "物体看似被切割、分割或隐藏一部分的视觉效果。"
				},
				{
					"Type": "NodeText",
					"Data": "\n这种效果常用与游戏和动画中，比如角色攻击时的切割效果，场景中的墙壁切割效果等等。"
				}
			]
		},
		{
			"ID": "20250126130257-6dcs8i7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250126130257-6dcs8i7",
				"updated": "20250126130305"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"style": "width: 189px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20250126130257-kjgz30y.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 189px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"style": "width: 205px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20250126130305-kycl48r.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 205px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20250126130320-grncluq",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20250126130320-grncluq",
				"updated": "20250126221456"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "物体切割效果的基本原理"
				}
			]
		},
		{
			"ID": "20250126130341-7fmjmsr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250126130341-7fmjmsr",
				"updated": "20250126130408"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一句话描述它的基本原理："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "在片元着色器中判断片元的世界坐标是否满足切割条件，\n如果满足则直接抛弃片元不渲染，判断片元在模型中的正反面，决定使用哪种纹理进行渲染"
				}
			]
		},
		{
			"ID": "20250126130411-ipdvlla",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250126130411-ipdvlla",
				"updated": "20250126130412"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "关键点："
				}
			]
		},
		{
			"ID": "20250126130412-pvrr4ds",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20250126130412-pvrr4ds",
				"updated": "20250126221245"
			},
			"Children": [
				{
					"ID": "20250126130412-ozjvytd",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20250126130412-ozjvytd",
						"updated": "20250126130412"
					},
					"Children": [
						{
							"ID": "20250126130412-7qrakri",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250126130412-7qrakri",
								"updated": "20250126130412"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如何判断世界坐标"
								}
							]
						},
						{
							"ID": "20250126130425-4rd6zbt",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250126130425-4rd6zbt",
								"updated": "20250126130535"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "在 Shader 中声明一个"
								},
								{
									"Type": "NodeText",
									"Data": " "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code strong",
									"TextMarkTextContent": "Vector"
								},
								{
									"Type": "NodeText",
									"Data": " "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "坐标变量，通过 C# 代码把控制切割位置的物体世界空间位置传递给 Shader"
								},
								{
									"Type": "NodeText",
									"Data": "\n在 Shader 中用片元的世界坐标和传递进来的世界坐标做比较，在这里，我们可以分三种模式，分别比较 x、y、z 坐标，切割 x、y、z 方向的片元"
								}
							]
						},
						{
							"ID": "20250126130558-f79b066",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20250126130558-f79b066",
								"style": "line-height: 22px;",
								"updated": "20250126130704"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "material.SetVector(\"_CuttingPosition\", cutObj.transform.position);\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20250126130702-lkv6r4w",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250126130702-lkv6r4w",
								"updated": "20250126130702"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeImage",
									"Data": "span",
									"Properties": {
										"style": "width: 362px;"
									},
									"Children": [
										{
											"Type": "NodeBang"
										},
										{
											"Type": "NodeOpenBracket"
										},
										{
											"Type": "NodeLinkText",
											"Data": "image"
										},
										{
											"Type": "NodeCloseBracket"
										},
										{
											"Type": "NodeOpenParen"
										},
										{
											"Type": "NodeLinkDest",
											"Data": "assets/image-20250126130702-lp8wkl4.png"
										},
										{
											"Type": "NodeCloseParen"
										}
									]
								},
								{
									"Type": "NodeKramdownSpanIAL",
									"Data": "{: style=\"width: 362px;\"}"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						}
					]
				},
				{
					"ID": "20250126130413-rlttjya",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20250126130413-rlttjya",
						"updated": "20250126130413"
					},
					"Children": [
						{
							"ID": "20250126130413-8mwa45b",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250126130413-8mwa45b",
								"updated": "20250126130413"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如何抛弃片元不渲染"
								}
							]
						},
						{
							"ID": "20250126130710-37hqo8s",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250126130710-37hqo8s",
								"updated": "20250126130755"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Unity Shader 中提供了一个内置函数 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code block-ref",
									"TextMarkBlockRefID": "20241120123139-akw3b29",
									"TextMarkBlockRefSubtype": "s",
									"TextMarkTextContent": "clip(x)"
								},
								{
									"Type": "NodeText",
									"Data": "​，它的作用就是在片元着色器中调用时来丢弃片元的，之前在透明度测试时使用过\n"
								}
							]
						},
						{
							"ID": "20250126130802-2xm63hb",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250126130802-2xm63hb",
								"updated": "20250126130818"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "具体详见："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "block-ref",
									"TextMarkBlockRefID": "20241120123139-t3fekhe",
									"TextMarkBlockRefSubtype": "d",
									"TextMarkTextContent": "US3S3L4——透明度测试"
								}
							]
						},
						{
							"ID": "20250126130800-9t7pjgg",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250126130800-9t7pjgg",
								"updated": "20250126130836"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "传入的值 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "x"
								},
								{
									"Type": "NodeText",
									"Data": "​ 小于0，则会丢弃当前片元，被丢弃的片元不会被进一步处理也就不会被渲染了，\n也就是说，当我们判断片元位置需要被切割时，直接执行 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "clip"
								},
								{
									"Type": "NodeText",
									"Data": "​ 函数传入一个负数，这个片元就会被丢弃，不会被渲染了"
								}
							]
						}
					]
				},
				{
					"ID": "20250126130413-lzhh225",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20250126130413-lzhh225",
						"name": "VFACE",
						"updated": "20250126221245"
					},
					"Children": [
						{
							"ID": "20250126130413-97elrke",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250126130413-97elrke",
								"updated": "20250126130413"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如何判断片元的正反面"
								}
							]
						},
						{
							"ID": "20250126130844-vkefeu9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250126130844-vkefeu9",
								"updated": "20250126130924"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Unity Shader 中提供了一个语义 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "VFACE"
								},
								{
									"Type": "NodeText",
									"Data": "​，它只能在片元着色器中使用，它可以作为参数传递给片元着色器\n传入值 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "1"
								},
								{
									"Type": "NodeText",
									"Data": "​ 表示为正面，"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "-1"
								},
								{
									"Type": "NodeText",
									"Data": "​ 表示为背面，我们可以利用它判断该片元是模型正面还是背面片元，决定使用哪种纹理或颜色进行渲染"
								}
							]
						},
						{
							"ID": "20250126131149-1atrhc2",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20250126131149-1atrhc2",
								"style": "line-height: 22px;",
								"updated": "20250126131359"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "Yw=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "fixed4 frag(v2f i, fixed face: VFACE) : SV_Target\n{\n    fixed4 col = face \u003e 0 ? tex2D(_MainTex, i.uv) : tex2D(_BackTex, i.uv);\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20250126130946-9x4ctrf",
							"Type": "NodeBlockquote",
							"Properties": {
								"id": "20250126130946-9x4ctrf",
								"style": "background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color); --b3-parent-background: var(--b3-card-warning-background);",
								"updated": "20250126221245"
							},
							"Children": [
								{
									"Type": "NodeBlockquoteMarker",
									"Data": "\u003e"
								},
								{
									"ID": "20250126131018-n2cvd7u",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20250126131018-n2cvd7u",
										"updated": "20250126221242"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "注意：在使用它时建议加上编译指令 "
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "code",
											"TextMarkTextContent": "#pragma target 3.0"
										},
										{
											"Type": "NodeText",
											"Data": "​ 或 "
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "code",
											"TextMarkTextContent": "4.0"
										},
										{
											"Type": "NodeText",
											"Data": "​、"
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "code",
											"TextMarkTextContent": "5.0"
										},
										{
											"Type": "NodeText",
											"Data": "​\n表示设置着色器模型版本，可以让 "
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "code",
											"TextMarkTextContent": "VFACE"
										},
										{
											"Type": "NodeText",
											"Data": "​ 语义使用上的兼容性和稳定性更好"
										}
									]
								},
								{
									"ID": "20250126221243-8vu82w3",
									"Type": "NodeCodeBlock",
									"IsFencedCodeBlock": true,
									"Properties": {
										"id": "20250126221243-8vu82w3",
										"style": "line-height: 22px;",
										"updated": "20250126221245"
									},
									"Children": [
										{
											"Type": "NodeCodeBlockFenceOpenMarker",
											"Data": "```"
										},
										{
											"Type": "NodeCodeBlockFenceInfoMarker",
											"CodeBlockInfo": "Yw=="
										},
										{
											"Type": "NodeCodeBlockCode",
											"Data": "Pass\n{\n    CGPROGRAM\n    #pragma vertex vert\n    #pragma fragment frag\n    #pragma target 3.0\n    //...\n    ENDCG\n}\n\n"
										},
										{
											"Type": "NodeCodeBlockFenceCloseMarker",
											"Data": "```"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20250126221456-xpm00aw",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20250126221456-xpm00aw",
				"updated": "20250126231036"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "实现物体切割效果的 Shader 代码"
				}
			]
		},
		{
			"ID": "20250126221503-p09p40l",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20250126221503-p09p40l",
				"updated": "20250126224043"
			},
			"Children": [
				{
					"ID": "20250126221511-xgdvlzb",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20250126221511-xgdvlzb",
						"updated": "20250126221511"
					},
					"Children": [
						{
							"ID": "20250126221511-hk0g3iy",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250126221511-hk0g3iy",
								"updated": "20250126221518"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "新建 Shader "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "ObjectCutting"
								},
								{
									"Type": "NodeText",
									"Data": "​，删除无用代码"
								}
							]
						}
					]
				},
				{
					"ID": "20250126221511-59ro5v3",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20250126221511-59ro5v3",
						"updated": "20250126221511"
					},
					"Children": [
						{
							"ID": "20250126221511-mjogxuz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250126221511-mjogxuz",
								"updated": "20250126221511"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "属性声明 属性映射\n"
								}
							]
						},
						{
							"ID": "20250126221523-trf0441",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20250126221523-trf0441",
								"updated": "20250126221524"
							},
							"Children": [
								{
									"ID": "20250126221524-ejw5d7u",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20250126221524-ejw5d7u",
										"updated": "20250126221524"
									},
									"Children": [
										{
											"ID": "20250126221524-yopeegk",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250126221524-yopeegk",
												"updated": "20250126221542"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "主纹理 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "_MainTex 2D"
												},
												{
													"Type": "NodeText",
													"Data": "​\n"
												}
											]
										}
									]
								},
								{
									"ID": "20250126221525-0l8ia48",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20250126221525-0l8ia48",
										"updated": "20250126221525"
									},
									"Children": [
										{
											"ID": "20250126221525-xflxeae",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250126221525-xflxeae",
												"updated": "20250126221539"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "背面纹理 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "_BackTex 2D"
												},
												{
													"Type": "NodeText",
													"Data": "​\n"
												}
											]
										}
									]
								},
								{
									"ID": "20250126221525-xrn4fbh",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20250126221525-xrn4fbh",
										"updated": "20250126221525"
									},
									"Children": [
										{
											"ID": "20250126221525-81mbzp4",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250126221525-81mbzp4",
												"updated": "20250126221536"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "切割方向（用来控制比较x、y、z哪个轴）"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "_CuttingDir Float"
												},
												{
													"Type": "NodeText",
													"Data": "​\n"
												}
											]
										}
									]
								},
								{
									"ID": "20250126221525-9u3iyq4",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20250126221525-9u3iyq4",
										"updated": "20250126221525"
									},
									"Children": [
										{
											"ID": "20250126221525-5lioc41",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250126221525-5lioc41",
												"updated": "20250126221528"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "是否翻转切割 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "_Invert Float"
												},
												{
													"Type": "NodeText",
													"Data": "​\n"
												}
											]
										}
									]
								},
								{
									"ID": "20250126221525-z5eczjm",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20250126221525-z5eczjm",
										"updated": "20250126221525"
									},
									"Children": [
										{
											"ID": "20250126221525-vm6bxpw",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250126221525-vm6bxpw",
												"updated": "20250126221533"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "切割位置（从 C"
												},
												{
													"Type": "NodeBackslash",
													"Data": "span",
													"Children": [
														{
															"Type": "NodeText",
															"Data": "#"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": " 传递过来）"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "_CuttingPos Vector"
												},
												{
													"Type": "NodeText",
													"Data": "​"
												}
											]
										}
									]
								}
							]
						},
						{
							"ID": "20250126222558-ovlmej6",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20250126222558-ovlmej6",
								"style": "line-height: 22px;",
								"updated": "20250126222610"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "Yw=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "Properties\n{\n    _MainTex(\"Texture\", 2D) = \"white\"{}\n    _BackTex(\"BackTex\", 2D) = \"white\"{}             // 用于渲染模型背面像素的纹理\n    _CuttingDir(\"CuttingDir\", Float) = 0            // 切割方向，0代表x方向，1代表y方向，2代表z方向\n    _Invert(\"Invert\", Float) = 0                    // 是否切割翻转，0代表不翻转，1代表翻转\n    _CuttingPos(\"CuttingPos\", Vector) = (0,0,0,0)   // 切割的位置\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20250126221511-hw56rod",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20250126221511-hw56rod",
						"updated": "20250126221511"
					},
					"Children": [
						{
							"ID": "20250126221511-khi4nbf",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250126221511-khi4nbf",
								"updated": "20250126221511"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "关闭剔除 因为要两面渲染"
								}
							]
						},
						{
							"ID": "20250126222611-4p93is7",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20250126222611-4p93is7",
								"style": "line-height: 22px;",
								"updated": "20250126222626"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "Yw=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "SubShader\n{\n    Tags { \"RenderType\"=\"Opaque\" }\n    Cull Off                                        // 正反都要渲染\n\tPass { /*...*/ }\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20250126221511-10gtjxc",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20250126221511-10gtjxc",
						"updated": "20250126221511"
					},
					"Children": [
						{
							"ID": "20250126221511-4xhxsno",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250126221511-4xhxsno",
								"updated": "20250126221548"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "编译指令 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "#pragma target 3.0"
								},
								{
									"Type": "NodeText",
									"Data": "​ 让 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "VFACE"
								},
								{
									"Type": "NodeText",
									"Data": "​ 兼容性更好"
								}
							]
						},
						{
							"ID": "20250126222630-j9wn1h7",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20250126222630-j9wn1h7",
								"style": "line-height: 22px;",
								"updated": "20250126222642"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "Yw=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "CGPROGRAM\n#pragma vertex vert\n#pragma fragment frag\n#pragma target 3.0\n\n#include \"UnityCG.cginc\"\n// ...\nENDCG\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20250126221511-6k4yuyk",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NS4=",
						"Num": 5
					},
					"Properties": {
						"id": "20250126221511-6k4yuyk",
						"updated": "20250126221511"
					},
					"Children": [
						{
							"ID": "20250126221511-09r2wgf",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250126221511-09r2wgf",
								"updated": "20250126221511"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "结构体\n"
								}
							]
						},
						{
							"ID": "20250126221550-35agt7p",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250126221550-35agt7p",
								"updated": "20250126222645"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "UV、顶点、世界坐标"
								}
							]
						},
						{
							"ID": "20250126222647-4mpp7es",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20250126222647-4mpp7es",
								"style": "line-height: 22px;",
								"updated": "20250126222658"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "Yw=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "struct v2f\n{\n    float4 vertex : SV_POSITION;\n    float2 uv : TEXCOORD0;\n    float3 worldPos : TEXCOORD1;            // 世界坐标位置\n};\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20250126221511-t25poq4",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Ni4=",
						"Num": 6
					},
					"Properties": {
						"id": "20250126221511-t25poq4",
						"updated": "20250126221511"
					},
					"Children": [
						{
							"ID": "20250126221511-n7k1cgt",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250126221511-n7k1cgt",
								"updated": "20250126221511"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "顶点着色器函数\n"
								}
							]
						},
						{
							"ID": "20250126221553-4gorxcz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250126221553-4gorxcz",
								"updated": "20250126221553"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "坐标转换、纹理赋值、世界坐标转换"
								}
							]
						},
						{
							"ID": "20250126222716-1cx9406",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20250126222716-1cx9406",
								"style": "line-height: 22px;",
								"updated": "20250126222718"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "Yw=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "v2f vert (appdata_base v)\n{\n    v2f o;\n    o.vertex = UnityObjectToClipPos(v.vertex);\n    o.uv = TRANSFORM_TEX(v.texcoord, _MainTex);\n    o.worldPos = mul(unity_ObjectToWorld, v.vertex).xyz;\n\n    return o;\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20250126221511-ormf2uh",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Ny4=",
						"Num": 7
					},
					"Properties": {
						"id": "20250126221511-ormf2uh",
						"updated": "20250126224043"
					},
					"Children": [
						{
							"ID": "20250126221511-573lkx1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250126221511-573lkx1",
								"updated": "20250126221511"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "片元着色器函数\n"
								}
							]
						},
						{
							"ID": "20250126221602-75hzwyj",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20250126221602-75hzwyj",
								"updated": "20250126221615"
							},
							"Children": [
								{
									"ID": "20250126221615-3ql6n4m",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20250126221615-3ql6n4m",
										"updated": "20250126221615"
									},
									"Children": [
										{
											"ID": "20250126221615-9cxnfhf",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250126221615-9cxnfhf",
												"updated": "20250126221619"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "加入 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "VFACE"
												},
												{
													"Type": "NodeText",
													"Data": "​ 语义参数"
												}
											]
										}
									]
								},
								{
									"ID": "20250126221615-3grwxcj",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "Mi4=",
										"Num": 2
									},
									"Properties": {
										"id": "20250126221615-3grwxcj",
										"updated": "20250126221615"
									},
									"Children": [
										{
											"ID": "20250126221615-srj08ze",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250126221615-srj08ze",
												"updated": "20250126221615"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "根据正反面决定采样颜色"
												}
											]
										}
									]
								},
								{
									"ID": "20250126221615-nam7bwv",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "My4=",
										"Num": 3
									},
									"Properties": {
										"id": "20250126221615-nam7bwv",
										"updated": "20250126221615"
									},
									"Children": [
										{
											"ID": "20250126221615-5n43tnw",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250126221615-5n43tnw",
												"updated": "20250126221710"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "根据切割方向判断是否丢弃（"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "0"
												},
												{
													"Type": "NodeText",
													"Data": "​ 代表丢弃，"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "1"
												},
												{
													"Type": "NodeText",
													"Data": "​ 代表不丢弃）\n"
												}
											]
										},
										{
											"ID": "20250126221705-pgan0jo",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250126221705-pgan0jo",
												"updated": "20250126221705"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "可以使用 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "step(edge, x)"
												},
												{
													"Type": "NodeText",
													"Data": "​ 函数"
												}
											]
										},
										{
											"ID": "20250126221713-2rnn0dq",
											"Type": "NodeList",
											"ListData": {},
											"Properties": {
												"id": "20250126221713-2rnn0dq",
												"updated": "20250126221715"
											},
											"Children": [
												{
													"ID": "20250126221715-a3n9fnz",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20250126221715-a3n9fnz",
														"updated": "20250126221715"
													},
													"Children": [
														{
															"ID": "20250126221715-qc61y6n",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20250126221715-qc61y6n",
																"updated": "20250126221719"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "​"
																},
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "code",
																	"TextMarkTextContent": "x \u0026gt;= edge"
																},
																{
																	"Type": "NodeText",
																	"Data": "​ 返回 "
																},
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "code",
																	"TextMarkTextContent": "1"
																},
																{
																	"Type": "NodeText",
																	"Data": "​"
																}
															]
														}
													]
												},
												{
													"ID": "20250126221720-tj9fbi0",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20250126221720-tj9fbi0",
														"updated": "20250126221720"
													},
													"Children": [
														{
															"ID": "20250126221720-9hwidog",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20250126221720-9hwidog",
																"updated": "20250126221720"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "​"
																},
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "code",
																	"TextMarkTextContent": "x \u0026lt; edge"
																},
																{
																	"Type": "NodeText",
																	"Data": "​ 返回 "
																},
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "code",
																	"TextMarkTextContent": "0"
																},
																{
																	"Type": "NodeText",
																	"Data": "​"
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"ID": "20250126221615-x1bi4tn",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "NC4=",
										"Num": 4
									},
									"Properties": {
										"id": "20250126221615-x1bi4tn",
										"updated": "20250126221615"
									},
									"Children": [
										{
											"ID": "20250126221615-it0d6zn",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250126221615-it0d6zn",
												"updated": "20250126221615"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "利用是否翻转切割参数决定是否反转丢弃"
												}
											]
										}
									]
								},
								{
									"ID": "20250126221615-p5bsik5",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "NS4=",
										"Num": 5
									},
									"Properties": {
										"id": "20250126221615-p5bsik5",
										"updated": "20250126221615"
									},
									"Children": [
										{
											"ID": "20250126221615-08j0hwc",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250126221615-08j0hwc",
												"updated": "20250126221731"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "利用 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "clip"
												},
												{
													"Type": "NodeText",
													"Data": "​ 函数丢弃片元"
												}
											]
										}
									]
								},
								{
									"ID": "20250126221615-lib98m3",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "Ni4=",
										"Num": 6
									},
									"Properties": {
										"id": "20250126221615-lib98m3",
										"updated": "20250126221615"
									},
									"Children": [
										{
											"ID": "20250126221615-4e61giy",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250126221615-4e61giy",
												"updated": "20250126221735"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "若不丢弃，直接返回颜色"
												}
											]
										}
									]
								}
							]
						},
						{
							"ID": "20250126224039-iejiqzq",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20250126224039-iejiqzq",
								"style": "line-height: 22px;",
								"updated": "20250126224043"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "Yw=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "fixed4 frag (v2f i, fixed face : VFACE) : SV_Target\n{\n    // 通过face来进行正反面判断，因为face的语义是VFACE，因此Unity Shader会自动传入对应的参数\n    fixed4 color = face \u003e 0 ? tex2D(_MainTex, i.uv) : tex2D(_BackTex, i.uv);\n  \n    // 计算丢弃中间值，其中_CuttingDir决定比较哪个方向\n    fixed cutValue;\n    if (_CuttingDir == 0)\n        cutValue = step(_CuttingPos.x, i.worldPos.x);   // 若片元的世界坐标x轴方向小于切割位置，说明需要切割\n    else if (_CuttingDir == 1)\n        cutValue = step(_CuttingPos.y, i.worldPos.y);   // 若片元的世界坐标y轴方向小于切割位置，说明需要切割\n    else if (_CuttingDir == 2) \n        cutValue = step(_CuttingPos.z, i.worldPos.z);   // 若片元的世界坐标z轴方向小于切割位置，说明需要切割\n  \n    // 如果是切割翻转的，则需要反转丢弃中间值，让原来被切割的变为不被切割的，原来未被切割的变为被切割的\n    cutValue = _Invert ? 1 - cutValue : cutValue;\n  \n    // 如果丢弃中间值为0，则需要切割，此片元直接丢弃\n    if (cutValue == 0)\n        clip(-1);\n\n    return color;\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20250126231027-3rroe7h",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250126231027-3rroe7h",
				"updated": "20250126231033"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "完整 Shader 代码如下："
				}
			]
		},
		{
			"ID": "20250126231033-wqfpqza",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20250126231033-wqfpqza",
				"style": "line-height: 22px;",
				"updated": "20250126231036"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Shader \"TeachShader/ObjectCutting\"\n{\n    Properties\n    {\n        _MainTex(\"Texture\", 2D) = \"white\"{}\n        _BackTex(\"BackTex\", 2D) = \"white\"{}             // 用于渲染模型背面像素的纹理\n        _CuttingDir(\"CuttingDir\", Float) = 0            // 切割方向，0代表x方向，1代表y方向，2代表z方向\n        _Invert(\"Invert\", Float) = 0                    // 是否切割翻转，0代表不翻转，1代表翻转\n        _CuttingPos(\"CuttingPos\", Vector) = (0,0,0,0)   // 切割的位置\n    }\n    SubShader\n    {\n        Tags { \"RenderType\"=\"Opaque\" }\n        Cull Off                                        // 正反都要渲染\n\n        Pass\n        {\n            CGPROGRAM\n            #pragma vertex vert\n            #pragma fragment frag\n            #pragma target 3.0\n\n            #include \"UnityCG.cginc\"\n\n            struct v2f\n            {\n                float4 vertex : SV_POSITION;\n                float2 uv : TEXCOORD0;\n                float3 worldPos : TEXCOORD1;            // 世界坐标位置\n            };\n\n            sampler2D _MainTex;\n            float4 _MainTex_ST;\n            sampler2D _BackTex;\n            float4 _BackTex_ST;\n            fixed _CuttingDir;\n            fixed _Invert;\n            float4 _CuttingPos;\n\n            v2f vert (appdata_base v)\n            {\n                v2f o;\n                o.vertex = UnityObjectToClipPos(v.vertex);\n                o.uv = TRANSFORM_TEX(v.texcoord, _MainTex);\n                o.worldPos = mul(unity_ObjectToWorld, v.vertex).xyz;\n\n                return o;\n            }\n\n            fixed4 frag (v2f i, fixed face : VFACE) : SV_Target\n            {\n                // 通过face来进行正反面判断，因为face的语义是VFACE，因此Unity Shader会自动传入对应的参数\n                fixed4 color = face \u003e 0 ? tex2D(_MainTex, i.uv) : tex2D(_BackTex, i.uv);\n            \n                // 计算丢弃中间值，其中_CuttingDir决定比较哪个方向\n                fixed cutValue;\n                if (_CuttingDir == 0)\n                    cutValue = step(_CuttingPos.x, i.worldPos.x);   // 若片元的世界坐标x轴方向小于切割位置，说明需要切割\n                else if (_CuttingDir == 1)\n                    cutValue = step(_CuttingPos.y, i.worldPos.y);   // 若片元的世界坐标y轴方向小于切割位置，说明需要切割\n                else if (_CuttingDir == 2) \n                    cutValue = step(_CuttingPos.z, i.worldPos.z);   // 若片元的世界坐标z轴方向小于切割位置，说明需要切割\n            \n                // 如果是切割翻转的，则需要反转丢弃中间值，让原来被切割的变为不被切割的，原来未被切割的变为被切割的\n                cutValue = _Invert ? 1 - cutValue : cutValue;\n            \n                // 如果丢弃中间值为0，则需要切割，此片元直接丢弃\n                if (cutValue == 0)\n                    clip(-1);\n\n                return color;\n            }\n            ENDCG\n        }\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20250126224611-6pgh5b5",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20250126224611-6pgh5b5",
				"updated": "20250126225859"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "实现物体切割效果的 C"
				},
				{
					"Type": "NodeBackslash",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeText",
							"Data": "#"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 代码"
				}
			]
		},
		{
			"ID": "20250126224625-iil11wf",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20250126224625-iil11wf",
				"updated": "20250126224654"
			},
			"Children": [
				{
					"ID": "20250126224630-y75vgo6",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20250126224630-y75vgo6",
						"updated": "20250126224638"
					},
					"Children": [
						{
							"ID": "20250126224630-yx6ts6q",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250126224630-yx6ts6q",
								"updated": "20250126224638"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "新建 C"
								},
								{
									"Type": "NodeBackslash",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "#"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 脚本 和 Shader 名一样"
								}
							]
						}
					]
				},
				{
					"ID": "20250126224630-rcx6bz8",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20250126224630-rcx6bz8",
						"updated": "20250126224647"
					},
					"Children": [
						{
							"ID": "20250126224630-sgqgk8k",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250126224630-sgqgk8k",
								"updated": "20250126224647"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "加入 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code block-ref",
									"TextMarkBlockRefID": "20240208230406-1c49ce8",
									"TextMarkBlockRefSubtype": "s",
									"TextMarkTextContent": "[ExecuteAlways]"
								},
								{
									"Type": "NodeText",
									"Data": "​ 特性，让编辑模式下也运行，可以看到效果"
								}
							]
						}
					]
				},
				{
					"ID": "20250126224630-zxd4r0y",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20250126224630-zxd4r0y",
						"updated": "20250126224630"
					},
					"Children": [
						{
							"ID": "20250126224630-znfoaxc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250126224630-znfoaxc",
								"updated": "20250126224630"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "声明材质球和切割位置对象"
								}
							]
						}
					]
				},
				{
					"ID": "20250126224630-ssl6wcp",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20250126224630-ssl6wcp",
						"updated": "20250126224630"
					},
					"Children": [
						{
							"ID": "20250126224630-pzzb2zx",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250126224630-pzzb2zx",
								"updated": "20250126224630"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "材质球初始化"
								}
							]
						}
					]
				},
				{
					"ID": "20250126224630-pnv5yht",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NS4=",
						"Num": 5
					},
					"Properties": {
						"id": "20250126224630-pnv5yht",
						"updated": "20250126224654"
					},
					"Children": [
						{
							"ID": "20250126224630-k3ut8ye",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250126224630-k3ut8ye",
								"updated": "20250126224654"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Update"
								},
								{
									"Type": "NodeText",
									"Data": "​ 中不停的将切割物体位置传递给 Shader"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20250126224657-3x6apcd",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20250126224657-3x6apcd",
				"style": "line-height: 22px;",
				"updated": "20250126225859"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "using UnityEngine;\n\n[ExecuteAlways]\npublic class ObjectCutting : MonoBehaviour\n{\n    private Material material;\n    public GameObject cutObj;\n\n    void Start()\n    {\n        material = this.GetComponent\u003cRenderer\u003e().sharedMaterial;\n    }\n\n    void Update()\n    {\n        if (material == null || cutObj == null)\n            return;\n\n        material.SetVector(\"_CuttingPos\", cutObj.transform.position);\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20250126224903-qc5i90v",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20250126224903-qc5i90v",
				"updated": "20250126225954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "显示效果"
				}
			]
		},
		{
			"ID": "20250126225349-o2uijyi",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250126225349-o2uijyi",
				"updated": "20250126225851"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在将被切割的物体上添加一个 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "CutObj"
				},
				{
					"Type": "NodeText",
					"Data": "​ 子对象，并将其关联到 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "ObjectCutting"
				},
				{
					"Type": "NodeText",
					"Data": "​ C"
				},
				{
					"Type": "NodeBackslash",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeText",
							"Data": "#"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 脚本上"
				}
			]
		},
		{
			"ID": "20250126225725-v82buff",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250126225725-v82buff",
				"updated": "20250126225725"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"style": "width: 864px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20250126225725-nvknu9x.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 864px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20250126225729-ersfsin",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250126225729-ersfsin",
				"updated": "20250126225918"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "通过设置添加了 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "ObjectCutting"
				},
				{
					"Type": "NodeText",
					"Data": "​ Shader 的 Material 上的 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "CuttingDir"
				},
				{
					"Type": "NodeText",
					"Data": "​ 和 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Invert"
				},
				{
					"Type": "NodeText",
					"Data": "​，并拖动 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "CutObj"
				},
				{
					"Type": "NodeText",
					"Data": "​ 的位置，即可修改切割效果"
				}
			]
		},
		{
			"ID": "20250126225415-j7uaq0z",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250126225415-j7uaq0z",
				"updated": "20250126225415"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20250126225415-xi7cu03.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20250126225340-r1iobjy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250126225340-r1iobjy",
				"updated": "20250126225954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可见，物体呈现出了被切割的效果，显示出了其中的内部纹理"
				}
			]
		}
	]
}