{
	"ID": "20240616121954-zskkglp",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20240616121954-zskkglp",
		"title": "US2S3L4——Swizzle操作符",
		"type": "doc",
		"updated": "20240616125451"
	},
	"Children": [
		{
			"ID": "20240616121954-5yp5lvy",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20240616121954-5yp5lvy",
				"updated": "20240616125451"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Swizzle操作符"
				}
			]
		},
		{
			"ID": "20240616122033-jsf3asz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240616122033-jsf3asz",
				"updated": "20240616122111"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "上节课我们学习了"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20240616115341-vk5ysnu",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "向量"
				},
				{
					"Type": "NodeText",
					"Data": "，但是我们并没有讲解如何获取向量中某元素的相关知识点\n而这节课将要学习的Swizzle操作符就可以用于获取向量中元素"
				}
			]
		},
		{
			"ID": "20240616122033-0i2ho7c",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240616122033-0i2ho7c",
				"updated": "20240616122145"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Swizzle操作符通常以点号( "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "."
				},
				{
					"Type": "NodeText",
					"Data": "​ )的形式使用，后面跟着所需的分量顺序"
				}
			]
		},
		{
			"ID": "20240616122148-0n6ote5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240616122148-0n6ote5",
				"updated": "20240616122148"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "对于四维向量来说，我们可以通过："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "向量.xyzw"
				},
				{
					"Type": "NodeText",
					"Data": "​ 或 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "向量.rgba"
				},
				{
					"Type": "NodeText",
					"Data": "​\n两种分量的写法来表示向量中的四个值"
				}
			]
		},
		{
			"ID": "20240616122152-jq9wg15",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240616122152-jq9wg15",
				"updated": "20240616122158"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "其中 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "xyzw"
				},
				{
					"Type": "NodeText",
					"Data": "​ 和 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "rgba"
				},
				{
					"Type": "NodeText",
					"Data": "​ 分别代表四维向量中的四个元素\n在此的意义就是向量一般可以用来表示坐标和颜色"
				}
			]
		},
		{
			"ID": "20240616124004-p269wjp",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240616124004-p269wjp",
				"updated": "20240616124009"
			},
			"Children": [
				{
					"ID": "20240616124009-4dkyogk",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20240616124009-4dkyogk",
						"updated": "20240616124009"
					},
					"Children": [
						{
							"ID": "20240616124009-lljd37w",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240616124009-lljd37w",
								"updated": "20240616124009"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "向量获取元素可以利用Swizzle操作符获取"
								}
							]
						}
					]
				},
				{
					"ID": "20240616124009-8zc1hv5",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20240616124009-8zc1hv5",
						"updated": "20240616124009"
					},
					"Children": [
						{
							"ID": "20240616124009-lln1lqs",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240616124009-lln1lqs",
								"updated": "20240616124009"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "矩阵获取元素和二维数组获取方式一样"
								}
							]
						}
					]
				},
				{
					"ID": "20240616124009-6c6vwgb",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20240616124009-6c6vwgb",
						"updated": "20240616124009"
					},
					"Children": [
						{
							"ID": "20240616124009-3c5tpr5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240616124009-3c5tpr5",
								"updated": "20240616124009"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Swizzle操作符可以让我们对向量进行方便的操作"
								}
							]
						}
					]
				},
				{
					"ID": "20240616124009-c3nf41u",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20240616124009-c3nf41u",
						"updated": "20240616124009"
					},
					"Children": [
						{
							"ID": "20240616124009-b6bn88s",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240616124009-b6bn88s",
								"updated": "20240616124009"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "向量和矩阵在声明和获取时可以配合使用"
								}
							]
						}
					]
				},
				{
					"ID": "20240616124009-ookjhq8",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NS4=",
						"Num": 5
					},
					"Properties": {
						"id": "20240616124009-ookjhq8",
						"updated": "20240616124009"
					},
					"Children": [
						{
							"ID": "20240616124009-xejbroa",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240616124009-xejbroa",
								"updated": "20240616124009"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "高维向量或矩阵可以用低维容器装载，可以利用这个特点将4维变3维，4x4变3x3"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240616122201-lh3vpsl",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240616122201-lh3vpsl",
				"updated": "20240616125451"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Swizzle操作符使用方法"
				}
			]
		},
		{
			"ID": "20240616122423-oenxfnx",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240616122423-oenxfnx",
				"updated": "20240616123842"
			},
			"Children": [
				{
					"ID": "20240616122426-b5q2f5v",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20240616122426-b5q2f5v",
						"updated": "20240616122426"
					},
					"Children": [
						{
							"ID": "20240616122426-ef4ivyc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240616122426-ef4ivyc",
								"updated": "20240616122819"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "利用它来提取分量，使用 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "xyzw"
								},
								{
									"Type": "NodeText",
									"Data": "​ 或 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "rgba"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"ID": "20240616122427-v550rhc",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240616122427-v550rhc",
								"style": "line-height: 22px;",
								"updated": "20240616122758"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "Yw=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "fixed4 f4 = fixed4(1, 2, 3, 4);\nfixed f;\n//提取第一个分量\nf = f4.x;\nf = f4.r;\n//提取第二个分量\nf = f4.y;\nf = f4.g;\n//以此类推，第三个分量就是f4.z或f4.b，第四个分量就是f4.w或f4.a\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20240616122426-uz4jp08",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20240616122426-uz4jp08",
						"updated": "20240616123023"
					},
					"Children": [
						{
							"ID": "20240616122426-9b9wafm",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240616122426-9b9wafm",
								"updated": "20240616122426"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "利用它来重新排列分量"
								}
							]
						},
						{
							"ID": "20240616122823-x0jbeso",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240616122823-x0jbeso",
								"style": "line-height: 22px;",
								"updated": "20240616123023"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "Yw=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "fixed4 f4 = fixed4(1, 2, 3, 4);\n\n//重新排列分量\nf4 = f4.yzxw;   //fixed4(2, 3, 1, 4)\nf4 = f4.abgr;   //fixed4(4, 1, 3, 2)\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20240616122426-t97c13n",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20240616122426-t97c13n",
						"updated": "20240616123842"
					},
					"Children": [
						{
							"ID": "20240616122426-o6yxj9y",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240616122426-o6yxj9y",
								"updated": "20240616122426"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "利用它来创建新向量"
								}
							]
						},
						{
							"ID": "20240616123458-mrdej41",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240616123458-mrdej41",
								"updated": "20240616123559"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "可以用高维向量声明低维向量（指定需要哪些分量），使用低维向量声明高维向量（需要补全相应分量）"
								}
							]
						},
						{
							"ID": "20240616123004-mx0ws90",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240616123004-mx0ws90",
								"style": "line-height: 22px;",
								"updated": "20240616123842"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "Yw=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "fixed4 f4 = fixed4(1, 2, 3, 4);\nfixed f = f4.g;\t//2\n\n//创建新的向量\nfixed3 f3 = f4.xyz;                 //fixed3(4, 1, 3)\nfixed2 f2 = f3.xz;                  //fixed2(4, 3)\nfixed4 f4_2 = fixed4(f2, 4, 5);     //fixed4(4, 3, 4, 5)\nfixed4 f4_3 = fixed4(f2, f2);       //fixed4(4, 3, 4, 3)\nf4_2 = fixed4(f3, f);               //fixed4(4, 1, 3, 2)\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240616123613-i5psbb7",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240616123613-i5psbb7",
				"updated": "20240616125451"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "向量和矩阵的更多用法"
				}
			]
		},
		{
			"ID": "20240616123709-2cxcmz9",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240616123709-2cxcmz9",
				"updated": "20240616125451"
			},
			"Children": [
				{
					"ID": "20240616123931-r2iwrms",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20240616123931-r2iwrms",
						"updated": "20240616123931"
					},
					"Children": [
						{
							"ID": "20240616123931-k718bo2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240616123931-k718bo2",
								"updated": "20240616123931"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "利用向量声明矩阵"
								}
							]
						},
						{
							"ID": "20240616123933-xf4gsi7",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240616123933-xf4gsi7",
								"updated": "20240616123938"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在声明矩阵时，我们可以配合向量来进行声明"
								}
							]
						},
						{
							"ID": "20240616124237-strfzcz",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240616124237-strfzcz",
								"style": "line-height: 22px;",
								"updated": "20240616124558"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "Yw=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "fixed4 f4 = fixed4(1, 2, 3, 4);\n\nfixed4x4 f4x4 = { fixed4(1, 2, 3, 4),\n                  fixed4(5, 6, 7, 8),\n                  fixed4(9, 10, 11, 12),\n                  fixed4(13, 14, 15, 16) };\n\nfixed4x4 f4x4_2 = { f4, \n                    f4, \n                    f4, \n                    f4 };\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20240616123931-ig9v3k7",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20240616123931-ig9v3k7",
						"updated": "20240616123931"
					},
					"Children": [
						{
							"ID": "20240616123931-7n7bnry",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240616123931-7n7bnry",
								"updated": "20240616123931"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "获取矩阵中的元素"
								}
							]
						},
						{
							"ID": "20240616123939-2haogom",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240616123939-2haogom",
								"updated": "20240616123942"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "矩阵中元素的获取和二维数组一样"
								}
							]
						},
						{
							"ID": "20240616124729-7sjentu",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240616124729-7sjentu",
								"style": "line-height: 22px;",
								"updated": "20240616124739"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "Yw=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "fixed4x4 f4x4 = { fixed4(1, 2, 3, 4),\n                  fixed4(5, 6, 7, 8),\n                  fixed4(9, 10, 11, 12),\n                  fixed4(13, 14, 15, 16) };\n\nfixed f = f4x4[0][0];\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20240616123931-ja0zc1i",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20240616123931-ja0zc1i",
						"updated": "20240616123931"
					},
					"Children": [
						{
							"ID": "20240616123931-anyj97m",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240616123931-anyj97m",
								"updated": "20240616123931"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "利用向量获取矩阵中的某一行"
								}
							]
						},
						{
							"ID": "20240616123943-0oe5s52",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240616123943-0oe5s52",
								"updated": "20240616123948"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "我们可以用向量作为容器存储矩阵中的某一行"
								}
							]
						},
						{
							"ID": "20240616124836-4nrrflc",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240616124836-4nrrflc",
								"style": "line-height: 22px;",
								"updated": "20240616124944"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "Yw=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "fixed4x4 f4x4 = { fixed4(1, 2, 3, 4),\n                  fixed4(5, 6, 7, 8),\n                  fixed4(9, 10, 11, 12),\n                  fixed4(13, 14, 15, 16) };\n\nfixed4 f4_2 = f4x4[3];\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20240616123931-c6nfybm",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20240616123931-c6nfybm",
						"updated": "20240616125451"
					},
					"Children": [
						{
							"ID": "20240616123931-0i5au1a",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240616123931-0i5au1a",
								"updated": "20240616123931"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "高维转低维"
								}
							]
						},
						{
							"ID": "20240616123949-wdtorjt",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240616123949-wdtorjt",
								"updated": "20240616123953"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "向量和矩阵都可以用低维存高维，会自动舍去多余元素"
								}
							]
						},
						{
							"ID": "20240616124948-epxw3ve",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240616124948-epxw3ve",
								"updated": "20240616125153"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "对于高维转低维的向量来说，会直接使用前面对应个数的元素\n对于高维转低维的矩阵，会直接使用前面对应维数的元素"
								}
							]
						},
						{
							"ID": "20240616125154-5iq7td7",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240616125154-5iq7td7",
								"style": "line-height: 22px;",
								"updated": "20240616125451"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "Yw=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "fixed4 f4 = fixed4(1, 2, 3, 4);\nfixed4x4 f4x4 = { fixed4(1, 2, 3, 4),\n                  fixed4(5, 6, 7, 8),\n                  fixed4(9, 10, 11, 12),\n                  fixed4(13, 14, 15, 16) };\n\nfixed3 f3_2 = f4;   //f4.xyz\nfixed2 f2_2 = f4;   //f4.xy\n\nfixed3x3 f3x3 = f4x4;   //f4x4[0,1,2][0,1,2]\nfixed4x4 f2x2 = f4x4;   //f4x4[0,1][0,1]\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		}
	]
}