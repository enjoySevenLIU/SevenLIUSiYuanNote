{
	"ID": "20240615214211-o4jl5b1",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20240615214211-o4jl5b1",
		"title": "US2S3L1——CG语句书写位置及指定着色器函数",
		"type": "doc",
		"updated": "20240616152816"
	},
	"Children": [
		{
			"ID": "20240615214227-st8qay7",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240615214227-st8qay7",
				"updated": "20240616152816"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "本章代码关键字"
				}
			]
		},
		{
			"ID": "20240615214232-99nwras",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240615214232-99nwras",
				"style": "line-height: 22px;",
				"updated": "20240615215711"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "CGPROGRAM\t\t//CG语句起始指令\nENDCG\t\t\t//CG语句结束指令\n//cg语句指令\n#pragma vertex\t\t//这个预处理器指令会指定实现顶点着色器的函数\n#pragma fragment\t//这个预处理器指令会指定实现片元着色器的函数\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240615214223-5uk749w",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"alias": "ENDCG",
				"id": "20240615214223-5uk749w",
				"name": "CGPROGRAM",
				"updated": "20240616152816"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "CG语句写在哪里"
				}
			]
		},
		{
			"ID": "20240615214223-n5i5qt0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240615214223-n5i5qt0",
				"updated": "20240615214346"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "对于"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20240615201317-2q2ssqb",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "顶点/片元着色器"
				},
				{
					"Type": "NodeText",
					"Data": "来说，CG语句需要写在 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code block-ref",
					"TextMarkBlockRefID": "20240612192725-y5fghdm",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "Pass"
				},
				{
					"Type": "NodeText",
					"Data": "​ 渲染通道语句块中\n我们需要在"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Pass"
				},
				{
					"Type": "NodeText",
					"Data": "​语句块中，加入指令："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "CGPROGRAM"
				},
				{
					"Type": "NodeText",
					"Data": "​ 和 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "ENDCG"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20240615214223-skmfzpb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240615214223-skmfzpb",
				"updated": "20240615214223"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在这两个指令之间 就是我们书写CG代码的地方"
				}
			]
		},
		{
			"ID": "20240615214223-x2ad2wh",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240615214223-x2ad2wh",
				"style": "line-height: 22px;",
				"updated": "20240615215507"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Shader \"TeachShader/Lesson13\"\n{\n    Properties {...}\n    SubShader\n    {\n        Tags { ... }\n        //...\n\n        Pass\n        {\n            CGPROGRAM\n\t\t\t//...CG语句写在这里\n            ENDCG\n        }\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240615214226-ic6vjl6",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"alias": "#pragma fragment",
				"id": "20240615214226-ic6vjl6",
				"name": "#pragma vertex",
				"updated": "20240616152816"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "重要的编译指令 —— 指定着色器函数"
				}
			]
		},
		{
			"ID": "20240615214423-665oqxw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240615214423-665oqxw",
				"updated": "20240615215419"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在真正书写CG代码之前，我们需要先使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "#pragma"
				},
				{
					"Type": "NodeText",
					"Data": "​ 声明编译指令\n我们目前只学习 指定 顶点\\片元着色器函数 的 编译指令，其他相关编译指令我们以后再学习"
				}
			]
		},
		{
			"ID": "20240615214423-0y4rysx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240615214423-0y4rysx",
				"updated": "20240615215424"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "定义实现 顶点/片元着色器 代码的函数名称："
				}
			]
		},
		{
			"ID": "20240615214502-5dtwgwn",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20240615214502-5dtwgwn",
				"updated": "20240615214721"
			},
			"Children": [
				{
					"ID": "20240615214502-ozf5edd",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240615214502-ozf5edd",
						"updated": "20240615214714"
					},
					"Children": [
						{
							"ID": "20240615214502-264xg8b",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240615214502-264xg8b",
								"updated": "20240615214714"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "#pragma vertex name"
								},
								{
									"Type": "NodeText",
									"Data": "​（"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "name"
								},
								{
									"Type": "NodeText",
									"Data": "​是实现顶点着色器的函数名）"
								}
							]
						}
					]
				},
				{
					"ID": "20240615214503-lzn89vr",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240615214503-lzn89vr",
						"updated": "20240615214721"
					},
					"Children": [
						{
							"ID": "20240615214503-mhs3e5r",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240615214503-mhs3e5r",
								"updated": "20240615214721"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "#pragma fragment name"
								},
								{
									"Type": "NodeText",
									"Data": "​（"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "name"
								},
								{
									"Type": "NodeText",
									"Data": "​是实现片元着色器的函数名）"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240615214423-f6bhl1f",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240615214423-f6bhl1f",
				"updated": "20240615215430"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这两个编译指令的作用是将"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20240615201317-2q2ssqb",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "顶点/片元着色器"
				},
				{
					"Type": "NodeText",
					"Data": "实现"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "定位到两个函数中"
				},
				{
					"Type": "NodeText",
					"Data": "\n之后我们只需要在这两个函数中书写Shader逻辑即可"
				}
			]
		},
		{
			"ID": "20240615215310-vzeoetz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240615215310-vzeoetz",
				"updated": "20240615215517"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "例如下方的代码，分别指定了 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "vert"
				},
				{
					"Type": "NodeText",
					"Data": "​ 作为实现顶点着色器的函数，同时指定了 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "frag"
				},
				{
					"Type": "NodeText",
					"Data": "​ 作为实现片元着色器的函数："
				}
			]
		},
		{
			"ID": "20240615214538-076jdea",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240615214538-076jdea",
				"style": "line-height: 22px;",
				"updated": "20240615215258"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "CGPROGRAM\n\n#pragma vertex vert\t\t\t//指定vert作为实现顶点着色器的函数\n#pragma fragment frag\t\t//指定frag作为实现片元着色器的函数\n\nstruct appdata { /*结构体逻辑*/ };\nstruct v2f { /*结构体逻辑*/ };\n\nv2f vert (appdata v)\n{\n    v2f o;\n\t//在这里实现顶点着色器的逻辑\n    return o;\n}\n\nfixed4 frag (v2f i) : SV_Target\n{\n\tfixed4 col;\n\t//在这里实现片元着色器的逻辑\n    return col;\n}\n\nENDCG\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240615215244-hyr9kah",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240615215244-hyr9kah",
				"updated": "20240615215552"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "对于顶点/片元着色器的CG逻辑部分，这一步是必须的！"
				}
			]
		},
		{
			"ID": "20240616152725-krvq2gk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240616152725-krvq2gk",
				"updated": "20240616152816"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "对于顶点/片元着色器函数的基本结构，详见："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20240616145303-tksex5k",
					"TextMarkBlockRefSubtype": "d",
					"TextMarkTextContent": "US2S3L8——顶点-片元着色器基本结构"
				}
			]
		}
	]
}