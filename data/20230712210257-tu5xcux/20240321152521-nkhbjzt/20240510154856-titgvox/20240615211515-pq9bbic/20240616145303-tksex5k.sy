{
	"ID": "20240616145303-tksex5k",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20240616145303-tksex5k",
		"title": "US2S3L8——顶点-片元着色器基本结构",
		"type": "doc",
		"updated": "20241102172626"
	},
	"Children": [
		{
			"ID": "20240616145303-6duiz4d",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240616145303-6duiz4d",
				"updated": "20241102172626"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "顶点着色器的基本结构"
				}
			]
		},
		{
			"ID": "20240616150948-irco9yy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240616150948-irco9yy",
				"updated": "20240616152008"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "首先需要使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref code",
					"TextMarkBlockRefID": "20240615214226-ic6vjl6",
					"TextMarkBlockRefSubtype": "d",
					"TextMarkTextContent": "#pragma vertex"
				},
				{
					"Type": "NodeText",
					"Data": "​ 来指定实现"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20240510143130-mqdbv8c",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "顶点着色器"
				},
				{
					"Type": "NodeText",
					"Data": "的函数"
				}
			]
		},
		{
			"ID": "20240616151104-boiulwy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240616151104-boiulwy",
				"updated": "20240616152624"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "最基础的顶点着色器函数要求："
				}
			]
		},
		{
			"ID": "20240616151300-vws6dap",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20240616151300-vws6dap",
				"updated": "20241102172626"
			},
			"Children": [
				{
					"ID": "20240616151301-pbm4qgt",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240616151301-pbm4qgt",
						"updated": "20241102172623"
					},
					"Children": [
						{
							"ID": "20240616151301-g3g49s1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240616151301-g3g49s1",
								"updated": "20241102172623"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "参数类型为 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "float4"
								},
								{
									"Type": "NodeText",
									"Data": "​，它代表传入的顶点的坐标，该参数需要由 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "POSITION"
								},
								{
									"Type": "NodeText",
									"Data": "​ 语义修饰，它代表"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong u",
									"TextMarkTextContent": "把模型的顶点坐标填充到这个参数当中"
								}
							]
						}
					]
				},
				{
					"ID": "20240616151400-aupuedj",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240616151400-aupuedj",
						"updated": "20241102172626"
					},
					"Children": [
						{
							"ID": "20240616151400-in4h650",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240616151400-in4h650",
								"updated": "20241102172626"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "返回值类型为 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "float4"
								},
								{
									"Type": "NodeText",
									"Data": "​，它代表经过变换的顶点坐标，返回值需要由 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "SV_POSITION"
								},
								{
									"Type": "NodeText",
									"Data": "​ 语义修饰，它代表"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong u",
									"TextMarkTextContent": "输出的内容是裁剪空间中的顶点坐标"
								}
							]
						}
					]
				},
				{
					"ID": "20240616151542-18vfbj5",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240616151542-18vfbj5",
						"updated": "20241102172618"
					},
					"Children": [
						{
							"ID": "20240616151542-bum1qfz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240616151542-bum1qfz",
								"updated": "20240616151756"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "函数内部需要对传入的模型空间的顶点坐标转换到裁剪空间后再返回出去\n"
								}
							]
						},
						{
							"ID": "20240616151802-9w0ya4k",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240616151802-9w0ya4k",
								"updated": "20241102172618"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "可以使用 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "mul(UNITY_MATRIX_MVP, *)"
								},
								{
									"Type": "NodeText",
									"Data": "​，其中"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "mul()"
								},
								{
									"Type": "NodeText",
									"Data": "​是CG提供的内置的矩阵和向量的乘法运算函数，\n​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "UNITY_MATRIX_MVP"
								},
								{
									"Type": "NodeText",
									"Data": "​ 代表一个变换矩阵，是Unity内置的模型M，观察V，投影P矩阵的集合"
								}
							]
						},
						{
							"ID": "20240616151919-hn2uycp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240616151919-hn2uycp",
								"updated": "20240616151951"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "上面的写法是旧写法，在Unity2022内，它将被Unity自动替换为"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "UnityObjectToClipPos(v)"
								},
								{
									"Type": "NodeText",
									"Data": "​，它是Unity封装的函数，效果是一样的"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240616154507-vvmkph9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240616154507-vvmkph9",
				"updated": "20240616154540"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "关于语义是什么，详见："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20240616154520-ywczbd8",
					"TextMarkBlockRefSubtype": "d",
					"TextMarkTextContent": "US2S3L9——语义"
				}
			]
		},
		{
			"ID": "20240616145554-o6e2q1o",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240616145554-o6e2q1o",
				"style": "line-height: 22px;",
				"updated": "20240616152123"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "CGPROGRAM\n#pragma vertex myVert\t//指定实现顶点着色器的函数\n\n//顶点着色器 回调函数\n//POSITION 和 SV_POSITION 是CG语言的语义，用于告诉渲染器需要输入什么消息，函数会输出什么消息\n//POSITION：把模型的顶点坐标填充到输入的参数v当中\n//SV_POSITION：顶点着色器输出的内容是裁剪空间中的顶点坐标\n//以上语义会限定输入和输出参数，如果不用语义进行限定，则渲染器将不知道用户输入输出的是什么，就会得到错误的效果\nfloat4 myVert(float4 v : POSITION) : SV_POSITION\n{\n\t//return mul(UNITY_MATRIX_MVP, v);\n    //mul()是CG提供的内置的矩阵和向量的乘法运算函数\n    //UNITY_MATRIX_MVP 代表一个变换矩阵，是Unity内置的模型M，观察V，投影P矩阵的集合\n    \n\t//mul(UNITY_MATRIX_MVP, *)是旧写法，Unity会自动替换为UnityObjectToClipPos(*)，效果是一样的\n    return UnityObjectToClipPos(v);    //假设这里对顶点坐标进行变换，将变换出的顶点坐标返回出去\n}\nENDCG\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240616145546-hufkf12",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240616145546-hufkf12",
				"updated": "20240616154938"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "片元着色器的基本结构"
				}
			]
		},
		{
			"ID": "20240616152650-ww5lkuw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240616152650-ww5lkuw",
				"updated": "20240616153007"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "首先需要使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code block-ref",
					"TextMarkBlockRefID": "20240615214226-ic6vjl6",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "#pragma fragment"
				},
				{
					"Type": "NodeText",
					"Data": "​ 来指定实现"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20240510145657-2vi6gtq",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "片元着色器"
				},
				{
					"Type": "NodeText",
					"Data": "的函数"
				}
			]
		},
		{
			"ID": "20240616152113-ryd0t7h",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240616152113-ryd0t7h",
				"updated": "20240616145553"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "最基础的片元着色器函数要求："
				}
			]
		},
		{
			"ID": "20240616152626-s8pwwzb",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20240616152626-s8pwwzb",
				"updated": "20240616154938"
			},
			"Children": [
				{
					"ID": "20240616152627-ejb8kn7",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240616152627-ejb8kn7",
						"updated": "20240616154938"
					},
					"Children": [
						{
							"ID": "20240616152627-hushlw1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240616152627-hushlw1",
								"updated": "20240616154938"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "返回值类型为 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "fixed4"
								},
								{
									"Type": "NodeText",
									"Data": "​ ，它代表这个片元（像素）的颜色，返回值需要由"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "SV_Target"
								},
								{
									"Type": "NodeText",
									"Data": "​语义修饰，它代表把用户输出颜色存储到一个渲染目标中"
								}
							]
						},
						{
							"ID": "20240616153650-4vnhxdj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240616153650-4vnhxdj",
								"updated": "20240616153703"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "SV_Target"
								},
								{
									"Type": "NodeText",
									"Data": "​ 在这里将输出到默认的帧缓存中"
								}
							]
						}
					]
				},
				{
					"ID": "20240616153147-3kkajj9",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240616153147-3kkajj9"
					},
					"Children": [
						{
							"ID": "20240616153147-8i907e4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240616153147-8i907e4",
								"updated": "20240616153507"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "函数内部经过处理需要去返回一个 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "fixed4"
								},
								{
									"Type": "NodeText",
									"Data": "​ 颜色，表示模型在屏幕上的某个像素显示什么颜色"
								}
							]
						},
						{
							"ID": "20240616153430-at7yb66",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240616153430-at7yb66",
								"updated": "20240616153556"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "最简单的片元着色器可以直接返回一个固定的颜色，相应的使用对应Shader的材质将最终完全显示为这个颜色"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240616152655-9ay79m2",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240616152655-9ay79m2",
				"style": "line-height: 22px;",
				"updated": "20240616153600"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "CGPROGRAM\n#pragma fragment myFrag\n\n//片元着色器 回调函数\n//SV_Target：告诉渲染器，把用户输出颜色存储到一个渲染目标中，这里将输出到默认的帧缓存中\nfixed4 myFrag() : SV_Target\n{\n    return fixed4(1, 0, 0, 1);      //假设我们直接让材质全部显示为红色\n}\nENDCG\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240616153601-s5i3shz",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240616153601-s5i3shz",
				"updated": "20240616154838"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "最简单的顶点/片元着色器示例"
				}
			]
		},
		{
			"ID": "20240616154044-90310da",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240616154044-90310da",
				"updated": "20240616154124"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "下面的顶点/片元着色器只完成了让模型空间下的顶点坐标转换到裁剪空间，同时让使用该着色器的材质直接完全显示为某种颜色"
				}
			]
		},
		{
			"ID": "20240616153746-s94dffw",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240616153746-s94dffw",
				"style": "line-height: 22px;",
				"updated": "20240616154649"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Shader \"TeachShader/Lesson20\"\n{\n    Properties { }\n\n    SubShader\n    {\n        Pass\n        {\n            CGPROGRAM\n            #pragma vertex myVert\t\t//指定顶点着色器的实现函数\n            #pragma fragment myFrag\t\t//指定片元着色器的实现函数\n        \n\t\t\t//顶点着色器 回调函数\n\t\t\t//传入模型空间的顶点，输出裁剪空间下的顶点坐标\n            float4 myVert(float4 v : POSITION) : SV_POSITION\n            {\n                return UnityObjectToClipPos(v);    \t//将传入的模型空间下的顶点坐标转换到裁剪空间下\n            }\n\n            //片元着色器 回调函数\n\t\t\t//输出一个固定的颜色，存储到一个渲染目标中，这里将输出到默认的帧缓存中\n            fixed4 myFrag() : SV_Target\n            {\n                return fixed4(1, 0, 0, 1);      \t//让使用该着色器的材质直接完全显示为红色\n            }\n            ENDCG\n        }\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240616154259-3cxj1vv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240616154259-3cxj1vv",
				"updated": "20240616154324"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用该Shader的材质的效果："
				}
			]
		},
		{
			"ID": "20240616154333-oaqac0b",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240616154333-oaqac0b",
				"updated": "20240616154333"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"parent-style": "width: 430px;",
						"style": "width: 420px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20240616154333-ojs69bp.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 420px;\" parent-style=\"width: 430px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20240616154337-hzka1er",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240616154337-hzka1er",
				"updated": "20240616154433"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用此Shader的材质的模型的显示效果："
				}
			]
		},
		{
			"ID": "20240616154406-yokkzxi",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240616154406-yokkzxi",
				"updated": "20240616154406"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"parent-style": "width: 260px;",
						"style": "width: 250px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20240616154406-stptarw.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 250px;\" parent-style=\"width: 260px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20240616154838-eq91oje",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240616154838-eq91oje"
			}
		}
	]
}