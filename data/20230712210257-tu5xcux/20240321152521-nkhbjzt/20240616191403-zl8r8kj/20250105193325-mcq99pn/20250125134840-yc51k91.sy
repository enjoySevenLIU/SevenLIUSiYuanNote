{
	"ID": "20250125134840-yc51k91",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20250125134840-yc51k91",
		"title": "US3S11L5——Unity自带全局雾效",
		"type": "doc",
		"updated": "20250126122013"
	},
	"Children": [
		{
			"ID": "20250125134840-lso0553",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20250125134840-lso0553",
				"updated": "20250125144521"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "全局雾效"
				}
			]
		},
		{
			"ID": "20250125134938-dap7pk7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250125134938-dap7pk7",
				"updated": "20250125134949"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "全局雾效（Global Fog）是一种视觉效果，用于在3D场景中模拟大气中的雾气对远处物体的遮挡，\n它通过在场景中加入雾的效果，使得距离摄像机较远的物体看起来逐渐被雾气覆盖，从而创造出一种朦胧、模糊的视觉效果。"
				}
			]
		},
		{
			"ID": "20250125135023-ovgonxw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250125135023-ovgonxw",
				"updated": "20250125135023"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"style": "width: 475px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20250125135023-pilqhi9.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 475px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20250125135040-ynqbu8t",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250125135040-ynqbu8t",
				"updated": "20250125135040"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"style": "width: 473px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20250125135040-8l1uvv4.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 473px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20250125135053-gcesstw",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20250125135053-gcesstw",
				"updated": "20250125144521"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Unity自带的全局雾效"
				}
			]
		},
		{
			"ID": "20250125135101-k4w9zsd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250125135101-k4w9zsd",
				"updated": "20250125135118"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Unity 当中本身就存在一个全局雾效功能、我们可以在 Window —\u003e Rendering —\u003e Lighting 窗口中的 Environment 环境页签中进行开启"
				}
			]
		},
		{
			"ID": "20250125135147-84fefkg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250125135147-84fefkg",
				"updated": "20250125135147"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"style": "width: 502px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20250125135147-109ax1k.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 502px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20250125135601-pwo3z6m",
			"Type": "NodeSuperBlock",
			"Properties": {
				"id": "20250125135601-pwo3z6m",
				"updated": "20250125135946"
			},
			"Children": [
				{
					"Type": "NodeSuperBlockOpenMarker"
				},
				{
					"Type": "NodeSuperBlockLayoutMarker",
					"Data": "col"
				},
				{
					"ID": "20250125135239-6dosapn",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20250125135239-6dosapn",
						"updated": "20250125135602"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "​"
						},
						{
							"Type": "NodeImage",
							"Data": "span",
							"Properties": {
								"style": "width: 426px;"
							},
							"Children": [
								{
									"Type": "NodeBang"
								},
								{
									"Type": "NodeOpenBracket"
								},
								{
									"Type": "NodeLinkText",
									"Data": "image"
								},
								{
									"Type": "NodeCloseBracket"
								},
								{
									"Type": "NodeOpenParen"
								},
								{
									"Type": "NodeLinkDest",
									"Data": "assets/image-20250125135239-hwntx2q.png"
								},
								{
									"Type": "NodeCloseParen"
								}
							]
						},
						{
							"Type": "NodeKramdownSpanIAL",
							"Data": "{: style=\"width: 426px;\"}"
						},
						{
							"Type": "NodeText",
							"Data": "​"
						}
					]
				},
				{
					"ID": "20250125135503-bk1ejvd",
					"Type": "NodeList",
					"ListData": {},
					"Properties": {
						"id": "20250125135503-bk1ejvd",
						"updated": "20250125135946"
					},
					"Children": [
						{
							"ID": "20250125135504-sm1lvxa",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20250125135504-sm1lvxa",
								"updated": "20250125135946"
							},
							"Children": [
								{
									"ID": "20250125135504-o8vjcgx",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20250125135504-o8vjcgx",
										"updated": "20250125135519"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "Fog 是否开启全局雾效"
										}
									]
								},
								{
									"ID": "20250125135521-0e13qpz",
									"Type": "NodeList",
									"ListData": {},
									"Properties": {
										"id": "20250125135521-0e13qpz",
										"updated": "20250125135946"
									},
									"Children": [
										{
											"ID": "20250125135520-fkq3brj",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20250125135520-fkq3brj",
												"updated": "20250125135520"
											},
											"Children": [
												{
													"ID": "20250125135520-m9hei7r",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20250125135520-m9hei7r",
														"updated": "20250125135534"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "Color 雾的颜色"
														}
													]
												}
											]
										},
										{
											"ID": "20250125135534-qn27qhe",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20250125135534-qn27qhe",
												"updated": "20250125135534"
											},
											"Children": [
												{
													"ID": "20250125135534-zgmxwpe",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20250125135534-zgmxwpe",
														"updated": "20250125135541"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "Mode 雾的计算方式"
														}
													]
												},
												{
													"ID": "20250125135608-3f1g1vn",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20250125135608-3f1g1vn",
														"updated": "20250125135612"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "其中，雾的计算模式有三种，它们分别是："
														}
													]
												},
												{
													"ID": "20250125135608-aj054dy",
													"Type": "NodeList",
													"ListData": {},
													"Properties": {
														"id": "20250125135608-aj054dy",
														"updated": "20250125135608"
													},
													"Children": [
														{
															"ID": "20250125135608-tvluy4u",
															"Type": "NodeListItem",
															"ListData": {
																"BulletChar": 42,
																"Marker": "Kg=="
															},
															"Properties": {
																"id": "20250125135608-tvluy4u",
																"updated": "20250125135608"
															},
															"Children": [
																{
																	"ID": "20250125135608-jffqug6",
																	"Type": "NodeParagraph",
																	"Properties": {
																		"id": "20250125135608-jffqug6",
																		"updated": "20250125135608"
																	},
																	"Children": [
																		{
																			"Type": "NodeText",
																			"Data": "Linear（线性）"
																		}
																	]
																}
															]
														},
														{
															"ID": "20250125135608-cvbuouz",
															"Type": "NodeListItem",
															"ListData": {
																"BulletChar": 42,
																"Marker": "Kg=="
															},
															"Properties": {
																"id": "20250125135608-cvbuouz",
																"updated": "20250125135608"
															},
															"Children": [
																{
																	"ID": "20250125135608-1keao2t",
																	"Type": "NodeParagraph",
																	"Properties": {
																		"id": "20250125135608-1keao2t",
																		"updated": "20250125135608"
																	},
																	"Children": [
																		{
																			"Type": "NodeText",
																			"Data": "Exponential（指数）"
																		}
																	]
																}
															]
														},
														{
															"ID": "20250125135608-87v1gvz",
															"Type": "NodeListItem",
															"ListData": {
																"BulletChar": 42,
																"Marker": "Kg=="
															},
															"Properties": {
																"id": "20250125135608-87v1gvz",
																"updated": "20250125135608"
															},
															"Children": [
																{
																	"ID": "20250125135608-d3i6l1w",
																	"Type": "NodeParagraph",
																	"Properties": {
																		"id": "20250125135608-d3i6l1w",
																		"updated": "20250125135608"
																	},
																	"Children": [
																		{
																			"Type": "NodeText",
																			"Data": "Exponential Squared（指数的平方）"
																		}
																	]
																}
															]
														}
													]
												},
												{
													"ID": "20250125135614-sv8mi61",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20250125135614-sv8mi61",
														"updated": "20250125135714"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "关于雾的计算公式，详见下文"
														}
													]
												}
											]
										},
										{
											"ID": "20250125135541-dlf25ae",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20250125135541-dlf25ae",
												"updated": "20250125135541"
											},
											"Children": [
												{
													"ID": "20250125135541-d42539v",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20250125135541-d42539v",
														"updated": "20250125135558"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "Density 雾的浓度"
														}
													]
												}
											]
										},
										{
											"ID": "20250125135930-u2t5sy0",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20250125135930-u2t5sy0",
												"updated": "20250125135946"
											},
											"Children": [
												{
													"ID": "20250125135930-7c1m5q5",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20250125135930-7c1m5q5",
														"updated": "20250125135946"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "这里参数根据雾的模式的不同而不同"
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeSuperBlockCloseMarker"
				}
			]
		},
		{
			"ID": "20250125135408-xkef0tv",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20250125135408-xkef0tv",
				"updated": "20250125144521"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "不同模式的雾的混合因子计算公式"
				}
			]
		},
		{
			"ID": "20250125135718-ee66fod",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250125135718-ee66fod",
				"updated": "20250125135718"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "其中，雾的计算模式有三种，它们分别是"
				}
			]
		},
		{
			"ID": "20250125135718-rbvjhkv",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20250125135718-rbvjhkv",
				"updated": "20250125135718"
			},
			"Children": [
				{
					"ID": "20250125135718-k936dau",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20250125135718-k936dau",
						"updated": "20250125135718"
					},
					"Children": [
						{
							"ID": "20250125135718-mbfepof",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250125135718-mbfepof",
								"updated": "20250125135718"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Linear（线性）"
								}
							]
						}
					]
				},
				{
					"ID": "20250125135718-37vglbz",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20250125135718-37vglbz",
						"updated": "20250125135718"
					},
					"Children": [
						{
							"ID": "20250125135718-4cqf70a",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250125135718-4cqf70a",
								"updated": "20250125135718"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Exponential（指数）"
								}
							]
						}
					]
				},
				{
					"ID": "20250125135718-xbk1f68",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20250125135718-xbk1f68",
						"updated": "20250125135718"
					},
					"Children": [
						{
							"ID": "20250125135718-47hco7h",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250125135718-47hco7h",
								"updated": "20250125135718"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Exponential Squared（指数的平方）"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20250125135718-wo55lhy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250125135718-wo55lhy",
				"updated": "20250125135718"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "它们都是用来计算雾的混合因子 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "inline-math",
					"TextMarkInlineMathContent": "f"
				},
				{
					"Type": "NodeText",
					"Data": " 的，有了混合因子，会用雾的颜色和物体本来的颜色进行混合计算"
				}
			]
		},
		{
			"ID": "20250125135718-m47crix",
			"Type": "NodeMathBlock",
			"Properties": {
				"id": "20250125135718-m47crix",
				"updated": "20250125144521"
			},
			"Children": [
				{
					"Type": "NodeMathBlockOpenMarker"
				},
				{
					"Type": "NodeMathBlockContent",
					"Data": "最终的颜色 = (1-f) \\times 物体的颜色 + f \\times 雾的颜色"
				},
				{
					"Type": "NodeMathBlockCloseMarker"
				}
			]
		},
		{
			"ID": "20250125135718-eumvvee",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250125135718-eumvvee",
				"updated": "20250125135718"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "也就是说得到的混合因子越大，雾的颜色占比越大，表现效果就是雾越浓，混合因子越小，物体本来的颜色占比越大，表现效果就是雾越淡"
				}
			]
		},
		{
			"ID": "20250125135720-53c97g8",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20250125135720-53c97g8",
				"updated": "20250125143251"
			},
			"Children": [
				{
					"ID": "20250125140123-wesc3lr",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20250125140123-wesc3lr",
						"updated": "20250125143216"
					},
					"Children": [
						{
							"ID": "20250125140123-itykjq3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250125140123-itykjq3",
								"updated": "20250125140123"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Linear（线性）混合因子计算公式："
								}
							]
						},
						{
							"ID": "20250125140132-nsche2j",
							"Type": "NodeMathBlock",
							"Properties": {
								"id": "20250125140132-nsche2j",
								"updated": "20250125143216"
							},
							"Children": [
								{
									"Type": "NodeMathBlockOpenMarker"
								},
								{
									"Type": "NodeMathBlockContent",
									"Data": "f = \\frac{end - |d|}{end-start}"
								},
								{
									"Type": "NodeMathBlockCloseMarker"
								}
							]
						},
						{
							"ID": "20250125140132-dfyxltr",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250125140132-dfyxltr",
								"updated": "20250125140132"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "其中："
								}
							]
						},
						{
							"ID": "20250125140132-mv4ttd4",
							"Type": "NodeSuperBlock",
							"Properties": {
								"id": "20250125140132-mv4ttd4",
								"updated": "20250125140132"
							},
							"Children": [
								{
									"Type": "NodeSuperBlockOpenMarker"
								},
								{
									"Type": "NodeSuperBlockLayoutMarker",
									"Data": "col"
								},
								{
									"ID": "20250125140132-kceevcd",
									"Type": "NodeList",
									"ListData": {},
									"Properties": {
										"id": "20250125140132-kceevcd",
										"updated": "20250125140132"
									},
									"Children": [
										{
											"ID": "20250125140132-2dtfjah",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20250125140132-2dtfjah",
												"updated": "20250125140132"
											},
											"Children": [
												{
													"ID": "20250125140132-esclwwu",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20250125140132-esclwwu",
														"updated": "20250125140132"
													},
													"Children": [
														{
															"Type": "NodeTextMark",
															"TextMarkType": "inline-math",
															"TextMarkInlineMathContent": "d"
														},
														{
															"Type": "NodeText",
															"Data": " 代表里摄像机的距离"
														}
													]
												}
											]
										},
										{
											"ID": "20250125140132-tycknn7",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20250125140132-tycknn7",
												"updated": "20250125140132"
											},
											"Children": [
												{
													"ID": "20250125140132-sojt9ll",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20250125140132-sojt9ll",
														"updated": "20250125140132"
													},
													"Children": [
														{
															"Type": "NodeTextMark",
															"TextMarkType": "inline-math",
															"TextMarkInlineMathContent": "start"
														},
														{
															"Type": "NodeText",
															"Data": " 代表雾开始的距离（可控）"
														}
													]
												}
											]
										},
										{
											"ID": "20250125140132-veh6qw5",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20250125140132-veh6qw5",
												"updated": "20250125140132"
											},
											"Children": [
												{
													"ID": "20250125140132-xzf39xj",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20250125140132-xzf39xj",
														"updated": "20250125140132"
													},
													"Children": [
														{
															"Type": "NodeTextMark",
															"TextMarkType": "inline-math",
															"TextMarkInlineMathContent": "end"
														},
														{
															"Type": "NodeText",
															"Data": " 代表雾最强时的距离（可控）"
														}
													]
												}
											]
										}
									]
								},
								{
									"ID": "20250125140132-tg4ja22",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20250125140132-tg4ja22",
										"updated": "20250125140132"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "​"
										},
										{
											"Type": "NodeImage",
											"Data": "span",
											"Properties": {
												"style": "width: 263px;"
											},
											"Children": [
												{
													"Type": "NodeBang"
												},
												{
													"Type": "NodeOpenBracket"
												},
												{
													"Type": "NodeLinkText",
													"Data": "image"
												},
												{
													"Type": "NodeCloseBracket"
												},
												{
													"Type": "NodeOpenParen"
												},
												{
													"Type": "NodeLinkDest",
													"Data": "assets/image-20250125140001-0s349h2.png"
												},
												{
													"Type": "NodeCloseParen"
												}
											]
										},
										{
											"Type": "NodeKramdownSpanIAL",
											"Data": "{: style=\"width: 263px;\"}"
										},
										{
											"Type": "NodeText",
											"Data": "​"
										}
									]
								},
								{
									"Type": "NodeSuperBlockCloseMarker"
								}
							]
						},
						{
							"ID": "20250125140132-fv0cpqn",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250125140132-fv0cpqn",
								"updated": "20250125140132"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "这里的距离都是相对于摄像机的"
								}
							]
						}
					]
				},
				{
					"ID": "20250125140133-ckxyv15",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20250125140133-ckxyv15",
						"updated": "20250125143222"
					},
					"Children": [
						{
							"ID": "20250125140133-aeuu5cs",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250125140133-aeuu5cs",
								"updated": "20250125140333"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Exponential（指数）混合因子计算公式："
								}
							]
						},
						{
							"ID": "20250125140205-y0uwu9p",
							"Type": "NodeMathBlock",
							"Properties": {
								"id": "20250125140205-y0uwu9p",
								"updated": "20250125143222"
							},
							"Children": [
								{
									"Type": "NodeMathBlockOpenMarker"
								},
								{
									"Type": "NodeMathBlockContent",
									"Data": "f = 1 - e^{-density \\cdot |d|}"
								},
								{
									"Type": "NodeMathBlockCloseMarker"
								}
							]
						},
						{
							"ID": "20250125140322-iudvdnj",
							"Type": "NodeSuperBlock",
							"Properties": {
								"id": "20250125140322-iudvdnj",
								"updated": "20250125140322"
							},
							"Children": [
								{
									"Type": "NodeSuperBlockOpenMarker"
								},
								{
									"Type": "NodeSuperBlockLayoutMarker",
									"Data": "col"
								},
								{
									"ID": "20250125140136-4jnnarm",
									"Type": "NodeList",
									"ListData": {},
									"Properties": {
										"id": "20250125140136-4jnnarm",
										"updated": "20250125140235"
									},
									"Children": [
										{
											"ID": "20250125140235-ibdy5nx",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20250125140235-ibdy5nx",
												"updated": "20250125140235"
											},
											"Children": [
												{
													"ID": "20250125140235-yvy12tm",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20250125140235-yvy12tm",
														"updated": "20250125140239"
													},
													"Children": [
														{
															"Type": "NodeTextMark",
															"TextMarkType": "inline-math",
															"TextMarkInlineMathContent": "d"
														},
														{
															"Type": "NodeText",
															"Data": " 代表里摄像机的距离"
														}
													]
												}
											]
										},
										{
											"ID": "20250125140236-hhy32yu",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20250125140236-hhy32yu",
												"updated": "20250125140236"
											},
											"Children": [
												{
													"ID": "20250125140236-zdes3ev",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20250125140236-zdes3ev",
														"updated": "20250125140248"
													},
													"Children": [
														{
															"Type": "NodeTextMark",
															"TextMarkType": "inline-math",
															"TextMarkInlineMathContent": "e"
														},
														{
															"Type": "NodeText",
															"Data": " 是自然对数的底约等于 2.71828；"
														}
													]
												}
											]
										},
										{
											"ID": "20250125140236-pl3tcee",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20250125140236-pl3tcee",
												"updated": "20250125140236"
											},
											"Children": [
												{
													"ID": "20250125140236-k0o5mxz",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20250125140236-k0o5mxz",
														"updated": "20250125140246"
													},
													"Children": [
														{
															"Type": "NodeTextMark",
															"TextMarkType": "inline-math",
															"TextMarkInlineMathContent": "density"
														},
														{
															"Type": "NodeText",
															"Data": " 代表雾的浓度（可控）"
														}
													]
												}
											]
										}
									]
								},
								{
									"ID": "20250125140307-vmt3fc8",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20250125140307-vmt3fc8",
										"updated": "20250125140307"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "​"
										},
										{
											"Type": "NodeImage",
											"Data": "span",
											"Properties": {
												"style": "width: 398px;"
											},
											"Children": [
												{
													"Type": "NodeBang"
												},
												{
													"Type": "NodeOpenBracket"
												},
												{
													"Type": "NodeLinkText",
													"Data": "image"
												},
												{
													"Type": "NodeCloseBracket"
												},
												{
													"Type": "NodeOpenParen"
												},
												{
													"Type": "NodeLinkDest",
													"Data": "assets/image-20250125140307-t1bxxmm.png"
												},
												{
													"Type": "NodeCloseParen"
												}
											]
										},
										{
											"Type": "NodeKramdownSpanIAL",
											"Data": "{: style=\"width: 398px;\"}"
										},
										{
											"Type": "NodeText",
											"Data": "​"
										}
									]
								},
								{
									"Type": "NodeSuperBlockCloseMarker"
								}
							]
						},
						{
							"ID": "20250125140152-rbivzk1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250125140152-rbivzk1",
								"updated": "20250125140159"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "这里的距离都是相对于摄像机的"
								}
							]
						}
					]
				},
				{
					"ID": "20250125140325-wzzx78o",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20250125140325-wzzx78o",
						"updated": "20250125143251"
					},
					"Children": [
						{
							"ID": "20250125140325-ld1nevc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250125140325-ld1nevc",
								"updated": "20250125140342"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Exponential Squared（指数的平方）的计算公式："
								}
							]
						},
						{
							"ID": "20250125140345-1iwrndm",
							"Type": "NodeMathBlock",
							"Properties": {
								"id": "20250125140345-1iwrndm",
								"updated": "20250125143251"
							},
							"Children": [
								{
									"Type": "NodeMathBlockOpenMarker"
								},
								{
									"Type": "NodeMathBlockContent",
									"Data": "f=1-e^{-(density-|d|)^2}"
								},
								{
									"Type": "NodeMathBlockCloseMarker"
								}
							]
						},
						{
							"ID": "20250125140455-lapyp5p",
							"Type": "NodeSuperBlock",
							"Properties": {
								"id": "20250125140455-lapyp5p",
								"updated": "20250125140450"
							},
							"Children": [
								{
									"Type": "NodeSuperBlockOpenMarker"
								},
								{
									"Type": "NodeSuperBlockLayoutMarker",
									"Data": "col"
								},
								{
									"ID": "20250125140423-mey5dhg",
									"Type": "NodeList",
									"ListData": {},
									"Properties": {
										"id": "20250125140423-mey5dhg",
										"updated": "20250125140456"
									},
									"Children": [
										{
											"ID": "20250125140423-asw501g",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20250125140423-asw501g",
												"updated": "20250125140423"
											},
											"Children": [
												{
													"ID": "20250125140423-eswv4e8",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20250125140423-eswv4e8",
														"updated": "20250125140423"
													},
													"Children": [
														{
															"Type": "NodeTextMark",
															"TextMarkType": "inline-math",
															"TextMarkInlineMathContent": "d"
														},
														{
															"Type": "NodeText",
															"Data": " 代表里摄像机的距离"
														}
													]
												}
											]
										},
										{
											"ID": "20250125140423-v0sw1pb",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20250125140423-v0sw1pb",
												"updated": "20250125140423"
											},
											"Children": [
												{
													"ID": "20250125140423-cq28juc",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20250125140423-cq28juc",
														"updated": "20250125140423"
													},
													"Children": [
														{
															"Type": "NodeTextMark",
															"TextMarkType": "inline-math",
															"TextMarkInlineMathContent": "e"
														},
														{
															"Type": "NodeText",
															"Data": " 是自然对数的底约等于 2.71828；"
														}
													]
												}
											]
										},
										{
											"ID": "20250125140423-2x2u6oi",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20250125140423-2x2u6oi",
												"updated": "20250125140423"
											},
											"Children": [
												{
													"ID": "20250125140423-nxlcfco",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20250125140423-nxlcfco",
														"updated": "20250125140423"
													},
													"Children": [
														{
															"Type": "NodeTextMark",
															"TextMarkType": "inline-math",
															"TextMarkInlineMathContent": "density"
														},
														{
															"Type": "NodeText",
															"Data": " 代表雾的浓度（可控）"
														}
													]
												}
											]
										}
									]
								},
								{
									"ID": "20250125140450-y2osqye",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20250125140450-y2osqye",
										"updated": "20250125140450"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "​"
										},
										{
											"Type": "NodeImage",
											"Data": "span",
											"Properties": {
												"style": "width: 387px;"
											},
											"Children": [
												{
													"Type": "NodeBang"
												},
												{
													"Type": "NodeOpenBracket"
												},
												{
													"Type": "NodeLinkText",
													"Data": "image"
												},
												{
													"Type": "NodeCloseBracket"
												},
												{
													"Type": "NodeOpenParen"
												},
												{
													"Type": "NodeLinkDest",
													"Data": "assets/image-20250125140450-h6y4rmn.png"
												},
												{
													"Type": "NodeCloseParen"
												}
											]
										},
										{
											"Type": "NodeKramdownSpanIAL",
											"Data": "{: style=\"width: 387px;\"}"
										},
										{
											"Type": "NodeText",
											"Data": "​"
										}
									]
								},
								{
									"Type": "NodeSuperBlockCloseMarker"
								}
							]
						},
						{
							"ID": "20250125140431-nxbemmy",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250125140431-nxbemmy",
								"updated": "20250125140431"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "这里的距离都是相对于摄像机的"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20250125140111-7n43myx",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"alias": "UNITY_FOG_COORDS,UNITY_TRANSFER_FOG,UNITY_APPLY_FOG",
				"id": "20250125140111-7n43myx",
				"name": "#pragma multi_compile_fog",
				"updated": "20250126122013"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Unity 自带的全局雾效的实现原理"
				}
			]
		},
		{
			"ID": "20250125140554-92w5g7u",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250125140554-92w5g7u",
				"updated": "20250125140611"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Unity 自带的全局雾效的实现原理，是场景上每个物体进行渲染时，\n根据物体与摄像机的距离计算雾的影响，并将雾的效果直接应用到物体的材质上（具体如何计算，取决你选择的计算模式）"
				}
			]
		},
		{
			"ID": "20250125140613-d2kravo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250125140613-d2kravo",
				"updated": "20250125140630"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "需要注意的是：如果想要让物体响应 Unity 自带的全局雾效，我们需要在对应物体的 Shader 中加入相关的 CG 代码。"
				}
			]
		},
		{
			"ID": "20250125140631-0mvr41u",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250125140631-0mvr41u",
				"updated": "20250125140642"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "关键的几句 CG 代码是（创建顶点片元着色器时自带）："
				}
			]
		},
		{
			"ID": "20250125140643-90y0dqv",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20250125140643-90y0dqv",
				"updated": "20250125141238"
			},
			"Children": [
				{
					"ID": "20250125140718-qssleyv",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20250125140718-qssleyv",
						"updated": "20250125141130"
					},
					"Children": [
						{
							"ID": "20250125140718-2ep01t1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250125140718-2ep01t1",
								"updated": "20250125141130"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "编译指令 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "#pragma multi_compile_fog"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						}
					]
				},
				{
					"ID": "20250125140718-gkmsxlm",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20250125140718-gkmsxlm",
						"updated": "20250125141133"
					},
					"Children": [
						{
							"ID": "20250125140718-xf8ii0w",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250125140718-xf8ii0w",
								"updated": "20250125141133"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "内置文件 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "#include \u0026quot;UnityCG.cginc\u0026quot;"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						}
					]
				},
				{
					"ID": "20250125140720-2itu1vr",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20250125140720-2itu1vr",
						"updated": "20250125141238"
					},
					"Children": [
						{
							"ID": "20250125140720-2yt32k9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250125140720-2yt32k9",
								"updated": "20250125141238"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "v2f"
								},
								{
									"Type": "NodeText",
									"Data": "​ 结构体中加入用于计算雾效坐标信息（通常是计算深度信息）的宏 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "UNITY_FOG_COORDS(数字)"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"ID": "20250125140736-0c1y57l",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250125140736-0c1y57l",
								"updated": "20250125140838"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "后面的数字和 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "block-ref code",
									"TextMarkBlockRefID": "20241205122905-6p8sv6d",
									"TextMarkBlockRefSubtype": "d",
									"TextMarkTextContent": "SHADOW_COORDS"
								},
								{
									"Type": "NodeText",
									"Data": "​（阴影坐标宏）一样，前面有几个纹理坐标语义，这里就写几"
								}
							]
						}
					]
				},
				{
					"ID": "20250125140721-reqv40g",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20250125140721-reqv40g",
						"updated": "20250125140857"
					},
					"Children": [
						{
							"ID": "20250125140721-uzuebtw",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250125140721-uzuebtw",
								"updated": "20250125140857"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "顶点着色器中加入用于计算雾效数据的宏 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "UNITY_TRANSFER_FOG(v2f结构体, v2f结构体.顶点);"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						}
					]
				},
				{
					"ID": "20250125140721-g8c6i9r",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NS4=",
						"Num": 5
					},
					"Properties": {
						"id": "20250125140721-g8c6i9r",
						"updated": "20250125140906"
					},
					"Children": [
						{
							"ID": "20250125140721-le1a9mi",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250125140721-le1a9mi",
								"updated": "20250125140906"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "片元着色器中加入用于应用雾效的宏 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "UNITY_APPLY_FOG(v2f结构体.fogCoord, 颜色);"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20250125141032-lszz958",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250125141032-lszz958",
				"updated": "20250125141032"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"style": "width: 331px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20250125141032-pc52vsk.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 331px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20250125141202-fkfb80y",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250125141202-fkfb80y",
				"updated": "20250125141324"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "只需要在自定义 Shader 中加入这几句代码，那么使用该 Shader 的物体便可以受到 Unity 全局雾效的影响，\n我们可以在 Unity 进行实际操作来感受它们的作用"
				}
			]
		},
		{
			"ID": "20250125142155-20lirup",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250125142155-20lirup",
				"updated": "20250125142556"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在之前实现的 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20241209012546-0eh5b1d",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "标准漫反射"
				},
				{
					"Type": "NodeText",
					"Data": " 和 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20241209022638-n2aj2jg",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "标准高光反射"
				},
				{
					"Type": "NodeText",
					"Data": " Shader 上添加这些代码"
				}
			]
		},
		{
			"ID": "20250125142233-4zhkrgx",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20250125142233-4zhkrgx",
				"style": "line-height: 22px;",
				"updated": "20250126121904"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Shader \"TeachShader/BumpedDiffuse\"\n{\n    Properties\n    {\n        _Color(\"MainColor\", Color) = (1, 1, 1, 1)\n        _MainTex(\"MainTex\", 2D) = \"\"{}\n        _BumpMap(\"BumpMap\", 2D) = \"\"{}\n        _BumpScale(\"BumpScale\", Range(0, 1)) = 1\n    }\n    SubShader\n    {\n        Tags { \"RenderType\" = \"Opaque\" \"Queue\" = \"Geometry\" }\n\n        // 基础渲染通道 Base Pass\n        Pass\n        {\n            Name \"BasePass\"\n\n            Tags { \"LightMode\" = \"ForwardBase\" }\n\n            CGPROGRAM\n            #pragma vertex vert\n            #pragma fragment frag\n            #pragma multi_compile_fwdbase\n            // 让Unity全局雾效可以工作\n            #pragma multi_compile_fog\n\n            #include \"UnityCG.cginc\"\n            #include \"Lighting.cginc\"\n            #include \"AutoLight.cginc\"\n\n            struct v2f\n            {\n                float4 pos: SV_POSITION;\n                float4 uv: TEXCOORD0;               // 使用float4同时存储主要纹理的uv（xy存储）和法线纹理的uv（zw存储）\n                float4 tangentToWorld0: TEXCOORD1;  // 它用来存储变换矩阵和顶点相对于世界坐标的位置的第一行\n                float4 tangentToWorld1: TEXCOORD2;  // 它用来存储变换矩阵和顶点相对于世界坐标的位置的第二行\n                float4 tangentToWorld2: TEXCOORD3;  // 它用来存储变换矩阵和顶点相对于世界坐标的位置的第三行\n                SHADOW_COORDS(4)                    // 阴影坐标变量宏，因为前面有4个TEXCOORD变量，故这里参数填写4\n                UNITY_FOG_COORDS(5)                 // Unity雾的坐标宏，因为前面有5个TEXCOORD变量（包括SHADOW_COORDS声明的），故这里填5\n            };\n\n            float4 _Color;          //漫反射颜色\n            sampler2D _MainTex;     //颜色纹理\n            float4 _MainTex_ST;     //颜色纹理的缩放和平移\n            sampler2D _BumpMap;     //法线纹理\n            float4 _BumpMap_ST;     //法线纹理的缩放和平移\n            float _BumpScale;       //凹凸程度\n\n            v2f vert (appdata_full v)\n            {\n                v2f data;\n            \n                data.pos = UnityObjectToClipPos(v.vertex);  //计算裁剪空间下顶点坐标\n                // 分别计算主纹理和法线纹理的缩放平移\n                data.uv.xy = v.texcoord.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n                data.uv.zw = v.texcoord.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n                // 得到世界空间下的顶点位置，用于之后在片元中计算视角方向（基于世界空间下）\n                float3 worldPos = mul(unity_ObjectToWorld, v.vertex);\n            \n                // 将模型空间下的法线、切线转换到世界空间下，并计算世界空间下的副切线\n                float3 worldNormal = UnityObjectToWorldNormal(v.normal);\n                float3 worldTangent = UnityObjectToWorldDir(v.tangent);\n                float3 worldBinormal = cross(normalize(worldTangent), normalize(worldNormal)) * v.tangent.w;\n                // 将切线空间到世界空间的转换矩阵，以及世界坐标存储到三个贴图变量内\n                data.tangentToWorld0 = float4(worldTangent.x, worldBinormal.x, worldNormal.x, worldPos.x);\n                data.tangentToWorld1 = float4(worldTangent.y, worldBinormal.y, worldNormal.y, worldPos.y);\n                data.tangentToWorld2 = float4(worldTangent.z, worldBinormal.z, worldNormal.z, worldPos.z);\n                // 阴影坐标转换宏\n                TRANSFER_SHADOW(data)\n                // Unity雾效坐标转换宏\n                UNITY_TRANSFER_FOG(data, data.pos);\n\n                return data;\n            }\n\n            fixed4 frag (v2f i) : SV_Target\n            {\n                // 计算世界空间下光的方向和视角方向\n                fixed3 lightDir = normalize(_WorldSpaceLightPos0.xyz);\n                float3 worldPos = float3(i.tangentToWorld0.w, i.tangentToWorld1.w, i.tangentToWorld2.w);\n                fixed3 viewDir = normalize(UnityWorldSpaceViewDir(worldPos));\n                // 通过法线纹理采样并解压缩，再乘以凹凸系数，得到切线空间下法线数据\n                float4 packedNormal = tex2D(_BumpMap, i.uv.zw);\n                float3 tangentNormal = UnpackNormal(packedNormal);\n                tangentNormal.xy *= _BumpScale;\n                tangentNormal.z = sqrt(1.0 - saturate(dot(tangentNormal.xy, tangentNormal.xy)));\n                // 将切线空间下法线数据转换到世界空间下\n                float3 worldNormal = float3(\n                    dot(i.tangentToWorld0.xyz, tangentNormal),\n                    dot(i.tangentToWorld1.xyz, tangentNormal),\n                    dot(i.tangentToWorld2.xyz, tangentNormal)\n                );\n\n                // 根据以上数据计算光照模型颜色\n                fixed3 albedo = tex2D(_MainTex, i.uv.xy) * _Color.rgb;  //反射率\n                // 漫反射光照计算：这里需要使用已经计算完毕的切线数据和光照方向\n                fixed3 lambertColor = _LightColor0.rgb * albedo.rgb * max(0, dot(worldNormal, lightDir));\n                // 计算光照和阴影综合衰减值\n                UNITY_LIGHT_ATTENUATION(atten, i, worldPos);\n                // 最终颜色\n                fixed3 color = UNITY_LIGHTMODEL_AMBIENT.rgb * albedo + lambertColor * atten;\n                // 对最终颜色加上雾效计算的颜色，其中i.fogCoord是v2f内UNITY_FOG_COORDS自动声明的\n                UNITY_APPLY_FOG(i.fogCoord, color);\n\n                return fixed4(color.rgb, 1);\n            }\n            ENDCG\n        }\n\n        // 附加渲染通道 Additional Pass\n        Pass\n        {\n            Name \"AdditionalPass\"\n\n            Tags { \"LightMode\" = \"ForwardAdd\" }\n            Blend One One\n\n            CGPROGRAM\n            #pragma vertex vert\n            #pragma fragment frag\n            #pragma multi_compile_fwdadd\n            // 让Unity全局雾效可以工作\n            #pragma multi_compile_fog\n\n            #include \"UnityCG.cginc\"\n            #include \"Lighting.cginc\"\n            #include \"AutoLight.cginc\"\n\n            struct v2f\n            {\n                float4 pos: SV_POSITION;\n                float4 uv: TEXCOORD0;               // 使用float4同时存储主要纹理的uv（xy存储）和法线纹理的uv（zw存储）\n                float4 tangentToWorld0: TEXCOORD1;  // 它用来存储变换矩阵和顶点相对于世界坐标的位置的第一行\n                float4 tangentToWorld1: TEXCOORD2;  // 它用来存储变换矩阵和顶点相对于世界坐标的位置的第二行\n                float4 tangentToWorld2: TEXCOORD3;  // 它用来存储变换矩阵和顶点相对于世界坐标的位置的第三行\n                SHADOW_COORDS(4)                    // 阴影坐标变量宏，因为前面有4个TEXCOORD变量，故这里参数填写4\n                UNITY_FOG_COORDS(5)                 // Unity雾的坐标宏，因为前面有5个TEXCOORD变量（包括SHADOW_COORDS声明的），故这里填5\n            };\n\n            float4 _Color;      //漫反射颜色\n            sampler2D _MainTex;     //颜色纹理\n            float4 _MainTex_ST;     //颜色纹理的缩放和平移\n            sampler2D _BumpMap;     //法线纹理\n            float4 _BumpMap_ST;     //法线纹理的缩放和平移\n            float _BumpScale;       //凹凸程度\n\n            v2f vert (appdata_full v)\n            {\n                v2f data;\n            \n                data.pos = UnityObjectToClipPos(v.vertex);  //计算裁剪空间下顶点坐标\n                // 分别计算主纹理和法线纹理的缩放平移\n                data.uv.xy = v.texcoord.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n                data.uv.zw = v.texcoord.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n                // 得到世界空间下的顶点位置，用于之后在片元中计算视角方向（基于世界空间下）\n                float3 worldPos = mul(unity_ObjectToWorld, v.vertex);\n            \n                // 将模型空间下的法线、切线转换到世界空间下，并计算世界空间下的副切线\n                float3 worldNormal = UnityObjectToWorldNormal(v.normal);\n                float3 worldTangent = UnityObjectToWorldDir(v.tangent);\n                float3 worldBinormal = cross(normalize(worldTangent), normalize(worldNormal)) * v.tangent.w;\n                // 将切线空间到世界空间的转换矩阵，以及世界坐标存储到三个贴图变量内\n                data.tangentToWorld0 = float4(worldTangent.x, worldBinormal.x, worldNormal.x, worldPos.x);\n                data.tangentToWorld1 = float4(worldTangent.y, worldBinormal.y, worldNormal.y, worldPos.y);\n                data.tangentToWorld2 = float4(worldTangent.z, worldBinormal.z, worldNormal.z, worldPos.z);\n                // 阴影坐标转换宏\n                TRANSFER_SHADOW(data)\n                // Unity雾效坐标转换宏\n                UNITY_TRANSFER_FOG(data, data.pos);\n\n                return data;\n            }\n\n            fixed4 frag (v2f i) : SV_Target\n            {\n                // 计算世界空间下光的方向和视角方向\n                float3 worldPos = float3(i.tangentToWorld0.w, i.tangentToWorld1.w, i.tangentToWorld2.w);\n            #if defined(_DIRECTIONAL_LIGHT)\n                fixed3 lightDir = normalize(_WorldSpaceLightPos0.xyz);              // 平行光的光源方向\n            #else\n                fixed3 lightDir = normalize(_WorldSpaceLightPos0.xyz - worldPos);   // 非平行光的光源方向\n            #endif\n                fixed3 viewDir = normalize(UnityWorldSpaceViewDir(worldPos));\n                // 通过法线纹理采样并解压缩，再乘以凹凸系数，得到切线空间下法线数据\n                float4 packedNormal = tex2D(_BumpMap, i.uv.zw);\n                float3 tangentNormal = UnpackNormal(packedNormal);\n                tangentNormal.xy *= _BumpScale;\n                tangentNormal.z = sqrt(1.0 - saturate(dot(tangentNormal.xy, tangentNormal.xy)));\n                // 将切线空间下法线数据转换到世界空间下\n                float3 worldNormal = float3(\n                    dot(i.tangentToWorld0.xyz, tangentNormal),\n                    dot(i.tangentToWorld1.xyz, tangentNormal),\n                    dot(i.tangentToWorld2.xyz, tangentNormal)\n                );\n\n                // 根据以上数据计算光照模型颜色\n                fixed3 albedo = tex2D(_MainTex, i.uv.xy) * _Color.rgb;  //反射率\n                // 漫反射光照计算：这里需要使用已经计算完毕的切线数据和光照方向\n                fixed3 lambertColor = _LightColor0.rgb * albedo.rgb * max(0, dot(worldNormal, lightDir));\n                // 计算光照和阴影综合衰减值\n                UNITY_LIGHT_ATTENUATION(atten, i, worldPos);\n                // 最终颜色\n                fixed3 color = lambertColor * atten;\n                // 对最终颜色加上雾效计算的颜色，其中i.fogCoord是v2f内UNITY_FOG_COORDS自动声明的\n                UNITY_APPLY_FOG(i.fogCoord, color);\n\n                return fixed4(color.rgb, 1);\n            }\n            ENDCG\n        }\n    }\n\n    Fallback \"Diffuse\"\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20250125142324-kjqfnh0",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20250125142324-kjqfnh0",
				"style": "line-height: 22px;",
				"updated": "20250126122013"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Shader \"TeachShader/BumpedSpecular\"\n{\n    Properties\n    {\n        _MainColor(\"MainColor\", Color) = (1, 1, 1, 1)\n        _MainTex(\"MainTex\", 2D) = \"\"{}\n        _BumpMap(\"BumpMap\", 2D) = \"\"{}\n        _BumpScale(\"BumpScale\", Range(0, 1)) = 1\n        _SpecularColor(\"SpecularColor\", Color) = (1, 1, 1, 1)\n        _SpecularNum(\"SpecularNum\", Range(0, 20)) = 18\n    }\n    SubShader\n    {\n        Tags { \"RenderType\" = \"Opaque\" \"Queue\" = \"Geometry\" }\n\n        // 基础渲染通道 Base Pass\n        Pass\n        {\n            Name \"BasePass\"\n\n            Tags { \"LightMode\" = \"ForwardBase\" }\n\n            CGPROGRAM\n            #pragma vertex vert\n            #pragma fragment frag\n            #pragma multi_compile_fwdbase\n            // 让Unity全局雾效可以工作\n            #pragma multi_compile_fog\n\n            #include \"UnityCG.cginc\"\n            #include \"Lighting.cginc\"\n            #include \"AutoLight.cginc\"\n\n            struct v2f\n            {\n                float4 pos: SV_POSITION;\n                float4 uv: TEXCOORD0;               // 使用float4同时存储主要纹理的uv（xy存储）和法线纹理的uv（zw存储）\n                float4 tangentToWorld0: TEXCOORD1;  // 它用来存储变换矩阵和顶点相对于世界坐标的位置的第一行\n                float4 tangentToWorld1: TEXCOORD2;  // 它用来存储变换矩阵和顶点相对于世界坐标的位置的第二行\n                float4 tangentToWorld2: TEXCOORD3;  // 它用来存储变换矩阵和顶点相对于世界坐标的位置的第三行\n                SHADOW_COORDS(4)                    // 阴影坐标变量宏，因为前面有4个TEXCOORD变量，故这里参数填写4\n                UNITY_FOG_COORDS(5)                 // Unity雾的坐标宏，因为前面有5个TEXCOORD变量（包括SHADOW_COORDS声明的），故这里填5\n            };\n\n            float4 _MainColor;      //漫反射颜色\n            sampler2D _MainTex;     //颜色纹理\n            float4 _MainTex_ST;     //颜色纹理的缩放和平移\n            sampler2D _BumpMap;     //法线纹理\n            float4 _BumpMap_ST;     //法线纹理的缩放和平移\n            float _BumpScale;       //凹凸程度\n            float4 _SpecularColor;  //高光颜色\n            fixed _SpecularNum;     //光泽度\n\n            v2f vert (appdata_full v)\n            {\n                v2f data;\n            \n                data.pos = UnityObjectToClipPos(v.vertex);  //计算裁剪空间下顶点坐标\n                // 分别计算主纹理和法线纹理的缩放平移\n                data.uv.xy = v.texcoord.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n                data.uv.zw = v.texcoord.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n                // 得到世界空间下的顶点位置，用于之后在片元中计算视角方向（基于世界空间下）\n                float3 worldPos = mul(unity_ObjectToWorld, v.vertex);\n                // 将模型空间下的法线、切线转换到世界空间下，并计算世界空间下的副切线\n                float3 worldNormal = UnityObjectToWorldNormal(v.normal);\n                float3 worldTangent = UnityObjectToWorldDir(v.tangent);\n                float3 worldBinormal = cross(normalize(worldTangent), normalize(worldNormal)) * v.tangent.w;\n                // 将切线空间到世界空间的转换矩阵，以及世界坐标存储到三个贴图变量内\n                data.tangentToWorld0 = float4(worldTangent.x, worldBinormal.x, worldNormal.x, worldPos.x);\n                data.tangentToWorld1 = float4(worldTangent.y, worldBinormal.y, worldNormal.y, worldPos.y);\n                data.tangentToWorld2 = float4(worldTangent.z, worldBinormal.z, worldNormal.z, worldPos.z);\n                // 阴影坐标转换宏\n                TRANSFER_SHADOW(data)\n                // Unity雾效坐标转换宏\n                UNITY_TRANSFER_FOG(data, data.pos);\n\n                return data;\n            }\n\n            fixed4 frag (v2f i) : SV_Target\n            {\n                // 计算世界空间下光的方向和视角方向\n                fixed3 lightDir = normalize(_WorldSpaceLightPos0.xyz);\n                float3 worldPos = float3(i.tangentToWorld0.w, i.tangentToWorld1.w, i.tangentToWorld2.w);\n                fixed3 viewDir = normalize(UnityWorldSpaceViewDir(worldPos));\n                // 通过法线纹理采样并解压缩，再乘以凹凸系数，得到切线空间下法线数据\n                float4 packedNormal = tex2D(_BumpMap, i.uv.zw);\n                float3 tangentNormal = UnpackNormal(packedNormal);\n                tangentNormal.xy *= _BumpScale;\n                tangentNormal.z = sqrt(1.0 - saturate(dot(tangentNormal.xy, tangentNormal.xy)));\n                // 将切线空间下法线数据转换到世界空间下\n                float3 worldNormal = float3(\n                    dot(i.tangentToWorld0.xyz, tangentNormal),\n                    dot(i.tangentToWorld1.xyz, tangentNormal),\n                    dot(i.tangentToWorld2.xyz, tangentNormal)\n                );\n\n                // 根据以上数据计算光照模型颜色\n                fixed3 albedo = tex2D(_MainTex, i.uv.xy) * _MainColor.rgb;  //反射率\n                // 漫反射光照计算：这里需要使用已经计算完毕的切线数据和光照方向\n                fixed3 lambertColor = _LightColor0.rgb * albedo.rgb * max(0, dot(worldNormal, lightDir));\n                // 高光反射光照计算：这里需要使用已经计算完毕的切线数据和光照方向\n                float3 halfA = normalize(viewDir + lightDir);               //半角向量\n                fixed3 specularColor = _LightColor0.rgb * _SpecularColor.rgb * pow(max(0, dot(worldNormal, halfA)), _SpecularNum);\n                // 计算光照和阴影综合衰减值\n                UNITY_LIGHT_ATTENUATION(atten, i, worldPos);\n                // 最终颜色\n                fixed3 color = UNITY_LIGHTMODEL_AMBIENT.rgb * albedo + (lambertColor + specularColor) * atten;\n                // 对最终颜色加上雾效计算的颜色，其中i.fogCoord是v2f内UNITY_FOG_COORDS自动声明的\n                UNITY_APPLY_FOG(i.fogCoord, color);\n\n                return fixed4(color.rgb, 1);\n            }\n            ENDCG\n        }\n\n        // 附加渲染通道 Additional Pass\n        Pass\n        {\n            Name \"AdditionalPass\"\n\n            Tags { \"LightMode\" = \"ForwardAdd\" }\n            Blend One One\n\n            CGPROGRAM\n            #pragma vertex vert\n            #pragma fragment frag\n            #pragma multi_compile_fwdadd\n            // 让Unity全局雾效可以工作\n            #pragma multi_compile_fog\n\n            #include \"UnityCG.cginc\"\n            #include \"Lighting.cginc\"\n            #include \"AutoLight.cginc\"\n\n            struct v2f\n            {\n                float4 pos: SV_POSITION;\n                float4 uv: TEXCOORD0;           // 使用float4同时存储主要纹理的uv（xy存储）和法线纹理的uv（zw存储）\n                float4 tangentToWorld0: TEXCOORD1;  // 它用来存储变换矩阵和顶点相对于世界坐标的位置的第一行\n                float4 tangentToWorld1: TEXCOORD2;  // 它用来存储变换矩阵和顶点相对于世界坐标的位置的第二行\n                float4 tangentToWorld2: TEXCOORD3;  // 它用来存储变换矩阵和顶点相对于世界坐标的位置的第三行\n                SHADOW_COORDS(4)                    // 阴影坐标变量宏，因为前面有4个TEXCOORD变量，故这里参数填写4\n                UNITY_FOG_COORDS(5)                 // Unity雾的坐标宏，因为前面有5个TEXCOORD变量（包括SHADOW_COORDS声明的），故这里填5\n            };\n\n            float4 _MainColor;      //漫反射颜色\n            sampler2D _MainTex;     //颜色纹理\n            float4 _MainTex_ST;     //颜色纹理的缩放和平移\n            sampler2D _BumpMap;     //法线纹理\n            float4 _BumpMap_ST;     //法线纹理的缩放和平移\n            float _BumpScale;       //凹凸程度\n            float4 _SpecularColor;  //高光颜色\n            fixed _SpecularNum;     //光泽度\n\n            v2f vert (appdata_full v)\n            {\n                v2f data;\n            \n                data.pos = UnityObjectToClipPos(v.vertex);  //计算裁剪空间下顶点坐标\n                // 分别计算主纹理和法线纹理的缩放平移\n                data.uv.xy = v.texcoord.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n                data.uv.zw = v.texcoord.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n                // 得到世界空间下的顶点位置，用于之后在片元中计算视角方向（基于世界空间下）\n                float3 worldPos = mul(unity_ObjectToWorld, v.vertex);\n                // 将模型空间下的法线、切线转换到世界空间下，并计算世界空间下的副切线\n                float3 worldNormal = UnityObjectToWorldNormal(v.normal);\n                float3 worldTangent = UnityObjectToWorldDir(v.tangent);\n                float3 worldBinormal = cross(normalize(worldTangent), normalize(worldNormal)) * v.tangent.w;\n                // 将切线空间到世界空间的转换矩阵，以及世界坐标存储到三个贴图变量内\n                data.tangentToWorld0 = float4(worldTangent.x, worldBinormal.x, worldNormal.x, worldPos.x);\n                data.tangentToWorld1 = float4(worldTangent.y, worldBinormal.y, worldNormal.y, worldPos.y);\n                data.tangentToWorld2 = float4(worldTangent.z, worldBinormal.z, worldNormal.z, worldPos.z);\n                // 阴影坐标转换宏\n                TRANSFER_SHADOW(data)\n                // Unity雾效坐标转换宏\n                UNITY_TRANSFER_FOG(data, data.pos);\n\n                return data;\n            }\n\n            fixed4 frag (v2f i) : SV_Target\n            {\n                // 计算世界空间下光的方向和视角方向\n                float3 worldPos = float3(i.tangentToWorld0.w, i.tangentToWorld1.w, i.tangentToWorld2.w);\n            #if defined(_DIRECTIONAL_LIGHT)\n                fixed3 lightDir = normalize(_WorldSpaceLightPos0.xyz);              // 平行光的光源方向\n            #else\n                fixed3 lightDir = normalize(_WorldSpaceLightPos0.xyz - worldPos);   // 非平行光的光源方向\n            #endif\n                fixed3 viewDir = normalize(UnityWorldSpaceViewDir(worldPos));\n                // 通过法线纹理采样并解压缩，再乘以凹凸系数，得到切线空间下法线数据\n                float4 packedNormal = tex2D(_BumpMap, i.uv.zw);\n                float3 tangentNormal = UnpackNormal(packedNormal);\n                tangentNormal.xy *= _BumpScale;\n                tangentNormal.z = sqrt(1.0 - saturate(dot(tangentNormal.xy, tangentNormal.xy)));\n                // 将切线空间下法线数据转换到世界空间下\n                float3 worldNormal = float3(\n                    dot(i.tangentToWorld0.xyz, tangentNormal),\n                    dot(i.tangentToWorld1.xyz, tangentNormal),\n                    dot(i.tangentToWorld2.xyz, tangentNormal)\n                );\n\n                // 根据以上数据计算光照模型颜色\n                fixed3 albedo = tex2D(_MainTex, i.uv.xy) * _MainColor.rgb;  //反射率\n                // 漫反射光照计算：这里需要使用已经计算完毕的切线数据和光照方向\n                fixed3 lambertColor = _LightColor0.rgb * albedo.rgb * max(0, dot(worldNormal, lightDir));\n                // 高光反射光照计算：这里需要使用已经计算完毕的切线数据和光照方向\n                float3 halfA = normalize(viewDir + lightDir);               //半角向量\n                fixed3 specularColor = _LightColor0.rgb * _SpecularColor.rgb * pow(max(0, dot(worldNormal, halfA)), _SpecularNum);\n                // 计算光照和阴影综合衰减值\n                UNITY_LIGHT_ATTENUATION(atten, i, worldPos);\n                // 最终颜色\n                fixed3 color = (lambertColor + specularColor) * atten;\n                // 对最终颜色加上雾效计算的颜色，其中i.fogCoord是v2f内UNITY_FOG_COORDS自动声明的\n                UNITY_APPLY_FOG(i.fogCoord, color);\n\n                return fixed4(color.rgb, 1);\n            }\n            ENDCG\n        }\n    }\n\n    Fallback \"Specular\"\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20250125142141-ygtt7b1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250125142141-ygtt7b1",
				"updated": "20250125142147"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "显示效果："
				}
			]
		},
		{
			"ID": "20250125142151-ofqygfy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250125142151-ofqygfy",
				"updated": "20250125142151"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"style": "width: 626px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20250125142151-40772px.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 626px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		}
	]
}