{
	"ID": "20250105021325-0v67xb4",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20250105021325-0v67xb4",
		"title": "US3S10L8——Bloom效果",
		"type": "doc",
		"updated": "20250125172339"
	},
	"Children": [
		{
			"ID": "20250105180900-8nb51oo",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20250105180900-8nb51oo",
				"updated": "20250105181050"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "本章代码关键字"
				}
			]
		},
		{
			"ID": "20250105180905-ldbt2nq",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20250105180905-ldbt2nq",
				"style": "line-height: 22px;",
				"updated": "20250105181050"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "UNITY_UV_STARTS_AT_TOP\t// 判断纹理是否会进行y轴翻转\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20250105021325-8rsw19j",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20250105021325-8rsw19j",
				"updated": "20250105161036"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Bloom 效果"
				}
			]
		},
		{
			"ID": "20250105021503-4pfwjtk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250105021503-4pfwjtk",
				"updated": "20250105021710"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Bloom 效果（中文也可以叫做高光溢出效果），是一种使"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "画面中亮度较高的区域产生一种光晕或发光效果"
				},
				{
					"Type": "NodeText",
					"Data": "的图像处理技术\n"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "Bloom 效果"
				},
				{
					"Type": "NodeText",
					"Data": " 的主要目的是 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "模拟现实世界中强光源在相机镜头或人眼中造成的散射和反射现象"
				},
				{
					"Type": "NodeText",
					"Data": "\n使得画面中较亮的区域“扩散”到周围的区域，造成一种朦胧的效果"
				}
			]
		},
		{
			"ID": "20250105021543-hrb46lj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250105021543-hrb46lj",
				"updated": "20250105144344"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"style": "width: 425px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image-20250105001900-zt1x9tp"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20250105001900-zt1x9tp.jpg"
						},
						{
							"Type": "NodeLinkSpace"
						},
						{
							"Type": "NodeLinkTitle",
							"Data": "原始图像"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 425px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"style": "width: 464px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20250105021628-4npne7u.png"
						},
						{
							"Type": "NodeLinkSpace"
						},
						{
							"Type": "NodeLinkTitle",
							"Data": "添加了Bloom效果的图像"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 464px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20250105021646-ay92rzb",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20250105021646-ay92rzb",
				"updated": "20250105161036"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Bloom 效果的基本原理"
				}
			]
		},
		{
			"ID": "20250105021809-s69a95o",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250105021809-s69a95o",
				"updated": "20250105021829"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "三步骤概括 Unity Shader 中实现 Bloom 效果的基本原理："
				}
			]
		},
		{
			"ID": "20250105021823-gern7ee",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20250105021823-gern7ee",
				"updated": "20250105021850"
			},
			"Children": [
				{
					"ID": "20250105021823-yup7u1g",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20250105021823-yup7u1g",
						"updated": "20250105021823"
					},
					"Children": [
						{
							"ID": "20250105021823-xcd8vwa",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250105021823-xcd8vwa",
								"updated": "20250105021823"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "提取：提取原图像中的亮度区域存储到一张新纹理中"
								}
							]
						}
					]
				},
				{
					"ID": "20250105021823-efyq0d8",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20250105021823-efyq0d8",
						"updated": "20250105021850"
					},
					"Children": [
						{
							"ID": "20250105021823-iq3kyfb",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250105021823-iq3kyfb",
								"updated": "20250105021850"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "模糊：将提取出来的纹理进行模糊处理（一般采用"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "block-ref",
									"TextMarkBlockRefID": "20250105011940-35deaww",
									"TextMarkBlockRefSubtype": "s",
									"TextMarkTextContent": "高斯模糊"
								},
								{
									"Type": "NodeText",
									"Data": "）"
								}
							]
						}
					]
				},
				{
					"ID": "20250105021823-faho98h",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20250105021823-faho98h",
						"updated": "20250105021823"
					},
					"Children": [
						{
							"ID": "20250105021823-j3f1e3e",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250105021823-j3f1e3e",
								"updated": "20250105021823"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "合成：将模糊处理后的亮度纹理和源纹理进行颜色叠加"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20250105021814-vgqv6mq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250105021814-vgqv6mq",
				"updated": "20250105021834"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "关键知识点：多个 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Pass"
				},
				{
					"Type": "NodeText",
					"Data": "​ 的运用，如何提取，如何模糊，如何合成"
				}
			]
		},
		{
			"ID": "20250105021900-y17rie0",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20250105021900-y17rie0",
				"updated": "20250105161036"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "多个Pass的运用"
				}
			]
		},
		{
			"ID": "20250105155658-aqizl8b",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250105155658-aqizl8b",
				"updated": "20250105155719"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "通过高斯模糊效果的学习，我们知道可以在屏幕后处理时，单独调用某个 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Pass"
				},
				{
					"Type": "NodeText",
					"Data": "​ 对渲染纹理进行处理，只需要利用 Unity 中的三个函数即可"
				}
			]
		},
		{
			"ID": "20250105155719-9gway26",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20250105155719-9gway26",
				"updated": "20250105155918"
			},
			"Children": [
				{
					"ID": "20250105155719-osb79d0",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20250105155719-osb79d0",
						"updated": "20250105155839"
					},
					"Children": [
						{
							"ID": "20250105155719-m0cvon0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250105155719-m0cvon0",
								"updated": "20250105155839"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "获取中间缓冲纹理："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code block-ref",
									"TextMarkBlockRefID": "20250105142649-czgdkfr",
									"TextMarkBlockRefSubtype": "s",
									"TextMarkTextContent": "RenderTexture.GetTemporary()"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						}
					]
				},
				{
					"ID": "20250105155720-m10f22z",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20250105155720-m10f22z",
						"updated": "20250105155918"
					},
					"Children": [
						{
							"ID": "20250105155720-74u6751",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250105155720-74u6751",
								"updated": "20250105155918"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "对纹理应用着色器处理，复制到另一个纹理内："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code block-ref",
									"TextMarkBlockRefID": "20250104161256-ba3bt1e",
									"TextMarkBlockRefSubtype": "s",
									"TextMarkTextContent": "Graphics.Blit()"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						}
					]
				},
				{
					"ID": "20250105155721-2ir04r5",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20250105155721-2ir04r5",
						"updated": "20250105155843"
					},
					"Children": [
						{
							"ID": "20250105155721-mnt75wy",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250105155721-mnt75wy",
								"updated": "20250105155843"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "释放缓冲纹理："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "RenderTexture.ReleaseTemporary()"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20250105155852-mzelfav",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250105155852-mzelfav",
				"updated": "20250105161006"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "处理高斯模糊效果时，我们使用了 2 个 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Pass"
				},
				{
					"Type": "NodeText",
					"Data": "​，分别用来计算水平卷积核竖直卷积\n而我们在处理 Bloom 效果时将使用 4 个 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Pass"
				},
				{
					"Type": "NodeText",
					"Data": "​，他们分别是："
				}
			]
		},
		{
			"ID": "20250105161006-qyje1rr",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20250105161006-qyje1rr",
				"updated": "20250105161030"
			},
			"Children": [
				{
					"ID": "20250105161006-cs629ga",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20250105161006-cs629ga",
						"updated": "20250105161030"
					},
					"Children": [
						{
							"ID": "20250105161006-ggd47qq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250105161006-ggd47qq",
								"updated": "20250105161030"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "用于 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "提取亮度区域"
								},
								{
									"Type": "NodeText",
									"Data": " 存储到新纹理中的 1 个 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Pass"
								},
								{
									"Type": "NodeText",
									"Data": "​\n"
								}
							]
						}
					]
				},
				{
					"ID": "20250105161007-3z31qvp",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20250105161007-3z31qvp",
						"updated": "20250105161026"
					},
					"Children": [
						{
							"ID": "20250105161007-7vgvbxl",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250105161007-7vgvbxl",
								"updated": "20250105161026"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "用于 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "模糊处理提取出来的纹理的高斯模糊"
								},
								{
									"Type": "NodeText",
									"Data": " 的 2 个Pass（可以复用高斯模糊 Shader 中写好的 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Pass"
								},
								{
									"Type": "NodeText",
									"Data": "​）"
								}
							]
						}
					]
				},
				{
					"ID": "20250105161007-yoo3vxu",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20250105161007-yoo3vxu",
						"updated": "20250105161021"
					},
					"Children": [
						{
							"ID": "20250105161007-75rtvaq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250105161007-75rtvaq",
								"updated": "20250105161021"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "用于 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "与原图像进行合成"
								},
								{
									"Type": "NodeText",
									"Data": " "
								},
								{
									"Type": "NodeText",
									"Data": "的 1 个 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Pass"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20250105160922-4p7y7vd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250105160922-4p7y7vd",
				"updated": "20250105161036"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "通过使用这 4 个 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Pass"
				},
				{
					"Type": "NodeText",
					"Data": "​，我们就能够完成：提取、模糊、合成，这三个步骤"
				}
			]
		},
		{
			"ID": "20250105161031-e5nmn67",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20250105161031-e5nmn67",
				"updated": "20250105161932"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "提取亮度区域"
				}
			]
		},
		{
			"ID": "20250105161057-cxsmjq9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250105161057-cxsmjq9",
				"updated": "20250105161450"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们需要在 Shader 中声明一个亮度阈值变量，亮度低于该值的区域不会被提取，主要用于 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "“提取”"
				},
				{
					"Type": "NodeText",
					"Data": " "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Pass"
				},
				{
					"Type": "NodeText",
					"Data": "​ 的片元着色器函数当中，\n用当前像素的灰度值 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "inline-math",
					"TextMarkInlineMathContent": "L = 0.2125R + 0.7154G + 0.0721B"
				},
				{
					"Type": "NodeText",
					"Data": " 与 亮度阈值变量（"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "_LuminanceThreshold"
				},
				{
					"Type": "NodeText",
					"Data": "​）进行计算"
				}
			]
		},
		{
			"ID": "20250105161139-2wlwiq4",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20250105161139-2wlwiq4",
				"style": "line-height: 22px;",
				"updated": "20250105161438"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "fixed luminance(fixed4 color)\n{\n    return 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n}\n\nfixed4 fragExtractBright(v2f i) : SV_Target\n{\n    fixed4 c = tex2D(_MainTex, i.uv);\n    fixed val = clamp(luminance(c) - _LuminanceThreshold, 0.0, 1.0);\n    return c * val\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20250105161525-53y8oda",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20250105161525-53y8oda",
				"updated": "20250105161636"
			},
			"Children": [
				{
					"ID": "20250105161541-rpgo2sz",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20250105161541-rpgo2sz",
						"updated": "20250105161608"
					},
					"Children": [
						{
							"ID": "20250105161541-x7h4diq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250105161541-x7h4diq",
								"updated": "20250105161608"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "灰度值 – 亮度阈值变量："
								},
								{
									"Type": "NodeText",
									"Data": "是为了仅保留超过阈值的部分，可以提取出图像中亮度较高的地方。\n"
								}
							]
						}
					]
				},
				{
					"ID": "20250105161542-nmg0n5j",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20250105161542-nmg0n5j",
						"updated": "20250105161636"
					},
					"Children": [
						{
							"ID": "20250105161542-zh65ia3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250105161542-zh65ia3",
								"updated": "20250105161636"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "Clamp 函数："
								},
								{
									"Type": "NodeText",
									"Data": "如果结果小于 0 则为 0，大于 1 则为 1。得到的 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "val"
								},
								{
									"Type": "NodeText",
									"Data": "​ 表示像素的亮度贡献"
								}
							]
						}
					]
				},
				{
					"ID": "20250105161542-3bjuht4",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20250105161542-3bjuht4",
						"updated": "20250105161619"
					},
					"Children": [
						{
							"ID": "20250105161542-cor9tvp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250105161542-cor9tvp",
								"updated": "20250105161619"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "颜色 * 亮度贡献："
								},
								{
									"Type": "NodeText",
									"Data": "基于亮度阈值调节颜色的亮度，若 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "val"
								},
								{
									"Type": "NodeText",
									"Data": "​ 为 0 则为黑色，越接近 1 越接近原始颜色"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20250105161550-opw52ws",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250105161550-opw52ws",
				"updated": "20250105161551"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这样做的目的是保留高亮区域的颜色信息，同时衰减低亮区域的颜色。"
				}
			]
		},
		{
			"ID": "20250105161710-tasnmf9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250105161710-tasnmf9",
				"updated": "20250105161710"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"style": "width: 681px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20250105161710-yq9lnn1.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 681px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20250105161720-dq0hwed",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250105161720-dq0hwed",
				"updated": "20250105161801"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果 “提取” "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Pass"
				},
				{
					"Type": "NodeText",
					"Data": "​ 是 Shader 中的第一个 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Pass"
				},
				{
					"Type": "NodeText",
					"Data": "​，\n那么我们完全可以利用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "RenderTexture.GetTemporary"
				},
				{
					"Type": "NodeText",
					"Data": "​ 和 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Graphics.Blit"
				},
				{
					"Type": "NodeText",
					"Data": "​ 函数将源纹理提取亮度信息后存储到缓存区中"
				}
			]
		},
		{
			"ID": "20250105161841-e2hcf9i",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20250105161841-e2hcf9i",
				"style": "line-height: 22px;",
				"updated": "20250105161932"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "RenderTexture buffer = RenderTexture.GetTemporary(renderTextureW, renderTextureH, 0);\nbuffer.filterMode = FilterMode.Bilinear;                    // 采用双线性过滤模式来缩放，可以让缩放效果更平滑\n\nGraphics.Blit(source, buffer, PostEffectMaterial, 0);\t\t// 提取亮度区域纹理\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20250105161923-6q243zb",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20250105161923-6q243zb",
				"updated": "20250105162252"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "模糊亮度区域纹理"
				}
			]
		},
		{
			"ID": "20250105161933-63unhso",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250105161933-63unhso",
				"updated": "20250105162047"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "由于我们目前已经在高斯模糊的课程中写好了两个用于进行水平和竖直卷积运算的 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Pass"
				},
				{
					"Type": "NodeText",
					"Data": "​\n因此我们可以使用以前学习 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "SubShader"
				},
				{
					"Type": "NodeText",
					"Data": "​ 语句时学习的 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code block-ref",
					"TextMarkBlockRefID": "20240615173000-w7xmejd",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "UsePass"
				},
				{
					"Type": "NodeText",
					"Data": "​ 指令"
				}
			]
		},
		{
			"ID": "20250105162051-uaruryb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250105162051-uaruryb",
				"updated": "20250105162111"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "相关内容详见："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20240612192725-y5fghdm",
					"TextMarkBlockRefSubtype": "d",
					"TextMarkTextContent": "US2S2L5-3——Pass-渲染通道"
				}
			]
		},
		{
			"ID": "20250105162049-yjbp8gb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250105162049-yjbp8gb",
				"updated": "20250105162049"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "只需要在之前的高斯模糊 Shader 中为两个 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Pass"
				},
				{
					"Type": "NodeText",
					"Data": "​ 取名，然后在 Bloom 的 Shader 中复用即可\n复用了两个 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Pass"
				},
				{
					"Type": "NodeText",
					"Data": "​ 后，我们只需要在Bloom效果对应的 C"
				},
				{
					"Type": "NodeBackslash",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeText",
							"Data": "#"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 代码中对 “提取” 出来的纹理，进行高斯模糊 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Pass"
				},
				{
					"Type": "NodeText",
					"Data": "​ 的调用即可（逻辑和高斯模糊一致）"
				}
			]
		},
		{
			"ID": "20250105162136-n4r0k78",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250105162136-n4r0k78",
				"updated": "20250105162216"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "接着，我们需要在 Bloom 效果的 Shader 中声明一个纹理属性 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "_Bloom"
				},
				{
					"Type": "NodeText",
					"Data": "​，用于存储模糊处理完毕后的纹理\n在 C"
				},
				{
					"Type": "NodeBackslash",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeText",
							"Data": "#"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 代码中完成高斯模糊处理后，只需要将缓存区内容，写入材质球中的纹理属性即可"
				}
			]
		},
		{
			"ID": "20250105162219-uepk5mf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250105162219-uepk5mf",
				"updated": "20250105162251"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "完成这一步后，在 Shader 中就能够得到"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "模糊处理后的亮度纹理信息"
				},
				{
					"Type": "NodeText",
					"Data": "了，我们便可以进行第三步"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "“合成”"
				}
			]
		},
		{
			"ID": "20250105162252-30pzl08",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20250105162252-30pzl08",
				"updated": "20250105162421"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "合成模糊过的亮度区域纹理"
				}
			]
		},
		{
			"ID": "20250105162326-m957skw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250105162326-m957skw",
				"updated": "20250105162416"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在“合成”的 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Pass"
				},
				{
					"Type": "NodeText",
					"Data": "​ 中我们只需要用主纹理 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "_MainTex"
				},
				{
					"Type": "NodeText",
					"Data": "​（其中使用的纹理是屏幕原图像）和纹理属性 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "_Bloom"
				},
				{
					"Type": "NodeText",
					"Data": "​（其中使用的纹理是模糊处理后的亮度纹理信息）\n进行颜色叠加即可，我们对两张纹理进行采样，将获取到的颜色信息进行加法运算，\n因为颜色相加带来的效果就是增加亮度，使得原本高亮的部分变得更加显眼，从而达到 Bloom 效果（高光溢出效果）"
				}
			]
		},
		{
			"ID": "20250105162421-is8esnj",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20250105162421-is8esnj",
				"updated": "20250105170137"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Bloom 效果具体实现"
				}
			]
		},
		{
			"ID": "20250105162521-p8bvgm5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250105162521-p8bvgm5",
				"updated": "20250105162644"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "新建 Shader，取名Bloom ，删除无用代码，接下来在这个 Shader 内依次实现 Bloom 效果需要的 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Pass"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20250105162637-ssts9xi",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20250105162637-ssts9xi",
				"updated": "20250105170137"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "提取颜色区域纹理"
				}
			]
		},
		{
			"ID": "20250105163435-0zuwv0k",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250105163435-0zuwv0k",
				"updated": "20250105163512"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "主要目的：提取原图像中的亮度区域存储到一张新纹理中"
				}
			]
		},
		{
			"ID": "20250105163515-eu7437w",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250105163515-eu7437w",
				"updated": "20250105163518"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Shader 代码："
				}
			]
		},
		{
			"ID": "20250105163512-0hd9p6b",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20250105163512-0hd9p6b",
				"updated": "20250105165048"
			},
			"Children": [
				{
					"ID": "20250105163512-rvp3f69",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20250105163512-rvp3f69",
						"updated": "20250105165048"
					},
					"Children": [
						{
							"ID": "20250105163512-uq55rri",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250105163512-uq55rri",
								"updated": "20250105163522"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "声明属性\n"
								}
							]
						},
						{
							"ID": "20250105163527-qczar1j",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20250105163527-qczar1j",
								"updated": "20250105163531"
							},
							"Children": [
								{
									"ID": "20250105163531-wkxzfe4",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20250105163531-wkxzfe4",
										"updated": "20250105163531"
									},
									"Children": [
										{
											"ID": "20250105163531-9b2q5fy",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250105163531-9b2q5fy",
												"updated": "20250105163535"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "主纹理 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "_MainTex"
												},
												{
													"Type": "NodeText",
													"Data": "​\n"
												}
											]
										}
									]
								},
								{
									"ID": "20250105163532-jgxbrzr",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20250105163532-jgxbrzr",
										"updated": "20250105163532"
									},
									"Children": [
										{
											"ID": "20250105163532-2wbqgmu",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250105163532-2wbqgmu",
												"updated": "20250105163536"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "亮度区域纹理 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "_Bloom"
												},
												{
													"Type": "NodeText",
													"Data": "​\n"
												}
											]
										}
									]
								},
								{
									"ID": "20250105163532-hrrf09p",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20250105163532-hrrf09p",
										"updated": "20250105163532"
									},
									"Children": [
										{
											"ID": "20250105163532-yxkrd8a",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250105163532-yxkrd8a",
												"updated": "20250105163540"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "亮度阈值 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "_LuminanceThreshold"
												},
												{
													"Type": "NodeText",
													"Data": "​"
												}
											]
										}
									]
								}
							]
						},
						{
							"ID": "20250105164940-8x78fv6",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20250105164940-8x78fv6",
								"style": "line-height: 22px;",
								"updated": "20250105165048"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "Yw=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "Properties\n{\n    _MainTex(\"Texture\", 2D) = \"white\"{}\n    _Bloom(\"Bloom\", 2D) = \"\"{}\n    _LuminanceThreshold(\"_LuminanceThreshold\", Float) = 0.5;\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20250105163512-vc3z4cf",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20250105163512-vc3z4cf",
						"updated": "20250105165046"
					},
					"Children": [
						{
							"ID": "20250105163512-v2ph0w9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250105163512-v2ph0w9",
								"updated": "20250105163550"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "CGINCLUDE...ENDCG"
								},
								{
									"Type": "NodeText",
									"Data": "​ 中实现共享 CG 代码\n"
								}
							]
						},
						{
							"ID": "20250105163550-ejqxr24",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20250105163550-ejqxr24",
								"updated": "20250105163600"
							},
							"Children": [
								{
									"ID": "20250105163600-wseofmf",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20250105163600-wseofmf",
										"updated": "20250105163600"
									},
									"Children": [
										{
											"ID": "20250105163600-r8a4916",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250105163600-r8a4916",
												"updated": "20250105163600"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "属性映射"
												}
											]
										}
									]
								},
								{
									"ID": "20250105163600-makzqee",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "Mi4=",
										"Num": 2
									},
									"Properties": {
										"id": "20250105163600-makzqee",
										"updated": "20250105163600"
									},
									"Children": [
										{
											"ID": "20250105163600-olxx7a6",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250105163600-olxx7a6",
												"updated": "20250105163602"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "结构体（顶点，"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "uv"
												},
												{
													"Type": "NodeText",
													"Data": "​）"
												}
											]
										}
									]
								},
								{
									"ID": "20250105163600-l2j3afw",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "My4=",
										"Num": 3
									},
									"Properties": {
										"id": "20250105163600-l2j3afw",
										"updated": "20250105163600"
									},
									"Children": [
										{
											"ID": "20250105163600-7cx1ggr",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250105163600-7cx1ggr",
												"updated": "20250105163600"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "灰度值（亮度值）计算函数"
												}
											]
										}
									]
								}
							]
						},
						{
							"ID": "20250105164956-lv91jxz",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20250105164956-lv91jxz",
								"style": "line-height: 22px;",
								"updated": "20250105165046"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "Yw=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "CGINCLUDE\n#include \"UnityCG.cginc\"\n\nsampler2D _MainTex;\nsampler2D _Bloom;\nfloat _LuminanceThreshold;\n\nstruct v2f\n{\n    float2 uv : TEXCOORD0;\n    float4 vertex : SV_POSITION;\n};\n\n// 计算颜色的亮度值（灰度值）\nfixed luminance(fixed4 color)\n{\n    return 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n}\n\nENDCG\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20250105163512-yw4hcy9",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20250105163512-yw4hcy9",
						"updated": "20250105165044"
					},
					"Children": [
						{
							"ID": "20250105163512-vcrxari",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250105163512-vcrxari",
								"updated": "20250105163611"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "屏幕后处理标配"
								}
							]
						},
						{
							"ID": "20250105163611-2vt7b06",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20250105163611-2vt7b06",
								"updated": "20250105163611"
							},
							"Children": [
								{
									"ID": "20250105163611-eamoerd",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20250105163611-eamoerd",
										"updated": "20250105163611"
									},
									"Children": [
										{
											"ID": "20250105163611-bcfu2s8",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250105163611-bcfu2s8",
												"updated": "20250105163617"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "​"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "ZTest Always"
												},
												{
													"Type": "NodeText",
													"Data": "​\n"
												}
											]
										}
									]
								},
								{
									"ID": "20250105163612-yt1ys9s",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20250105163612-yt1ys9s",
										"updated": "20250105163612"
									},
									"Children": [
										{
											"ID": "20250105163612-67yzc95",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250105163612-67yzc95",
												"updated": "20250105163618"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "​"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "Cull Off"
												},
												{
													"Type": "NodeText",
													"Data": "​\n"
												}
											]
										}
									]
								},
								{
									"ID": "20250105163613-3zaz2ur",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20250105163613-3zaz2ur",
										"updated": "20250105163613"
									},
									"Children": [
										{
											"ID": "20250105163613-l4tbssk",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250105163613-l4tbssk",
												"updated": "20250105163614"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "​"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "ZWrite Off"
												},
												{
													"Type": "NodeText",
													"Data": "​"
												}
											]
										}
									]
								}
							]
						},
						{
							"ID": "20250105165015-g7splq1",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20250105165015-g7splq1",
								"style": "line-height: 22px;",
								"updated": "20250105165044"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "Yw=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "Tags { \"RenderType\"=\"Opaque\" }\n\nZTest Always\nCull Off\nZWrite Off\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20250105163512-kdg1juo",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20250105163512-kdg1juo",
						"updated": "20250105165042"
					},
					"Children": [
						{
							"ID": "20250105163512-steolf0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250105163512-steolf0",
								"updated": "20250105165029"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "提取 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Pass"
								},
								{
									"Type": "NodeText",
									"Data": "​ 实现"
								}
							]
						},
						{
							"ID": "20250105163620-hkwz1er",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20250105163620-hkwz1er",
								"updated": "20250105163621"
							},
							"Children": [
								{
									"ID": "20250105163621-n7gmyyg",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20250105163621-n7gmyyg",
										"updated": "20250105163621"
									},
									"Children": [
										{
											"ID": "20250105163621-59yojzi",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250105163621-59yojzi",
												"updated": "20250105163621"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "顶点着色器\n"
												}
											]
										}
									]
								},
								{
									"ID": "20250105163623-6y2wsr4",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20250105163623-6y2wsr4",
										"updated": "20250105163623"
									},
									"Children": [
										{
											"ID": "20250105163623-rn6vkfl",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250105163623-rn6vkfl",
												"updated": "20250105163624"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "顶点转换、UV赋值\n"
												}
											]
										}
									]
								},
								{
									"ID": "20250105163625-kh5ybp5",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20250105163625-kh5ybp5",
										"updated": "20250105163625"
									},
									"Children": [
										{
											"ID": "20250105163625-uznpraw",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250105163625-uznpraw",
												"updated": "20250105163625"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "片元着色器\n"
												}
											]
										}
									]
								},
								{
									"ID": "20250105163626-u37sz7w",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20250105163626-u37sz7w",
										"updated": "20250105163626"
									},
									"Children": [
										{
											"ID": "20250105163626-ngx1pl0",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250105163626-ngx1pl0",
												"updated": "20250105163626"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "颜色采样、亮度贡献值计算、颜色"
												},
												{
													"Type": "NodeBackslash",
													"Data": "span",
													"Children": [
														{
															"Type": "NodeText",
															"Data": "*"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "亮度贡献值"
												}
											]
										}
									]
								}
							]
						},
						{
							"ID": "20250105165031-cw5ys2e",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20250105165031-cw5ys2e",
								"style": "line-height: 22px;",
								"updated": "20250105165042"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "Yw=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "Pass\n{\n    CGPROGRAM\n    #pragma vertex vert\n    #pragma fragment frag\n\n    #include \"UnityCG.cginc\"\n\n    v2f vert(appdata_base v)\n    {\n        v2f o;\n        o.vertex = UnityObjectToClipPos(v.vertex);\n        o.uv = v.texcoord;\n        return o;\n    }\n\n    fixed4 frag(v2f i) : SV_Target\n    {\n        // 采样原纹理颜色，得到亮度贡献值，返回颜色*纹理贡献值即得到亮度区域纹理\n        fixed4 color = tex2D(_MainTex, i.uv);\n        fixed value = clamp(luminance(color) - _LuminanceThreshold, 0, 1);\n        return color * value;\n    }\n\n    ENDCG\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20250105163504-tees3c1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250105163504-tees3c1",
				"updated": "20250105165115"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "C"
				},
				{
					"Type": "NodeBackslash",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeText",
							"Data": "#"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 代码："
				}
			]
		},
		{
			"ID": "20250105165101-8u576k9",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20250105165101-8u576k9",
				"updated": "20250105165243"
			},
			"Children": [
				{
					"ID": "20250105165101-g3224j0",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20250105165101-g3224j0",
						"updated": "20250105165101"
					},
					"Children": [
						{
							"ID": "20250105165101-mponurv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250105165101-mponurv",
								"updated": "20250105165122"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "创建 C"
								},
								{
									"Type": "NodeBackslash",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "#"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 脚本，名为 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Bloom"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						}
					]
				},
				{
					"ID": "20250105165101-cnp2eub",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20250105165101-cnp2eub",
						"updated": "20250105165139"
					},
					"Children": [
						{
							"ID": "20250105165101-wxuzrdc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250105165101-wxuzrdc",
								"updated": "20250105165129"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "继承屏幕后处理基类 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "PostEffect"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"ID": "20250105165130-vjdmu42",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250105165130-vjdmu42",
								"updated": "20250105165139"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "代码详见："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "block-ref",
									"TextMarkBlockRefID": "20250104163836-9iiumg9",
									"TextMarkBlockRefSubtype": "d",
									"TextMarkTextContent": "US3S10L4——屏幕后处理基类"
								}
							]
						}
					]
				},
				{
					"ID": "20250105165101-7tev4vz",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20250105165101-7tev4vz",
						"updated": "20250105165101"
					},
					"Children": [
						{
							"ID": "20250105165101-do2632y",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250105165101-do2632y",
								"updated": "20250105165101"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "声明亮度阈值成员变量"
								}
							]
						}
					]
				},
				{
					"ID": "20250105165101-vbupoo5",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20250105165101-vbupoo5",
						"updated": "20250105165224"
					},
					"Children": [
						{
							"ID": "20250105165101-ov2tp5s",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250105165101-ov2tp5s",
								"updated": "20250105165224"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "重写 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "OnRenderImage"
								},
								{
									"Type": "NodeText",
									"Data": "​ 函数"
								}
							]
						}
					]
				},
				{
					"ID": "20250105165101-m0619nz",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NS4=",
						"Num": 5
					},
					"Properties": {
						"id": "20250105165101-m0619nz",
						"updated": "20250105165101"
					},
					"Children": [
						{
							"ID": "20250105165101-zz4y6lc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250105165101-zz4y6lc",
								"updated": "20250105165101"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "设置材质球的亮度阈值"
								}
							]
						}
					]
				},
				{
					"ID": "20250105165101-zc69s5z",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Ni4=",
						"Num": 6
					},
					"Properties": {
						"id": "20250105165101-zc69s5z",
						"updated": "20250105165243"
					},
					"Children": [
						{
							"ID": "20250105165101-cvpbys1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250105165101-cvpbys1",
								"updated": "20250105165243"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在其中利用 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Graphics.Blit"
								},
								{
									"Type": "NodeText",
									"Data": "​、"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "RenderTexture.GetTemporary"
								},
								{
									"Type": "NodeText",
									"Data": "​、"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "RenderTexture.ReleaseTemporary"
								},
								{
									"Type": "NodeText",
									"Data": "​ 函数对纹理进行 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Pass"
								},
								{
									"Type": "NodeText",
									"Data": "​ 处理"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20250105162605-4es1mf2",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20250105162605-4es1mf2",
				"style": "line-height: 22px;",
				"updated": "20250105170017"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "using UnityEngine;\n\npublic class Bloom : PostEffect\n{\n    [Range(0f, 4f)] public float luminanceThreshold = 0.5f; // 一般是0~1，如果以后使用HDR则可以大于1\n\n    protected override void OnRenderImage(RenderTexture source, RenderTexture destination)\n    {\n        if (PostEffectMaterial == null)\n        {\n            Graphics.Blit(source, destination);\n            return;\n        }\n\n        PostEffectMaterial.SetFloat(\"_LuminanceThreshold\", luminanceThreshold);             // 设置 Shader 属性\n        RenderTexture buffer = RenderTexture.GetTemporary(source.width, source.height, 0);  // 获取中间缓冲纹理 \n        Graphics.Blit(source, buffer, PostEffectMaterial, 0);                               // 提取亮度区域纹理\n        Graphics.Blit(buffer, destination);     // TODO.. 测试看到提取效果\n        RenderTexture.ReleaseTemporary(buffer);\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20250105170018-jlsxlrh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250105170018-jlsxlrh",
				"updated": "20250105170028"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "显示效果（亮度阈值是0.5）："
				}
			]
		},
		{
			"ID": "20250105170126-we806o4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250105170126-we806o4",
				"updated": "20250105170126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"style": "width: 506px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "QQ20250105-170117"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/QQ20250105-170117-20250105170126-u1qmqui.jpg"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 506px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20250105170130-gcw5y65",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20250105170130-gcw5y65",
				"updated": "20250105172708"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "模糊颜色区域纹理"
				}
			]
		},
		{
			"ID": "20250105170144-qrfzsac",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250105170144-qrfzsac",
				"updated": "20250105170345"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "主要目的：将提取出来的纹理进行模糊处理（一般采用高斯模糊）"
				}
			]
		},
		{
			"ID": "20250105170936-g33ou11",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250105170936-g33ou11",
				"updated": "20250105170936"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Shader 代码："
				}
			]
		},
		{
			"ID": "20250105170239-egqj7qh",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20250105170239-egqj7qh",
				"updated": "20250105171256"
			},
			"Children": [
				{
					"ID": "20250105170239-egy6bng",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20250105170239-egy6bng",
						"updated": "20250105170341"
					},
					"Children": [
						{
							"ID": "20250105170239-fgbtl0u",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250105170239-fgbtl0u",
								"updated": "20250105170341"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "添加模糊半径属性 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "_BlurSize"
								},
								{
									"Type": "NodeText",
									"Data": "​，进行属性映射（注意：需要用到"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "block-ref",
									"TextMarkBlockRefID": "20250104235429-2n7kihw",
									"TextMarkBlockRefSubtype": "s",
									"TextMarkTextContent": "纹素"
								},
								{
									"Type": "NodeText",
									"Data": "）"
								}
							]
						},
						{
							"ID": "20250105170959-e31gu29",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20250105170959-e31gu29",
								"style": "line-height: 22px;",
								"updated": "20250105171024"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "Yw=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "Properties\n{\n    _MainTex(\"Texture\", 2D) = \"white\"{}\n    _Bloom(\"Bloom\", 2D) = \"\"{}                              // 提取出来的亮度区域纹理\n    _LuminanceThreshold(\"_LuminanceThreshold\", Float) = 0.5 // 亮度阈值\n    _BlurSpread(\"BlurSpread\", Float) = 1                    // 模糊半径\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20250105171007-qz497xk",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20250105171007-qz497xk",
								"style": "line-height: 22px;",
								"updated": "20250105171031"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "Yw=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "#include \"UnityCG.cginc\"\n\nsampler2D _MainTex;\nhalf4 _MainTex_TexelSize;\nsampler2D _Bloom;\nfloat _LuminanceThreshold;\nfloat _BlurSize;\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20250105170239-peueb8c",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20250105170239-peueb8c",
						"updated": "20250105171117"
					},
					"Children": [
						{
							"ID": "20250105170239-otejddn",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250105170239-otejddn",
								"updated": "20250105170332"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "修改之前高斯模糊 Shader，为其中的两个 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Pass"
								},
								{
									"Type": "NodeText",
									"Data": "​ 命名"
								}
							]
						},
						{
							"ID": "20250105170251-7nhwgnj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250105170251-7nhwgnj",
								"updated": "20250105170401"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "具体代码详见："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "block-ref",
									"TextMarkBlockRefID": "20250105011940-35deaww",
									"TextMarkBlockRefSubtype": "d",
									"TextMarkTextContent": "US3S10L7——高斯模糊"
								}
							]
						},
						{
							"ID": "20250105170940-d3if83k",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20250105170940-d3if83k",
								"style": "line-height: 22px;",
								"updated": "20250105171117"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "Yw=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "// Shader: \"PostEffect/GaussianBlur\"\n// 水平方向上的Pass\nPass\n{\n    Name \"GAUSSIAN_BLUR_HORIZONTAL\"\n\n    CGPROGRAM\n    #pragma vertex vertBlurHorizontal\n    #pragma fragment fragBlur\n    ENDCG\n}\n\n// 垂直方向上的Pass\nPass\n{\n    Name \"GAUSSIAN_BLUR_VERTICAL\"\n\n    CGPROGRAM\n    #pragma vertex vertBlurVertical\n    #pragma fragment fragBlur\n    ENDCG\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20250105170239-j02ruy3",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20250105170239-j02ruy3",
						"updated": "20250105171256"
					},
					"Children": [
						{
							"ID": "20250105170239-pphsijx",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250105170239-pphsijx",
								"updated": "20250105170309"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在 Bloom Shader 中，利用 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "UsePass"
								},
								{
									"Type": "NodeText",
									"Data": "​ 复用 高斯模糊 Shader 中两个 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Pass"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"ID": "20250105171044-44g9qz1",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20250105171044-44g9qz1",
								"style": "line-height: 22px;",
								"updated": "20250105171256"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "Yw=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "SubShader\n{\n    CGINCLUDE\n    //...\n    ENDCG\n\n    Tags { \"RenderType\"=\"Opaque\" }\n\n    ZTest Always\n    Cull Off\n    ZWrite Off\n\n    Pass {/*...提取...*/}\n\n    // 复用高斯模糊的两个Pass\n    UsePass \"PostEffect/GaussianBlur/GAUSSIAN_BLUR_HORIZONTAL\"\n    UsePass \"PostEffect/GaussianBlur/GAUSSIAN_BLUR_VERTICAL\"\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20250105170237-1hg4pnk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250105170237-1hg4pnk",
				"updated": "20250105170237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "C"
				},
				{
					"Type": "NodeBackslash",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeText",
							"Data": "#"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 代码："
				}
			]
		},
		{
			"ID": "20250105170235-3tn10ux",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20250105170235-3tn10ux",
				"updated": "20250105172332"
			},
			"Children": [
				{
					"ID": "20250105170235-ojeeos6",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20250105170235-ojeeos6",
						"updated": "20250105170235"
					},
					"Children": [
						{
							"ID": "20250105170235-cx38260",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250105170235-cx38260",
								"updated": "20250105170235"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "复制高斯模糊中的 3 个属性"
								}
							]
						}
					]
				},
				{
					"ID": "20250105170235-0kxu8na",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20250105170235-0kxu8na",
						"updated": "20250105172332"
					},
					"Children": [
						{
							"ID": "20250105170235-yt3cz3n",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250105170235-yt3cz3n",
								"updated": "20250105172332"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "复制高斯模糊中 C"
								},
								{
									"Type": "NodeBackslash",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "#"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 代码中处理高斯模糊的逻辑（注意修改使用的 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Pass"
								},
								{
									"Type": "NodeText",
									"Data": "​ 索引！）"
								}
							]
						}
					]
				},
				{
					"ID": "20250105170235-m1ps8j0",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20250105170235-m1ps8j0",
						"updated": "20250105170235"
					},
					"Children": [
						{
							"ID": "20250105170235-weeprtr",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250105170235-weeprtr",
								"updated": "20250105170235"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "将模糊处理后的纹理，存储 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "_Bloom"
								},
								{
									"Type": "NodeText",
									"Data": "​ 纹理属性"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20250105172308-ms6gdqj",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20250105172308-ms6gdqj",
				"style": "line-height: 22px;",
				"updated": "20250105172525"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "using UnityEngine;\n\npublic class Bloom : PostEffect\n{\n    [Range(0f, 4f)] public float luminanceThreshold = 0.5f; // 一般是0~1，如果以后使用HDR则可以大于1\n    [Range(1, 8)] public int downSample = 1;                // 降低采样程度\n    [Range(1, 8)] public int iterations = 1;                // 迭代次数\n    [Range(0f, 3f)] public float blurSpread = 1f;           // 模糊半径\n\n    protected override void OnRenderImage(RenderTexture source, RenderTexture destination)\n    {\n        if (PostEffectMaterial == null)\n        {\n            Graphics.Blit(source, destination);\n            return;\n        }\n\n        PostEffectMaterial.SetFloat(\"_LuminanceThreshold\", luminanceThreshold);\n\n        int renderTextureW = source.width / downSample;\n        int renderTextureH = source.height / downSample;\n        RenderTexture buffer = RenderTexture.GetTemporary(renderTextureW, renderTextureH, 0);\n        buffer.filterMode = FilterMode.Bilinear;                    // 采用双线性过滤模式来缩放，可以让缩放效果更平滑\n        Graphics.Blit(source, buffer, PostEffectMaterial, 0);       // 提取亮度区域纹理\n\n        // 高斯模糊迭代\n        for (int i = 0; i \u003c iterations; i++)\n        {\n            // 模糊半径随着迭代次数增加而增加\n            PostEffectMaterial.SetFloat(\"_BlurSpread\", 1 + i * blurSpread);\n\n            // 第一次卷积计算（水平卷积）\n            RenderTexture iterationBuffer = RenderTexture.GetTemporary(renderTextureW, renderTextureH, 0);\n            Graphics.Blit(buffer, iterationBuffer, PostEffectMaterial, 1);\n            RenderTexture.ReleaseTemporary(buffer);                 // 释放使用完毕的缓存\n            // 第二次卷积计算（垂直卷积），基于上次卷积的Color相乘计算\n            buffer = iterationBuffer;                               // 使用水平卷积完毕的迭代缓存\n            iterationBuffer = RenderTexture.GetTemporary(renderTextureW, renderTextureH, 0);\n            Graphics.Blit(buffer, iterationBuffer, PostEffectMaterial, 2);\n\n            RenderTexture.ReleaseTemporary(buffer);                 // 释放使用完毕的缓存\n            buffer = iterationBuffer;                               // 使用卷积完毕的缓存\n        }\n\n        PostEffectMaterial.SetTexture(\"_Bloom\", buffer);            // 将模糊后的亮度区域纹理传递到Shader内\n        Graphics.Blit(buffer, destination);                         // TODO.. 将模糊后的亮度区域显示到屏幕上测试\n        RenderTexture.ReleaseTemporary(buffer);\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20250105172531-04e1m9j",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250105172531-04e1m9j",
				"updated": "20250105172644"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "显示效果（亮度阈值0.5，降低采样程度2，迭代次数3，模糊半径3）："
				}
			]
		},
		{
			"ID": "20250105172708-4g96lpl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250105172708-4g96lpl",
				"updated": "20250105172708"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"style": "width: 441px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "QQ20250105-172658"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/QQ20250105-172658-20250105172708-3qz7tf2.jpg"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 441px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20250105172643-xtb6gel",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20250105172643-xtb6gel",
				"updated": "20250125172326"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "将模糊区域纹理合并到源图像上"
				}
			]
		},
		{
			"ID": "20250105172829-lsbu1ez",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250105172829-lsbu1ez",
				"updated": "20250105172941"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "主要目的：将模糊处理后的亮度纹理和源纹理进行颜色叠加"
				}
			]
		},
		{
			"ID": "20250105172944-qr4abyz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250105172944-qr4abyz",
				"updated": "20250105173002"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Shader代码："
				}
			]
		},
		{
			"ID": "20250105173002-bmq2u55",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20250105173002-bmq2u55",
				"updated": "20250125172326"
			},
			"Children": [
				{
					"ID": "20250105173002-513t33i",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20250105173002-513t33i",
						"updated": "20250125172326"
					},
					"Children": [
						{
							"ID": "20250105173002-vd2ngy9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250105173002-vd2ngy9",
								"updated": "20250105173002"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "合并 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Pass"
								},
								{
									"Type": "NodeText",
									"Data": "​ 实现"
								}
							]
						},
						{
							"ID": "20250105172941-5t37s9e",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20250105172941-5t37s9e",
								"updated": "20250125172326"
							},
							"Children": [
								{
									"ID": "20250105172941-yhvza6v",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20250105172941-yhvza6v",
										"updated": "20250105172941"
									},
									"Children": [
										{
											"ID": "20250105172941-fwe0kof",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250105172941-fwe0kof",
												"updated": "20250105173006"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "结构体\n"
												}
											]
										},
										{
											"ID": "20250105173006-paherlg",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250105173006-paherlg",
												"updated": "20250105173017"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "顶点坐标，4 维的 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "uv"
												},
												{
													"Type": "NodeText",
													"Data": "​（"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "xy"
												},
												{
													"Type": "NodeText",
													"Data": "​ 存主纹理，"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "wz"
												},
												{
													"Type": "NodeText",
													"Data": "​ 存亮度提取纹理）"
												}
											]
										},
										{
											"ID": "20250105173922-dxy7zvr",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20250105173922-dxy7zvr",
												"style": "line-height: 22px;",
												"updated": "20250105173930"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "Yw=="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "struct v2fBloom\n{\n    float4 pos : SV_POSITION;\n    half4 uv : TEXCOORD0;       // xy主要用于对主纹理进行采样，zw主要用于亮度模糊后的纹理采样\n};\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								},
								{
									"ID": "20250105172941-psah03n",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "Mi4=",
										"Num": 2
									},
									"Properties": {
										"id": "20250105172941-psah03n",
										"name": "UNITY_UV_STARTS_AT_TOP",
										"updated": "20250125172326"
									},
									"Children": [
										{
											"ID": "20250105172941-ebdaqyr",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250105172941-ebdaqyr",
												"updated": "20250105181117"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "顶点着色器（判断外部传入的 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "RenderTexture"
												},
												{
													"Type": "NodeText",
													"Data": "​ 是否被翻转）"
												}
											]
										},
										{
											"ID": "20250105173019-zkc8ezo",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250105173019-zkc8ezo",
												"updated": "20250105173019"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "顶点坐标转换，纹理坐标赋值"
												}
											]
										},
										{
											"ID": "20250105173107-uymda2m",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250105173107-uymda2m",
												"updated": "20250105180936"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "注意：亮度纹理的 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "uv"
												},
												{
													"Type": "NodeText",
													"Data": "​ 坐标需要判断是否进行 y 轴翻转，因为使用 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "RenderTexture"
												},
												{
													"Type": "NodeText",
													"Data": "​ 写入到 Shader 的纹理变量时\nUnity 可能会对其进行 y 轴翻转（根据平台不同而不同），我们可以利用 Unity 提供的预处理宏进行判断"
												}
											]
										},
										{
											"ID": "20250105173107-zr9k6sx",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20250105173107-zr9k6sx",
												"style": "line-height: 22px;",
												"updated": "20250105173107"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "Yw=="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "#if UNITY_UV_STARTS_AT_TOP\n#endif\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										},
										{
											"ID": "20250105173107-3nm7esz",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250105173107-3nm7esz",
												"updated": "20250125172142"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "如果这个宏被定义，说明当前平台的纹理坐标系的 y 轴原点在顶部，还可以在该宏中用纹素进行判断\n如果纹素的 y 小于 0，为负数，表示需要对 y 轴进行调整，配合起来使用就是："
												}
											]
										},
										{
											"ID": "20250105173107-6o4r0ff",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20250105173107-6o4r0ff",
												"style": "line-height: 22px;",
												"updated": "20250125172137"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "Yw=="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "    // 用宏判断uv坐标是否被翻转\n#if UNITY_UV_STARTS_AT_TOP\n    // 如果纹素的y小于0，为负数，表示需要对Y轴进行调整\n    if (_MainTex_TexelSize.y \u003c 0) \n        o.uv.w = 1 - o.uv.w;\n#endif\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										},
										{
											"ID": "20250125172143-egbbg8y",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250125172143-egbbg8y",
												"updated": "20250125172326"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "指的一提的是，虽然说 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "if"
												},
												{
													"Type": "NodeText",
													"Data": "​ 在 Shader 内需要少用，但是在这里，屏幕后处理的屏幕贴图仅有4个顶点，\n因此屏幕后处理的 Shader 的顶点着色器一帧只会执行 4 次，对性能影响不大"
												}
											]
										},
										{
											"ID": "20250105173113-b3de3zs",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250105173113-b3de3zs",
												"updated": "20250105173124"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "主纹理不需要我们进行额外处理，一般 Unity 会自动处理，一般只需要在使用 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "RenderTexture"
												},
												{
													"Type": "NodeText",
													"Data": "​ 时才考虑该问题"
												}
											]
										},
										{
											"ID": "20250105174803-l8rup42",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20250105174803-l8rup42",
												"style": "line-height: 22px;",
												"updated": "20250125172131"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "Yw=="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "v2fBloom vertBloom(appdata_base v)\n{\n    v2fBloom o;\n    o.pos = UnityObjectToClipPos(v.vertex);\n    o.uv.xy = v.texcoord;       // 亮度纹理和主纹理要采样相同的地方进行颜色叠加\n    o.uv.zw = v.texcoord;\n\n    // 用宏判断uv坐标是否被翻转\n#if UNITY_UV_STARTS_AT_TOP\n    // 如果纹素的y小于0，为负数，表示需要对Y轴进行调整\n    if (_MainTex_TexelSize.y \u003c 0) \n        o.uv.w = 1 - o.uv.w;\n#endif\n\n    return o;\n}\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								},
								{
									"ID": "20250105173150-es2mpd3",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "My4=",
										"Num": 3
									},
									"Properties": {
										"id": "20250105173150-es2mpd3",
										"updated": "20250105175226"
									},
									"Children": [
										{
											"ID": "20250105173150-budodki",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250105173150-budodki",
												"updated": "20250105173159"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "片元着色器"
												}
											]
										},
										{
											"ID": "20250105173200-w71j8bh",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250105173200-w71j8bh",
												"updated": "20250105173200"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "两个纹理颜色采样后相加"
												}
											]
										},
										{
											"ID": "20250105174816-n4bazek",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20250105174816-n4bazek",
												"style": "line-height: 22px;",
												"updated": "20250105175226"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "Yw=="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "fixed4 fragBloom(v2fBloom i) : SV_Target\n{\n    // 将两个纹理颜色叠加起来\n    return tex2D(_MainTex, i.uv.xy) + tex2D(_Bloom, i.uv.zw);\n}\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								},
								{
									"ID": "20250105173154-8yp8iop",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "NC4=",
										"Num": 4
									},
									"Properties": {
										"id": "20250105173154-8yp8iop",
										"updated": "20250105173154"
									},
									"Children": [
										{
											"ID": "20250105173154-xdo30x0",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250105173154-xdo30x0",
												"updated": "20250105173235"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "​"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "FallBack Off"
												},
												{
													"Type": "NodeText",
													"Data": "​"
												}
											]
										},
										{
											"ID": "20250105173216-9jr1wea",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20250105173216-9jr1wea",
												"updated": "20250105173233"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "这里不需要后备 Shader，因为如果 Shader 不支持就直接不执行了"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20250105172829-co1tz7x",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250105172829-co1tz7x",
				"updated": "20250105173213"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "C"
				},
				{
					"Type": "NodeBackslash",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeText",
							"Data": "#"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 代码："
				}
			]
		},
		{
			"ID": "20250105173207-wthoiab",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250105173207-wthoiab",
				"updated": "20250105173207"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "对源纹理进行合并处理"
				}
			]
		},
		{
			"ID": "20250105173237-e1143fz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250105173237-e1143fz",
				"updated": "20250105175852"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "显示效果（亮度阈值0.5，降低采样程度2，迭代次数3，模糊半径3）："
				}
			]
		},
		{
			"ID": "20250105175938-q2ubuhs",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250105175938-q2ubuhs",
				"updated": "20250105175942"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"style": "width: 513px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "QQ20250105-175929"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/QQ20250105-175929-20250105175938-2a73nur.jpg"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 513px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20250105180058-xty1tq2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250105180058-xty1tq2",
				"updated": "20250105180503"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可见，Bloom 效果让使得高光部分更亮，并且呈现扩散效果。\n其中，哪些亮度区域能够变得更亮是由亮度阈值决定的，而变亮的部分的亮度和扩散程度主要是由模糊程度，也就是那三个高斯模糊相关参数决定"
				}
			]
		},
		{
			"ID": "20250105180517-f16q2nr",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20250105180517-f16q2nr",
				"updated": "20250125172339"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Bloom 效果完整代码"
				}
			]
		},
		{
			"ID": "20250105180534-vm965zs",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250105180534-vm965zs",
				"updated": "20250105180542"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "完整 Shader 代码："
				}
			]
		},
		{
			"ID": "20250105180540-wjsbn5h",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20250105180540-wjsbn5h",
				"style": "line-height: 22px;",
				"updated": "20250125172339"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Shader \"PostEffect/Bloom\"\n{\n    Properties\n    {\n        _MainTex(\"Texture\", 2D) = \"white\"{}\n        _Bloom(\"Bloom\", 2D) = \"\"{}                              // 提取出来的亮度区域纹理\n        _LuminanceThreshold(\"_LuminanceThreshold\", Float) = 0.5 // 亮度阈值\n        _BlurSpread(\"BlurSpread\", Float) = 1                    // 模糊半径\n    }\n\n    SubShader\n    {\n        CGINCLUDE\n        #include \"UnityCG.cginc\"\n\n        sampler2D _MainTex;\n        half4 _MainTex_TexelSize;\n        sampler2D _Bloom;\n        float _LuminanceThreshold;\n        float _BlurSize;\n\n        struct v2f\n        {\n            float2 uv : TEXCOORD0;\n            float4 vertex : SV_POSITION;\n        };\n\n        // 计算颜色的亮度值（灰度值）\n        fixed luminance(fixed4 color)\n        {\n            return 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n        }\n\n        ENDCG\n\n        Tags { \"RenderType\"=\"Opaque\" }\n\n        ZTest Always\n        Cull Off\n        ZWrite Off\n    \n        // 提取亮度区域纹理的Pass\n        Pass\n        {\n            CGPROGRAM\n            #pragma vertex vert\n            #pragma fragment frag\n\n            #include \"UnityCG.cginc\"\n\n            v2f vert(appdata_base v)\n            {\n                v2f o;\n                o.vertex = UnityObjectToClipPos(v.vertex);\n                o.uv = v.texcoord;\n                return o;\n            }\n\n            fixed4 frag(v2f i) : SV_Target\n            {\n                // 采样原纹理颜色，得到亮度贡献值，返回颜色*纹理贡献值即得到亮度区域纹理\n                fixed4 color = tex2D(_MainTex, i.uv);\n                fixed value = clamp(luminance(color) - _LuminanceThreshold, 0, 1);\n                return color * value;\n            }\n\n            ENDCG\n        }\n\n        // 复用高斯模糊的两个Pass\n        UsePass \"PostEffect/GaussianBlur/GAUSSIAN_BLUR_HORIZONTAL\"\n        UsePass \"PostEffect/GaussianBlur/GAUSSIAN_BLUR_VERTICAL\"\n\n        // 合并源图像和模糊后的亮度区域纹理的Pass\n        Pass\n        {\n            CGPROGRAM\n            #pragma vertex vertBloom\n            #pragma fragment fragBloom\n\n            #include \"UnityCG.cginc\"\n\n            struct v2fBloom\n            {\n                float4 pos : SV_POSITION;\n                half4 uv : TEXCOORD0;       // xy主要用于对主纹理进行采样，zw主要用于亮度模糊后的纹理采样\n            };\n\n            v2fBloom vertBloom(appdata_base v)\n            {\n                v2fBloom o;\n                o.pos = UnityObjectToClipPos(v.vertex);\n                o.uv.xy = v.texcoord;       // 亮度纹理和主纹理要采样相同的地方进行颜色叠加\n                o.uv.zw = v.texcoord;\n\n                // 用宏判断uv坐标是否被翻转\n            #if UNITY_UV_STARTS_AT_TOP\n                // 如果纹素的y小于0，为负数，表示需要对Y轴进行调整\n                if (_MainTex_TexelSize.y \u003c 0) \n                    o.uv.w = 1 - o.uv.w;\n            #endif\n\n                return o;\n            }\n\n            fixed4 fragBloom(v2fBloom i) : SV_Target\n            {\n                // 将两个纹理颜色叠加起来\n                return tex2D(_MainTex, i.uv.xy) + tex2D(_Bloom, i.uv.zw);\n            }\n\n            ENDCG\n        }\n    }\n\n    Fallback Off\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20250105180556-2cp2map",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20250105180556-2cp2map",
				"updated": "20250105180608"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "完整 C"
				},
				{
					"Type": "NodeBackslash",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeText",
							"Data": "#"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 代码："
				}
			]
		},
		{
			"ID": "20250105180608-km1ziud",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20250105180608-km1ziud",
				"style": "line-height: 22px;",
				"updated": "20250105180616"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "using UnityEngine;\n\npublic class Bloom : PostEffect\n{\n    [Range(0f, 4f)] public float luminanceThreshold = 0.5f; // 一般是0~1，如果以后使用HDR则可以大于1\n    [Range(1, 8)] public int downSample = 1;                // 降低采样程度\n    [Range(1, 8)] public int iterations = 1;                // 迭代次数\n    [Range(0f, 3f)] public float blurSpread = 1f;           // 模糊半径\n\n    protected override void OnRenderImage(RenderTexture source, RenderTexture destination)\n    {\n        if (PostEffectMaterial == null)\n        {\n            Graphics.Blit(source, destination);\n            return;\n        }\n\n        PostEffectMaterial.SetFloat(\"_LuminanceThreshold\", luminanceThreshold);\n\n        int renderTextureW = source.width / downSample;\n        int renderTextureH = source.height / downSample;\n        RenderTexture buffer = RenderTexture.GetTemporary(renderTextureW, renderTextureH, 0);\n        buffer.filterMode = FilterMode.Bilinear;                    // 采用双线性过滤模式来缩放，可以让缩放效果更平滑\n        Graphics.Blit(source, buffer, PostEffectMaterial, 0);       // 提取亮度区域纹理\n\n        // 高斯模糊迭代\n        for (int i = 0; i \u003c iterations; i++)\n        {\n            // 模糊半径随着迭代次数增加而增加\n            PostEffectMaterial.SetFloat(\"_BlurSpread\", 1 + i * blurSpread);\n\n            // 第一次卷积计算（水平卷积）\n            RenderTexture iterationBuffer = RenderTexture.GetTemporary(renderTextureW, renderTextureH, 0);\n            Graphics.Blit(buffer, iterationBuffer, PostEffectMaterial, 1);\n            RenderTexture.ReleaseTemporary(buffer);                 // 释放使用完毕的缓存\n            // 第二次卷积计算（垂直卷积），基于上次卷积的Color相乘计算\n            buffer = iterationBuffer;                               // 使用水平卷积完毕的迭代缓存\n            iterationBuffer = RenderTexture.GetTemporary(renderTextureW, renderTextureH, 0);\n            Graphics.Blit(buffer, iterationBuffer, PostEffectMaterial, 2);\n\n            RenderTexture.ReleaseTemporary(buffer);                 // 释放使用完毕的缓存\n            buffer = iterationBuffer;                               // 使用卷积完毕的缓存\n        }\n\n        PostEffectMaterial.SetTexture(\"_Bloom\", buffer);            // 将模糊后的亮度区域纹理传递到Shader内\n        Graphics.Blit(source, destination, PostEffectMaterial, 3);  // 将合并后的两个纹理赋值到目标纹理内\n        RenderTexture.ReleaseTemporary(buffer);\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		}
	]
}