{
	"ID": "20241222171858-5uz4nhm",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20241222171858-5uz4nhm",
		"title": "US3S8L10——程序纹理",
		"type": "doc",
		"updated": "20241222175605"
	},
	"Children": [
		{
			"ID": "20241222171858-a3te653",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20241222171858-a3te653",
				"updated": "20241222175605"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "程序纹理"
				}
			]
		},
		{
			"ID": "20241222172418-qak6b3j",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20241222172418-qak6b3j",
				"updated": "20241222172433"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "程序纹理（Procedural Textures），顾名思义，就是通过程序代码生成的纹理\n我们之前学习的大部分纹理，一般都是美术同学提前制作好的图片"
				}
			]
		},
		{
			"ID": "20241222172436-u2ut2m6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20241222172436-u2ut2m6",
				"updated": "20241222172443"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "比如：颜色纹理、法线纹理、渐变纹理、高光遮罩纹理等等\n就算是在高级纹理中学习的立方体纹理、渲染纹理，他们也是根据摄像机看到的内容生成的"
				}
			]
		},
		{
			"ID": "20241222172446-5cdyr5c",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20241222172446-5cdyr5c",
				"updated": "20241222172448"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "而程序纹理是由我们程序员编写代码，动态生成的纹理图片，它的可控性和自由度，都远远大于我们之前学习的其他纹理相关内容"
				}
			]
		},
		{
			"ID": "20241222172451-ygmoknp",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20241222172451-ygmoknp",
				"updated": "20241222175605"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "程序纹理如何生成"
				}
			]
		},
		{
			"ID": "20241222172507-4ovq277",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20241222172507-4ovq277",
				"updated": "20241222172509"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一般生成程序纹理由两种方式："
				}
			]
		},
		{
			"ID": "20241222172509-pw1utrt",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20241222172509-pw1utrt",
				"updated": "20241222172515"
			},
			"Children": [
				{
					"ID": "20241222172509-kqsw5is",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20241222172509-kqsw5is",
						"updated": "20241222172513"
					},
					"Children": [
						{
							"ID": "20241222172509-eticd90",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20241222172509-eticd90",
								"updated": "20241222172513"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "通过 C"
								},
								{
									"Type": "NodeBackslash",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "#"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 脚本生成纹理后传递给 Shader"
								}
							]
						}
					]
				},
				{
					"ID": "20241222172509-q70rwbl",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20241222172509-q70rwbl",
						"updated": "20241222172515"
					},
					"Children": [
						{
							"ID": "20241222172509-oknua6l",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20241222172509-oknua6l",
								"updated": "20241222172515"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "直接在 Shader 代码中自定义逻辑生成纹理"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20241222172507-na06r7v",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20241222172507-na06r7v",
				"updated": "20241222172709"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "后面会分别使用这两种方式，以动态生成国际象棋棋盘格为例"
				}
			]
		},
		{
			"ID": "20241222175605-cw1wpev",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20241222175605-cw1wpev",
				"updated": "20241222175605"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"style": "width: 279px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20241222175605-3a7z5bl.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 279px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20241222172519-bvucnky",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20241222172519-bvucnky",
				"updated": "20241222172602"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "程序纹理的好处"
				}
			]
		},
		{
			"ID": "20241222172531-g6gq0e3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20241222172531-g6gq0e3",
				"updated": "20241222172536"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "程序纹理由于是由我们程序员写代码动态生成的，因此它具备以下优点："
				}
			]
		},
		{
			"ID": "20241222172533-2t0l9fw",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20241222172533-2t0l9fw",
				"updated": "20241222172533"
			},
			"Children": [
				{
					"ID": "20241222172533-ovownzf",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20241222172533-ovownzf",
						"updated": "20241222172533"
					},
					"Children": [
						{
							"ID": "20241222172533-wa88c2g",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20241222172533-wa88c2g",
								"updated": "20241222172533"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "由于是动态生成，不需要存储大文件，可以在运行时生成任意分辨率的纹理"
								}
							]
						}
					]
				},
				{
					"ID": "20241222172533-opctff8",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20241222172533-opctff8",
						"updated": "20241222172533"
					},
					"Children": [
						{
							"ID": "20241222172533-bcqwmsb",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20241222172533-bcqwmsb",
								"updated": "20241222172533"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "可以根据需求调整自定义参数，实时的更改纹理外观"
								}
							]
						}
					]
				},
				{
					"ID": "20241222172533-7buziqn",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20241222172533-7buziqn",
						"updated": "20241222172533"
					},
					"Children": [
						{
							"ID": "20241222172533-oxp281r",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20241222172533-oxp281r",
								"updated": "20241222172533"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "通过适当的函数设计，可以生成无缝平铺的纹理"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20241222172531-8j33srd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20241222172531-8j33srd",
				"updated": "20241222172602"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "总体而言，程序纹理的最明显好处就是自由度高，可控性强"
				}
			]
		}
	]
}