{
	"ID": "20241221193339-2wszm8t",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20241221193339-2wszm8t",
		"title": "US3S8L7——渲染目标纹理",
		"type": "doc",
		"updated": "20250104161254"
	},
	"Children": [
		{
			"ID": "20241221193339-00tyu6d",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20241221193339-00tyu6d",
				"updated": "20250104161254"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "渲染目标纹理"
				}
			]
		},
		{
			"ID": "20241221193518-jecnirp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20241221193518-jecnirp",
				"updated": "20241221193755"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "渲染目标纹理（Render Target Texture）是一种特殊类型的纹理，\n一般摄像机的渲染结果会输出到颜色缓冲区中，最终渲染到设备屏幕上，让玩家通过屏幕看见游戏画面"
				}
			]
		},
		{
			"ID": "20241221193518-224fat1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20241221193518-224fat1",
				"updated": "20241221193527"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "而渲染目标纹理允许我们将渲染结果直接写入到某一张纹理中\n我们可以利用这个纹理来处理各种特殊效果，比如：镜子、玻璃、屏幕后处理、阴影映射等等"
				}
			]
		},
		{
			"ID": "20241221193518-oa3ni4c",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20241221193518-oa3ni4c",
				"updated": "20241221193704"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在 Unity 中，渲染目标纹理（Render Target Texture）通常和渲染纹理（Render Texture）可以互换使用，指的相同的概念。\n在实际使用中，我们更常听到的是\"渲染纹理\"这个术语"
				}
			]
		},
		{
			"ID": "20241221193518-uizjwab",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20241221193518-uizjwab",
				"updated": "20241221193712"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "说人话：渲染纹理 就是 将渲染结果存储到一个纹理对象中，以便在后续的渲染步骤中使用"
				}
			]
		},
		{
			"ID": "20241221193518-ozld1w9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20241221193518-ozld1w9",
				"updated": "20241221194125"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "它的作用体现在：我们在进行 Shader 开发时，我们经常会希望某摄像机不要直接将结果渲染到屏幕上，而是可以得到它的渲染结果进行二次处理或利用"
				}
			]
		},
		{
			"ID": "20241221193722-zcjoqlc",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20241221193722-zcjoqlc",
				"updated": "20250104161254"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Unity 中的渲染目标纹理"
				}
			]
		},
		{
			"ID": "20241221193830-k1yg4gi",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20241221193830-k1yg4gi",
				"updated": "20241221194629"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "获取渲染目标纹理的常用方法"
				}
			]
		},
		{
			"ID": "20241221193840-ryrr6x3",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20241221193840-ryrr6x3",
				"updated": "20250104161254"
			},
			"Children": [
				{
					"ID": "20241221193840-vyvse9h",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20241221193840-vyvse9h",
						"updated": "20241222135558"
					},
					"Children": [
						{
							"ID": "20241221193840-bnk5pd2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20241221193840-bnk5pd2",
								"updated": "20241222135558"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "渲染纹理（"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "block-ref",
									"TextMarkBlockRefID": "20240411155939-z0goj0j",
									"TextMarkBlockRefSubtype": "s",
									"TextMarkTextContent": "Render Texture"
								},
								{
									"Type": "NodeText",
									"Data": " 或 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "block-ref",
									"TextMarkBlockRefID": "20241221221104-wuiiuuj",
									"TextMarkBlockRefSubtype": "s",
									"TextMarkTextContent": "Custom Render Texture"
								},
								{
									"Type": "NodeText",
									"Data": "）"
								}
							]
						},
						{
							"ID": "20241221193928-9y30erp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20241221193928-9y30erp",
								"updated": "20241221194604"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Unity 引擎中提供的一种专门的纹理类型，我们可以在Project窗口中右键 Create ——\u003e Custom Render Texture 创建\n我们只需要把该纹理进行相关的设置，然后关联到摄像机组件的 Target Texture 中即可\n这样对应摄像机渲染的内容就会直接写入到该纹理中，我们便可以使用它来进行相关操作"
								}
							]
						},
						{
							"ID": "20241221193948-yo43xqs",
							"Type": "NodeBlockquote",
							"Properties": {
								"id": "20241221193948-yo43xqs",
								"style": "background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color); --b3-parent-background: var(--b3-card-warning-background);",
								"updated": "20241221193949"
							},
							"Children": [
								{
									"Type": "NodeBlockquoteMarker",
									"Data": "\u003e"
								},
								{
									"ID": "20241221193949-7q75yfp",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20241221193949-7q75yfp",
										"updated": "20241221193949"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "注意：除了手动创建，我们也可以通过代码创建并关联"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20241221193840-6504ly4",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20241221193840-6504ly4",
						"updated": "20241222144505"
					},
					"Children": [
						{
							"ID": "20241221193840-p5ofy5r",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20241221193840-p5ofy5r",
								"updated": "20241222144505"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "block-ref code",
									"TextMarkBlockRefID": "20241222144207-ppxtcwp",
									"TextMarkBlockRefSubtype": "s",
									"TextMarkTextContent": "GrabPass"
								},
								{
									"Type": "NodeText",
									"Data": "​\n"
								}
							]
						},
						{
							"ID": "20241221193954-4ooo21v",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20241221193954-4ooo21v",
								"updated": "20241221194559"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在 Unity Shader 当中，我们可以在 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Pass"
								},
								{
									"Type": "NodeText",
									"Data": "​ 渲染通道中使用 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "GrabPass"
								},
								{
									"Type": "NodeText",
									"Data": "​ 抓取指令，\n捕获当前屏幕内容并将其保存为纹理，以便在后续的渲染过程中使用"
								}
							]
						}
					]
				},
				{
					"ID": "20241221193840-ckrrvdu",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20241221193840-ckrrvdu",
						"updated": "20250104161254"
					},
					"Children": [
						{
							"ID": "20241221193840-8n8tdtz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20241221193840-8n8tdtz",
								"updated": "20241221194141"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "OnRenderImage"
								},
								{
									"Type": "NodeText",
									"Data": "​\n"
								}
							]
						},
						{
							"ID": "20241221194142-lbssu2k",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20241221194142-lbssu2k",
								"updated": "20250104161254"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在继承了 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "MonoBehaviour"
								},
								{
									"Type": "NodeText",
									"Data": "​ 的脚本中，我们可以使用 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code block-ref",
									"TextMarkBlockRefID": "20250104160859-1jokgsp",
									"TextMarkBlockRefSubtype": "s",
									"TextMarkTextContent": "OnRenderImage"
								},
								{
									"Type": "NodeText",
									"Data": "​ 来获取摄像机渲染完成的图像\n该函数一般用于实现自定义的图像后处理效果，相当于将摄像机渲染完成的图像进行二次处理"
								}
							]
						},
						{
							"ID": "20250104160726-tjbu3t2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20250104160726-tjbu3t2",
								"updated": "20250104160804"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "这个方法一般会在屏幕后处理时使用，详见："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "block-ref",
									"TextMarkBlockRefID": "20250104124535-p0aiatt",
									"TextMarkBlockRefSubtype": "d",
									"TextMarkTextContent": "US3S10——屏幕后期处理效果"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20241221193838-4byshwu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20241221193838-4byshwu",
				"updated": "20241221193838"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "等等"
				}
			]
		},
		{
			"ID": "20241221194242-zswmg2t",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20241221194242-zswmg2t",
				"updated": "20241221194242"
			}
		}
	]
}