{
	"ID": "20241221164814-jsqh7wg",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20241221164814-jsqh7wg",
		"title": "US3S8L5——折射效果",
		"type": "doc",
		"updated": "20241222172342"
	},
	"Children": [
		{
			"ID": "20241222172314-q17lyl1",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20241222172314-q17lyl1",
				"updated": "20241222172342"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "本章代码关键字"
				}
			]
		},
		{
			"ID": "20241222172318-5174goh",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20241222172318-5174goh",
				"style": "line-height: 22px;",
				"updated": "20241222172342"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "refract()\t// 折射向量计算\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20241221164814-x8vqlyr",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20241221164814-x8vqlyr",
				"updated": "20241221170837"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "折射效果"
				}
			]
		},
		{
			"ID": "20241221165005-j8zf6qu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20241221165005-j8zf6qu",
				"updated": "20241221165147"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "折射效果指光的折射，是一种光学现象。"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "指光从一种透明介质斜射入另一种透明介质时，传播方向一般会发生变化，这种现象叫光的折射。"
				}
			]
		},
		{
			"ID": "20241221165026-l7whp50",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20241221165026-l7whp50",
				"updated": "20241221165137"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "光的折射与光的反射一样，都是发生在两种介质的交界处，只是反射光返回原介质中，而折射光进入到另一种介质中，\n由于光在两种不同的物质里传播速度不同，故在两种介质的交界处传播方向发生变化，这就是光的折射。"
				}
			]
		},
		{
			"ID": "20241221165151-28usavt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20241221165151-28usavt",
				"updated": "20241221165224"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"style": "width: 263px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20241219001537-bj819j5.png"
						},
						{
							"Type": "NodeLinkSpace"
						},
						{
							"Type": "NodeLinkTitle",
							"Data": "光的反射"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 263px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"style": "width: 207px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20241221165206-6q378vl.png"
						},
						{
							"Type": "NodeLinkSpace"
						},
						{
							"Type": "NodeLinkTitle",
							"Data": "光的折射"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 207px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20241221165209-heci70d",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20241221165209-heci70d",
				"updated": "20241221165314"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在 Unity Shader 中，折射效果模拟了光线通过透明或半透明材质时的弯曲行为。\n"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "一般用来模拟水面、透明玻璃球、眼镜、钻石、水晶球、空气扰动等等效果，它一般会配合其他表现效果一起使用"
				}
			]
		},
		{
			"ID": "20241221165335-qdq9bwy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20241221165335-qdq9bwy",
				"updated": "20241221165351"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"style": "width: 398px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20241221165335-a2ncg3v.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 398px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"style": "width: 294px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20241221165351-9djomz1.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 294px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20241221165356-ccdnyih",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20241221165356-ccdnyih",
				"updated": "20241221170837"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "折射效果的原理"
				}
			]
		},
		{
			"ID": "20241221165407-12wkc77",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20241221165407-12wkc77",
				"updated": "20241221165647"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "折射效果的原理还是利用立方体纹理（"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "CubeMap"
				},
				{
					"Type": "NodeText",
					"Data": "​）进行环境映射\n我们利用"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "摄像机看向物体表面顶点的方向向量"
				},
				{
					"Type": "NodeText",
					"Data": "作为"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "u",
					"TextMarkTextContent": "入射向量"
				},
				{
					"Type": "NodeText",
					"Data": "，结合"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "顶点法线向量"
				},
				{
					"Type": "NodeText",
					"Data": "算出"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "u",
					"TextMarkTextContent": "折射向量"
				},
				{
					"Type": "NodeText",
					"Data": "，\n然后"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "利用折射方向向量在立方体纹理中进行采样"
				},
				{
					"Type": "NodeText",
					"Data": "，得到最终反射的颜色。"
				}
			]
		},
		{
			"ID": "20241221165855-l7iqc40",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20241221165855-l7iqc40",
				"updated": "20241221165915"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "简单来说，就是根据 视角方向 和 顶点法线，计算得到折射向量，使用折射向量从立方体纹理内取值"
				}
			]
		},
		{
			"ID": "20241221165438-2kybmdk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20241221165438-2kybmdk",
				"updated": "20241221170055"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"style": "width: 158px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20241221170055-3gu7yju.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 158px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"style": "width: 170px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20241209030051-43c2sv3.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 170px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20241221170001-pmuvtle",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20241221170001-pmuvtle",
				"updated": "20241221170017"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们同样可以根据光路可逆原则，使用视角方向计算出光线方向"
				}
			]
		},
		{
			"ID": "20241221165500-e89egox",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20241221165500-e89egox",
				"updated": "20241221165931"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们在计算折射方向时，会用到斯涅耳定律（Snell’s Law）："
				}
			]
		},
		{
			"ID": "20241221170254-ejbff0v",
			"Type": "NodeMathBlock",
			"Properties": {
				"id": "20241221170254-ejbff0v",
				"updated": "20241221170259"
			},
			"Children": [
				{
					"Type": "NodeMathBlockOpenMarker"
				},
				{
					"Type": "NodeMathBlockContent",
					"Data": "\\eta_1\\sin\\theta_1 = \\eta_2\\sin\\theta_2"
				},
				{
					"Type": "NodeMathBlockCloseMarker"
				}
			]
		},
		{
			"ID": "20241221170037-rr0c7wn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20241221170037-rr0c7wn",
				"updated": "20241221170317"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当光从介质 1 沿着表面法线夹角为 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "inline-math",
					"TextMarkInlineMathContent": "\\theta_1"
				},
				{
					"Type": "NodeText",
					"Data": " 的方向斜射入介质 2 时，\n我们可以利用数学公式 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "inline-math",
					"TextMarkInlineMathContent": "\\eta_1\\sin\\theta_1 = \\eta_2\\sin\\theta_2"
				},
				{
					"Type": "NodeText",
					"Data": " 计算出折射光线和法线的夹角 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "inline-math",
					"TextMarkInlineMathContent": "\\theta_1"
				},
				{
					"Type": "NodeText",
					"Data": "\n其中 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "inline-math",
					"TextMarkInlineMathContent": "\\eta_1"
				},
				{
					"Type": "NodeText",
					"Data": " 和 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "inline-math",
					"TextMarkInlineMathContent": "\\eta_2"
				},
				{
					"Type": "NodeText",
					"Data": " 为两种介质的折射率"
				}
			]
		},
		{
			"ID": "20241221170256-90hyxgl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20241221170256-90hyxgl",
				"updated": "20241221170451"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "对于其中的折射率来说，不同物体的折射率各不相同，我们在制作时，可以在搜索引擎中搜索 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://baike.baidu.com/item/%E5%B8%B8%E7%94%A8%E6%8A%98%E5%B0%84%E7%8E%87%E8%A1%A8/663686",
					"TextMarkTextContent": "常用折射率表"
				},
				{
					"Type": "NodeText",
					"Data": " 来获取对应物体的折射率"
				}
			]
		},
		{
			"ID": "20241221170444-p9cxp8f",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20241221170444-p9cxp8f",
				"updated": "20241221170837"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "折射效果注意点"
				}
			]
		},
		{
			"ID": "20241221170530-atlhpl7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20241221170530-atlhpl7",
				"updated": "20241221170630"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们在 Unity 中处理 折射效果 的做法是："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "直接用得到的折射方向对立方体纹理进行采样"
				},
				{
					"Type": "NodeText",
					"Data": "，这样做其实不符合物理规律，\n因为对于一个透明物体来说，更准确的模拟方式应该是进行两侧折射，一次是光线进入内部，一次是光线从物体内部射出。\n但是，在实时渲染中模拟第二次折射方向较为复杂，而我们"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "仅模拟一次折射得到的效果在视觉上看起来也是可以接受的！"
				}
			]
		},
		{
			"ID": "20241221170650-purin9x",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20241221170650-purin9x",
				"updated": "20241221170718"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"style": "width: 189px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20241221170650-yb11cxt.png"
						},
						{
							"Type": "NodeLinkSpace"
						},
						{
							"Type": "NodeLinkTitle",
							"Data": "两侧反射示意图"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 189px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20241221170632-x3ehxfg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20241221170632-x3ehxfg",
				"updated": "20241221170632"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "因此，在实时渲染中，我们通常仅模拟第一次折射来得到最终的结果！"
				}
			]
		},
		{
			"ID": "20241221170705-dhrstw1",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20241221170705-dhrstw1",
				"updated": "20241221172007"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "折射的基础实现"
				}
			]
		},
		{
			"ID": "20241221170843-9pt7saf",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20241221170843-9pt7saf",
				"name": "refract()",
				"updated": "20241221172007"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "折射计算函数"
				}
			]
		},
		{
			"ID": "20241221171729-bt03ftx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20241221171729-bt03ftx",
				"updated": "20241221171736"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "CG 中提供了内置函数 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "refract"
				},
				{
					"Type": "NodeText",
					"Data": "​ 用于进行折射向量的计算"
				}
			]
		},
		{
			"ID": "20241221171736-5f4p6vz",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20241221171736-5f4p6vz",
				"style": "line-height: 22px;",
				"updated": "20241221171740"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "refract(入射方向单位向量, 顶点法线单位向量, 入射介质折射率/射入介质折射率)\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20241221171742-aikss9u",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20241221171742-aikss9u",
				"updated": "20241221172004"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "传入 入射方向单位向量、顶点法线单位向量、入射介质与射入介质折射率比值 便可以得到在目标介质中的折射向量"
				}
			]
		},
		{
			"ID": "20241221171729-b5awoey",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20241221171729-b5awoey",
				"updated": "20241221171807"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "该函数内部就是利用了斯涅耳定律进行的计算，我们无需再自己写逻辑计算了"
				}
			]
		},
		{
			"ID": "20241221172007-esnxgdp",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20241221172007-esnxgdp",
				"updated": "20241221175605"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "折射基础效果实现"
				}
			]
		},
		{
			"ID": "20241221172042-q3qryeg",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20241221172042-q3qryeg",
				"updated": "20241221175506"
			},
			"Children": [
				{
					"ID": "20241221172055-x07bf6s",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20241221172055-x07bf6s",
						"updated": "20241221172055"
					},
					"Children": [
						{
							"ID": "20241221172055-rzldwop",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20241221172055-rzldwop",
								"updated": "20241221172055"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "属性声明\n"
								}
							]
						},
						{
							"ID": "20241221172058-nj2hf42",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20241221172058-nj2hf42",
								"updated": "20241221172114"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "我们将声明4个关键属性："
								}
							]
						},
						{
							"ID": "20241221172114-jph5a2j",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20241221172114-jph5a2j",
								"updated": "20241221172114"
							},
							"Children": [
								{
									"ID": "20241221172114-lc2jjdg",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20241221172114-lc2jjdg",
										"updated": "20241221172114"
									},
									"Children": [
										{
											"ID": "20241221172114-43a74gw",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20241221172114-43a74gw",
												"updated": "20241221172114"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "介质A折射率"
												}
											]
										}
									]
								},
								{
									"ID": "20241221172114-3r0saty",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "Mi4=",
										"Num": 2
									},
									"Properties": {
										"id": "20241221172114-3r0saty",
										"updated": "20241221172114"
									},
									"Children": [
										{
											"ID": "20241221172114-aqfcrbp",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20241221172114-aqfcrbp",
												"updated": "20241221172114"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "介质B折射率"
												}
											]
										}
									]
								},
								{
									"ID": "20241221172114-3p4a6wx",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "My4=",
										"Num": 3
									},
									"Properties": {
										"id": "20241221172114-3p4a6wx",
										"updated": "20241221172114"
									},
									"Children": [
										{
											"ID": "20241221172114-j5fgp0u",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20241221172114-j5fgp0u",
												"updated": "20241221172114"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "立方体纹理贴图"
												}
											]
										}
									]
								},
								{
									"ID": "20241221172114-3hrdtd2",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "NC4=",
										"Num": 4
									},
									"Properties": {
										"id": "20241221172114-3hrdtd2",
										"updated": "20241221172114"
									},
									"Children": [
										{
											"ID": "20241221172114-b0m595h",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20241221172114-b0m595h",
												"updated": "20241221172114"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "折射程度"
												}
											]
										}
									]
								}
							]
						},
						{
							"ID": "20241221172313-cm5h1kl",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20241221172313-cm5h1kl",
								"updated": "20241221172523"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "指的一提的是，介质A折射率 和 介质B折射率 属性可以合并为 介质A与介质B的折射率比值 属性\n我们在外部计算好这个比值，直接传入即可，这样即可减少计算步骤，提高效率，这部分因为是学习需要，所以还是使用两个属性"
								}
							]
						},
						{
							"ID": "20241221172527-wmwoq47",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20241221172527-wmwoq47",
								"style": "line-height: 22px;",
								"updated": "20241221172906"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "Yw=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "Properties\n{\n    _RefractiveIndexA(\"RefractiveIndexA\", Range(1, 2)) = 1      // 介质A折射率\n    _RefractiveIndexB(\"RefractiveIndexA\", Range(1, 2)) = 1.3    // 介质B折射率\n    _Cube(\"Cubemap\", Cube) = \"\"{}                               // 立方体纹理贴图\n    _RefractAmount(\"RefractAmount\", Range(0, 1)) = 1            // 折射程度\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20241221172055-rbh7f50",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20241221172055-rbh7f50",
						"updated": "20241221172055"
					},
					"Children": [
						{
							"ID": "20241221172055-vu443zq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20241221172055-vu443zq",
								"updated": "20241221172055"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "编译指令、内置文件、属性映射、结构体相关"
								}
							]
						},
						{
							"ID": "20241221173343-71gdmi9",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20241221173343-71gdmi9",
								"style": "line-height: 22px;",
								"updated": "20241221173358"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "Yw=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "SubShader\n{\n    Tags { \"RenderType\"=\"Opaque\" \"Queue\"=\"Geometry\" }\n\n    Pass\n    {\n        CGPROGRAM\n        #pragma vertex vert\n        #pragma fragment frag\n      \n        #include \"UnityCG.cginc\"\n\n        samplerCUBE _Cube;\n        fixed _RefractiveIndexA;\n        fixed _RefractiveIndexB;\n        fixed _RefractAmount;\n\n        struct v2f\n        {\n            float4 pos: SV_POSITION;        // 裁剪空间下顶点坐标\n            float3 worldRefr: TEXCOORD0;    // 折射向量\n        };\n\n        // ...\n        ENDCG\n    }\n}\n\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20241221172055-6ykqb4g",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20241221172055-6ykqb4g",
						"updated": "20241221175506"
					},
					"Children": [
						{
							"ID": "20241221172055-dpwamvk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20241221172055-dpwamvk",
								"updated": "20241221172055"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "顶点着色器\n"
								}
							]
						},
						{
							"ID": "20241221172117-q6bbuem",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20241221172117-q6bbuem",
								"updated": "20241221172121"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "关键步骤："
								}
							]
						},
						{
							"ID": "20241221172121-jljt4tv",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20241221172121-jljt4tv",
								"updated": "20241221172121"
							},
							"Children": [
								{
									"ID": "20241221172121-lbrwaar",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20241221172121-lbrwaar",
										"updated": "20241221172121"
									},
									"Children": [
										{
											"ID": "20241221172121-xs7icac",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20241221172121-xs7icac",
												"updated": "20241221172123"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "顶点坐标转裁剪坐标\n"
												}
											]
										}
									]
								},
								{
									"ID": "20241221172124-5t690bp",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "Mi4=",
										"Num": 2
									},
									"Properties": {
										"id": "20241221172124-5t690bp",
										"updated": "20241221172124"
									},
									"Children": [
										{
											"ID": "20241221172124-gfwb38a",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20241221172124-gfwb38a",
												"updated": "20241221172125"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "顶点法线转世界坐标\n"
												}
											]
										}
									]
								},
								{
									"ID": "20241221172126-clfp971",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "My4=",
										"Num": 3
									},
									"Properties": {
										"id": "20241221172126-clfp971",
										"updated": "20241221172126"
									},
									"Children": [
										{
											"ID": "20241221172126-eiv03fm",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20241221172126-eiv03fm",
												"updated": "20241221172127"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "顶点坐标转世界坐标\n"
												}
											]
										}
									]
								},
								{
									"ID": "20241221172127-s45zc3x",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "NC4=",
										"Num": 4
									},
									"Properties": {
										"id": "20241221172127-s45zc3x",
										"updated": "20241221172127"
									},
									"Children": [
										{
											"ID": "20241221172127-wu8os4g",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20241221172127-wu8os4g",
												"updated": "20241221173405"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "世界空间下视角方向计算"
												}
											]
										}
									]
								},
								{
									"ID": "20241221172130-7cy18e0",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "NS4=",
										"Num": 5
									},
									"Properties": {
										"id": "20241221172130-7cy18e0",
										"updated": "20241221172130"
									},
									"Children": [
										{
											"ID": "20241221172130-6aqsxuu",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20241221172130-6aqsxuu",
												"updated": "20241221172130"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "利用折射函数计算折射向量"
												}
											]
										}
									]
								}
							]
						},
						{
							"ID": "20241221173402-7sgp5bh",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20241221173402-7sgp5bh",
								"style": "line-height: 22px;",
								"updated": "20241221175506"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "Yw=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "v2f vert(appdata_base v)\n{\n    v2f data;\n    data.pos = UnityObjectToClipPos(v.vertex);                  // 顶点坐标转裁剪坐标\n    fixed3 worldNormal = UnityObjectToWorldNormal(v.normal);    // 顶点法线转世界法线\n    fixed3 worldPos = mul(unity_ObjectToWorld, v.vertex).xyz;   // 顶点坐标转世界坐标\n    fixed3 worldViewDir = UnityWorldSpaceViewDir(worldPos);     // 世界空间下视角方向的计算\n    // 根据逆向的视角方向，法线向量，两个介质的折射率比值计算折射向量\n    data.worldRefr = refract(-normalize(worldViewDir), normalize(worldNormal), _RefractiveIndexA / _RefractiveIndexB);\n\n    return data;\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20241221172055-wisy9cs",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20241221172055-wisy9cs",
						"updated": "20241221174218"
					},
					"Children": [
						{
							"ID": "20241221172055-58yfim0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20241221172055-58yfim0",
								"updated": "20241221172055"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "片元着色器\n"
								}
							]
						},
						{
							"ID": "20241221172139-gzgiat4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20241221172139-gzgiat4",
								"updated": "20241221172145"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "关键步骤："
								}
							]
						},
						{
							"ID": "20241221172145-z7k9fyu",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20241221172145-z7k9fyu",
								"updated": "20241221172145"
							},
							"Children": [
								{
									"ID": "20241221172145-mbw0kew",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20241221172145-mbw0kew",
										"updated": "20241221172145"
									},
									"Children": [
										{
											"ID": "20241221172145-f3lpash",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20241221172145-f3lpash",
												"updated": "20241221172154"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "立方体纹理采样（利用 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "texCUBE"
												},
												{
													"Type": "NodeText",
													"Data": "​ 函数）"
												}
											]
										}
									]
								},
								{
									"ID": "20241221172145-hklsj6d",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "Mi4=",
										"Num": 2
									},
									"Properties": {
										"id": "20241221172145-hklsj6d",
										"updated": "20241221172145"
									},
									"Children": [
										{
											"ID": "20241221172145-cncib0r",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20241221172145-cncib0r",
												"updated": "20241221172145"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "结合折射程度返回最终颜色"
												}
											]
										}
									]
								}
							]
						},
						{
							"ID": "20241221174012-ylra42g",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20241221174012-ylra42g",
								"style": "line-height: 22px;",
								"updated": "20241221174218"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "Yw=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "fixed4 frag(v2f i): SV_TARGET\n{\n    fixed4 cubemapColor = texCUBE(_Cube, i.worldRefr);  // 立方体纹理采样\n    return cubemapColor * _RefractAmount;               // 结合折射程度计算最终颜色\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20241221172155-m7reaki",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20241221172155-m7reaki",
				"updated": "20241221175141"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "显示效果："
				}
			]
		},
		{
			"ID": "20241221175300-m9ttpxh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20241221175300-m9ttpxh",
				"updated": "20241221175300"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"style": "width: 239px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20241221175300-gqpa3hu.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 239px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20241221175302-xw541hj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20241221175302-xw541hj",
				"updated": "20241221175441"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可见，物体呈现出了一种折射效果，它改变了物体后边的显示效果"
				}
			]
		},
		{
			"ID": "20241221175323-cvwybbl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20241221175323-cvwybbl",
				"updated": "20241221175450"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "完整 Shader 代码："
				}
			]
		},
		{
			"ID": "20241221175450-kvza17s",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20241221175450-kvza17s",
				"style": "line-height: 22px;",
				"updated": "20241221175454"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Shader \"Unlit/Lesson77_RefractionBase\"\n{\n    Properties\n    {\n        _RefractiveIndexA(\"RefractiveIndexA\", Range(1, 2)) = 1      // 介质1折射率\n        _RefractiveIndexB(\"RefractiveIndexA\", Range(1, 2)) = 1.3    // 介质2折射率\n        _Cube(\"Cubemap\", Cube) = \"\"{}                               // 立方体纹理贴图\n        _RefractAmount(\"RefractAmount\", Range(0, 1)) = 1            // 折射程度\n    }\n\n    SubShader\n    {\n        Tags { \"RenderType\"=\"Opaque\" \"Queue\"=\"Geometry\" }\n\n        Pass\n        {\n            CGPROGRAM\n            #pragma vertex vert\n            #pragma fragment frag\n          \n            #include \"UnityCG.cginc\"\n\n            samplerCUBE _Cube;\n            fixed _RefractiveIndexA;\n            fixed _RefractiveIndexB;\n            fixed _RefractAmount;\n\n            struct v2f\n            {\n                float4 pos: SV_POSITION;        // 裁剪空间下顶点坐标\n                float3 worldRefr: TEXCOORD0;    // 折射向量\n            };\n\n            v2f vert(appdata_base v)\n            {\n                v2f data;\n                data.pos = UnityObjectToClipPos(v.vertex);                  // 顶点坐标转裁剪坐标\n                fixed3 worldNormal = UnityObjectToWorldNormal(v.normal);    // 顶点法线转世界法线\n                fixed3 worldPos = mul(unity_ObjectToWorld, v.vertex).xyz;   // 顶点坐标转世界坐标\n                fixed3 worldViewDir = UnityWorldSpaceViewDir(worldPos);     // 世界空间下视角方向的计算\n                // 根据逆向的视角方向，法线向量，两个介质的折射率比值计算折射向量\n                data.worldRefr = refract(-normalize(worldViewDir), normalize(worldNormal), _RefractiveIndexA / _RefractiveIndexB);\n\n                return data;\n            }\n\n            fixed4 frag(v2f i): SV_TARGET\n            {\n                fixed4 cubemapColor = texCUBE(_Cube, i.worldRefr);  // 立方体纹理采样\n                return cubemapColor * _RefractAmount;               // 结合折射程度计算最终颜色\n            }\n\n            ENDCG\n        }\n    }\n}\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20241221175605-juips6h",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20241221175605-juips6h",
				"updated": "20241221182223"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "实现带漫反射和阴影的折射效果"
				}
			]
		},
		{
			"ID": "20241221175614-tlaid3n",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20241221175614-tlaid3n",
				"updated": "20241221182103"
			},
			"Children": [
				{
					"ID": "20241221180232-u4mk0i9",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20241221180232-u4mk0i9",
						"updated": "20241221180248"
					},
					"Children": [
						{
							"ID": "20241221180232-h6pa54l",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20241221180232-h6pa54l",
								"updated": "20241221180248"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "复用上文的基础折射 Shader 代码"
								}
							]
						}
					]
				},
				{
					"ID": "20241221175633-unz7l61",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20241221175633-unz7l61",
						"updated": "20241221182103"
					},
					"Children": [
						{
							"ID": "20241221175633-9eel3nr",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20241221175633-9eel3nr",
								"updated": "20241221175709"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "折射效果结合漫反射和阴影"
								}
							]
						},
						{
							"ID": "20241221175706-idispl1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20241221175706-idispl1",
								"updated": "20241221181403"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "折射效果结合漫反射和阴影和之前 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "block-ref",
									"TextMarkBlockRefID": "20241219001301-uqtlfhe",
									"TextMarkBlockRefSubtype": "s",
									"TextMarkTextContent": "反射"
								},
								{
									"Type": "NodeText",
									"Data": " 几乎一模一样，我们可以直接复制之前的代码，避免书写重复内容"
								}
							]
						},
						{
							"ID": "20241221175743-s6cisr7",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20241221175743-s6cisr7",
								"updated": "20241221182103"
							},
							"Children": [
								{
									"ID": "20241221175743-x6sjori",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20241221175743-x6sjori",
										"updated": "20241221175743"
									},
									"Children": [
										{
											"ID": "20241221175743-4vnjkin",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20241221175743-4vnjkin",
												"updated": "20241221175758"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "属性相关\n"
												}
											]
										},
										{
											"ID": "20241221175800-gkxjee3",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20241221175800-gkxjee3",
												"updated": "20241221180206"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "添加漫反射颜色和折射颜色，将 折射率A 和 折射率B 合并为一个 折射率比值变量\n折射率比值变量可以以后在外部算好了再传入，避免内部计算浪费性能"
												}
											]
										},
										{
											"ID": "20241221180207-l9db4vt",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20241221180207-l9db4vt",
												"style": "line-height: 22px;",
												"updated": "20241221180452"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "Yw=="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "Properties\n{      \n    _Color(\"Color\", Color) = (1, 1, 1, 1)               // 漫反射颜色\n    _RefractColor(\"RefractColor\", Color) = (1, 1, 1, 1) // 折射颜色\n    _RefractRatio(\"RefractRatio\", Range(0.1, 1)) = 0.5  // 两个介质的折射率比值\n    _Cube(\"Cubemap\", Cube) = \"\"{}                       // 立方体纹理贴图\n    _RefractAmount(\"RefractAmount\", Range(0, 1)) = 1    // 折射程度\n}\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								},
								{
									"ID": "20241221175743-ghiuvdo",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "Mi4=",
										"Num": 2
									},
									"Properties": {
										"id": "20241221175743-ghiuvdo",
										"updated": "20241221175743"
									},
									"Children": [
										{
											"ID": "20241221175743-2wqqauc",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20241221175743-2wqqauc",
												"updated": "20241221175751"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "渲染路径、编译指令、内置文件复制、属性映射复制修改"
												}
											]
										},
										{
											"ID": "20241221180453-64ah4zf",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20241221180453-64ah4zf",
												"style": "line-height: 22px;",
												"updated": "20241221180850"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "Yw=="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "Tags { \"RenderType\"=\"Opaque\" \"Queue\"=\"Geometry\" }\n\nPass\n{\n    Tags { \"LightMode\" = \"ForwardBase\" }\n\n    CGPROGRAM\n    #pragma vertex vert\n    #pragma fragment frag\n    #pragma multi_compile_fwdbase\n  \n    #include \"UnityCG.cginc\"\n    #include \"Lighting.cginc\"\n    #include \"AutoLight.cginc\"\n\n    fixed4 _Color;\n    fixed4 _RefractColor;\n    samplerCUBE _Cube;\n    fixed _RefractRatio;\n    fixed _RefractAmount;\n    // ...\n}\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								},
								{
									"ID": "20241221175743-ve77z66",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "My4=",
										"Num": 3
									},
									"Properties": {
										"id": "20241221175743-ve77z66",
										"updated": "20241221175743"
									},
									"Children": [
										{
											"ID": "20241221175743-oryzph8",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20241221175743-oryzph8",
												"updated": "20241221175743"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "结构体相关内容复制"
												}
											]
										},
										{
											"ID": "20241221180854-52alkw1",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20241221180854-52alkw1",
												"style": "line-height: 22px;",
												"updated": "20241221180905"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "Yw=="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "struct v2f\n{\n    float4 pos: SV_POSITION;        // 裁剪空间下的顶点坐标\n    fixed3 worldNormal: NORMAL;     // 世界空间下法线\n    float3 worldPos: TEXCOORD0;     // 世界空间下顶点坐标\n    float3 worldRefr: TEXCOORD1;    // 折射向量\n    SHADOW_COORDS(2)                // 阴影坐标宏\n};\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								},
								{
									"ID": "20241221175743-l8cq658",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "NC4=",
										"Num": 4
									},
									"Properties": {
										"id": "20241221175743-l8cq658",
										"updated": "20241221182103"
									},
									"Children": [
										{
											"ID": "20241221175743-mwo8a3g",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20241221175743-mwo8a3g",
												"updated": "20241221175743"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "顶点着色器相关内容修改"
												}
											]
										},
										{
											"ID": "20241221180912-8oqutbw",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20241221180912-8oqutbw",
												"style": "line-height: 22px;",
												"updated": "20241221182103"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "Yw=="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "v2f vert(appdata_base v)\n{\n    v2f data;\n    data.pos = UnityObjectToClipPos(v.vertex);                      // 顶点坐标转裁剪坐标\n    data.worldNormal = UnityObjectToWorldNormal(v.normal);          // 顶点法线转世界法线\n    data.worldPos = mul(unity_ObjectToWorld, v.vertex).xyz;         // 顶点坐标转世界坐标\n    fixed3 worldViewDir = UnityWorldSpaceViewDir(data.worldPos);    // 世界空间下视角方向的计算\n    // 根据逆向的视角方向，法线向量，两个介质的折射率比值计算折射向量\n    data.worldRefr = refract(-normalize(worldViewDir), normalize(data.worldNormal), _RefractRatio);\n    TRANSFER_SHADOW(data)                                           // 阴影转换计算\n\n    return data;\n}\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								},
								{
									"ID": "20241221175743-gr86if3",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "NS4=",
										"Num": 5
									},
									"Properties": {
										"id": "20241221175743-gr86if3",
										"updated": "20241221182055"
									},
									"Children": [
										{
											"ID": "20241221175743-cau3pql",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20241221175743-cau3pql",
												"updated": "20241221175743"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "片元着色器相关内容复制修改"
												}
											]
										},
										{
											"ID": "20241221181346-74fuiqb",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20241221181346-74fuiqb",
												"style": "line-height: 22px;",
												"updated": "20241221182055"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "Yw=="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "fixed4 frag(v2f i): SV_TARGET\n{\n    // 漫反射计算\n    fixed3 worldLightDir = normalize(UnityWorldSpaceLightDir(i.worldPos));\n    fixed3 diffuse = _LightColor0.rgb * _Color.rgb * max(0, dot(normalize(i.worldNormal), worldLightDir));\n    // 立方体纹理采样颜色计算\n    fixed3 cubemapColor = texCUBE(_Cube, i.worldRefr).rgb * _RefractColor.rgb;\n    // 计算光照衰减和阴影相关的衰减值\n    UNITY_LIGHT_ATTENUATION(atten, i, i.worldPos)\n    // 利用插值计算，在 漫反射颜色 和 反射颜色 之间进行插值，0和1就是极限状态，0代表没有反射效果，1代表只要反射效果，0~1就是两者的叠加\n    fixed3 color = UNITY_LIGHTMODEL_AMBIENT.rgb + lerp(diffuse, cubemapColor, _RefractAmount) * atten;\n    return fixed4(color, 1);\n}\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								},
								{
									"ID": "20241221181343-k7cwrvk",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "Ni4=",
										"Num": 6
									},
									"Properties": {
										"id": "20241221181343-k7cwrvk",
										"updated": "20241221182044"
									},
									"Children": [
										{
											"ID": "20241221181344-s8g03ul",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20241221181344-s8g03ul",
												"updated": "20241221181344"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "添加 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "FallBack \u0026quot;Reflective/VertexLit\u0026quot;"
												},
												{
													"Type": "NodeText",
													"Data": "​，实现投射阴影"
												}
											]
										},
										{
											"ID": "20241221181344-6p0ko9t",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20241221181344-6p0ko9t",
												"style": "line-height: 22px;",
												"updated": "20241221182044"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "Yw=="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "Shader \"Unlit/Lesson78_Refraction\"\n{\n    Properties {/*...*/}\n    SubShader {/*...*/}\n\n    Fallback \"Reflective/VertexLit\"\n}\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20241221181405-7i56lgd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20241221181405-7i56lgd",
				"updated": "20241221182202"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "显示效果（左为结合了漫反射光照和阴影效果的折射Shader，折射比值是0.76，右为纯折射Shader）："
				}
			]
		},
		{
			"ID": "20241221181828-84xamy3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20241221181828-84xamy3",
				"updated": "20241221181828"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20241221181828-ir2inqh.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20241221182002-hsy04ap",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20241221182002-hsy04ap",
				"updated": "20241221182208"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可见，加入漫反射和阴影计算后，物体可以受到光照影响，还可以投射和接收阴影"
				}
			]
		},
		{
			"ID": "20241221182209-ho0wakw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20241221182209-ho0wakw",
				"updated": "20241221182216"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "完整 Shader 代码如下："
				}
			]
		},
		{
			"ID": "20241221182220-t7zk61c",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20241221182220-t7zk61c",
				"style": "line-height: 22px;",
				"updated": "20241221182223"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Shader \"Unlit/Lesson78_Refraction\"\n{\n    Properties\n    {    \n        _Color(\"Color\", Color) = (1, 1, 1, 1)               // 漫反射颜色\n        _RefractColor(\"RefractColor\", Color) = (1, 1, 1, 1) // 折射颜色\n        _RefractRatio(\"RefractRatio\", Range(0.1, 1)) = 0.5  // 两个介质的折射率比值\n        _Cube(\"Cubemap\", Cube) = \"\"{}                       // 立方体纹理贴图\n        _RefractAmount(\"RefractAmount\", Range(0, 1)) = 1    // 折射程度\n    }\n\n    SubShader\n    {\n        Tags { \"RenderType\"=\"Opaque\" \"Queue\"=\"Geometry\" }\n\n        Pass\n        {\n            Tags { \"LightMode\" = \"ForwardBase\" }\n\n            CGPROGRAM\n            #pragma vertex vert\n            #pragma fragment frag\n            #pragma multi_compile_fwdbase\n        \n            #include \"UnityCG.cginc\"\n            #include \"Lighting.cginc\"\n            #include \"AutoLight.cginc\"\n\n            fixed4 _Color;\n            fixed4 _RefractColor;\n            samplerCUBE _Cube;\n            fixed _RefractRatio;\n            fixed _RefractAmount;\n\n            struct v2f\n            {\n                float4 pos: SV_POSITION;        // 裁剪空间下的顶点坐标\n                fixed3 worldNormal: NORMAL;     // 世界空间下法线\n                float3 worldPos: TEXCOORD0;     // 世界空间下顶点坐标\n                float3 worldRefr: TEXCOORD1;    // 折射向量\n                SHADOW_COORDS(2)                // 阴影坐标宏\n            };\n\n            v2f vert(appdata_base v)\n            {\n                v2f data;\n                data.pos = UnityObjectToClipPos(v.vertex);                      // 顶点坐标转裁剪坐标\n                data.worldNormal = UnityObjectToWorldNormal(v.normal);          // 顶点法线转世界法线\n                data.worldPos = mul(unity_ObjectToWorld, v.vertex).xyz;         // 顶点坐标转世界坐标\n                fixed3 worldViewDir = UnityWorldSpaceViewDir(data.worldPos);    // 世界空间下视角方向的计算\n                // 根据逆向的视角方向，法线向量，两个介质的折射率比值计算折射向量\n                data.worldRefr = refract(-normalize(worldViewDir), normalize(data.worldNormal), _RefractRatio);\n                TRANSFER_SHADOW(data)                                           // 阴影转换计算\n\n                return data;\n            }\n\n            fixed4 frag(v2f i): SV_TARGET\n            {\n                // 漫反射计算\n                fixed3 worldLightDir = normalize(UnityWorldSpaceLightDir(i.worldPos));\n                fixed3 diffuse = _LightColor0.rgb * _Color.rgb * max(0, dot(normalize(i.worldNormal), worldLightDir));\n                // 立方体纹理采样颜色计算\n                fixed3 cubemapColor = texCUBE(_Cube, i.worldRefr).rgb * _RefractColor.rgb;\n                // 计算光照衰减和阴影相关的衰减值\n                UNITY_LIGHT_ATTENUATION(atten, i, i.worldPos)\n                // 利用插值计算，在 漫反射颜色 和 反射颜色 之间进行插值，0和1就是极限状态，0代表没有反射效果，1代表只要反射效果，0~1就是两者的叠加\n                fixed3 color = UNITY_LIGHTMODEL_AMBIENT.rgb + lerp(diffuse, cubemapColor, _RefractAmount) * atten;\n                return fixed4(color, 1);\n            }\n\n            ENDCG\n        }\n    }\n  \n    Fallback \"Reflective/VertexLit\"\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		}
	]
}