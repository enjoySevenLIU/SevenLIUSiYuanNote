{"ID":"20241102133758-wvftu7z","Spec":"1","Type":"NodeDocument","Properties":{"id":"20241102133758-wvftu7z","title":"US3S2L7——世界空间下计算法线纹理贴图","type":"doc","updated":"20241102220146"},"Children":[{"ID":"20241102181351-rhku3o3","Type":"NodeBlockquote","Properties":{"id":"20241102181351-rhku3o3","updated":"20241102181353"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e"},{"ID":"20241102181353-0rvt8lb","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20241102181353-0rvt8lb","updated":"20241102181353"},"Children":[{"Type":"NodeText","Data":"关键知识点补充"}]},{"ID":"20241102181353-sgx6nx3","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20241102181353-sgx6nx3","updated":"20241102181353"},"Children":[{"ID":"20241102181353-kkljowq","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20241102181353-kkljowq","updated":"20241102181353"},"Children":[{"ID":"20241102181353-clkoz49","Type":"NodeParagraph","Properties":{"id":"20241102181353-clkoz49","updated":"20241102181353"},"Children":[{"Type":"NodeText","Data":"模型空间下的切线数据"}]},{"ID":"20241102181353-ddx55mb","Type":"NodeParagraph","Properties":{"id":"20241102181353-ddx55mb","updated":"20241102181353"},"Children":[{"Type":"NodeText","Data":"模型数据中的切线数据为 "},{"Type":"NodeTextMark","TextMarkType":"code block-ref","TextMarkBlockRefID":"20240616115341-vk5ysnu","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"float4"},{"Type":"NodeText","Data":"​ 类型的（四维向量），其中的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"w"},{"Type":"NodeText","Data":"​ 表示副切线的方向\n用法线和切线叉乘得到的副切线方向可能有两个（如下图的两个方向的灰色线），用切线数据中的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"w"},{"Type":"NodeText","Data":"​ 与之相乘确定副切线方向"}]},{"ID":"20241102181353-c9goyp0","Type":"NodeParagraph","Properties":{"id":"20241102181353-c9goyp0","updated":"20241102181353"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Properties":{"style":"width: 83px;"},"Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20241030132052-rumfkif.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"width: 83px;\"}"},{"Type":"NodeText","Data":"​"}]}]},{"ID":"20241102181353-vkzix0v","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20241102181353-vkzix0v","updated":"20241102181353"},"Children":[{"ID":"20241102181353-g63fc3e","Type":"NodeParagraph","Properties":{"id":"20241102181353-g63fc3e","updated":"20241102181353"},"Children":[{"Type":"NodeText","Data":"Unity 当中的法线纹理类型"}]},{"ID":"20241102181353-epwo35s","Type":"NodeSuperBlock","Properties":{"id":"20241102181353-epwo35s","updated":"20241102181353"},"Children":[{"Type":"NodeSuperBlockOpenMarker"},{"Type":"NodeSuperBlockLayoutMarker","Data":"col"},{"ID":"20241102181353-nhb1ge7","Type":"NodeParagraph","Properties":{"id":"20241102181353-nhb1ge7","updated":"20241102181353"},"Children":[{"Type":"NodeText","Data":"当我们把纹理类型设置为 "},{"Type":"NodeTextMark","TextMarkType":"block-ref","TextMarkBlockRefID":"20230727173123-cf430vt","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"Normal map"},{"Type":"NodeText","Data":"（法线贴图）时，\n我们可以使用Unity提供的内置函数 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"UnpackNormal"},{"Type":"NodeText","Data":"​ 来得到正确的法线方向。\n该函数内部不仅可以进行 "},{"Type":"NodeTextMark","TextMarkType":"inline-math","TextMarkInlineMathContent":"法线分量 = 像素分量 \\times 2 - 1"},{"Type":"NodeText","Data":"的逆运算，\n还会进行解压运算（Unity 会根据不同平台对法线纹理进行压缩）"}]},{"ID":"20241102181353-lfces71","Type":"NodeParagraph","Properties":{"id":"20241102181353-lfces71","updated":"20241102181353"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20241030132146-r99zcbn.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeSuperBlockCloseMarker"}]}]},{"ID":"20241102181353-fdhggzg","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"My4=","Num":3},"Properties":{"id":"20241102181353-fdhggzg","updated":"20241102181353"},"Children":[{"ID":"20241102181353-87mnduz","Type":"NodeParagraph","Properties":{"id":"20241102181353-87mnduz","updated":"20241102181353"},"Children":[{"Type":"NodeText","Data":"法线纹理属性命名一般为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"_BumpMap"},{"Type":"NodeText","Data":"​（凸块贴图），\n并声明一个我们还会声明一个名为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"_BumpScale"},{"Type":"NodeText","Data":"​（凸块缩放)）的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"float"},{"Type":"NodeText","Data":"​ 属性，它主要用于控制凹凸程度"}]},{"ID":"20241102181353-avm0mss","Type":"NodeParagraph","Properties":{"id":"20241102181353-avm0mss","updated":"20241102181353"},"Children":[{"Type":"NodeText","Data":"当它为 0 时，表示没有法线效果，法线的影响会被消除\n当它为 1 时，表示使用法线贴图中的原始法线信息，没有缩放\n我们可以根据实际需求调整它的值，来达到视觉上令人满意的效果"}]}]},{"ID":"20241102181353-4mdcryp","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"NC4=","Num":4},"Properties":{"id":"20241102181353-4mdcryp","updated":"20241102181353"},"Children":[{"ID":"20241102181353-rp18qep","Type":"NodeParagraph","Properties":{"id":"20241102181353-rp18qep","updated":"20241102181353"},"Children":[{"Type":"NodeText","Data":"如果使用的凹凸纹理不是法线纹理，而是高度纹理"}]},{"ID":"20241102181353-mwj9fcr","Type":"NodeParagraph","Properties":{"id":"20241102181353-mwj9fcr","updated":"20241102181353"},"Children":[{"Type":"NodeText","Data":"我们需要进行如下设置："}]},{"ID":"20241102181353-1r71048","Type":"NodeParagraph","Properties":{"id":"20241102181353-1r71048","updated":"20241102181353"},"Children":[{"Type":"NodeText","Data":"图片类型设置为 "},{"Type":"NodeTextMark","TextMarkType":"block-ref","TextMarkBlockRefID":"20230727173123-cf430vt","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"Normal map"},{"Type":"NodeText","Data":"（法线贴图）并勾选 Create from Grayscale（从灰度创建）\n这样我们就可以把高度纹理当成切线空间下的法线纹理处理了"}]},{"ID":"20241102181353-smr8mr4","Type":"NodeParagraph","Properties":{"id":"20241102181353-smr8mr4","updated":"20241102181353"},"Children":[{"Type":"NodeText","Data":"多出的参数分别为："}]},{"ID":"20241102181353-98wh5xg","Type":"NodeSuperBlock","Properties":{"id":"20241102181353-98wh5xg","updated":"20241102181353"},"Children":[{"Type":"NodeSuperBlockOpenMarker"},{"Type":"NodeSuperBlockLayoutMarker","Data":"col"},{"ID":"20241102181353-7c8s0zr","Type":"NodeParagraph","Properties":{"id":"20241102181353-7c8s0zr","updated":"20241102181353"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20241030132905-ecpo0so.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20241102181353-6jl2pf5","Type":"NodeList","ListData":{},"Properties":{"id":"20241102181353-6jl2pf5","updated":"20241102181353"},"Children":[{"ID":"20241102181353-7gsvfiz","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20241102181353-7gsvfiz","updated":"20241102181353"},"Children":[{"ID":"20241102181353-wq04aqp","Type":"NodeParagraph","Properties":{"id":"20241102181353-wq04aqp","updated":"20241102181353"},"Children":[{"Type":"NodeText","Data":"Bumpiness（颠簸值）：控制凹凸程度"}]}]},{"ID":"20241102181353-w94unwg","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20241102181353-w94unwg","updated":"20241102181353"},"Children":[{"ID":"20241102181353-6iyu2gj","Type":"NodeParagraph","Properties":{"id":"20241102181353-6iyu2gj","updated":"20241102181353"},"Children":[{"Type":"NodeText","Data":"Filtering（过滤模式）：决定凹凸程度的算法"}]},{"ID":"20241102181353-phrb1qe","Type":"NodeParagraph","Properties":{"id":"20241102181353-phrb1qe","updated":"20241102181353"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20241030133228-h53ar1l.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20241102181353-sej1ipw","Type":"NodeList","ListData":{},"Properties":{"id":"20241102181353-sej1ipw","updated":"20241102181353"},"Children":[{"ID":"20241102181353-4i201x5","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20241102181353-4i201x5","updated":"20241102181353"},"Children":[{"ID":"20241102181353-yli7uyb","Type":"NodeParagraph","Properties":{"id":"20241102181353-yli7uyb","updated":"20241102181353"},"Children":[{"Type":"NodeText","Data":"Sharp：滤波生成法线"}]}]},{"ID":"20241102181353-4c4gfj0","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20241102181353-4c4gfj0","updated":"20241102181353"},"Children":[{"ID":"20241102181353-1zh9nem","Type":"NodeParagraph","Properties":{"id":"20241102181353-1zh9nem","updated":"20241102181353"},"Children":[{"Type":"NodeText","Data":"Smooth：平滑的生成法线"}]}]}]}]}]},{"Type":"NodeSuperBlockCloseMarker"}]}]}]}]},{"ID":"20241102133758-pe2hlx8","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20241102133758-pe2hlx8","updated":"20241102181708"},"Children":[{"Type":"NodeText","Data":"在世界空间下计算实现法线纹理Shader"}]},{"ID":"20241102180725-q97nkme","Type":"NodeParagraph","Properties":{"id":"20241102180725-q97nkme","updated":"20241102180740"},"Children":[{"Type":"NodeText","Data":"主要思路："}]},{"ID":"20241102180740-wibrdsh","Type":"NodeList","ListData":{},"Properties":{"id":"20241102180740-wibrdsh","updated":"20241102180740"},"Children":[{"ID":"20241102180740-ax2d3hx","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20241102180740-ax2d3hx","updated":"20241102180740"},"Children":[{"ID":"20241102180740-nq47vsi","Type":"NodeParagraph","Properties":{"id":"20241102180740-nq47vsi","updated":"20241102180740"},"Children":[{"Type":"NodeText","Data":"在顶点着色器中计算切线空间到世界空间的变换矩阵\n"}]}]},{"ID":"20241102180740-bbi5lzm","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20241102180740-bbi5lzm","updated":"20241102180740"},"Children":[{"ID":"20241102180740-r09aums","Type":"NodeParagraph","Properties":{"id":"20241102180740-r09aums","updated":"20241102180740"},"Children":[{"Type":"NodeText","Data":"在片元着色器中进行法线采样转换"}]}]}]},{"ID":"20241102181708-t7mzq42","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20241102181708-t7mzq42","updated":"20241102181708"},"Children":[{"Type":"NodeText","Data":"Shader 属性相关"}]},{"ID":"20241102181715-o9i3t5u","Type":"NodeParagraph","Properties":{"id":"20241102181715-o9i3t5u","updated":"20241102181747"},"Children":[{"Type":"NodeText","Data":"和 "},{"Type":"NodeTextMark","TextMarkType":"block-ref","TextMarkBlockRefID":"20241031103227-dkxubmy","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"切线空间下计算法线纹理贴图"},{"Type":"NodeText","Data":" 的属性一致"}]},{"ID":"20241102181755-5p8fv67","Type":"NodeSuperBlock","Properties":{"id":"20241102181755-5p8fv67","updated":"20241102181755"},"Children":[{"Type":"NodeSuperBlockOpenMarker"},{"Type":"NodeSuperBlockLayoutMarker","Data":"col"},{"ID":"20241102181755-nihm67e","Type":"NodeList","ListData":{},"Properties":{"id":"20241102181755-nihm67e","style":"width: 33%; flex: 0 0 auto;","updated":"20241102181755"},"Children":[{"ID":"20241102181755-ziw9qx1","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20241102181755-ziw9qx1","updated":"20241102181755"},"Children":[{"ID":"20241102181755-0zrre2q","Type":"NodeParagraph","Properties":{"id":"20241102181755-0zrre2q","updated":"20241102181755"},"Children":[{"Type":"NodeText","Data":"漫反射颜色"}]}]},{"ID":"20241102181755-lhpcxur","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20241102181755-lhpcxur","updated":"20241102181755"},"Children":[{"ID":"20241102181755-xw028t4","Type":"NodeParagraph","Properties":{"id":"20241102181755-xw028t4","updated":"20241102181755"},"Children":[{"Type":"NodeText","Data":"单张纹理"}]}]},{"ID":"20241102181755-u93d0y7","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20241102181755-u93d0y7","updated":"20241102181755"},"Children":[{"ID":"20241102181755-uqyu62e","Type":"NodeParagraph","Properties":{"id":"20241102181755-uqyu62e","updated":"20241102181755"},"Children":[{"Type":"NodeText","Data":"法线纹理"}]}]},{"ID":"20241102181755-46fu222","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20241102181755-46fu222","updated":"20241102181755"},"Children":[{"ID":"20241102181755-1g6s65y","Type":"NodeParagraph","Properties":{"id":"20241102181755-1g6s65y","updated":"20241102181755"},"Children":[{"Type":"NodeText","Data":"凹凸程度（一般使用 0"},{"Type":"NodeBackslash","Data":"span","Children":[{"Type":"NodeText","Data":"~"}]},{"Type":"NodeText","Data":"1 即可）"}]}]},{"ID":"20241102181755-8fpa611","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20241102181755-8fpa611","updated":"20241102181755"},"Children":[{"ID":"20241102181755-mi7lonp","Type":"NodeParagraph","Properties":{"id":"20241102181755-mi7lonp","updated":"20241102181755"},"Children":[{"Type":"NodeText","Data":"高光反射颜色"}]}]},{"ID":"20241102181755-p4te55q","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20241102181755-p4te55q","updated":"20241102181755"},"Children":[{"ID":"20241102181755-mivrjat","Type":"NodeParagraph","Properties":{"id":"20241102181755-mivrjat","updated":"20241102181755"},"Children":[{"Type":"NodeText","Data":"光泽度"}]}]}]},{"ID":"20241102181755-ruk453d","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20241102181755-ruk453d","style":"line-height: 22px;","updated":"20241102181755"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yw=="},{"Type":"NodeCodeBlockCode","Data":"Properties\n{\n    _MainColor(\"MainColor\", Color) = (1, 1, 1, 1)\t\t\t//漫反射颜色\n    _MainTex(\"MainTex\", 2D) = \"\"{}\t\t\t\t\t\t\t//主要纹理贴图\n    _BumpMap(\"BumpMap\", 2D) = \"\"{}\t\t\t\t\t\t\t//凹凸纹理贴图\n    _BumpScale(\"BumpScale\", Range(0, 1)) = 1\t\t\t\t//凹凸程度\n    _SpecularColor(\"SpecularColor\", Color) = (1, 1, 1, 1)\t//高光反射颜色\n    _SpecularNum(\"SpecularNum\", Range(0, 20)) = 18\t\t\t//光泽度\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"Type":"NodeSuperBlockCloseMarker"}]},{"ID":"20241102181805-qo5ctuk","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20241102181805-qo5ctuk","updated":"20241102182530"},"Children":[{"Type":"NodeText","Data":"结构体相关"}]},{"ID":"20241102181945-ytjhonw","Type":"NodeList","ListData":{},"Properties":{"id":"20241102181945-ytjhonw","updated":"20241102182528"},"Children":[{"ID":"20241102181945-gf6vtg4","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20241102181945-gf6vtg4","updated":"20241102182004"},"Children":[{"ID":"20241102181945-xfr2obi","Type":"NodeParagraph","Properties":{"id":"20241102181945-xfr2obi","updated":"20241102181945"},"Children":[{"Type":"NodeText","Data":"传入顶点着色器的结构体"}]},{"ID":"20241102181945-3i6fj4t","Type":"NodeParagraph","Properties":{"id":"20241102181945-3i6fj4t","updated":"20241102181945"},"Children":[{"Type":"NodeText","Data":"可以直接使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"UnityCG.cginc"},{"Type":"NodeText","Data":"​ 中的 "},{"Type":"NodeTextMark","TextMarkType":"code block-ref","TextMarkBlockRefID":"20240616182612-1w0c0lf","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"appdata_full"},{"Type":"NodeText","Data":"​\n其中包含了我们需要的顶点、法线、切线、纹理坐标相关数据"}]},{"ID":"20241102181945-7f22qfi","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20241102181945-7f22qfi","style":"line-height: 22px;","updated":"20241102182004"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yw=="},{"Type":"NodeCodeBlockCode","Data":"// UnityCG.cginc内定义，无需自己再定义\nstruct appdata_full {\n    float4 vertex : POSITION;\t\t//模型空间中的顶点位置\n    float4 tangent : TANGENT;\t\t//顶点切线\n    float3 normal : NORMAL;\t\t\t//顶点法线\n    float4 texcoord : TEXCOORD0;\t//第一组纹理坐标\n    // ...\n};\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]},{"ID":"20241102181945-b13aev5","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20241102181945-b13aev5","updated":"20241102182528"},"Children":[{"ID":"20241102181945-evpdmjp","Type":"NodeParagraph","Properties":{"id":"20241102181945-evpdmjp","updated":"20241102181945"},"Children":[{"Type":"NodeText","Data":"传入片元着色器的结构体"}]},{"ID":"20241102181945-ssa2a0s","Type":"NodeParagraph","Properties":{"id":"20241102181945-ssa2a0s","updated":"20241102182515"},"Children":[{"Type":"NodeText","Data":"自定义结构体，其中包含 裁剪空间下坐标、主纹理和法线纹理的uv坐标、世界空间下顶点位置、切线空间转换到世界空间的变换矩阵"}]},{"ID":"20241102181945-mf6poss","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20241102181945-mf6poss","style":"line-height: 22px;","updated":"20241102182528"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yw=="},{"Type":"NodeCodeBlockCode","Data":"struct v2f\n{\n    float4 pos: SV_POSITION;\n    float4 uv: TEXCOORD0;           // 使用float4同时存储主要纹理的uv（xy存储）和法线纹理的uv（zw存储）\n    float3 worldPos: TEXCOORD1;     // 顶点相对于世界坐标的位置，用于之后的视角方向的计算\n    float3x3 rotation: TEXCOORD2;   // 切线空间到世界空间的变换矩阵\n};\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}]},{"ID":"20241102182848-xbxz5f2","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20241102182848-xbxz5f2","updated":"20241102192636"},"Children":[{"Type":"NodeText","Data":"顶点着色器回调函数内容"}]},{"ID":"20241102182859-ple0tpv","Type":"NodeParagraph","Properties":{"id":"20241102182859-ple0tpv","updated":"20241102182902"},"Children":[{"Type":"NodeText","Data":"执行步骤："}]},{"ID":"20241102182902-fnq507d","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20241102182902-fnq507d","updated":"20241102183012"},"Children":[{"ID":"20241102182920-dyd1w1j","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20241102182920-dyd1w1j","updated":"20241102182920"},"Children":[{"ID":"20241102182920-il7o923","Type":"NodeParagraph","Properties":{"id":"20241102182920-il7o923","updated":"20241102182920"},"Children":[{"Type":"NodeText","Data":"顶点坐标模型转裁剪"}]}]},{"ID":"20241102182920-120eaj8","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20241102182920-120eaj8","updated":"20241102182920"},"Children":[{"ID":"20241102182920-3672psk","Type":"NodeParagraph","Properties":{"id":"20241102182920-3672psk","updated":"20241102182920"},"Children":[{"Type":"NodeText","Data":"单张纹理和法线纹理 UV坐标缩放偏移计算"}]}]},{"ID":"20241102182920-ap2ooe0","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"My4=","Num":3},"Properties":{"id":"20241102182920-ap2ooe0","updated":"20241102184016"},"Children":[{"ID":"20241102182920-9n5ejsk","Type":"NodeParagraph","Properties":{"id":"20241102182920-9n5ejsk","updated":"20241102184016"},"Children":[{"Type":"NodeText","Data":"模型空间下顶点转换到世界空间下，使用 "},{"Type":"NodeTextMark","TextMarkType":"code block-ref","TextMarkBlockRefID":"20241102183255-iuz3c2u","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"unity_ObjectToWorld"},{"Type":"NodeText","Data":"​ 矩阵转换（之后在片元着色器中用于计算视角方向）"}]}]},{"ID":"20241102183036-7npzf0d","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"NC4=","Num":4},"Properties":{"id":"20241102183036-7npzf0d","updated":"20241102184038"},"Children":[{"ID":"20241102183036-pj3865y","Type":"NodeParagraph","Properties":{"id":"20241102183036-pj3865y","updated":"20241102184038"},"Children":[{"Type":"NodeText","Data":"使用 "},{"Type":"NodeTextMark","TextMarkType":"code block-ref","TextMarkBlockRefID":"20240707141901-fqtg25n","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"UnityObjectToWorldNormal"},{"Type":"NodeText","Data":"​ 和 "},{"Type":"NodeTextMark","TextMarkType":"code block-ref","TextMarkBlockRefID":"20240707141901-pv2zwrx","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"UnityObjectToWorldDir"},{"Type":"NodeText","Data":"​ 将模型空间下的法线、切线转换到世界空间下"}]}]},{"ID":"20241102182920-19v8heq","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"NS4=","Num":5},"Properties":{"id":"20241102182920-19v8heq","updated":"20241102183800"},"Children":[{"ID":"20241102182920-ip01bem","Type":"NodeParagraph","Properties":{"id":"20241102182920-ip01bem","updated":"20241102183800"},"Children":[{"Type":"NodeText","Data":"计算世界空间下的副切线"}]},{"ID":"20241102183015-emwhm1j","Type":"NodeParagraph","Properties":{"id":"20241102183015-emwhm1j","updated":"20241102183031"},"Children":[{"Type":"NodeText","Data":"用世界空间下的法线和切线进行叉乘，再乘以切线中的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"w"},{"Type":"NodeText","Data":"​（确定副切线方向）"}]}]},{"ID":"20241102182920-iapjj9v","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Ni4=","Num":6},"Properties":{"id":"20241102182920-iapjj9v","updated":"20241102183012"},"Children":[{"ID":"20241102182920-zc2ajae","Type":"NodeParagraph","Properties":{"id":"20241102182920-zc2ajae","updated":"20241102182924"},"Children":[{"Type":"NodeText","Data":"构建模型空间到切线空间的变换矩阵\n"}]},{"ID":"20241102182944-xo7yem9","Type":"NodeParagraph","Properties":{"id":"20241102182944-xo7yem9","updated":"20241102183012"},"Children":[{"Type":"NodeTextMark","TextMarkType":"inline-math","TextMarkInlineMathContent":"\\begin{pmatrix} _esc_newline_  | \u0026 | \u0026 | \\\\_esc_newline_  切线 \u0026 副切线 \u0026 法线 \\\\_esc_newline_  | \u0026 | \u0026 | \\\\_esc_newline_\\end{pmatrix}"},{"Type":"NodeText","Data":"​"}]}]}]},{"ID":"20241102184643-y1bb4qm","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20241102184643-y1bb4qm","style":"line-height: 22px;","updated":"20241102192636"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yw=="},{"Type":"NodeCodeBlockCode","Data":"// 注：appdata_full不需要自定义，#include \"UnityCG.cginc\"即可使用，这里仅用于展示其成员\nstruct appdata_full {\n    float4 vertex : POSITION;\t\t//模型空间中的顶点位置\n    float4 tangent : TANGENT;\t\t//顶点切线\n    float3 normal : NORMAL;\t\t\t//顶点法线\n    float4 texcoord : TEXCOORD0;\t//第一组纹理坐标\n    //...\n};\n\nstruct v2f\n{\n    float4 pos: SV_POSITION;\n    float4 uv: TEXCOORD0;           // 使用float4同时存储主要纹理的uv（xy存储）和法线纹理的uv（zw存储）\n    float3 worldPos: TEXCOORD1;     // 顶点相对于世界坐标的位置，用于之后的视角方向的计算\n    float3x3 rotation: TEXCOORD2;   // 切线空间到世界空间的变换矩阵\n};\n\nfloat4 _MainTex_ST;     //颜色纹理的缩放和平移\nfloat4 _BumpMap_ST;     //法线纹理的缩放和平移\n\nv2f vert (appdata_full v)\n{\n    v2f data;\n  \n    data.pos = UnityObjectToClipPos(v.vertex);  //计算裁剪空间下顶点坐标\n    // 分别计算主纹理和法线纹理的缩放平移\n    data.uv.xy = v.texcoord.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    data.uv.zw = v.texcoord.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n    // 得到世界空间下的顶点位置，用于之后在片元中计算视角方向（基于世界空间下）\n    data.worldPos = mul(unity_ObjectToWorld, v.vertex);\n  \n    // 将模型空间下的法线、切线转换到世界空间下，并计算世界空间下的副切线\n    float3 worldNormal = UnityObjectToWorldNormal(v.normal);\n    float3 worldTangent = UnityObjectToWorldDir(v.tangent);\n    float3 worldBinormal = cross(normalize(worldTangent), normalize(worldNormal)) * v.tangent.w;\n    // 构建模型空间到世界空间的变换矩阵\n    data.rotation = float3x3(\n        worldTangent.x, worldBinormal.x, worldNormal.x,\n        worldTangent.y, worldBinormal.y, worldNormal.y,\n        worldTangent.z, worldBinormal.z, worldNormal.z\n    );\n\n    return data;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20241102184753-l5wx125","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20241102184753-l5wx125","updated":"20241102192833"},"Children":[{"Type":"NodeText","Data":"片元着色器回调函数内容"}]},{"ID":"20241102184753-m9ctfk2","Type":"NodeParagraph","Properties":{"id":"20241102184753-m9ctfk2","updated":"20241102184753"},"Children":[{"Type":"NodeText","Data":"执行步骤："}]},{"ID":"20241102184807-hbqbcf2","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20241102184807-hbqbcf2","updated":"20241102192726"},"Children":[{"ID":"20241102184827-25nnbey","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20241102184827-25nnbey","updated":"20241102185240"},"Children":[{"ID":"20241102184827-on1owa2","Type":"NodeParagraph","Properties":{"id":"20241102184827-on1owa2","updated":"20241102185240"},"Children":[{"Type":"NodeText","Data":"通过 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"_WorldSpaceLightPos0"},{"Type":"NodeText","Data":"​ 计算世界空间下光的方向，通过 "},{"Type":"NodeTextMark","TextMarkType":"code block-ref","TextMarkBlockRefID":"20240707141901-jolyolh","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"UnityWorldSpaceViewDir"},{"Type":"NodeText","Data":"​ 世界空间下的视角方向"}]}]},{"ID":"20241102184827-n4qsx2f","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20241102184827-n4qsx2f","updated":"20241102184953"},"Children":[{"ID":"20241102184827-u7fiz5j","Type":"NodeParagraph","Properties":{"id":"20241102184827-u7fiz5j","updated":"20241102184953"},"Children":[{"Type":"NodeText","Data":"取出法线贴图中的法线信息（利用纹理采样函数 "},{"Type":"NodeTextMark","TextMarkType":"code block-ref","TextMarkBlockRefID":"20240616175909-rwnovje","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"tex2D"},{"Type":"NodeText","Data":"​）"}]}]},{"ID":"20241102184827-2kenb5h","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"My4=","Num":3},"Properties":{"id":"20241102184827-2kenb5h","updated":"20241102184937"},"Children":[{"ID":"20241102184827-xzwa4uf","Type":"NodeParagraph","Properties":{"id":"20241102184827-xzwa4uf","updated":"20241102184937"},"Children":[{"Type":"NodeText","Data":"利用内置的 "},{"Type":"NodeTextMark","TextMarkType":"code block-ref","TextMarkBlockRefID":"20241102181425-2sro4b5","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"UnpackNormal"},{"Type":"NodeText","Data":"​ 函数对法线信息进行逆运算以及可能的解压"}]}]},{"ID":"20241102184827-zrnl3f9","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"NC4=","Num":4},"Properties":{"id":"20241102184827-zrnl3f9","updated":"20241102185328"},"Children":[{"ID":"20241102184827-6waxppt","Type":"NodeParagraph","Properties":{"id":"20241102184827-6waxppt","updated":"20241102185328"},"Children":[{"Type":"NodeText","Data":"用得到的切线空间的法线数据 乘以 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"BumpScale"},{"Type":"NodeText","Data":"​ 来控制凹凸程度"}]}]},{"ID":"20241102184827-exgqimf","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"NS4=","Num":5},"Properties":{"id":"20241102184827-exgqimf","updated":"20241102184827"},"Children":[{"ID":"20241102184827-bvezdkx","Type":"NodeParagraph","Properties":{"id":"20241102184827-bvezdkx","updated":"20241102184827"},"Children":[{"Type":"NodeText","Data":"将计算完毕后的切线空间下的法线转换到世界空间下"}]}]},{"ID":"20241102184827-b1t8bbc","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Ni4=","Num":6},"Properties":{"id":"20241102184827-b1t8bbc","updated":"20241102184827"},"Children":[{"ID":"20241102184827-znu68or","Type":"NodeParagraph","Properties":{"id":"20241102184827-znu68or","updated":"20241102184827"},"Children":[{"Type":"NodeText","Data":"得到单张纹理颜色和漫反射颜色的叠加颜色"}]}]},{"ID":"20241102184827-8iqsafz","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Ny4=","Num":7},"Properties":{"id":"20241102184827-8iqsafz","updated":"20241102192726"},"Children":[{"ID":"20241102184827-nvv6qfp","Type":"NodeParagraph","Properties":{"id":"20241102184827-nvv6qfp","updated":"20241102192726"},"Children":[{"Type":"NodeText","Data":"用世界空间下的 光方向、视角方向、法线方向 进行BlinnPhong光照模型计算"}]}]}]},{"ID":"20241102184802-ij6owjs","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20241102184802-ij6owjs","style":"line-height: 22px;","updated":"20241102192706"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yw=="},{"Type":"NodeCodeBlockCode","Data":"struct v2f\n{\n    float4 pos: SV_POSITION;\n    float4 uv: TEXCOORD0;           // 使用float4同时存储主要纹理的uv（xy存储）和法线纹理的uv（zw存储）\n    float3 worldPos: TEXCOORD1;     // 顶点相对于世界坐标的位置，用于之后的视角方向的计算\n    float3x3 rotation: TEXCOORD2;   // 切线空间到世界空间的变换矩阵\n};\n\nfloat4 _MainColor;      //漫反射颜色\nsampler2D _MainTex;     //颜色纹理\nsampler2D _BumpMap;     //法线纹理\nfloat _BumpScale;       //凹凸程度\nfloat4 _SpecularColor;  //高光颜色\nfixed _SpecularNum;     //光泽度\n\nfixed4 frag (v2f i) : SV_Target\n{\n    // 计算世界空间下光的方向和视角方向\n    fixed3 lightDir = normalize(_WorldSpaceLightPos0.xyz);\n    fixed3 viewDir = normalize(UnityWorldSpaceViewDir(i.worldPos));\n    // 通过法线纹理采样并解压缩，再乘以凹凸系数，得到切线空间下法线数据\n    float4 packedNormal = tex2D(_BumpMap, i.uv.zw);\n    float3 tangentNormal = UnpackNormal(packedNormal);\n    tangentNormal *= _BumpScale;\n    // 将切线空间下法线数据转换到世界空间下\n    float3 worldNormal = mul(i.rotation, tangentNormal);\n\n    // 根据以上数据计算光照模型颜色\n    fixed3 albedo = tex2D(_MainTex, i.uv.xy) * _MainColor.rgb;  //反射率\n    // 漫反射光照计算：这里需要使用已经计算完毕的切线数据和光照方向\n    fixed3 lambertColor = _LightColor0.rgb * albedo.rgb * max(0, dot(worldNormal, lightDir));\n    // 高光反射光照计算：这里需要使用已经计算完毕的切线数据和光照方向\n    float3 halfA = normalize(viewDir + lightDir);               //半角向量\n    fixed3 specularColor = _LightColor0.rgb * _SpecularColor.rgb * pow(max(0, dot(worldNormal, halfA)), _SpecularNum);\n    // 最终颜色\n    fixed3 color = UNITY_LIGHTMODEL_AMBIENT.rgb * albedo + lambertColor + specularColor;\n\n    return fixed4(color.rgb, 1);\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20241102192833-6fknikc","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20241102192833-6fknikc","updated":"20241102210526"},"Children":[{"Type":"NodeText","Data":"代码示例"}]},{"ID":"20241102192833-zub1myy","Type":"NodeParagraph","Properties":{"id":"20241102192833-zub1myy","updated":"20241102192833"},"Children":[{"Type":"NodeText","Data":"完整 Shader 代码如下："}]},{"ID":"20241102192838-mmie8hq","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20241102192838-mmie8hq","style":"line-height: 22px;","updated":"20241102192853"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yw=="},{"Type":"NodeCodeBlockCode","Data":"Shader \"TeachShader/Lesson52\"\n{\n    Properties\n    {\n        _MainColor(\"MainColor\", Color) = (1, 1, 1, 1)\n        _MainTex(\"MainTex\", 2D) = \"\"{}\n        _BumpMap(\"BumpMap\", 2D) = \"\"{}\n        _BumpScale(\"BumpScale\", Range(0, 1)) = 1\n        _SpecularColor(\"SpecularColor\", Color) = (1, 1, 1, 1)\n        _SpecularNum(\"SpecularNum\", Range(0, 20)) = 18\n    }\n    SubShader\n    {\n        Pass\n        {\n            Tags { \"LightMode\" = \"ForwardBase\" }\n\n            CGPROGRAM\n            #pragma vertex vert\n            #pragma fragment frag\n\n            #include \"UnityCG.cginc\"\n            #include \"Lighting.cginc\"\n\n            struct v2f\n            {\n                float4 pos: SV_POSITION;\n                float4 uv: TEXCOORD0;           // 使用float4同时存储主要纹理的uv（xy存储）和法线纹理的uv（zw存储）\n                float3 worldPos: TEXCOORD1;     // 顶点相对于世界坐标的位置，用于之后的视角方向的计算\n                float3x3 rotation: TEXCOORD2;   // 切线空间到世界空间的变换矩阵\n            };\n\n            float4 _MainColor;      //漫反射颜色\n            sampler2D _MainTex;     //颜色纹理\n            float4 _MainTex_ST;     //颜色纹理的缩放和平移\n            sampler2D _BumpMap;     //法线纹理\n            float4 _BumpMap_ST;     //法线纹理的缩放和平移\n            float _BumpScale;       //凹凸程度\n            float4 _SpecularColor;  //高光颜色\n            fixed _SpecularNum;     //光泽度\n\n            v2f vert (appdata_full v)\n            {\n                v2f data;\n            \n                data.pos = UnityObjectToClipPos(v.vertex);  //计算裁剪空间下顶点坐标\n                // 分别计算主纹理和法线纹理的缩放平移\n                data.uv.xy = v.texcoord.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n                data.uv.zw = v.texcoord.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n                // 得到世界空间下的顶点位置，用于之后在片元中计算视角方向（基于世界空间下）\n                data.worldPos = mul(unity_ObjectToWorld, v.vertex);\n            \n                // 将模型空间下的法线、切线转换到世界空间下，并计算世界空间下的副切线\n                float3 worldNormal = UnityObjectToWorldNormal(v.normal);\n                float3 worldTangent = UnityObjectToWorldDir(v.tangent);\n                float3 worldBinormal = cross(normalize(worldTangent), normalize(worldNormal)) * v.tangent.w;\n                // 构建模型空间到世界空间的变换矩阵\n                data.rotation = float3x3(\n                    worldTangent.x, worldBinormal.x, worldNormal.x,\n                    worldTangent.y, worldBinormal.y, worldNormal.y,\n                    worldTangent.z, worldBinormal.z, worldNormal.z\n                );\n\n                return data;\n            }\n\n            fixed4 frag (v2f i) : SV_Target\n            {\n                // 计算世界空间下光的方向和视角方向\n                fixed3 lightDir = normalize(_WorldSpaceLightPos0.xyz);\n                fixed3 viewDir = normalize(UnityWorldSpaceViewDir(i.worldPos));\n                // 通过法线纹理采样并解压缩，再乘以凹凸系数，得到切线空间下法线数据\n                float4 packedNormal = tex2D(_BumpMap, i.uv.zw);\n                float3 tangentNormal = UnpackNormal(packedNormal);\n                tangentNormal *= _BumpScale;\n                // 将切线空间下法线数据转换到世界空间下\n                float3 worldNormal = mul(i.rotation, tangentNormal);\n\n                // 根据以上数据计算光照模型颜色\n                fixed3 albedo = tex2D(_MainTex, i.uv.xy) * _MainColor.rgb;  //反射率\n                // 漫反射光照计算：这里需要使用已经计算完毕的切线数据和光照方向\n                fixed3 lambertColor = _LightColor0.rgb * albedo.rgb * max(0, dot(worldNormal, lightDir));\n                // 高光反射光照计算：这里需要使用已经计算完毕的切线数据和光照方向\n                float3 halfA = normalize(viewDir + lightDir);               //半角向量\n                fixed3 specularColor = _LightColor0.rgb * _SpecularColor.rgb * pow(max(0, dot(worldNormal, halfA)), _SpecularNum);\n                // 最终颜色\n                fixed3 color = UNITY_LIGHTMODEL_AMBIENT.rgb * albedo + lambertColor + specularColor;\n\n                return fixed4(color.rgb, 1);\n            }\n            ENDCG\n        }\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20241102192854-qmccmdo","Type":"NodeParagraph","Properties":{"id":"20241102192854-qmccmdo","updated":"20241102193047"},"Children":[{"Type":"NodeText","Data":"显示效果（左图为不使用法线贴图的方块，右下切线空间下计算法线贴图的方块，右上世界空间下计算法线贴图的方块）："}]},{"ID":"20241102193014-vpjgwkq","Type":"NodeParagraph","Properties":{"id":"20241102193014-vpjgwkq","updated":"20241102193014"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20241102193014-4abctpi.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20241102204807-c2pwsdd","Type":"NodeBlockquote","Properties":{"id":"20241102204807-c2pwsdd","updated":"20241102204432"},"Children":[{"ID":"20241102193110-0r3l25a","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20241102193110-0r3l25a","updated":"20241102204432"},"Children":[{"Type":"NodeText","Data":"关于光照方向的计算方式"}]},{"ID":"20241102204321-cgllm2k","Type":"NodeParagraph","Properties":{"id":"20241102204321-cgllm2k","updated":"20241102204808"},"Children":[{"Type":"NodeText","Data":"计算光照存在两种方式："}]},{"ID":"20241102204356-enbkc3s","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20241102204356-enbkc3s","updated":"20241102204432"},"Children":[{"ID":"20241102204401-3k7563l","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20241102204401-3k7563l","updated":"20241102204401"},"Children":[{"ID":"20241102204401-ul59zvr","Type":"NodeParagraph","Properties":{"id":"20241102204401-ul59zvr","updated":"20241102204406"},"Children":[{"Type":"NodeText","Data":"模拟定向光源\n"}]},{"ID":"20241102204411-ipp85kw","Type":"NodeParagraph","Properties":{"id":"20241102204411-ipp85kw","updated":"20241102204418"},"Children":[{"Type":"NodeText","Data":"直接得到 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"_WorldSpaceLightPos0"},{"Type":"NodeText","Data":"​ 光照位置 作为光照方向，\n表示光线是平行的，而不是从特定点发射\n一般模拟太阳光效果 采用这种方式"}]}]},{"ID":"20241102204401-gdhvrz2","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20241102204401-gdhvrz2","updated":"20241102204432"},"Children":[{"ID":"20241102204401-90glyrl","Type":"NodeParagraph","Properties":{"id":"20241102204401-90glyrl","updated":"20241102204401"},"Children":[{"Type":"NodeText","Data":"模拟点光源\n"}]},{"ID":"20241102204420-sj86no5","Type":"NodeParagraph","Properties":{"id":"20241102204420-sj86no5","updated":"20241102204432"},"Children":[{"Type":"NodeText","Data":"用光照位置 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"_WorldSpaceLightPos0"},{"Type":"NodeText","Data":"​ 减去 顶点坐标，\n表示光线是从特定点发射的，并朝着顶点方向\n一般定点光源 采用这种方式"}]}]}]},{"Type":"NodeBlockquoteMarker","Data":"\u003e"}]},{"ID":"20241102205118-oc42629","Type":"NodeParagraph","Properties":{"id":"20241102205118-oc42629","updated":"20241102205846"},"Children":[{"Type":"NodeText","Data":"第二种光照方向代码类似于："}]},{"ID":"20241102205815-womxah9","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20241102205815-womxah9","style":"line-height: 22px;","updated":"20241102205915"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yw=="},{"Type":"NodeCodeBlockCode","Data":"fixed4 frag (v2f i) : SV_Target\n{\n    // 计算世界空间下光的方向和视角方向\n    fixed3 lightDir = normalize(_WorldSpaceLightPos0.xyz - i.worldPos);\t\t//这里得到的光源方向就是类似于点光源的\n    fixed3 viewDir = normalize(UnityWorldSpaceViewDir(i.worldPos));\n    // 通过法线纹理采样并解压缩，再乘以凹凸系数，得到切线空间下法线数据\n    float4 packedNormal = tex2D(_BumpMap, i.uv.zw);\n    float3 tangentNormal = UnpackNormal(packedNormal);\n    tangentNormal *= _BumpScale;\n    // 将切线空间下法线数据转换到世界空间下\n    float3 worldNormal = mul(i.rotation, tangentNormal);\n\n    // 根据以上数据计算光照模型颜色\n    fixed3 albedo = tex2D(_MainTex, i.uv.xy) * _MainColor.rgb;  //反射率\n    // 漫反射光照计算：这里需要使用已经计算完毕的切线数据和光照方向\n    fixed3 lambertColor = _LightColor0.rgb * albedo.rgb * max(0, dot(worldNormal, lightDir));\n    // 高光反射光照计算：这里需要使用已经计算完毕的切线数据和光照方向\n    float3 halfA = normalize(viewDir + lightDir);               //半角向量\n    fixed3 specularColor = _LightColor0.rgb * _SpecularColor.rgb * pow(max(0, dot(worldNormal, halfA)), _SpecularNum);\n    // 最终颜色\n    fixed3 color = UNITY_LIGHTMODEL_AMBIENT.rgb * albedo + lambertColor + specularColor;\n\n    return fixed4(color.rgb, 1);\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20241102205919-1d7y8uh","Type":"NodeParagraph","Properties":{"id":"20241102205919-1d7y8uh","updated":"20241102205956"},"Children":[{"Type":"NodeText","Data":"效果对比（左为使用平行光源方向的方块，右为使用点光源方向的方块）："}]},{"ID":"20241102210134-oql0wi9","Type":"NodeParagraph","Properties":{"id":"20241102210134-oql0wi9","updated":"20241102210134"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20241102210134-a3xk5qk.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20241102210135-by1r5ky","Type":"NodeParagraph","Properties":{"id":"20241102210135-by1r5ky","updated":"20241102210526"},"Children":[{"Type":"NodeText","Data":"可以看见，左侧方块的受光面的亮度是均匀的，\n而右侧的亮度呈现右下更亮，左上较暗的趋势（这是因为它以光源和顶点的方向计算光照）"}]},{"ID":"20241102193147-ghrlhie","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20241102193147-ghrlhie","updated":"20241102213105"},"Children":[{"Type":"NodeText","Data":"修改凹凸系数的计算方式，让法线系数不影响光照"}]},{"ID":"20241102204610-y5mvyrc","Type":"NodeParagraph","Properties":{"id":"20241102204610-y5mvyrc","updated":"20241102210744"},"Children":[{"Type":"NodeText","Data":"目前的 Shader 写法中，凹凸系数 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"BumpScale"},{"Type":"NodeText","Data":"​ 会影响光照，凹凸系数越小，光照越暗"}]},{"ID":"20241102211004-gp29o69","Type":"NodeParagraph","Properties":{"id":"20241102211004-gp29o69","updated":"20241102211004"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Properties":{"style":"width: 267px;"},"Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20241102211004-wpcr4sr.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"width: 267px;\"}"},{"Type":"NodeText","Data":"​"}]},{"ID":"20241102211026-4i1pnpd","Type":"NodeParagraph","Properties":{"id":"20241102211026-4i1pnpd","updated":"20241102212830"},"Children":[{"Type":"NodeText","Data":"我们目前这种直接让 "},{"Type":"NodeTextMark","TextMarkType":"inline-math","TextMarkInlineMathContent":"法线 \\times 凹凸系数"},{"Type":"NodeText","Data":" 的计算方式，并不是一个标准算法\n因为当凹凸系数趋近于 0 时，会影响光照模型的计算（法线也趋于0了，导致计算出来的颜色是偏黑的）"}]},{"ID":"20241102211026-v2uwmed","Type":"NodeParagraph","Properties":{"id":"20241102211026-v2uwmed","updated":"20241102211044"},"Children":[{"Type":"NodeText","Data":"为了让凹凸系数不影响光的效果，有一种专门的算法"}]},{"ID":"20241102211119-u2ys8f4","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20241102211119-u2ys8f4","updated":"20241102212309"},"Children":[{"ID":"20241102211128-c0e36g6","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20241102211128-c0e36g6","updated":"20241102211818"},"Children":[{"ID":"20241102211128-lyalt24","Type":"NodeParagraph","Properties":{"id":"20241102211128-lyalt24","updated":"20241102211818"},"Children":[{"Type":"NodeText","Data":"只让法线中的 xy 乘以凹凸系数"}]},{"ID":"20241102211130-qv1pce4","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20241102211130-qv1pce4","style":"line-height: 22px;","updated":"20241102211132"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yw=="},{"Type":"NodeCodeBlockCode","Data":"tangentNormal.xy *= _BumpScale;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]},{"ID":"20241102211128-dhdbd9v","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20241102211128-dhdbd9v","updated":"20241102212309"},"Children":[{"ID":"20241102211128-l9wx904","Type":"NodeParagraph","Properties":{"id":"20241102211128-l9wx904","updated":"20241102211821"},"Children":[{"Type":"NodeText","Data":"同时保证法线为单位向量（让法线不会为0，而是趋近于顶点法线）"}]},{"ID":"20241102211824-0s0umqj","Type":"NodeParagraph","Properties":{"id":"20241102211824-0s0umqj","updated":"20241102212038"},"Children":[{"Type":"NodeText","Data":"若要让法线在 xy 乘以凹凸系数后还要保持为单位向量，就需要让 z 分量进行改变\n根据单位向量的性质可得："}]},{"ID":"20241102211159-eu32u38","Type":"NodeMathBlock","Properties":{"id":"20241102211159-eu32u38","updated":"20241102212230"},"Children":[{"Type":"NodeMathBlockOpenMarker"},{"Type":"NodeMathBlockContent","Data":"\\because (x,y,z)为单位向量 \\\\\n\\therefore x^2 + y^2 + z^2 = 1 \\\\\n\\therefore z^2 = 1 - (x^2 + y^2) \\\\\n\\therefore z = \\sqrt{1 - (x^2 + y^2)}"},{"Type":"NodeMathBlockCloseMarker"}]},{"ID":"20241102212119-o7xjfdr","Type":"NodeParagraph","Properties":{"id":"20241102212119-o7xjfdr","updated":"20241102212309"},"Children":[{"Type":"NodeText","Data":"又因为 "},{"Type":"NodeTextMark","TextMarkType":"inline-math","TextMarkInlineMathContent":"x^2 + y^2 = (x,y) \\cdot (x,y)"},{"Type":"NodeText","Data":"，因此代码内可实现为："}]},{"ID":"20241102211150-ot7zya1","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20241102211150-ot7zya1","style":"line-height: 22px;","updated":"20241102211152"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yw=="},{"Type":"NodeCodeBlockCode","Data":"tangentNormal.z = sqrt(1.0 - saturate(dot(tangentNormal.xy, tangentNormal.xy)));\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20241102211701-2aamu98","Type":"NodeParagraph","Properties":{"id":"20241102211701-2aamu98","updated":"20241102211751"},"Children":[{"Type":"NodeText","Data":"其中，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"saturate"},{"Type":"NodeText","Data":"​ 函数是保证计算结果在 0"},{"Type":"NodeBackslash","Data":"span","Children":[{"Type":"NodeText","Data":"~"}]},{"Type":"NodeText","Data":"1 之间的"}]}]}]},{"ID":"20241102211119-nxyi0x0","Type":"NodeParagraph","Properties":{"id":"20241102211119-nxyi0x0","updated":"20241102212352"},"Children":[{"Type":"NodeText","Data":"通过这样的计算，当凹凸系数在 0~1 之间变化时，会保证法线为单位向量，这样就不会影响光照表现了"}]},{"ID":"20241102211119-btrkxp9","Type":"NodeBlockquote","Properties":{"id":"20241102211119-btrkxp9","style":"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);","updated":"20241102212342"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e"},{"ID":"20241102212331-7dwcpnj","Type":"NodeParagraph","Properties":{"id":"20241102212331-7dwcpnj","updated":"20241102212342"},"Children":[{"Type":"NodeText","Data":"注意：这种算法并不是来自真实的物理规律，"},{"Type":"NodeTextMark","TextMarkType":"u","TextMarkTextContent":"只是为了 “看起来正常”"}]}]},{"ID":"20241102212344-a56n3su","Type":"NodeParagraph","Properties":{"id":"20241102212344-a56n3su","updated":"20241102212620"},"Children":[{"Type":"NodeText","Data":"因此，根据以上规则，片元着色器的 Shader 代码修改为："}]},{"ID":"20241102212439-up6cfjx","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20241102212439-up6cfjx","style":"line-height: 22px;","updated":"20241102212750"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yw=="},{"Type":"NodeCodeBlockCode","Data":"fixed4 frag (v2f i) : SV_Target\n{\n    // 计算世界空间下光的方向和视角方向\n    fixed3 lightDir = normalize(_WorldSpaceLightPos0.xyz);\n    fixed3 viewDir = normalize(UnityWorldSpaceViewDir(i.worldPos));\n    // 通过法线纹理采样并解压缩，再乘以凹凸系数，得到切线空间下法线数据\n    float4 packedNormal = tex2D(_BumpMap, i.uv.zw);\n    float3 tangentNormal = UnpackNormal(packedNormal);\n    // 使用新方法计算法线，避免凹凸系数影响光照\n    tangentNormal.xy *= _BumpScale;\n    tangentNormal.z = sqrt(1.0 - saturate(dot(tangentNormal.xy, tangentNormal.xy)));\n    // 将切线空间下法线数据转换到世界空间下\n    float3 worldNormal = mul(i.rotation, tangentNormal);\n\n    // 根据以上数据计算光照模型颜色\n    fixed3 albedo = tex2D(_MainTex, i.uv.xy) * _MainColor.rgb;  //反射率\n    // 漫反射光照计算：这里需要使用已经计算完毕的切线数据和光照方向\n    fixed3 lambertColor = _LightColor0.rgb * albedo.rgb * max(0, dot(worldNormal, lightDir));\n    // 高光反射光照计算：这里需要使用已经计算完毕的切线数据和光照方向\n    float3 halfA = normalize(viewDir + lightDir);               //半角向量\n    fixed3 specularColor = _LightColor0.rgb * _SpecularColor.rgb * pow(max(0, dot(worldNormal, halfA)), _SpecularNum);\n    // 最终颜色\n    fixed3 color = UNITY_LIGHTMODEL_AMBIENT.rgb * albedo + lambertColor + specularColor;\n\n    return fixed4(color.rgb, 1);\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20241102212945-vvraw9g","Type":"NodeParagraph","Properties":{"id":"20241102212945-vvraw9g","updated":"20241102213016"},"Children":[{"Type":"NodeText","Data":"效果如下（左侧方块的凹凸系数为1，右侧方块的凹凸系数为0.3）："}]},{"ID":"20241102213003-hpe292n","Type":"NodeParagraph","Properties":{"id":"20241102213003-hpe292n","updated":"20241102213003"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20241102213003-uae7vpf.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20241102213018-rm5tur8","Type":"NodeParagraph","Properties":{"id":"20241102213018-rm5tur8","updated":"20241102213105"},"Children":[{"Type":"NodeText","Data":"可见，现在的凹凸系数可以在不影响光照的情况下，改变模型凹凸感了"}]},{"ID":"20241102193149-zf6sovh","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20241102193149-zf6sovh","updated":"20241102220146"},"Children":[{"Type":"NodeText","Data":"提高性能的写法"}]},{"ID":"20241102213438-nvn99t3","Type":"NodeParagraph","Properties":{"id":"20241102213438-nvn99t3","updated":"20241102213448"},"Children":[{"Type":"NodeText","Data":"我们目前在 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"v2f"},{"Type":"NodeText","Data":"​ 结构体中，世界坐标顶点位置和变换矩阵使用了\n​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"float3"},{"Type":"NodeText","Data":"​ 和 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"float3x3"},{"Type":"NodeText","Data":"​ 的两个变量来存储"}]},{"ID":"20241102213451-6phb8r4","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20241102213451-6phb8r4","style":"line-height: 22px;","updated":"20241102213515"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yw=="},{"Type":"NodeCodeBlockCode","Data":"struct v2f\n{\n    float4 pos: SV_POSITION;\n    float4 uv: TEXCOORD0;           // 使用float4同时存储主要纹理的uv（xy存储）和法线纹理的uv（zw存储）\n    float3 worldPos: TEXCOORD1;     // 顶点相对于世界坐标的位置，用于之后的视角方向的计算\n    float3x3 rotation: TEXCOORD2;   // 切线空间到世界空间的变换矩阵\n};\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20241102213438-8j60d12","Type":"NodeParagraph","Properties":{"id":"20241102213438-8j60d12","updated":"20241102213530"},"Children":[{"Type":"NodeText","Data":"但是在很多世界空间下计算法线贴图的 Shader 中，往往会使用 3 个 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"float4"},{"Type":"NodeText","Data":"​ 类型的变量来存储它们"}]},{"ID":"20241102213438-6q6oqfe","Type":"NodeParagraph","Properties":{"id":"20241102213438-6q6oqfe","updated":"20241102213544"},"Children":[{"Type":"NodeText","Data":"这样做的目的是因为：这种写法在很多情况下可以提高性能，因为它更好地与GPU的硬件架构匹配\n​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"float4"},{"Type":"NodeText","Data":"​ 类型的寄存器是非常高效的，因为现代GPU通常会以 4 分量的向量为基本单位进行并行计算\n​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"float3x3"},{"Type":"NodeText","Data":"​ 矩阵相对来说需要更多的寄存器和指令来表示和计算"}]},{"ID":"20241102213547-4i33mv4","Type":"NodeParagraph","Properties":{"id":"20241102213547-4i33mv4","updated":"20241102213602"},"Children":[{"Type":"NodeText","Data":"因此，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"v2f"},{"Type":"NodeText","Data":"​ 结构体可以修改为："}]},{"ID":"20241102213603-gs7pxvl","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20241102213603-gs7pxvl","style":"line-height: 22px;","updated":"20241102213841"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yw=="},{"Type":"NodeCodeBlockCode","Data":"struct v2f\n{\n    float4 pos: SV_POSITION;\n    float4 uv: TEXCOORD0;           // 使用float4同时存储主要纹理的uv（xy存储）和法线纹理的uv（zw存储）\n    float4 tangentToWorld0: TEXCOORD0;  // 它用来存储变换矩阵和顶点相对于世界坐标的位置的第一行\n    float4 tangentToWorld1: TEXCOORD1;  // 它用来存储变换矩阵和顶点相对于世界坐标的位置的第二行\n    float4 tangentToWorld2: TEXCOORD2;  // 它用来存储变换矩阵和顶点相对于世界坐标的位置的第三行\n\n    // float3 worldPos: TEXCOORD1;      // 顶点相对于世界坐标的位置，用于之后的视角方向的计算\n    // float3x3 rotation: TEXCOORD2;    // 切线空间到世界空间的变换矩阵\n};\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20241102213930-ddeczdc","Type":"NodeParagraph","Properties":{"id":"20241102213930-ddeczdc","updated":"20241102214033"},"Children":[{"Type":"NodeText","Data":"其中，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"tangentToWorld0"},{"Type":"NodeText","Data":"​ "},{"Type":"NodeBackslash","Data":"span","Children":[{"Type":"NodeText","Data":"~"}]},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"tangentToWorld2"},{"Type":"NodeText","Data":"​ 的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"xyz"},{"Type":"NodeText","Data":"​ 用来存储整个切线空间到世界空间的变换矩阵\n而 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"tangentToWorld0"},{"Type":"NodeText","Data":"​ "},{"Type":"NodeBackslash","Data":"span","Children":[{"Type":"NodeText","Data":"~"}]},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"tangentToWorld2"},{"Type":"NodeText","Data":"​ 的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"w"},{"Type":"NodeText","Data":"​ 用来存储顶点相对于世界坐标的位置"}]},{"ID":"20241102214036-mjbe86o","Type":"NodeParagraph","Properties":{"id":"20241102214036-mjbe86o","updated":"20241102214134"},"Children":[{"Type":"NodeText","Data":"对应的，顶点着色器和片元着色器需要修改为："}]},{"ID":"20241102214134-r1p8zep","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20241102214134-r1p8zep","style":"line-height: 22px;","updated":"20241102220110"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yw=="},{"Type":"NodeCodeBlockCode","Data":"v2f vert (appdata_full v)\n{\n    v2f data;\n  \n    data.pos = UnityObjectToClipPos(v.vertex);  //计算裁剪空间下顶点坐标\n    // 分别计算主纹理和法线纹理的缩放平移\n    data.uv.xy = v.texcoord.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    data.uv.zw = v.texcoord.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n    // 得到世界空间下的顶点位置，用于之后在片元中计算视角方向（基于世界空间下）\n    //data.worldPos = mul(unity_ObjectToWorld, v.vertex);\n    float3 worldPos = mul(unity_ObjectToWorld, v.vertex);\n  \n    // 将模型空间下的法线、切线转换到世界空间下，并计算世界空间下的副切线\n    float3 worldNormal = UnityObjectToWorldNormal(v.normal);\n    float3 worldTangent = UnityObjectToWorldDir(v.tangent);\n    float3 worldBinormal = cross(normalize(worldTangent), normalize(worldNormal)) * v.tangent.w;\n    // 构建模型空间到世界空间的变换矩阵\n    //data.rotation = float3x3(\n    //    worldTangent.x, worldBinormal.x, worldNormal.x,\n    //    worldTangent.y, worldBinormal.y, worldNormal.y,\n    //    worldTangent.z, worldBinormal.z, worldNormal.z\n    //);\n    // 构建新的更高性能的数据\n    data.tangentToWorld0 = float4(worldTangent.x, worldBinormal.x, worldNormal.x, worldPos.x);\n    data.tangentToWorld1 = float4(worldTangent.y, worldBinormal.y, worldNormal.y, worldPos.y);\n    data.tangentToWorld2 = float4(worldTangent.z, worldBinormal.z, worldNormal.z, worldPos.z);\n\n    return data;\n}\n\nfixed4 frag (v2f i) : SV_Target\n{\n    // 计算世界空间下光的方向和视角方向\n    fixed3 lightDir = normalize(_WorldSpaceLightPos0.xyz);\n    // 从三个float3数据提取出worldPos信息;\n    float3 worldPos = float3(i.tangentToWorld0.w, i.tangentToWorld1.w, i.tangentToWorld2.w);\n    fixed3 viewDir = normalize(UnityWorldSpaceViewDir(worldPos));\n    // 通过法线纹理采样并解压缩，再乘以凹凸系数，得到切线空间下法线数据\n    float4 packedNormal = tex2D(_BumpMap, i.uv.zw);\n    float3 tangentNormal = UnpackNormal(packedNormal);\n    tangentNormal.xy *= _BumpScale;\n    tangentNormal.z = sqrt(1.0 - saturate(dot(tangentNormal.xy, tangentNormal.xy)));\n    // 将切线空间下法线数据转换到世界空间下\n    //float3 worldNormal = mul(rotation, tangentNormal);\n    // 直接使用三个float3的xyz数据转换，这里本质就是矩阵相乘\n    float3 worldNormal = float3(\n        dot(i.tangentToWorld0.xyz, tangentNormal),\n        dot(i.tangentToWorld1.xyz, tangentNormal),\n        dot(i.tangentToWorld2.xyz, tangentNormal)\n    );\n\n    // 根据以上数据计算光照模型颜色\n    fixed3 albedo = tex2D(_MainTex, i.uv.xy) * _MainColor.rgb;  //反射率\n    // 漫反射光照计算：这里需要使用已经计算完毕的切线数据和光照方向\n    fixed3 lambertColor = _LightColor0.rgb * albedo.rgb * max(0, dot(worldNormal, lightDir));\n    // 高光反射光照计算：这里需要使用已经计算完毕的切线数据和光照方向\n    float3 halfA = normalize(viewDir + lightDir);               //半角向量\n    fixed3 specularColor = _LightColor0.rgb * _SpecularColor.rgb * pow(max(0, dot(worldNormal, halfA)), _SpecularNum);\n    // 最终颜色\n    fixed3 color = UNITY_LIGHTMODEL_AMBIENT.rgb * albedo + lambertColor + specularColor;\n\n    return fixed4(color.rgb, 1);\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20241102215434-3cy8aph","Type":"NodeParagraph","Properties":{"id":"20241102215434-3cy8aph","updated":"20241102220056"},"Children":[{"Type":"NodeText","Data":"因为 "},{"Type":"NodeTextMark","TextMarkType":"inline-math","TextMarkInlineMathContent":"3 \\times 3"},{"Type":"NodeText","Data":" 矩阵乘以一个三行向量的计算过程就相当于 "},{"Type":"NodeTextMark","TextMarkType":"inline-math","TextMarkInlineMathContent":"3 \\times 3"},{"Type":"NodeText","Data":" 矩阵取三行分量分别去和向量点乘，\n因此片元着色器内部不需要去重新构建一个 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"float3x3"},{"Type":"NodeText","Data":"​ 转换矩阵，直接对三行分量分别点乘即可"}]},{"ID":"20241102220115-5b6dnd7","Type":"NodeParagraph","Properties":{"id":"20241102220115-5b6dnd7","updated":"20241102220137"},"Children":[{"Type":"NodeText","Data":"因此，最终 Shader 代码是这样的："}]},{"ID":"20241102220137-am8h85m","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20241102220137-am8h85m","style":"line-height: 22px;","updated":"20241102220146"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yw=="},{"Type":"NodeCodeBlockCode","Data":"Shader \"TeachShader/Lesson52\"\n{\n    Properties\n    {\n        _MainColor(\"MainColor\", Color) = (1, 1, 1, 1)\n        _MainTex(\"MainTex\", 2D) = \"\"{}\n        _BumpMap(\"BumpMap\", 2D) = \"\"{}\n        _BumpScale(\"BumpScale\", Range(0, 1)) = 1\n        _SpecularColor(\"SpecularColor\", Color) = (1, 1, 1, 1)\n        _SpecularNum(\"SpecularNum\", Range(0, 20)) = 18\n    }\n    SubShader\n    {\n        Pass\n        {\n            Tags { \"LightMode\" = \"ForwardBase\" }\n\n            CGPROGRAM\n            #pragma vertex vert\n            #pragma fragment frag\n\n            #include \"UnityCG.cginc\"\n            #include \"Lighting.cginc\"\n\n            struct v2f\n            {\n                float4 pos: SV_POSITION;\n                float4 uv: TEXCOORD0;           // 使用float4同时存储主要纹理的uv（xy存储）和法线纹理的uv（zw存储）\n                float4 tangentToWorld0: TEXCOORD1;  // 它用来存储变换矩阵和顶点相对于世界坐标的位置的第一行\n                float4 tangentToWorld1: TEXCOORD2;  // 它用来存储变换矩阵和顶点相对于世界坐标的位置的第二行\n                float4 tangentToWorld2: TEXCOORD3;  // 它用来存储变换矩阵和顶点相对于世界坐标的位置的第三行\n\n                // float3 worldPos: TEXCOORD1;      // 顶点相对于世界坐标的位置，用于之后的视角方向的计算\n                // float3x3 rotation: TEXCOORD2;    // 切线空间到世界空间的变换矩阵\n            };\n\n            float4 _MainColor;      //漫反射颜色\n            sampler2D _MainTex;     //颜色纹理\n            float4 _MainTex_ST;     //颜色纹理的缩放和平移\n            sampler2D _BumpMap;     //法线纹理\n            float4 _BumpMap_ST;     //法线纹理的缩放和平移\n            float _BumpScale;       //凹凸程度\n            float4 _SpecularColor;  //高光颜色\n            fixed _SpecularNum;     //光泽度\n\n            v2f vert (appdata_full v)\n            {\n                v2f data;\n            \n                data.pos = UnityObjectToClipPos(v.vertex);  //计算裁剪空间下顶点坐标\n                // 分别计算主纹理和法线纹理的缩放平移\n                data.uv.xy = v.texcoord.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n                data.uv.zw = v.texcoord.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n                // 得到世界空间下的顶点位置，用于之后在片元中计算视角方向（基于世界空间下）\n                //data.worldPos = mul(unity_ObjectToWorld, v.vertex);\n                float3 worldPos = mul(unity_ObjectToWorld, v.vertex);\n            \n                // 将模型空间下的法线、切线转换到世界空间下，并计算世界空间下的副切线\n                float3 worldNormal = UnityObjectToWorldNormal(v.normal);\n                float3 worldTangent = UnityObjectToWorldDir(v.tangent);\n                float3 worldBinormal = cross(normalize(worldTangent), normalize(worldNormal)) * v.tangent.w;\n                // 构建模型空间到世界空间的变换矩阵\n                //data.rotation = float3x3(\n                //    worldTangent.x, worldBinormal.x, worldNormal.x,\n                //    worldTangent.y, worldBinormal.y, worldNormal.y,\n                //    worldTangent.z, worldBinormal.z, worldNormal.z\n                //);\n                data.tangentToWorld0 = float4(worldTangent.x, worldBinormal.x, worldNormal.x, worldPos.x);\n                data.tangentToWorld1 = float4(worldTangent.y, worldBinormal.y, worldNormal.y, worldPos.y);\n                data.tangentToWorld2 = float4(worldTangent.z, worldBinormal.z, worldNormal.z, worldPos.z);\n\n                return data;\n            }\n\n            fixed4 frag (v2f i) : SV_Target\n            {\n                // 计算世界空间下光的方向和视角方向\n                fixed3 lightDir = normalize(_WorldSpaceLightPos0.xyz);\n                float3 worldPos = float3(i.tangentToWorld0.w, i.tangentToWorld1.w, i.tangentToWorld2.w);\n                fixed3 viewDir = normalize(UnityWorldSpaceViewDir(worldPos));\n                // 通过法线纹理采样并解压缩，再乘以凹凸系数，得到切线空间下法线数据\n                float4 packedNormal = tex2D(_BumpMap, i.uv.zw);\n                float3 tangentNormal = UnpackNormal(packedNormal);\n                tangentNormal.xy *= _BumpScale;\n                tangentNormal.z = sqrt(1.0 - saturate(dot(tangentNormal.xy, tangentNormal.xy)));\n                // 将切线空间下法线数据转换到世界空间下\n                //float3 worldNormal = mul(rotation, tangentNormal);\n                float3 worldNormal = float3(\n                    dot(i.tangentToWorld0.xyz, tangentNormal),\n                    dot(i.tangentToWorld1.xyz, tangentNormal),\n                    dot(i.tangentToWorld2.xyz, tangentNormal)\n                );\n\n                // 根据以上数据计算光照模型颜色\n                fixed3 albedo = tex2D(_MainTex, i.uv.xy) * _MainColor.rgb;  //反射率\n                // 漫反射光照计算：这里需要使用已经计算完毕的切线数据和光照方向\n                fixed3 lambertColor = _LightColor0.rgb * albedo.rgb * max(0, dot(worldNormal, lightDir));\n                // 高光反射光照计算：这里需要使用已经计算完毕的切线数据和光照方向\n                float3 halfA = normalize(viewDir + lightDir);               //半角向量\n                fixed3 specularColor = _LightColor0.rgb * _SpecularColor.rgb * pow(max(0, dot(worldNormal, halfA)), _SpecularNum);\n                // 最终颜色\n                fixed3 color = UNITY_LIGHTMODEL_AMBIENT.rgb * albedo + lambertColor + specularColor;\n\n                return fixed4(color.rgb, 1);\n            }\n            ENDCG\n        }\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20241102220144-4q9xbxg","Type":"NodeParagraph","Properties":{"id":"20241102220144-4q9xbxg","updated":"20241102220144"}}]}