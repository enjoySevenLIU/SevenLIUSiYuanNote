{
	"ID": "20240707130047-ubsw4gc",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20240707130047-ubsw4gc",
		"title": "US3S1L7-1——Blinn-Phong光照模型的逐顶点光照",
		"type": "doc",
		"updated": "20240707140343"
	},
	"Children": [
		{
			"ID": "20240707130047-zze200r",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20240707130047-zze200r",
				"updated": "20240707131600"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20240707131547-d19pn7r",
					"Type": "NodeHeading",
					"HeadingLevel": 2,
					"Properties": {
						"id": "20240707131547-d19pn7r",
						"updated": "20240707131600"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "知识回顾"
						}
					]
				},
				{
					"ID": "20240707131600-spy5uun",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20240707131600-spy5uun",
						"updated": "20240707131600"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "Blinn Phong光照模型公式："
						}
					]
				},
				{
					"ID": "20240707131600-28134g9",
					"Type": "NodeMathBlock",
					"Properties": {
						"id": "20240707131600-28134g9",
						"updated": "20240707131600"
					},
					"Children": [
						{
							"Type": "NodeMathBlockOpenMarker"
						},
						{
							"Type": "NodeMathBlockContent",
							"Data": "物体表面光照颜色 = 环境光颜色 + 兰伯特光照模型所得颜色 + BlinnPhong式高光反射光照模型所得颜色"
						},
						{
							"Type": "NodeMathBlockCloseMarker"
						}
					]
				},
				{
					"ID": "20240707131600-biitelb",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20240707131600-biitelb",
						"updated": "20240707131600"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "其中："
						}
					]
				},
				{
					"ID": "20240707131600-8s4feey",
					"Type": "NodeList",
					"ListData": {},
					"Properties": {
						"id": "20240707131600-8s4feey",
						"updated": "20240707131600"
					},
					"Children": [
						{
							"ID": "20240707131600-p72xa60",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20240707131600-p72xa60",
								"updated": "20240707131600"
							},
							"Children": [
								{
									"ID": "20240707131600-pveaag7",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20240707131600-pveaag7",
										"updated": "20240707131600"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "环境光颜色 = "
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "code",
											"TextMarkTextContent": "UNITY_LIGHTMODEL_AMBIENT"
										},
										{
											"Type": "NodeText",
											"Data": "​ ("
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "code",
											"TextMarkTextContent": "unity_AmbientSky"
										},
										{
											"Type": "NodeText",
											"Data": "​、"
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "code",
											"TextMarkTextContent": "unity_AmbientEquator"
										},
										{
											"Type": "NodeText",
											"Data": "​、"
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "code",
											"TextMarkTextContent": "unity_AmbientGround"
										},
										{
											"Type": "NodeText",
											"Data": "​)"
										}
									]
								},
								{
									"ID": "20240707131600-pu8et7f",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20240707131600-pu8et7f",
										"updated": "20240707131600"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "关于上边四个变量，详见："
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "block-ref",
											"TextMarkBlockRefID": "20240625223357-zmse81n",
											"TextMarkBlockRefSubtype": "d",
											"TextMarkTextContent": "US3S1L5——Phong光照模型"
										}
									]
								}
							]
						},
						{
							"ID": "20240707131600-li1f2gx",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20240707131600-li1f2gx",
								"updated": "20240707131600"
							},
							"Children": [
								{
									"ID": "20240707131600-ff7vvpy",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20240707131600-ff7vvpy",
										"updated": "20240707131600"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "漫反射光颜色 = 兰伯特光照模型 计算得到的颜色"
										}
									]
								}
							]
						},
						{
							"ID": "20240707131600-0shsmcs",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20240707131600-0shsmcs",
								"updated": "20240707131600"
							},
							"Children": [
								{
									"ID": "20240707131600-3j1g0ac",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20240707131600-3j1g0ac",
										"updated": "20240707131600"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "高光反射光颜色 = Blinn Phong式高光反射光照模型 计算得到的颜色"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240707131616-p7bxl0m",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240707131616-p7bxl0m",
				"updated": "20240707140343"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "利用Blinn-Phong式光照模型实现光照效果（逐顶点光照）"
				}
			]
		},
		{
			"ID": "20240707131736-ucqnnzg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240707131736-ucqnnzg",
				"updated": "20240707131736"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "关键步骤："
				}
			]
		},
		{
			"ID": "20240707131736-dcpbmon",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240707131736-dcpbmon",
				"updated": "20240707132328"
			},
			"Children": [
				{
					"ID": "20240707131736-mqs8pkz",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20240707131736-mqs8pkz",
						"updated": "20240707132214"
					},
					"Children": [
						{
							"ID": "20240707131736-82e8l34",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240707131736-82e8l34",
								"updated": "20240707131736"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "计算"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "block-ref",
									"TextMarkBlockRefID": "20240625122416-j2gq3qr",
									"TextMarkBlockRefSubtype": "s",
									"TextMarkTextContent": "兰伯特光照模型"
								}
							]
						},
						{
							"ID": "20240707131736-fbdkkdk",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240707131736-fbdkkdk",
								"style": "line-height: 22px;",
								"updated": "20240707132214"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "Yw=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "fixed4 _MainColor;      //属性设置的漫反射颜色\n\n//计算兰伯特光照模型 颜色相关函数（逐顶点）\n//参数：\n//  objNormal: 顶点的法线信息\nfixed3 getVertLambertColor(in float3 objNormal)\n{\n    float3 normal = UnityObjectToWorldNormal(objNormal);        //将模型空间下的法线转换到世界空间下\n    float3 lightDir = normalize(_WorldSpaceLightPos0.xyz);      //光源0在世界坐标系下的位置标准化，用于和法线计算夹角\n    //兰伯特光照模型的实现，这里的颜色计算只取rgb，不考虑透明度的情况\n    fixed3 color = _LightColor0.rgb * _MainColor.rgb * max(0, dot(normal, lightDir));\n    return color;\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20240707131736-rxli3kg",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20240707131736-rxli3kg",
						"updated": "20240707132328"
					},
					"Children": [
						{
							"ID": "20240707131736-4qw7l6e",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240707131736-4qw7l6e",
								"updated": "20240707131757"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "计算"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "block-ref",
									"TextMarkBlockRefID": "20240706220820-63qoxsu",
									"TextMarkBlockRefSubtype": "s",
									"TextMarkTextContent": "Blinn-Phong式高光反射光照模型"
								}
							]
						},
						{
							"ID": "20240707131736-3lzfqdp",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240707131736-3lzfqdp",
								"style": "line-height: 22px;",
								"updated": "20240707132328"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "Yw=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "fixed4 _SpecularColor;  //属性设置的材质高光颜色\nfloat _SpecularNum;     //属性设置的光泽度\n\n//计算Blinn-Phong高光反射光照模型 颜色相关函数（逐顶点）\n//参数：\n//  objVertex: 顶点坐标\n//  objNormal: 顶点的法线信息\nfixed3 getVertSpecularColor(in float4 objVertex, in float3 objNormal)\n{\n    //计算标准化的观察方向向量\n    float3 worldPos = mul(UNITY_MATRIX_M, objVertex);           //使用UNITY_MATRIX_M矩阵，将模型空间下的顶点转换到世界空间下\n    float3 viewDir = _WorldSpaceCameraPos.xyz - worldPos;       //将摄像机坐标和顶点坐标通过相减，得到观察方向向量\n    viewDir = normalize(viewDir);                               //将观察空间向量标准化\n\n    float3 lightDir = normalize(_WorldSpaceLightPos0.xyz);      //得到世界空间下的指向光源方向的标准化向量\n    float3 wNormal = UnityObjectToWorldNormal(objNormal);       //得到世界空间下的法线向量\n    float3 halfA = normalize(viewDir + lightDir);               //将光源方向和观察方向相加得到其半角向量，并标准化\n    //Blinn-Phong高光反射模型的实现，这里的颜色计算只取rgb，不考虑透明度的情况\n    fixed3 color = _LightColor0.rgb * _SpecularColor.rgb * pow(max(0, dot(wNormal, halfA)), _SpecularNum);\n    return color;\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240707131736-gxvrzjg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240707131736-gxvrzjg",
				"updated": "20240707131736"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "完整的Shader代码如下："
				}
			]
		},
		{
			"ID": "20240707132238-yoxjac8",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240707132238-yoxjac8",
				"style": "line-height: 22px;",
				"updated": "20240707140343"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Shader \"TeachShader/Lesson44\"\n{\n    Properties\n    {\n        _MainColor(\"MainColor\", Color) = (1, 1, 1, 1)           //材质的漫反射颜色\n        _SpecularColor(\"SpecularColor\", Color) = (1, 1, 1, 1)   //材质高光反射颜色\n        _SpecularNum(\"SpecularNum\", Range(0, 20)) = 0.5         //光泽度\n    }\n    SubShader\n    {\n        Pass\n        {\n            Tags { \"LightMode\" = \"ForwardBase\" }\n\n            CGPROGRAM\n            #pragma vertex vert\n            #pragma fragment frag\n\n            #include \"UnityCG.cginc\"\n            #include \"Lighting.cginc\"\n\n            struct v2f\n            {\n                float4 svPos : SV_POSITION;     //裁剪空间下的顶点坐标\n                fixed3 color : COLOR;           //颜色信息\n            };\n\n            fixed4 _MainColor;      //属性设置的漫反射颜色\n            fixed4 _SpecularColor;  //属性设置的材质高光颜色\n            float _SpecularNum;     //属性设置的光泽度\n\n            //计算兰伯特光照模型 颜色相关函数（逐顶点）\n            //参数：\n            //  objNormal: 顶点的法线信息\n            fixed3 getVertLambertColor(in float3 objNormal)\n            {\n                float3 normal = UnityObjectToWorldNormal(objNormal);        //将模型空间下的法线转换到世界空间下\n                float3 lightDir = normalize(_WorldSpaceLightPos0.xyz);      //光源0在世界坐标系下的位置标准化，用于和法线计算夹角\n                //兰伯特光照模型的实现，这里的颜色计算只取rgb，不考虑透明度的情况\n                fixed3 color = _LightColor0.rgb * _MainColor.rgb * max(0, dot(normal, lightDir));\n                return color;\n            }\n\n            //计算Blinn-Phong高光反射光照模型 颜色相关函数（逐顶点）\n            //参数：\n            //  objVertex: 顶点坐标\n            //  objNormal: 顶点的法线信息\n            fixed3 getVertSpecularColor(in float4 objVertex, in float3 objNormal)\n            {\n                //计算标准化的观察方向向量\n                float3 worldPos = mul(UNITY_MATRIX_M, objVertex);           //使用UNITY_MATRIX_M矩阵，将模型空间下的顶点转换到世界空间下\n                float3 viewDir = _WorldSpaceCameraPos.xyz - worldPos;       //将摄像机坐标和顶点坐标通过相减，得到观察方向向量\n                viewDir = normalize(viewDir);                               //将观察空间向量标准化\n\n                float3 lightDir = normalize(_WorldSpaceLightPos0.xyz);      //得到世界空间下的指向光源方向的标准化向量\n                float3 wNormal = UnityObjectToWorldNormal(objNormal);       //得到世界空间下的法线向量\n                float3 halfA = normalize(viewDir + lightDir);               //将光源方向和观察方向相加得到其半角向量，并标准化\n                //Blinn-Phong高光反射模型的实现，这里的颜色计算只取rgb，不考虑透明度的情况\n                fixed3 color = _LightColor0.rgb * _SpecularColor.rgb * pow(max(0, dot(wNormal, halfA)), _SpecularNum);\n                return color;\n            }\n\n            v2f vert (appdata_base v)\n            {\n                v2f v2fData;\n                v2fData.svPos = UnityObjectToClipPos(v.vertex);             //首先将模型空间下的顶点转换到裁剪空间下\n                //计算Blinn-Phong式光照模型需要的各种颜色\n                fixed3 lambertColor = getVertLambertColor(v.normal);                            //计算漫反射\n                fixed3 specularColor = getVertSpecularColor(v.vertex, v.normal);                //计算高光反射颜色\n                v2fData.color = UNITY_LIGHTMODEL_AMBIENT.rgb + lambertColor + specularColor;    //计算Blinn-Phong式光照模型颜色\n\n                return v2fData;\n            }\n\n            fixed4 frag (v2f i) : SV_Target\n            {\n                return fixed4(i.color.rgb, 1);      //因为传递过来的颜色变量不包括透明度，因此这里需要手动指定透明度\n            }\n            ENDCG\n        }\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240707132336-smnuakv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240707132336-smnuakv",
				"updated": "20240707132655"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "显示效果（光泽度为5，漫反射颜色为红色，高光反射颜色为白色，左为Blinn-Phong式高光反射模型的效果，右为Phong式高光反射模型的效果）："
				}
			]
		},
		{
			"ID": "20240707132602-7zfbofk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240707132602-7zfbofk",
				"updated": "20240707132602"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"parent-style": "width: 654px;",
						"style": "width: 644px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20240707132602-xc8oskx.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 644px;\" parent-style=\"width: 654px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20240707132626-r5xx7ns",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240707132626-r5xx7ns",
				"updated": "20240707134104"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可见，Blinn-Phong式光照模型比Phong式光照模型的高光效果更加均匀，面积也更大"
				}
			]
		},
		{
			"ID": "20240707132657-v38ssyq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240707132657-v38ssyq"
			}
		}
	]
}