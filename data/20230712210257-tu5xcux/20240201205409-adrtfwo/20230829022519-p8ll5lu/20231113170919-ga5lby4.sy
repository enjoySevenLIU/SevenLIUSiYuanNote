{
	"ID": "20231113170919-ga5lby4",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20231113170919-ga5lby4",
		"scroll": "\u0026#123;\u0026quot;rootId\u0026quot;:\u0026quot;20231113170919-ga5lby4\u0026quot;,\u0026quot;startId\u0026quot;:\u0026quot;20231113170919-ayecff7\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20231113171649-ig0riqb\u0026quot;,\u0026quot;scrollTop\u0026quot;:400,\u0026quot;focusId\u0026quot;:\u0026quot;20231113171651-0h9fln0\u0026quot;,\u0026quot;focusStart\u0026quot;:86,\u0026quot;focusEnd\u0026quot;:86\u0026#125;",
		"title": "UMVCL6——MVX 之 MVP",
		"updated": "20231113211133"
	},
	"Children": [
		{
			"ID": "20231113170919-ayecff7",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20231113170919-ayecff7",
				"updated": "20231113171045"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "MVP"
				}
			]
		},
		{
			"ID": "20231113171045-g9n48xr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231113171045-g9n48xr",
				"updated": "20231113171110"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "全称为：模型(Model)—视图(View)—主持人(Presenter)\nModel提供数据，View负责界面，Presenter负责逻辑的处理\n它是MVC的一种变式，是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "针对MVC中M和V存在耦合的优化"
				}
			]
		},
		{
			"ID": "20231113171110-0qx6mdu",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20231113171110-0qx6mdu",
				"updated": "20231113171127"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "MVP和MVC的对比"
				}
			]
		},
		{
			"ID": "20231113171200-veaqdq8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231113171200-veaqdq8",
				"updated": "20231113171200"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "MVP与MVC有着一个重大的区别："
				}
			]
		},
		{
			"ID": "20231113171127-yeq2gwg",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20231113171127-yeq2gwg",
				"updated": "20231113171242"
			},
			"Children": [
				{
					"ID": "20231113171200-9ytp3zo",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20231113171200-9ytp3zo",
						"updated": "20231113171225"
					},
					"Children": [
						{
							"ID": "20231113171200-hh92h4c",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231113171200-hh92h4c",
								"updated": "20231113171225"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在MVC中View会"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "直接从Model中读取数据而不是通过Controller"
								}
							]
						}
					]
				},
				{
					"ID": "20231113171201-wafibtj",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20231113171201-wafibtj",
						"updated": "20231113171242"
					},
					"Children": [
						{
							"ID": "20231113171201-hh6lhln",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231113171201-hh6lhln",
								"updated": "20231113171242"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "而在MVP中View并不直接使用Model，"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "它们之间的通信是通过Presenter来进行的，所有的交互都发生在Presenter内部。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20231113171226-7ulhg8l",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20231113171226-7ulhg8l",
				"updated": "20231113171300"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如何理解MVC中V会从M中读取数据"
				}
			]
		},
		{
			"ID": "20231113171525-pnjw9bj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231113171525-pnjw9bj",
				"updated": "20231113171630"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "很明显，Controller在这里只是起到了将Model层代码传入到View层方法的作用"
				}
			]
		},
		{
			"ID": "20231113171335-eydv3hl",
			"Type": "NodeSuperBlock",
			"Properties": {
				"id": "20231113171335-eydv3hl",
				"updated": "20231113171502"
			},
			"Children": [
				{
					"Type": "NodeSuperBlockOpenMarker"
				},
				{
					"Type": "NodeSuperBlockLayoutMarker",
					"Data": "col"
				},
				{
					"ID": "20231113171312-p874fnx",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20231113171312-p874fnx",
						"updated": "20231113171330"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "​"
						},
						{
							"Type": "NodeImage",
							"Data": "span",
							"Properties": {
								"parent-style": "width: 484px;",
								"style": "width: 474px;"
							},
							"Children": [
								{
									"Type": "NodeBang"
								},
								{
									"Type": "NodeOpenBracket"
								},
								{
									"Type": "NodeLinkText",
									"Data": "image"
								},
								{
									"Type": "NodeCloseBracket"
								},
								{
									"Type": "NodeOpenParen"
								},
								{
									"Type": "NodeLinkDest",
									"Data": "assets/image-20230829030639-1ke6xfy.png"
								},
								{
									"Type": "NodeCloseParen"
								}
							]
						},
						{
							"Type": "NodeKramdownSpanIAL",
							"Data": "{: style=\"width: 474px;\" parent-style=\"width: 484px;\"}"
						},
						{
							"Type": "NodeText",
							"Data": "​"
						}
					]
				},
				{
					"ID": "20231113171302-0n926t4",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20231113171302-0n926t4",
						"updated": "20231113171502"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "​​"
						},
						{
							"Type": "NodeImage",
							"Data": "span",
							"Properties": {
								"parent-style": "width: 321px;",
								"style": "width: 311px;"
							},
							"Children": [
								{
									"Type": "NodeBang"
								},
								{
									"Type": "NodeOpenBracket"
								},
								{
									"Type": "NodeLinkText",
									"Data": "image"
								},
								{
									"Type": "NodeCloseBracket"
								},
								{
									"Type": "NodeOpenParen"
								},
								{
									"Type": "NodeLinkDest",
									"Data": "assets/image-20231113171502-rh329cm.png"
								},
								{
									"Type": "NodeCloseParen"
								}
							]
						},
						{
							"Type": "NodeKramdownSpanIAL",
							"Data": "{: style=\"width: 311px;\" parent-style=\"width: 321px;\"}"
						},
						{
							"Type": "NodeText",
							"Data": "​​"
						}
					]
				},
				{
					"Type": "NodeSuperBlockCloseMarker"
				}
			]
		},
		{
			"ID": "20231113171519-384e66b",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20231113171519-384e66b",
				"updated": "20231113171641"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "MVP的作用"
				}
			]
		},
		{
			"ID": "20231113171651-0h9fln0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231113171651-0h9fln0",
				"updated": "20231113211133"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "MVP中的Presenter(主持人)将完全断绝View和Model的来往，主要程序逻辑都在Presenter中实现\n也因此，Presenter层就会相对“较重”，代码较多"
				}
			]
		},
		{
			"ID": "20231113171649-ig0riqb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231113171649-ig0riqb",
				"updated": "20231113171649"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"parent-style": "width: 822px;",
						"style": "width: 812px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20231113171649-gm45wmv.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 812px;\" parent-style=\"width: 822px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		}
	]
}