{
	"ID": "20231112215626-299ilmq",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20231112215626-299ilmq",
		"scroll": "\u0026#123;\u0026quot;rootId\u0026quot;:\u0026quot;20231112215626-299ilmq\u0026quot;,\u0026quot;startId\u0026quot;:\u0026quot;20231113160358-4kl8yqa\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20231113164336-gu092m0\u0026quot;,\u0026quot;scrollTop\u0026quot;:0,\u0026quot;focusId\u0026quot;:\u0026quot;20231112215626-atmnp6w\u0026quot;,\u0026quot;focusStart\u0026quot;:0,\u0026quot;focusEnd\u0026quot;:0\u0026#125;",
		"title": "UMVCL3——使用MVC思想制作UI逻辑",
		"updated": "20231113174619"
	},
	"Children": [
		{
			"ID": "20231113160358-4kl8yqa",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20231113160358-4kl8yqa",
				"updated": "20231113160406"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用MVC的UI逻辑制作实例"
				}
			]
		},
		{
			"ID": "20231112215626-atmnp6w",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231112215626-atmnp6w",
				"updated": "20231113160347"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "还是和上一章相同的UI需求"
				}
			]
		},
		{
			"ID": "20231113160420-4lt2kor",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231113160420-4lt2kor",
				"updated": "20231113160420"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "假设我们有一个主面板，它的各个UI控件需要的效果如下"
				}
			]
		},
		{
			"ID": "20231113160420-hs6632d",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231113160420-hs6632d",
				"updated": "20231113160420"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"parent-style": "width: 501px;",
						"style": "width: 491px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20231112213410-j7bpo8t.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 491px;\" parent-style=\"width: 501px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20231113160420-w4tfgah",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231113160420-w4tfgah",
				"updated": "20231113160420"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "有一个选角面板，它的各个UI控件需要的效果如下"
				}
			]
		},
		{
			"ID": "20231113160420-cwiea2a",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231113160420-cwiea2a",
				"updated": "20231113160420"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"parent-style": "width: 225px;",
						"style": "width: 215px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20231112213650-yo8frii.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 215px;\" parent-style=\"width: 225px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20231113160421-9nkvbds",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231113160421-9nkvbds",
				"updated": "20231113160448"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "该UI的MVC的代码逻辑如下："
				}
			]
		},
		{
			"ID": "20231113160449-wvt6qlr",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20231113160449-wvt6qlr",
				"updated": "20231113160459"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Model层"
				}
			]
		},
		{
			"ID": "20231113161338-pmn0tod",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231113161338-pmn0tod",
				"updated": "20231113162238"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Model层主要负责存储管理数据，及数据相关的操作，同时，对Controller层开放更新数据方法，更新数据时，执行Controller层的监听数据更新的函数"
				}
			]
		},
		{
			"ID": "20231113161354-mji3wc4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231113161354-mji3wc4",
				"updated": "20231113161407"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "具体实现："
				}
			]
		},
		{
			"ID": "20231113161408-uippjfh",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20231113161408-uippjfh",
				"updated": "20231113162345"
			},
			"Children": [
				{
					"ID": "20231113161416-6b0ah0z",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20231113161416-6b0ah0z",
						"updated": "20231113161416"
					},
					"Children": [
						{
							"ID": "20231113161416-i7gtscu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231113161416-i7gtscu",
								"updated": "20231113161416"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "初始化，读取数据\n"
								}
							]
						}
					]
				},
				{
					"ID": "20231113161416-fdc3891",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20231113161416-fdc3891",
						"updated": "20231113162345"
					},
					"Children": [
						{
							"ID": "20231113161416-cjs1f8z",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231113161416-cjs1f8z",
								"updated": "20231113162345"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "更新数据（同时让Controller层脚本监听数据的更新）"
								}
							]
						}
					]
				},
				{
					"ID": "20231113161417-w7pe1c0",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20231113161417-w7pe1c0"
					},
					"Children": [
						{
							"ID": "20231113161417-sqy9bbf",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231113161417-sqy9bbf"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "保存数据"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20231113161400-kp220jj",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20231113161400-kp220jj",
				"style": "line-height: 22px;",
				"updated": "20231113174619"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "using UnityEngine;\nusing UnityEngine.Events;\n\npublic class PlayerModel\n{\n    //Model层主要负责存储管理数据，及数据相关的操作\n    // 初始化，读取数据\n    // 更新数据\n    // 保存数据\n\n    private static PlayerModel instance = null;\n    public static PlayerModel Instance\n    {\n        get\n        {\n            if (instance == null)\n            {\n                instance = new PlayerModel();\n                instance.Init();\n            }\n            return instance;\n        }\n    }\n    private PlayerModel() { }\n\n    //数据内容\n    private string name;\n    private int level;\n    private int money;\n    private int gem;\n    private int power;\n\n    private int hp;\n    private int atk;\n    private int def;\n    private int crit;\n    private int miss;\n    private int luck;\n\n    #region 对外开放的属性\n    public string Name =\u003e name;\n    public int Level =\u003e level;\n    public int Money =\u003e money;\n    public int Gem =\u003e gem;\n    public int Power =\u003e power;\n\n    public int Hp =\u003e hp;\n    public int Atk =\u003e atk;\n    public int Def =\u003e def;\n    public int Crit =\u003e crit;\n    public int Miss =\u003e miss;\n    public int Luck =\u003e luck;\n\n    #endregion\n\n    //通知外部更新的事件\n    private event UnityAction\u003cPlayerModel\u003e updateEvent;\n\n    //数据相关的操作\n    //初始化\n    private void Init()\n    {\n        name = PlayerPrefs.GetString(\"PlayerName\", \"SevenL\");\n        level = PlayerPrefs.GetInt(\"PlayerLev\", 1);\n        money = PlayerPrefs.GetInt(\"PlayerMoney\", 9999);\n        gem = PlayerPrefs.GetInt(\"PlayerGem\", 8888);\n        power = PlayerPrefs.GetInt(\"PlayerPower\", 99);\n\n        hp = PlayerPrefs.GetInt(\"PlayerHp\", 100);\n        atk = PlayerPrefs.GetInt(\"PlayerAtk\", 20);\n        def = PlayerPrefs.GetInt(\"PlayerDef\", 10);\n        crit = PlayerPrefs.GetInt(\"PlayerCrit\", 20);\n        miss = PlayerPrefs.GetInt(\"PlayerMiss\", 10);\n        luck = PlayerPrefs.GetInt(\"PlayerLuck\", 40);\n    }\n\n    //更新\n    public void LevelUp()\n    {\n        //升级 改变内容\n        level += 1;\n        hp += level;\n        atk += level;\n        def += level;\n        crit += level;\n        miss += level;\n        luck += level;\n\n        SaveData();\n    }\n\n    //保存\n    private void SaveData()\n    {\n        PlayerPrefs.SetString(\"PlayerName\", name);\n        PlayerPrefs.SetInt(\"PlayerLev\", level);\n        PlayerPrefs.SetInt(\"PlayerMoney\", money);\n        PlayerPrefs.SetInt(\"PlayerGem\", gem);\n        PlayerPrefs.SetInt(\"PlayerPower\", power);\n\n        PlayerPrefs.SetInt(\"PlayerHp\", hp);\n        PlayerPrefs.SetInt(\"PlayerAtk\", atk);\n        PlayerPrefs.SetInt(\"PlayerDef\", def);\n        PlayerPrefs.SetInt(\"PlayerCrit\", crit);\n        PlayerPrefs.SetInt(\"PlayerMiss\", miss);\n        PlayerPrefs.SetInt(\"PlayerLuck\", luck);\n\n        UpdateInfo();\n    }\n\n    //添加对数据更新的监听函数，监听函数参数为自己\n    public void AddEventListener(UnityAction\u003cPlayerModel\u003e function)\n    {\n        updateEvent += function;\n    }\n\n    //移除对数据更新的监听函数\n    public void RemoveEventListener(UnityAction\u003cPlayerModel\u003e function)\n    {\n        updateEvent -= function;\n    }\n  \n    //数据更新时执行各个监听函数\n    private void UpdateInfo()\n    {\n        updateEvent(this);\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20231113161648-2xag8xp",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20231113161648-2xag8xp",
				"updated": "20231113161658"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "View层"
				}
			]
		},
		{
			"ID": "20231113161658-i7cli7k",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231113161658-i7cli7k",
				"updated": "20231113162850"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "View层主要负责管理UI控件，将用户行为传入Control层，对Control层开放更新控件显示方法"
				}
			]
		},
		{
			"ID": "20231113162300-fzwyc46",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231113162300-fzwyc46",
				"updated": "20231113162316"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "具体实现："
				}
			]
		},
		{
			"ID": "20231113162317-qk9ix6k",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20231113162317-qk9ix6k",
				"updated": "20231113162322"
			},
			"Children": [
				{
					"ID": "20231113162322-3ytdiim",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20231113162322-3ytdiim",
						"updated": "20231113162322"
					},
					"Children": [
						{
							"ID": "20231113162322-s7j22l8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231113162322-s7j22l8",
								"updated": "20231113162322"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "管理控件"
								}
							]
						}
					]
				},
				{
					"ID": "20231113162324-m86mx7t",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20231113162324-m86mx7t"
					},
					"Children": [
						{
							"ID": "20231113162324-oitmjrb",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231113162324-oitmjrb",
								"updated": "20231113162606"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "更新控件显示"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20231113162357-if5wssw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231113162357-if5wssw",
				"updated": "20231113162408"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "MainView.cs"
				}
			]
		},
		{
			"ID": "20231113162321-0rib2yu",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20231113162321-0rib2yu",
				"style": "line-height: 22px;",
				"updated": "20231113162418"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "using UnityEngine;\nusing UnityEngine.UI;\n\npublic class MainView : MonoBehaviour\n{\n    //管理控件\n    //提供面板更新相关方法\n\n    public Text txtName;\n    public Text txtLev;\n    public Text txtMoney;\n    public Text txtGem;\n    public Text txtPower;\n\n    public Button btnRole;\n\n    public void UpdateInfo(PlayerModel data)\n    {\n        txtName.text = data.Name;\n        txtLev.text = \"LV.\" + data.Level.ToString();\n        txtMoney.text = data.Money.ToString();\n        txtGem.text = data.Gem.ToString();\n        txtPower.text = data.Power.ToString();\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20231113162419-3bl5opg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231113162419-3bl5opg",
				"updated": "20231113162436"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "RoleView.cs"
				}
			]
		},
		{
			"ID": "20231113162437-42ho47y",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20231113162437-42ho47y",
				"style": "line-height: 22px;",
				"updated": "20231113162447"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "using UnityEngine;\nusing UnityEngine.UI;\n\npublic class RoleView : MonoBehaviour\n{\n    public Text txtLev;\n    public Text txtHp;\n    public Text txtAtk;\n    public Text txtDef;\n    public Text txtCrit;\n    public Text txtMiss;\n    public Text txtLuck;\n\n    public Button btnClose;\n    public Button btnLevUp;\n\n    public void UpdateInfo(PlayerModel data)\n    {\n        txtLev.text = \"LV.\" + data.Level.ToString();\n        txtHp.text = data.Hp.ToString();\n        txtAtk.text = data.Atk.ToString();\n        txtDef.text = data.Def.ToString();\n        txtCrit.text = data.Crit.ToString();\n        txtMiss.text = data.Miss.ToString();\n        txtLuck.text = data.Luck.ToString();\n    }\n\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20231113162450-h7bijv8",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20231113162450-h7bijv8",
				"updated": "20231113162459"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Controller层"
				}
			]
		},
		{
			"ID": "20231113162459-o2l9qvw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231113162459-o2l9qvw",
				"updated": "20231113162840"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Control层主要负责控制面板的显隐，监听View层传入的用户行为，执行View层的更新方法，执行Model的操作数据方法，监听Model层的数据更新"
				}
			]
		},
		{
			"ID": "20231113162519-75nf859",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231113162519-75nf859",
				"updated": "20231113162709"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "具体实现："
				}
			]
		},
		{
			"ID": "20231113162523-ga3yhk1",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20231113162523-ga3yhk1",
				"updated": "20231113162537"
			},
			"Children": [
				{
					"ID": "20231113162537-flsnctr",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20231113162537-flsnctr",
						"updated": "20231113162537"
					},
					"Children": [
						{
							"ID": "20231113162537-fy57jm6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231113162537-fy57jm6",
								"updated": "20231113162537"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "界面的显隐\n"
								}
							]
						}
					]
				},
				{
					"ID": "20231113162538-p8kac9g",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20231113162538-p8kac9g"
					},
					"Children": [
						{
							"ID": "20231113162538-7bb5ezc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231113162538-7bb5ezc",
								"updated": "20231113162659"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "界面事件的监听 来处理对应的业务逻辑（触发Model层提供的操作数据方法）"
								}
							]
						}
					]
				},
				{
					"ID": "20231113162617-ybsqudl",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20231113162617-ybsqudl"
					},
					"Children": [
						{
							"ID": "20231113162617-viybbcd",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231113162617-viybbcd",
								"updated": "20231113162628"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "监听Model层的数据更新"
								}
							]
						}
					]
				},
				{
					"ID": "20231113162538-r2pgl5o",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20231113162538-r2pgl5o"
					},
					"Children": [
						{
							"ID": "20231113162538-zqb29qy",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231113162538-zqb29qy",
								"updated": "20231113162559"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "执行View层的控件更新方法"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20231113162902-xgx9pz7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231113162902-xgx9pz7",
				"updated": "20231113162914"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "MainController.cs"
				}
			]
		},
		{
			"ID": "20231113162638-fjo3jlv",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20231113162638-fjo3jlv",
				"style": "line-height: 22px;",
				"updated": "20231113162940"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\n\npublic class MainController : MonoBehaviour\n{\n    //界面的显隐\n    //界面事件的监听 来处理对应的业务逻辑\n    //界面的更新\n\n    private static MainController controller = null;\n    public static MainController Instance =\u003e controller;\n\n    //Controller中需要得到界面\n    private MainView mainView;\n\n    private void Start()\n    {\n        mainView = GetComponent\u003cMainView\u003e();\n        mainView.UpdateInfo(PlayerModel.Instance);\n        PlayerModel.Instance.AddEventListener(UpdateInfo);\n        //界面事件的监听，来处理对应的业务逻辑\n        mainView.btnRole.onClick.AddListener(() =\u003e\n        {\n            //显示角色面板\n            RoleController.ShowMe();\n        });\n    }\n\n    private void OnDestroy()\n    {\n        PlayerModel.Instance.RemoveEventListener(UpdateInfo);\n    }\n\n    private void UpdateInfo(PlayerModel player)\n    {\n        if (mainView != null)\n            mainView.UpdateInfo(player);\n    }\n\n    public static void ShowMe()\n    {\n        if (controller == null)\n        {\n            //实例化面板对象\n            GameObject res = Resources.Load\u003cGameObject\u003e(\"UI/MainPanel\");\n            GameObject obj = Instantiate(res);\n            obj.transform.SetParent(GameObject.Find(\"Canvas\").transform, false);\n            controller = obj.GetComponent\u003cMainController\u003e();\n        }\n        controller.gameObject.SetActive(true);\n    }\n\n    public static void HideMe()\n    {\n        if (controller != null)\n        {\n            controller.gameObject.SetActive(false);\n        }\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20231113162915-blhct5l",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231113162915-blhct5l",
				"updated": "20231113162956"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "RoleController.cs"
				}
			]
		},
		{
			"ID": "20231113162928-8rd0y6k",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20231113162928-8rd0y6k",
				"style": "line-height: 22px;",
				"updated": "20231113162953"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class RoleController : MonoBehaviour\n{\n    private RoleView roleView;\n\n    private static RoleController controller = null;\n\n    public static RoleController Controller =\u003e controller;\n\n    void Start()\n    {\n        roleView = GetComponent\u003cRoleView\u003e();\n        roleView.UpdateInfo(PlayerModel.Instance);\n        PlayerModel.Instance.AddEventListener(UpdateInfo);\n        roleView.btnClose.onClick.AddListener(() =\u003e\n        {\n            HideMe();\n        });\n        roleView.btnLevUp.onClick.AddListener(() =\u003e\n        {\n            PlayerModel.Instance.LevelUp();\n        });\n    }\n\n    private void OnDestroy()\n    {\n        PlayerModel.Instance.RemoveEventListener(UpdateInfo);\n    }\n\n    private void UpdateInfo(PlayerModel player)\n    {\n        if (roleView != null)\n            roleView.UpdateInfo(player);\n    }\n\n    public static void ShowMe()\n    {\n        if (controller == null)\n        {\n            //实例化面板对象\n            GameObject res = Resources.Load\u003cGameObject\u003e(\"UI/RolePanel\");\n            GameObject obj = Instantiate(res);\n            obj.transform.SetParent(GameObject.Find(\"Canvas\").transform, false);\n            controller = obj.GetComponent\u003cRoleController\u003e();\n        }\n        controller.gameObject.SetActive(true);\n    }\n\n    public static void HideMe()\n    {\n        if (controller != null)\n        {\n            controller.gameObject.SetActive(false);\n        }\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20231113164138-4cqgc8q",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20231113164138-4cqgc8q",
				"updated": "20231113164157"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用MVC带来的改变"
				}
			]
		},
		{
			"ID": "20231113164159-1kjwtlt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231113164159-1kjwtlt",
				"updated": "20231113164404"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "很显然，使用MVC的思路来编写UI脚本，数据管理，业务逻辑，用户界面这三块逻辑得到了分离\n虽然脚本因此变的更多，但是面板交互的逻辑更加清晰了，各个类的职责也更加的清晰\n"
				}
			]
		},
		{
			"ID": "20231113164408-x7t7cpe",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231113164408-x7t7cpe",
				"updated": "20231113165027"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "MVC具体带来的改变在"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20231113164454-e49xl0l",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "下一章"
				},
				{
					"Type": "NodeText",
					"Data": "具体讲解"
				}
			]
		},
		{
			"ID": "20231113164336-gu092m0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231113164336-gu092m0",
				"updated": "20231113164337"
			}
		}
	]
}