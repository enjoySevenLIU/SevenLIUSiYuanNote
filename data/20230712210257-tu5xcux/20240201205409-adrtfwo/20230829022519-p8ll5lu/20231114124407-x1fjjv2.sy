{
	"ID": "20231114124407-x1fjjv2",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20231114124407-x1fjjv2",
		"scroll": "\u0026#123;\u0026quot;rootId\u0026quot;:\u0026quot;20231114124407-x1fjjv2\u0026quot;,\u0026quot;startId\u0026quot;:\u0026quot;20231114124553-j1ym32x\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20231114125916-akniomt\u0026quot;,\u0026quot;scrollTop\u0026quot;:3681.333251953125,\u0026quot;focusId\u0026quot;:\u0026quot;20231114125836-hwwfgt6\u0026quot;,\u0026quot;focusStart\u0026quot;:1269,\u0026quot;focusEnd\u0026quot;:1269\u0026#125;",
		"title": "UMVCL11——MVE基本实例",
		"type": "doc",
		"updated": "20240703161812"
	},
	"Children": [
		{
			"ID": "20231114124553-j1ym32x",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20231114124553-j1ym32x",
				"updated": "20240703161812"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "MVE基本实例"
				}
			]
		},
		{
			"ID": "20231114124553-ow3u98p",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231114124553-ow3u98p",
				"updated": "20231114124553"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "还是和上一章相同的UI需求"
				}
			]
		},
		{
			"ID": "20231114124553-cf6wvlk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231114124553-cf6wvlk",
				"updated": "20231114124553"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "假设我们有一个主面板，它的各个UI控件需要的效果如下"
				}
			]
		},
		{
			"ID": "20231114124553-6snvcvk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231114124553-6snvcvk",
				"updated": "20231114124553"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"parent-style": "width: 501px;",
						"style": "width: 491px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20231112213410-j7bpo8t.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 491px;\" parent-style=\"width: 501px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20231114124553-4gc902s",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231114124553-4gc902s",
				"updated": "20231114124553"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "有一个选角面板，它的各个UI控件需要的效果如下"
				}
			]
		},
		{
			"ID": "20231114124553-aqufr2c",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231114124553-aqufr2c",
				"updated": "20231114124553"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"parent-style": "width: 225px;",
						"style": "width: 215px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20231112213650-yo8frii.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 215px;\" parent-style=\"width: 225px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20231114124608-ogkiv1c",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20231114124608-ogkiv1c",
				"updated": "20240703161812"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "前置知识"
				}
			]
		},
		{
			"ID": "20231114124608-99h6yec",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231114124608-99h6yec",
				"updated": "20231114124752"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "本章的代码编写使用了Unity小框架的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20230829012425-otyifkx",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "UI管理器"
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20230829012447-1dg4nxi",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "UI基类"
				},
				{
					"Type": "NodeText",
					"Data": "以及"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20230824161031-qd6k4g1",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "事件中心"
				},
				{
					"Type": "NodeText",
					"Data": "，需要先学习这方面内容才能理解下列代码\n并基于"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20231114121907-xt2lysk",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "MP的代码"
				},
				{
					"Type": "NodeText",
					"Data": "进行修改"
				}
			]
		},
		{
			"ID": "20231114124757-k4f35mb",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20231114124757-k4f35mb",
				"updated": "20240703161812"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Model"
				}
			]
		},
		{
			"ID": "20231114125539-g2i43wx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231114125539-g2i43wx",
				"updated": "20231114125633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "相比之前的MVC的Model，这里不再需要向自己去触发数据更新的事件，而是直接向事件中心去触发事件"
				}
			]
		},
		{
			"ID": "20231114125633-drm7xu7",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20231114125633-drm7xu7",
				"style": "line-height: 22px;",
				"updated": "20240703161812"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "using UnityEngine;\nusing UnityEngine.Events;\n\npublic class PlayerModel\n{\n    //Model层主要负责存储管理数据，及数据相关的操作\n    // 初始化，读取数据\n    // 更新数据\n    // 保存数据\n\n    private static PlayerModel instance = null;\n    public static PlayerModel Instance\n    {\n        get\n        {\n            if (instance == null)\n            {\n                instance = new PlayerModel();\n                instance.Init();\n            }\n            return instance;\n        }\n    }\n    private PlayerModel() { }\n\n    //数据内容\n    private string name;\n    private int level;\n    private int money;\n    private int gem;\n    private int power;\n\n    private int hp;\n    private int atk;\n    private int def;\n    private int crit;\n    private int miss;\n    private int luck;\n\n    #region 对外开放的属性\n    public string Name =\u003e name;\n    public int Level =\u003e level;\n    public int Money =\u003e money;\n    public int Gem =\u003e gem;\n    public int Power =\u003e power;\n\n    public int Hp =\u003e hp;\n    public int Atk =\u003e atk;\n    public int Def =\u003e def;\n    public int Crit =\u003e crit;\n    public int Miss =\u003e miss;\n    public int Luck =\u003e luck;\n\n    #endregion\n\n    //通知外部更新的事件（不再需要Model层触发事件，一切交给PlayerModel层）\n    //private event UnityAction\u003cPlayerModel\u003e updateEvent;\n\n    //数据相关的操作\n    //初始化\n    private void Init()\n    {\n        name = PlayerPrefs.GetString(\"PlayerName\", \"MrTang\");\n        level = PlayerPrefs.GetInt(\"PlayerLev\", 1);\n        money = PlayerPrefs.GetInt(\"PlayerMoney\", 9999);\n        gem = PlayerPrefs.GetInt(\"PlayerGem\", 8888);\n        power = PlayerPrefs.GetInt(\"PlayerPower\", 99);\n\n        hp = PlayerPrefs.GetInt(\"PlayerHp\", 100);\n        atk = PlayerPrefs.GetInt(\"PlayerAtk\", 20);\n        def = PlayerPrefs.GetInt(\"PlayerDef\", 10);\n        crit = PlayerPrefs.GetInt(\"PlayerCrit\", 20);\n        miss = PlayerPrefs.GetInt(\"PlayerMiss\", 10);\n        luck = PlayerPrefs.GetInt(\"PlayerLuck\", 40);\n    }\n\n    //更新\n    public void LevelUp()\n    {\n        //升级 改变内容\n        level += 1;\n        hp += level;\n        atk += level;\n        def += level;\n        crit += level;\n        miss += level;\n        luck += level;\n\n        SaveData();\n    }\n\n    //保存\n    private void SaveData()\n    {\n        PlayerPrefs.SetString(\"PlayerName\", name);\n        PlayerPrefs.SetInt(\"PlayerLev\", level);\n        PlayerPrefs.SetInt(\"PlayerMoney\", money);\n        PlayerPrefs.SetInt(\"PlayerGem\", gem);\n        PlayerPrefs.SetInt(\"PlayerPower\", power);\n\n        PlayerPrefs.SetInt(\"PlayerHp\", hp);\n        PlayerPrefs.SetInt(\"PlayerAtk\", atk);\n        PlayerPrefs.SetInt(\"PlayerDef\", def);\n        PlayerPrefs.SetInt(\"PlayerCrit\", crit);\n        PlayerPrefs.SetInt(\"PlayerMiss\", miss);\n        PlayerPrefs.SetInt(\"PlayerLuck\", luck);\n\n        UpdateInfo();\n    }\n\n    public void AddEventListener(UnityAction\u003cPlayerModel\u003e function)\n    {\n        //updateEvent += function;\n    }\n\n    public void RemoveEventListener(UnityAction\u003cPlayerModel\u003e function)\n    {\n        //updateEvent -= function;\n    }\n\n    //通知外部事件更新的方法\n    private void UpdateInfo()\n    {\n        //updateEvent(this);\n        //向事件中心触发\"玩家数据\"这个事件\n        EventCenter.Instance.EventTrigger\u003cPlayerModel\u003e(\"玩家数据\", this);\n    }\n}\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20231114125656-15eepq9",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20231114125656-15eepq9",
				"updated": "20231114125707"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "View(Panel)"
				}
			]
		},
		{
			"ID": "20231114125836-dl5kr9l",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231114125836-dl5kr9l",
				"updated": "20231114125846"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "笔者注：实际学习时使用的对老师课上小框架的改编，实际代码可能与课上不符，你可以忽略掉那些意义不明的参数"
				}
			]
		},
		{
			"ID": "20231114125707-jilo9o4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231114125707-jilo9o4",
				"updated": "20231114125820"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "相比MP的Panel，现在的Panel脚本不再需要向Model层监听数据，而是直接向事件中心去监听Model层触发的事件"
				}
			]
		},
		{
			"ID": "20231114125836-s9u6lkv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231114125836-s9u6lkv",
				"updated": "20231114125836"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "MP_MainPanel.cs"
				}
			]
		},
		{
			"ID": "20231114125836-hwwfgt6",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20231114125836-hwwfgt6",
				"style": "line-height: 22px;",
				"updated": "20231114125946"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "using UnityEngine.UI;\n\npublic class MP_MainPanel : BasePanel\n{\n    //1.找控件 通过集成小框架中的UI基类实现了\n    //2.逻辑处理\n    //3.数据更新\n\n    // Start is called before the first frame update\n    void Start()\n    {\n        UpdateInfo(PlayerModel.Instance);\n        //直接向事件中心去监听\"玩家数据\"的事件\n        //PlayerModel.Instance.AddEventListener(UpdateInfo);\n        EventCenter.Instance.AddEventListener\u003cPlayerModel\u003e(\"玩家数据\", UpdateInfo);\n    }\n\n    private void OnDestroy()\n    {\n        //PlayerModel.Instance.RemoveEventListener(UpdateInfo);\n        EventCenter.Instance.RemoveEventListener\u003cPlayerModel\u003e(\"玩家数据\", UpdateInfo);\n    }\n\n    protected override void BtnOnClick(string btnName)\n    {\n        base.BtnOnClick(btnName);\n        switch (btnName)\n        {\n            case \"btnRole\":\n                UIManager.Instance.ShowPanel\u003cMP_RolePanel\u003e(false);\n                break;\n        }\n    }\n\n    public void UpdateInfo(PlayerModel data)\n    {\n        //直接在这里获取控件 进行更新\n        GetControl\u003cText\u003e(\"txtName\").text = data.Name;\n        GetControl\u003cText\u003e(\"txtLev\").text = \"LV.\" + data.Level;\n\n        GetControl\u003cText\u003e(\"txtMoney\").text = data.Money.ToString();\n        GetControl\u003cText\u003e(\"txtGem\").text = data.Gem.ToString();\n        GetControl\u003cText\u003e(\"txtPower\").text = data.Power.ToString();\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20231114125836-kpw3j8n",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231114125836-kpw3j8n",
				"updated": "20231114125836"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "MP_RolePanel.cs"
				}
			]
		},
		{
			"ID": "20231114125836-kl45tpz",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20231114125836-kl45tpz",
				"style": "line-height: 22px;",
				"updated": "20231114125935"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "using UnityEngine.UI;\n\npublic class MP_RolePanel : BasePanel\n{\n    //1.找控件 通过集成小框架中的UI基类实现了\n    //2.逻辑处理\n    //3.数据更新\n\n    // Start is called before the first frame update\n    void Start()\n    {\n        UpdateInfo(PlayerModel.Instance);\n        //直接向事件中心去监听\"玩家数据\"的事件\n        //PlayerModel.Instance.AddEventListener(UpdateInfo);\n        EventCenter.Instance.AddEventListener\u003cPlayerModel\u003e(\"玩家数据\", UpdateInfo);\n    }\n\n    private void OnDestroy()\n    {\n        //PlayerModel.Instance.RemoveEventListener(UpdateInfo);\n        EventCenter.Instance.RemoveEventListener\u003cPlayerModel\u003e(\"玩家数据\", UpdateInfo);\n    }\n\n    protected override void BtnOnClick(string btnName)\n    {\n        base.BtnOnClick(btnName);\n        switch (btnName)\n        {\n            case \"btnClose\":\n                UIManager.Instance.HidePanel\u003cMP_RolePanel\u003e(false);\n                break;\n            case \"btnLevUp\":\n                PlayerModel.Instance.LevelUp();\n                break;\n        }\n    }\n\n    public void UpdateInfo(PlayerModel data)\n    {\n        GetControl\u003cText\u003e(\"txtLev\").text = \"LV.\" + data.Level;\n        GetControl\u003cText\u003e(\"txtHp\").text = data.Hp.ToString();\n        GetControl\u003cText\u003e(\"txtAtk\").text = data.Atk.ToString();\n        GetControl\u003cText\u003e(\"txtDef\").text = data.Def.ToString();\n        GetControl\u003cText\u003e(\"txtCrit\").text = data.Crit.ToString();\n        GetControl\u003cText\u003e(\"txtMiss\").text = data.Miss.ToString();\n        GetControl\u003cText\u003e(\"txtLuck\").text = data.Luck.ToString();\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20231114125916-akniomt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231114125916-akniomt"
			}
		}
	]
}