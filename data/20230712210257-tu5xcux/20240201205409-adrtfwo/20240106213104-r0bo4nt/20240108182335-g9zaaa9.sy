{
	"ID": "20240108182335-g9zaaa9",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20240108182335-g9zaaa9",
		"title": "ZMUIL2——遮罩系统",
		"updated": "20240125221020"
	},
	"Children": [
		{
			"ID": "20240123203803-yf7huwm",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240123203803-yf7huwm",
				"updated": "20240123205436"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "遮罩系统要做的工作"
				}
			]
		},
		{
			"ID": "20240124230646-6d5jkyn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240124230646-6d5jkyn",
				"updated": "20240124230921"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "开启单遮模式时，每当调用"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "UIModule"
				},
				{
					"Type": "NodeText",
					"Data": "​来控制UI窗口显示隐藏时，\n​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "UIModule"
				},
				{
					"Type": "NodeText",
					"Data": "​的遮罩系统都要计算显示的窗口中哪个窗口需要开启遮罩，并隐藏其他窗口的遮罩，以达到单遮的效果"
				}
			]
		},
		{
			"ID": "20240124230506-d80nics",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240124230506-d80nics",
				"updated": "20240124230707"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "UI配置文件可设定是否开启单遮模式"
				}
			]
		},
		{
			"ID": "20240108182335-wtlkbbd",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20240108182335-wtlkbbd",
				"updated": "20240108182613"
			},
			"Children": [
				{
					"ID": "20240108182612-0vj80fx",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240108182612-0vj80fx",
						"updated": "20240108182612"
					},
					"Children": [
						{
							"ID": "20240108182612-10t7nzr",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240108182612-10t7nzr",
								"updated": "20240108182613"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "单遮模式：无论打开多少界面，"
								},
								{
									"Type": "NodeText",
									"Data": "遮罩"
								},
								{
									"Type": "NodeText",
									"Data": "只有一层。\n"
								}
							]
						}
					]
				},
				{
					"ID": "20240108182613-4zw5nw0",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240108182613-4zw5nw0",
						"updated": "20240108182613"
					},
					"Children": [
						{
							"ID": "20240108182613-y9a8f2p",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240108182613-y9a8f2p"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "叠遮模式：即每一个界面都有一层"
								},
								{
									"Type": "NodeText",
									"Data": "遮罩"
								},
								{
									"Type": "NodeText",
									"Data": "，打开的界面越多，"
								},
								{
									"Type": "NodeText",
									"Data": "遮罩"
								},
								{
									"Type": "NodeText",
									"Data": "就越黑。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240124230951-eox0tiq",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240124230951-eox0tiq",
				"updated": "20240124231315"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "UIModule的遮罩系统相关"
				}
			]
		},
		{
			"ID": "20240124233552-4qw1t0x",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20240124233552-4qw1t0x",
				"updated": "20240124231315"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "配置文件"
				}
			]
		},
		{
			"ID": "20240124231441-z2jy7f5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240124231441-z2jy7f5",
				"updated": "20240125213109"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "首先需要配置文件来控制遮罩系统的开关，使用继承"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "ScriptableObject"
				},
				{
					"Type": "NodeText",
					"Data": "​的单例配置文件"
				}
			]
		},
		{
			"ID": "20240124231544-o2w2sf2",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240124231544-o2w2sf2",
				"style": "line-height: 22px;",
				"updated": "20240124231315"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "using UnityEngine;\n\n[CreateAssetMenu(fileName = \"UISetting\", menuName = \"UISetting\", order = 0)]\npublic class UISetting : ScriptableObject\n{\n    private static UISetting instance;\n    public static UISetting Instance\n    {\n        get\n        {\n            if (instance == null)\n            {\n                instance = Resources.Load\u003cUISetting\u003e(\"UISetting\");\n            }\n            return instance;\n        }\n    }\n\n    public bool SINGMASK_SYSTEM;    //是否启用单遮模式\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240124231806-76mv2vx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240124231806-76mv2vx",
				"updated": "20240124231315"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "右键创建UISetting配置文件，即可在选择是否开启单遮模式"
				}
			]
		},
		{
			"ID": "20240124231820-9fc7zi4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240124231820-9fc7zi4",
				"updated": "20240124231315"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"parent-style": "width: 537px;",
						"style": "width: 527px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20240108190806-yc33yh3.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 527px;\" parent-style=\"width: 537px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20240124233609-462xz1d",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20240124233609-462xz1d",
				"updated": "20240124231315"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "UI对象结构"
				}
			]
		},
		{
			"ID": "20240124231953-y7nnryv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240124231953-y7nnryv",
				"updated": "20240124231315"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "为了便于"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "UIModule"
				},
				{
					"Type": "NodeText",
					"Data": "​管理各个窗口的遮罩，窗口对象的基本结构规定为："
				}
			]
		},
		{
			"ID": "20240124232149-7fw4l6a",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240124232149-7fw4l6a",
				"updated": "20240124231315"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20240124232149-42k3gvu.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20240124232230-4be71rt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240124232230-4be71rt",
				"updated": "20240124231315"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "其中，UIMask对象为一个覆盖全屏的黑色"
				},
				{
					"Type": "NodeText",
					"Data": "Image"
				},
				{
					"Type": "NodeText",
					"Data": "，黑色"
				},
				{
					"Type": "NodeText",
					"Data": "Image"
				},
				{
					"Type": "NodeText",
					"Data": "的透明度由CanvasGroup决定"
				}
			]
		},
		{
			"ID": "20240124232229-23ny4a0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240124232229-23ny4a0",
				"updated": "20240124231315"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "简单来说，一个Window模板对象会包括"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "UIMask对象作为背景遮罩"
				},
				{
					"Type": "NodeText",
					"Data": "，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "UIContent作为所有UI控件的父对象"
				}
			]
		},
		{
			"ID": "20240124232212-w58cje0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240124232212-w58cje0",
				"updated": "20240124231315"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "值得一提的是："
				}
			]
		},
		{
			"ID": "20240124232212-1si87c9",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20240124232212-1si87c9",
				"updated": "20240125164855"
			},
			"Children": [
				{
					"ID": "20240124232212-8mqil50",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240124232212-8mqil50",
						"updated": "20240125164855"
					},
					"Children": [
						{
							"ID": "20240124232212-zqf83be",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240124232212-zqf83be",
								"updated": "20240125164855"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "使用这里的UIMask遮罩对象会使用Canvas Group进行控制遮罩的显示与隐藏\n不使用"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "SetActive"
								},
								{
									"Type": "NodeText",
									"Data": "​设置的原因是，使用它会造成UI对象重绘，浪费性能"
								}
							]
						}
					]
				},
				{
					"ID": "20240124232212-qxw0dbt",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240124232212-qxw0dbt",
						"updated": "20240124232553"
					},
					"Children": [
						{
							"ID": "20240124232212-9y7qtyj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240124232212-9y7qtyj",
								"updated": "20240124232553"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "这里"
								},
								{
									"Type": "NodeText",
									"Data": "创建UIContent作为UI控件父节点的原因是，便于缩放动画的制作，\n可以通过缩放UIContent来制作缩放动画，同时也避免UIMask也跟着缩放。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240124233627-z1fvgdh",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20240124233627-z1fvgdh",
				"updated": "20240124231315"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "遮罩系统思路及其实现"
				}
			]
		},
		{
			"ID": "20240124231003-93gxrkv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240124231003-93gxrkv",
				"updated": "20240124231315"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "遮罩系统主要在UI窗口显示隐藏时工作，而"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "UIModule"
				},
				{
					"Type": "NodeText",
					"Data": "​负责窗口显隐的执行，因此遮罩系统主要在"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "UIModule"
				},
				{
					"Type": "NodeText",
					"Data": "​内实现"
				}
			]
		},
		{
			"ID": "20240124233806-0np3gta",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240124233806-0np3gta",
				"updated": "20240124231315"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "首先需要在"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "WindowBase"
				},
				{
					"Type": "NodeText",
					"Data": "​内实现对UIMask显隐的控制，并对"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "UIModule"
				},
				{
					"Type": "NodeText",
					"Data": "​提供控制窗口UIMask显隐的接口"
				}
			]
		},
		{
			"ID": "20240124233833-e5hliw9",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240124233833-e5hliw9",
				"style": "line-height: 22px;",
				"updated": "20240124231315"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public class WindowBase : WindowBehaviour\n{\n    //常用UI控件管理列表\n\t//...\n\n    private CanvasGroup mUIMask;        //窗口的遮罩\n    protected Transform mUIContent;     //窗口的UI控件父节点\n\n    //初始化基类组件\n    private void InitializeBaseComponent()\n    {\n        mUIMask = transform.Find(\"UIMask\").GetComponent\u003cCanvasGroup\u003e();\n        mUIContent = transform.Find(\"UIContent\").transform;\n    }\n\n    #region 生命周期函数的声明\n    public override void OnAwake()\n    {\n        base.OnAwake();\n        InitializeBaseComponent();\n    }\n\n\t//...\n    #endregion\n\n    public override void SetVisible(bool isVisible)\n    {\n\t\t//...\n    }\n\n    // 控制遮罩是否生效，仅在单遮模式开启时有效\n    public void SetMaskVisible(bool isVisible)\n    {\n        //如果未开启单遮模式，则直接返回\n        if (!UISetting.Instance.SINGMASK_SYSTEM) return;\n        mUIMask.alpha = isVisible ? 1f : 0f;\n    }\n\n    #region 事件管理方法\n    //...\n    #endregion\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240124233519-gm8z1f9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240124233519-gm8z1f9",
				"updated": "20240124231315"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "接下来需要在"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "UIModule"
				},
				{
					"Type": "NodeText",
					"Data": "​实现一套调节UI遮罩的算法，原理较复杂，使用伪代码阐述思路"
				}
			]
		},
		{
			"ID": "20240124233519-jukip31",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240124233519-jukip31",
				"style": "line-height: 22px;",
				"updated": "20240125221020"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "目的：通过调用WindowBase类的SetMaskVisible方法开启唯一符合条件的窗口的遮罩，关闭所有不符合条件的窗口的遮罩，实现单遮效果\n符合开启遮罩的窗口的条件：窗口的Canvas的sortingOrder最大时，位于兄弟窗口排序最靠后的窗口\n\nprivate void 设置窗口遮罩()\n{\n\tif 未开启单遮模式\n\t\treturn\n\tvar 要开启遮罩的窗口 = null\n\tfor 遍历所有的可见的窗口\n\t\tif 遍历到的窗口不为空且对应的UI对象也不为空\n\t\t\t关闭当前循环到的窗口的遮罩\n\t\t\tif 要开启遮罩的窗口 == null\n\t\t\t\t要开启遮罩的窗口 = 当前循环到的窗口\n\t\t\telse\n\t\t\t\tif 要开启遮罩的窗口的渲染层级 \u003c 当前循环到的窗口的渲染层级\n\t\t\t\t\t要开启遮罩的窗口 = 当前循环到的窗口\n\t\t\t\telse if 要开启遮罩的窗口的渲染层级 == 当前循环到的窗口的渲染层级 \u0026\u0026 要开启遮罩的窗口比当前循环到的窗口在同层级排序中更靠下\n\t\t\t\t\t要开启遮罩的窗口 = 当前循环到的窗口\n\tif 要开启遮罩的窗口不为空\n\t\t开启唯一符合条件的窗口的遮罩\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240124233331-cs2h4qw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240124233331-cs2h4qw",
				"updated": "20240124231315"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "SetWindowMaskVisible()"
				},
				{
					"Type": "NodeText",
					"Data": "​会在"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "UIModule"
				},
				{
					"Type": "NodeText",
					"Data": "​的弹出窗口，隐藏窗口，销毁窗口里调用，达到每次显示隐藏面板时都会计算哪个面板需要开启遮罩，实现单遮"
				}
			]
		},
		{
			"ID": "20240124231852-1t63n3x",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240124231852-1t63n3x",
				"style": "line-height: 22px;",
				"updated": "20240124231315"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "//UIModule内\n\n#region 控制遮罩相关\n//单遮模式下，设置窗口遮罩\nprivate void SetWindowMaskVisible()\n{\n    //如果未开启单遮模式，则直接返回\n    if (!UISetting.Instance.SINGMASK_SYSTEM) return;\n    WindowBase maxOrderWindowBase = null;   //渲染层级最大的窗口\n    int maxOrder = 0;                       //渲染层级最大窗口的渲染层级\n    int maxIndex = 0;                       //最大排序下标，在相同父节点下的位置下标\n    //1. 关闭所有窗口的Mask，设置为不可见\n    //2. 从所有可见窗口中，找到一个层级最大的窗口，设置Mask为可见\n    for (int i = 0; i \u003c mVisibleWindowList.Count; i++)\n    {\n        WindowBase window = mVisibleWindowList[i];\n        //当窗口管理类不为空且游戏对象不为空时\n        if (window != null \u0026\u0026 window.gameObject != null)\n        {\n            //先关闭遮罩\n            window.SetMaskVisible(false);\n            if (maxOrderWindowBase == null)\n            {\n                maxOrderWindowBase = window;\n                maxOrder = window.Canvas.sortingOrder;\n                maxIndex = window.transform.GetSiblingIndex();\n            }\n            else\n            {\n                //找到最大渲染层级的窗口，获取它\n                if (maxOrder \u003c window.Canvas.sortingOrder)\n                {\n                    maxOrderWindowBase = window;\n                    maxOrder = window.Canvas.sortingOrder;\n                }\n                //如果两个窗口的渲染层级相同，就找到同节点下最靠下的物体，优先渲染这个最靠下的Mask\n                else if (maxOrder == window.Canvas.sortingOrder \u0026\u0026 maxIndex \u003c window.transform.GetSiblingIndex())\n                {\n                    maxOrderWindowBase = window;\n                    maxIndex = window.transform.GetSiblingIndex();\n                }\n            }\n        }\n    }\n    //遍历完所有窗口后，得到层级最大且同节点最靠下的窗口，只开启这一个最大的窗口即可\n    maxOrderWindowBase?.SetMaskVisible(true);\n}\n#endregion\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240124231218-vv18il0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240124231218-vv18il0",
				"updated": "20240124231315"
			}
		},
		{
			"ID": "20240124231617-ofll1zt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240124231617-ofll1zt",
				"updated": "20240124231315"
			}
		}
	]
}