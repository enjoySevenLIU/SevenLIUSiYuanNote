{
	"ID": "20240423120111-57pa1ob",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20240423120111-57pa1ob",
		"title": "UFL10-1——TimerItem 具体实现",
		"type": "doc",
		"updated": "20240423130505"
	},
	"Children": [
		{
			"ID": "20240423120148-32o6yuy",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240423120148-32o6yuy",
				"updated": "20240423120148"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "TimerItem 具体实现"
				}
			]
		},
		{
			"ID": "20240423120148-h4z0mmq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240423120148-h4z0mmq",
				"updated": "20240423120149"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "由于计时器对象类是由计时器模块管理器管理，而且常常创建和销毁，因此该类对象可以由缓存池管理"
				}
			]
		},
		{
			"ID": "20240423120148-wx77hta",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240423120148-wx77hta",
				"style": "line-height: 22px;",
				"updated": "20240423120149"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "using UnityEngine.Events;\n\n/// \u003csummary\u003e\n/// 计时器对象，里面存储了计时器的相关数据\n/// \u003c/summary\u003e\npublic class TimerItem : IPoolObject\n{\n    public void ResetInfo() { }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240423120148-mbtiwxx",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20240423120148-mbtiwxx",
				"updated": "20240423130505"
			},
			"Children": [
				{
					"ID": "20240423120148-e7eo4zq",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240423120148-e7eo4zq",
						"updated": "20240423130505"
					},
					"Children": [
						{
							"ID": "20240423120148-ljmtlr0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240423120148-ljmtlr0",
								"updated": "20240423120148"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "需要声明的关键成员"
								}
							]
						},
						{
							"ID": "20240423120148-avkx498",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20240423120148-avkx498",
								"updated": "20240423120148"
							},
							"Children": [
								{
									"ID": "20240423120148-20n8y4n",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20240423120148-20n8y4n",
										"updated": "20240423120148"
									},
									"Children": [
										{
											"ID": "20240423120148-5uqunj5",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240423120148-5uqunj5",
												"updated": "20240423120148"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "唯一ID"
												}
											]
										}
									]
								},
								{
									"ID": "20240423120148-fopucli",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "Mi4=",
										"Num": 2
									},
									"Properties": {
										"id": "20240423120148-fopucli",
										"updated": "20240423120148"
									},
									"Children": [
										{
											"ID": "20240423120148-7wg3nea",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240423120148-7wg3nea",
												"updated": "20240423120148"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "延时执行回调委托"
												}
											]
										}
									]
								},
								{
									"ID": "20240423120148-lqhrxfb",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "My4=",
										"Num": 3
									},
									"Properties": {
										"id": "20240423120148-lqhrxfb",
										"updated": "20240423120148"
									},
									"Children": [
										{
											"ID": "20240423120148-xad76rz",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240423120148-xad76rz",
												"updated": "20240423120148"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "间隔执行回到委托"
												}
											]
										}
									]
								},
								{
									"ID": "20240423120148-yfh8lah",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "NC4=",
										"Num": 4
									},
									"Properties": {
										"id": "20240423120148-yfh8lah",
										"updated": "20240423120148"
									},
									"Children": [
										{
											"ID": "20240423120148-nunmfxd",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240423120148-nunmfxd",
												"updated": "20240423120148"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "总时间（毫秒）"
												}
											]
										}
									]
								},
								{
									"ID": "20240423120148-hqx1epm",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "NS4=",
										"Num": 5
									},
									"Properties": {
										"id": "20240423120148-hqx1epm",
										"updated": "20240423120148"
									},
									"Children": [
										{
											"ID": "20240423120148-z8ptku7",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240423120148-z8ptku7",
												"updated": "20240423120148"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "间隔时间（毫秒）"
												}
											]
										}
									]
								},
								{
									"ID": "20240423120148-s3lytgc",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "Ni4=",
										"Num": 6
									},
									"Properties": {
										"id": "20240423120148-s3lytgc",
										"updated": "20240423120148"
									},
									"Children": [
										{
											"ID": "20240423120148-kq2pces",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240423120148-kq2pces",
												"updated": "20240423120148"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "是否开启"
												}
											]
										}
									]
								}
							]
						},
						{
							"ID": "20240423120148-eypuaxp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240423120148-eypuaxp",
								"updated": "20240423120148"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "等等"
								}
							]
						},
						{
							"ID": "20240423120148-bvl5hc9",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240423120148-bvl5hc9",
								"style": "line-height: 22px;",
								"updated": "20240423130505"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "/// \u003csummary\u003e\n/// 唯一ID\n/// \u003c/summary\u003e\npublic int keyID;\n/// \u003csummary\u003e\n/// 计时结束后的委托回调\n/// \u003c/summary\u003e\npublic UnityAction overCallBack;\n/// \u003csummary\u003e\n/// 间隔一定时间去执行的委托回调\n/// \u003c/summary\u003e\npublic UnityAction callBack;\n\n/// \u003csummary\u003e\n/// 毫秒 表示计时器总的计时时间 毫秒：1s = 1000ms\n/// \u003c/summary\u003e\npublic int allTimeMiniSec;\n/// \u003csummary\u003e\n/// 记录一开始计时d的总时间，用于时间重置\n/// \u003c/summary\u003e\npublic int maxAllTimeMiniSec;\n/// \u003csummary\u003e\n/// 间隔执行的回调的时间 毫秒：1s = 1000ms\n/// \u003c/summary\u003e\npublic int intervalTimeMiniSec;\n/// \u003csummary\u003e\n/// 记录一开始的间隔时间，用于时间重置\n/// \u003c/summary\u003e\npublic int maxIntervalTimeMiniSec;\n/// \u003csummary\u003e\n/// 是否在进行计时\n/// \u003c/summary\u003e\npublic bool isRunning;\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20240423120148-l9pn8vo",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240423120148-l9pn8vo",
						"updated": "20240423130454"
					},
					"Children": [
						{
							"ID": "20240423120148-ig87es4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240423120148-ig87es4",
								"updated": "20240423120148"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "需要实现的关键方法"
								}
							]
						},
						{
							"ID": "20240423120148-fjeyu4z",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20240423120148-fjeyu4z",
								"updated": "20240423130454"
							},
							"Children": [
								{
									"ID": "20240423120148-7kifze7",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20240423120148-7kifze7",
										"updated": "20240423130454"
									},
									"Children": [
										{
											"ID": "20240423120148-hymz8b7",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240423120148-hymz8b7",
												"updated": "20240423120148"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "初始化数据"
												}
											]
										},
										{
											"ID": "20240423120148-8mu7l9h",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20240423120148-8mu7l9h",
												"style": "line-height: 22px;",
												"updated": "20240423130454"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "YyM="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "/// \u003csummary\u003e\n/// 初始化计时器数据\n/// \u003c/summary\u003e\n/// \u003cparam name=\"keyID\"\u003e唯一ID\u003c/param\u003e\n/// \u003cparam name=\"allTime\"\u003e总的时间\u003c/param\u003e\n/// \u003cparam name=\"overCallBack\"\u003e总时间计时结束后执行的回调\u003c/param\u003e\n/// \u003cparam name=\"intervalTime\"\u003e间隔时间\u003c/param\u003e\n/// \u003cparam name=\"callBack\"\u003e间隔时间结束后执行的回调\u003c/param\u003e\npublic void InitInfo(int keyID, int allTimeMiliSec, UnityAction overCallBack, int intervalTimeMiliSec = 0, UnityAction callBack = null)\n{\n    this.keyID = keyID;\n    this.maxAllTimeMiniSec = this.allTimeMiniSec = allTimeMiliSec;\n    this.overCallBack = overCallBack;\n    this.maxIntervalTimeMiniSec = this.intervalTimeMiniSec = intervalTimeMiliSec;\n    this.callBack = callBack;\n    this.isRunning = true;\n}\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								},
								{
									"ID": "20240423120148-l7ncqed",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "Mi4=",
										"Num": 2
									},
									"Properties": {
										"id": "20240423120148-l7ncqed",
										"updated": "20240423120148"
									},
									"Children": [
										{
											"ID": "20240423120148-jqr2kgw",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240423120148-jqr2kgw",
												"updated": "20240423120148"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "重置时间"
												}
											]
										},
										{
											"ID": "20240423120148-42dgzbn",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20240423120148-42dgzbn",
												"style": "line-height: 22px;",
												"updated": "20240423120148"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "YyM="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "/// \u003csummary\u003e\n/// 重置计时器\n/// \u003c/summary\u003e\npublic void ResetTimer()\n{\n    this.allTime = this.maxAllTime;\n    this.intervalTime = this.maxIntervalTime;\n    this.isRunning = true;\n}\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								},
								{
									"ID": "20240423120148-rbg9sub",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "My4=",
										"Num": 3
									},
									"Properties": {
										"id": "20240423120148-rbg9sub",
										"updated": "20240423120148"
									},
									"Children": [
										{
											"ID": "20240423120148-5j0xclf",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240423120148-5j0xclf",
												"updated": "20240423120148"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "缓存池管理需要的重置方法"
												}
											]
										},
										{
											"ID": "20240423120148-eudo6kz",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20240423120148-eudo6kz",
												"style": "line-height: 22px;",
												"updated": "20240423120148"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "YyM="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "/// \u003csummary\u003e\n/// 缓存池回收时，取出相关引用数据\n/// \u003c/summary\u003e\npublic void ResetInfo()\n{\n    overCallBack = null;\n    callBack = null;\n}\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								}
							]
						},
						{
							"ID": "20240423120148-24xjl9s",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240423120148-24xjl9s",
								"updated": "20240423120148"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "等等"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240423130434-f938b0x",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240423130434-f938b0x",
				"updated": "20240423130438"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "具体代码"
				}
			]
		},
		{
			"ID": "20240423130439-cutn4p8",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240423130439-cutn4p8",
				"style": "line-height: 22px;",
				"updated": "20240423130443"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "using UnityEngine.Events;\n\n/// \u003csummary\u003e\n/// 计时器对象，里面存储了计时器的相关数据\n/// \u003c/summary\u003e\npublic class TimerItem : IPoolObject\n{\n    /// \u003csummary\u003e\n    /// 唯一ID\n    /// \u003c/summary\u003e\n    public int keyID;\n    /// \u003csummary\u003e\n    /// 计时结束后的委托回调\n    /// \u003c/summary\u003e\n    public UnityAction overCallBack;\n    /// \u003csummary\u003e\n    /// 间隔一定时间去执行的委托回调\n    /// \u003c/summary\u003e\n    public UnityAction callBack;\n\n    /// \u003csummary\u003e\n    /// 毫秒 表示计时器总的计时时间 毫秒：1s = 1000ms\n    /// \u003c/summary\u003e\n    public int allTimeMiniSec;\n    /// \u003csummary\u003e\n    /// 记录一开始计时d的总时间，用于时间重置\n    /// \u003c/summary\u003e\n    public int maxAllTimeMiniSec;\n    /// \u003csummary\u003e\n    /// 间隔执行的回调的时间 毫秒：1s = 1000ms\n    /// \u003c/summary\u003e\n    public int intervalTimeMiniSec;\n    /// \u003csummary\u003e\n    /// 记录一开始的间隔时间，用于时间重置\n    /// \u003c/summary\u003e\n    public int maxIntervalTimeMiniSec;\n    /// \u003csummary\u003e\n    /// 是否在进行计时\n    /// \u003c/summary\u003e\n    public bool isRunning;\n\n    /// \u003csummary\u003e\n    /// 初始化计时器数据\n    /// \u003c/summary\u003e\n    /// \u003cparam name=\"keyID\"\u003e唯一ID\u003c/param\u003e\n    /// \u003cparam name=\"allTime\"\u003e总的时间\u003c/param\u003e\n    /// \u003cparam name=\"overCallBack\"\u003e总时间计时结束后执行的回调\u003c/param\u003e\n    /// \u003cparam name=\"intervalTime\"\u003e间隔时间\u003c/param\u003e\n    /// \u003cparam name=\"callBack\"\u003e间隔时间结束后执行的回调\u003c/param\u003e\n    public void InitInfo(int keyID, int allTimeMiliSec, UnityAction overCallBack, int intervalTimeMiliSec = 0, UnityAction callBack = null)\n    {\n        this.keyID = keyID;\n        this.maxAllTimeMiniSec = this.allTimeMiniSec = allTimeMiliSec;\n        this.overCallBack = overCallBack;\n        this.maxIntervalTimeMiniSec = this.intervalTimeMiniSec = intervalTimeMiliSec;\n        this.callBack = callBack;\n        this.isRunning = true;\n    }\n\n    /// \u003csummary\u003e\n    /// 重置计时器\n    /// \u003c/summary\u003e\n    public void ResetTimer()\n    {\n        this.allTimeMiniSec = this.maxAllTimeMiniSec;\n        this.intervalTimeMiniSec = this.maxIntervalTimeMiniSec;\n        this.isRunning = true;\n    }\n\n    /// \u003csummary\u003e\n    /// 缓存池回收时，取出相关引用数据\n    /// \u003c/summary\u003e\n    public void ResetInfo()\n    {\n        overCallBack = null;\n        callBack = null;\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		}
	]
}