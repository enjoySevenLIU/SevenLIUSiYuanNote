{
	"ID": "20240417161901-da8qxt5",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20240417161901-da8qxt5",
		"title": "UFL5-1——Resource资源加载模块的具体实现",
		"type": "doc",
		"updated": "20240417171454"
	},
	"Children": [
		{
			"ID": "20240417162127-suomivw",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20240417162127-suomivw",
				"updated": "20240417162245"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20240417162145-xng2opw",
					"Type": "NodeHeading",
					"HeadingLevel": 3,
					"Properties": {
						"id": "20240417162145-xng2opw",
						"updated": "20240417162145"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "前置知识点"
						}
					]
				},
				{
					"ID": "20240417162145-mbjd6z0",
					"Type": "NodeList",
					"ListData": {
						"Typ": 1
					},
					"Properties": {
						"id": "20240417162145-mbjd6z0",
						"updated": "20240417162245"
					},
					"Children": [
						{
							"ID": "20240417162145-9x4cghj",
							"Type": "NodeListItem",
							"ListData": {
								"Typ": 1,
								"Delimiter": 46,
								"Marker": "MS4=",
								"Num": 1
							},
							"Properties": {
								"id": "20240417162145-9x4cghj",
								"updated": "20240417162145"
							},
							"Children": [
								{
									"ID": "20240417162145-rw1fc6p",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20240417162145-rw1fc6p",
										"updated": "20240417162145"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "C"
										},
										{
											"Type": "NodeBackslash",
											"Data": "span",
											"Children": [
												{
													"Type": "NodeText",
													"Data": "#"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "中"
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "code",
											"TextMarkTextContent": "Dictionary"
										},
										{
											"Type": "NodeText",
											"Data": "​相关知识点（C"
										},
										{
											"Type": "NodeBackslash",
											"Data": "span",
											"Children": [
												{
													"Type": "NodeText",
													"Data": "#"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "四部曲之C"
										},
										{
											"Type": "NodeBackslash",
											"Data": "span",
											"Children": [
												{
													"Type": "NodeText",
													"Data": "#"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "进阶中）"
										}
									]
								}
							]
						},
						{
							"ID": "20240417162145-qsz79ml",
							"Type": "NodeListItem",
							"ListData": {
								"Typ": 1,
								"Delimiter": 46,
								"Marker": "Mi4=",
								"Num": 2
							},
							"Properties": {
								"id": "20240417162145-qsz79ml",
								"updated": "20240417162145"
							},
							"Children": [
								{
									"ID": "20240417162145-5798021",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20240417162145-5798021",
										"updated": "20240417162145"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "C"
										},
										{
											"Type": "NodeBackslash",
											"Data": "span",
											"Children": [
												{
													"Type": "NodeText",
													"Data": "#"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "中委托事件相关知识点（C"
										},
										{
											"Type": "NodeBackslash",
											"Data": "span",
											"Children": [
												{
													"Type": "NodeText",
													"Data": "#"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "四部曲之C"
										},
										{
											"Type": "NodeBackslash",
											"Data": "span",
											"Children": [
												{
													"Type": "NodeText",
													"Data": "#"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "进阶中）"
										}
									]
								}
							]
						},
						{
							"ID": "20240417162145-0keeee2",
							"Type": "NodeListItem",
							"ListData": {
								"Typ": 1,
								"Delimiter": 46,
								"Marker": "My4=",
								"Num": 3
							},
							"Properties": {
								"id": "20240417162145-0keeee2",
								"updated": "20240417162245"
							},
							"Children": [
								{
									"ID": "20240417162145-ecxb5gz",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20240417162145-ecxb5gz",
										"updated": "20240417162245"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "Unity中"
										},
										{
											"Type": "NodeTextMark",
											"Properties": {
												"style": "background-color: var(--b3-font-background3);"
											},
											"TextMarkType": "block-ref code text",
											"TextMarkBlockRefID": "20230713031957-op5yt5y",
											"TextMarkBlockRefSubtype": "s",
											"TextMarkTextContent": "Resources"
										},
										{
											"Type": "NodeKramdownSpanIAL",
											"Data": "{: style=\"background-color: var(--b3-font-background3);\"}"
										},
										{
											"Type": "NodeText",
											"Data": "相关知识点（Unity四部曲之Unity基础中）"
										}
									]
								}
							]
						},
						{
							"ID": "20240417162145-hzze8rx",
							"Type": "NodeListItem",
							"ListData": {
								"Typ": 1,
								"Delimiter": 46,
								"Marker": "NC4=",
								"Num": 4
							},
							"Properties": {
								"id": "20240417162145-hzze8rx",
								"updated": "20240417162145"
							},
							"Children": [
								{
									"ID": "20240417162145-geb2y93",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20240417162145-geb2y93",
										"updated": "20240417162145"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "Unity中"
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "block-ref",
											"TextMarkBlockRefID": "20230712214614-4ja3qtk",
											"TextMarkBlockRefSubtype": "s",
											"TextMarkTextContent": "协同程序"
										},
										{
											"Type": "NodeText",
											"Data": "相关知识点（Unity四部曲之Unity基础中）"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240417162245-u5xgqdi",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240417162245-u5xgqdi",
				"updated": "20240417162256"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Resources资源加载模块的具体实现"
				}
			]
		},
		{
			"ID": "20240417162301-e8lmiaf",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240417162301-e8lmiaf",
				"updated": "20240417171005"
			},
			"Children": [
				{
					"ID": "20240417162304-russkp8",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20240417162304-russkp8",
						"updated": "20240417162304"
					},
					"Children": [
						{
							"ID": "20240417162304-ok1vvpt",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240417162304-ok1vvpt",
								"updated": "20240417162324"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "创建 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "ResourcesManager"
								},
								{
									"Type": "NodeText",
									"Data": "​ 继承 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "block-ref",
									"TextMarkBlockRefID": "20240104151530-3axozd7",
									"TextMarkBlockRefSubtype": "s",
									"TextMarkTextContent": "不继承MonoBehaviour的单例模式基类"
								}
							]
						},
						{
							"ID": "20240417163021-hbopstx",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240417163021-hbopstx",
								"style": "line-height: 22px;",
								"updated": "20240417165948"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "using UnityEngine;\nusing UnityEngine.Events;\n\n/// \u003csummary\u003e\n/// Resources 资源加载模块管理器\n/// \u003c/summary\u003e\npublic class ResManager : BaseManager\u003cResManager\u003e\n{\n    private ResManager() { }\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20240417162304-jqwqipx",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20240417162304-jqwqipx",
						"updated": "20240417171005"
					},
					"Children": [
						{
							"ID": "20240417162304-9vr2wvw",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240417162304-9vr2wvw",
								"updated": "20240417162326"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "为它封装"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Resources"
								},
								{
									"Type": "NodeText",
									"Data": "​异步加载资源的相关方法（主要目的 避免异步加载的代码冗余）"
								}
							]
						},
						{
							"ID": "20240417164501-d58nrfp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240417164501-d58nrfp",
								"updated": "20240417165204"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在之前我们使用"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Resources"
								},
								{
									"Type": "NodeText",
									"Data": "​异步加载需要额外声明一个协程，才能去调用异步加载资源的方法"
								}
							]
						},
						{
							"ID": "20240417164627-ypu6aec",
							"Type": "NodeBlockquote",
							"Properties": {
								"id": "20240417164627-ypu6aec",
								"updated": "20240417164627"
							},
							"Children": [
								{
									"Type": "NodeBlockquoteMarker",
									"Data": "\u003e"
								},
								{
									"ID": "20240417164620-ip5pg05",
									"Type": "NodeCodeBlock",
									"IsFencedCodeBlock": true,
									"Properties": {
										"id": "20240417164620-ip5pg05",
										"style": "line-height: 22px;",
										"updated": "20240417165237"
									},
									"Children": [
										{
											"Type": "NodeCodeBlockFenceOpenMarker",
											"Data": "```"
										},
										{
											"Type": "NodeCodeBlockFenceInfoMarker",
											"CodeBlockInfo": "YyM="
										},
										{
											"Type": "NodeCodeBlockCode",
											"Data": "Texture tex\n\nvoid Start()\n{\n    //通过协程 使用加载的资源\n    StartCoroutine(Load());  \n}\n\nIEnumerator Load()\n{\n    ResourceRequest rq = Resources.LoadAsync\u003cTexture\u003e(\"Tex/test\");\n    print(Time.frameCount);\n    yield return rq;    //向Unity协程调度器返回这种类型的变量，Unity就会识别出当前正在执行异步下载资源操作\n    //Unity会自行判断该资源是否加载完毕了 加载完毕后才会继续执行后面的代码\n    tex = rq.asset as Texture;\n}\n\n//使用获取的资源的函数\nprivate void OnGUI()\n{\n    if (tex != null) \t\t//一定要确认获取到资源了才开始渲染GUI\n        GUI.DrawTexture(new Rect(0, 0, 100, 100), tex);\n}\n"
										},
										{
											"Type": "NodeCodeBlockFenceCloseMarker",
											"Data": "```"
										}
									]
								}
							]
						},
						{
							"ID": "20240417164635-9avxfu5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240417164635-9avxfu5",
								"updated": "20240417165119"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "因此可以将额外的协程方法声明封装到管理器内，采用让外部传入回调函数的方式来获取资源"
								}
							]
						},
						{
							"ID": "20240417164952-sjpmntd",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240417164952-sjpmntd",
								"style": "line-height: 22px;",
								"updated": "20240417165054"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "// 异步加载资源的方法\npublic void LoadAsync\u003cT\u003e(string path, UnityAction\u003cT\u003e callBack) where T : UnityEngine.Object\n{\n    //要通过协同程序去异步加载资源\n    MonoManager.Instance.StartCoroutine(ReallyLoadAsync\u003cT\u003e(path, callBack));\n}\n\nprivate IEnumerator ReallyLoadAsync\u003cT\u003e(string path, UnityAction\u003cT\u003e callBack) where T : UnityEngine.Object\n{\n    //异步加载资源\n    ResourceRequest req = Resources.LoadAsync\u003cT\u003e(path);\n    //等待资源加载结束后，才会继续执行yield return后面的代码\n    yield return req;\n    //资源加载结束，将资源传到外部的委托函数去进行调用\n    callBack(req.asset as T);\n}\n\npublic void LoadAsync(string path, Type type, UnityAction\u003cUnityEngine.Object\u003e callBack)\n{\n    MonoManager.Instance.StartCoroutine(ReallyLoadAsync(path, type, callBack));\n}\n\nprivate IEnumerator ReallyLoadAsync(string path, Type type, UnityAction\u003cUnityEngine.Object\u003e callBack)\n{\n    ResourceRequest req = Resources.LoadAsync(path, type);\n    yield return req;\n    callBack(req.asset);\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20240417170437-vxz1ze9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240417170437-vxz1ze9",
								"updated": "20240417171005"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "这样封装以后，异步加载的调用就只需要额外传入一个回调函数即可"
								}
							]
						},
						{
							"ID": "20240417170500-vwg4whw",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240417170500-vwg4whw",
								"style": "line-height: 22px;",
								"updated": "20240417170549"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "void Start()\n{\n    ResManager.Instance.LoadAsync\u003cGameObject\u003e(\"Test\", (obj) =\u003e\n    {\n        Instantiate(obj);\n    });\n\n    ResManager.Instance.LoadAsync(\"Test\", typeof(GameObject), (obj) =\u003e\n    {\n        Instantiate(obj as GameObject);\n    });\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20240417162304-c1pjtqw",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20240417162304-c1pjtqw",
						"updated": "20240417170942"
					},
					"Children": [
						{
							"ID": "20240417162304-bsl9yya",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240417162304-bsl9yya",
								"updated": "20240417170942"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "直接封装"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Resources"
								},
								{
									"Type": "NodeText",
									"Data": "​同步加载资源的相关方法"
								}
							]
						},
						{
							"ID": "20240417165253-n6gr50i",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240417165253-n6gr50i",
								"style": "line-height: 22px;",
								"updated": "20240417170613"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "// 同步加载资源的方法\npublic T Load\u003cT\u003e(string path) where T : UnityEngine.Object\n{\n    return Resources.Load\u003cT\u003e(path);\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20240417162304-p8npgk1",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20240417162304-p8npgk1",
						"updated": "20240417170945"
					},
					"Children": [
						{
							"ID": "20240417162304-plhuctb",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240417162304-plhuctb",
								"updated": "20240417170945"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "直接封装资源卸载相关方法"
								}
							]
						},
						{
							"ID": "20240417170616-43a8pyf",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240417170616-43a8pyf",
								"style": "line-height: 22px;",
								"updated": "20240417170633"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "// 异步卸载对应没有使用的Resources相关资源\npublic void UnloadUnusedAssets(UnityAction callBack)\n{\n    MonoManager.Instance.StartCoroutine(ReallyUnloadUnusedAssets(callBack));\n}\n\nprivate IEnumerator ReallyUnloadUnusedAssets(UnityAction callBack)\n{\n    AsyncOperation ao = Resources.UnloadUnusedAssets();\n    yield return ao;\n    callBack?.Invoke();\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240417170652-cgxxjgo",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240417170652-cgxxjgo",
				"updated": "20240417170659"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用示例"
				}
			]
		},
		{
			"ID": "20240417170744-qx5784z",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240417170744-qx5784z",
				"updated": "20240417170851"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "假设要异步加载Resources文件夹下Test预设体，因此："
				}
			]
		},
		{
			"ID": "20240417170740-u3jj1l5",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240417170740-u3jj1l5",
				"style": "line-height: 22px;",
				"updated": "20240417170848"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "using System;\nusing UnityEngine;\n\npublic class Main : MonoBehaviour\n{\n    void Start()\n    {\n        ResManager.Instance.LoadAsync\u003cGameObject\u003e(\"Test\", (obj) =\u003e\n        {\n            Instantiate(obj);\n        });\n\n        ResManager.Instance.LoadAsync(\"Test\", typeof(GameObject), (obj) =\u003e\n        {\n            Instantiate(obj as GameObject);\n        });\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240417170827-03fr9y8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240417170827-03fr9y8",
				"updated": "20240417170922"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "场景上加载了两个："
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20240417170922-sp3mj42.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20240417171410-x19xf31",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240417171410-x19xf31",
				"updated": "20240417171442"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "具体代码"
				}
			]
		},
		{
			"ID": "20240417171443-4dq763f",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240417171443-4dq763f",
				"style": "line-height: 22px;",
				"updated": "20240417171454"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "using System;\nusing System.Collections;\nusing UnityEngine;\nusing UnityEngine.Events;\n\n/// \u003csummary\u003e\n/// Resources 资源加载模块管理器\n/// \u003c/summary\u003e\npublic class ResManager : BaseManager\u003cResManager\u003e\n{\n    private ResManager() { }\n\n    /// \u003csummary\u003e\n    /// 同步加载资源的方法\n    /// \u003c/summary\u003e\n    /// \u003ctypeparam name=\"T\"\u003e资源类型\u003c/typeparam\u003e\n    /// \u003cparam name=\"path\"\u003e\u003c/param\u003e\n    /// \u003creturns\u003e\u003c/returns\u003e\n    public T Load\u003cT\u003e(string path) where T : UnityEngine.Object\n    {\n        return Resources.Load\u003cT\u003e(path);\n    }\n\n    /// \u003csummary\u003e\n    /// 异步加载资源的方法\n    /// \u003c/summary\u003e\n    /// \u003ctypeparam name=\"T\"\u003e资源类型\u003c/typeparam\u003e\n    /// \u003cparam name=\"path\"\u003e资源路径（Resources下的）\u003c/param\u003e\n    /// \u003cparam name=\"callBack\"\u003e加载结束后的回调函数\u003c/param\u003e\n    public void LoadAsync\u003cT\u003e(string path, UnityAction\u003cT\u003e callBack) where T : UnityEngine.Object\n    {\n        //要通过协同程序去异步加载资源\n        MonoManager.Instance.StartCoroutine(ReallyLoadAsync\u003cT\u003e(path, callBack));\n    }\n\n    private IEnumerator ReallyLoadAsync\u003cT\u003e(string path, UnityAction\u003cT\u003e callBack) where T : UnityEngine.Object\n    {\n        //异步加载资源\n        ResourceRequest req = Resources.LoadAsync\u003cT\u003e(path);\n        //等待资源加载结束后，才会继续执行yield return后面的代码\n        yield return req;\n        //资源加载结束，将资源传到外部的委托函数去进行调用\n        callBack(req.asset as T);\n    }\n\n    /// \u003csummary\u003e\n    /// 异步加载资源的方法\n    /// \u003c/summary\u003e\n    /// \u003cparam name=\"path\"\u003e资源路径（Resources下的）\u003c/param\u003e\n    /// \u003cparam name=\"type\"\u003e资源类型\u003c/param\u003e\n    /// \u003cparam name=\"callBack\"\u003e加载结束后的回调函数\u003c/param\u003e\n    public void LoadAsync(string path, Type type, UnityAction\u003cUnityEngine.Object\u003e callBack)\n    {\n        //要通过协同程序去异步加载资源\n        MonoManager.Instance.StartCoroutine(ReallyLoadAsync(path, type, callBack));\n    }\n\n    private IEnumerator ReallyLoadAsync(string path, Type type, UnityAction\u003cUnityEngine.Object\u003e callBack)\n    {\n        //异步加载资源\n        ResourceRequest req = Resources.LoadAsync(path, type);\n        //等待资源加载结束后，才会继续执行yield return后面的代码\n        yield return req;\n        //资源加载结束，将资源传到外部的委托函数去进行调用\n        callBack(req.asset);\n    }\n\n    /// \u003csummary\u003e\n    /// 指定卸载一个资源\n    /// \u003c/summary\u003e\n    /// \u003cparam name=\"assetToUnload\"\u003e要卸载的资源\u003c/param\u003e\n    public void UnloadAsset(UnityEngine.Object assetToUnload)\n    {\n        Resources.UnloadAsset(assetToUnload);\n    }\n\n    /// \u003csummary\u003e\n    /// 异步卸载对应没有使用的Resources相关资源\n    /// \u003c/summary\u003e\n    /// \u003cparam name=\"callBack\"\u003e回调函数\u003c/param\u003e\n    public void UnloadUnusedAssets(UnityAction callBack)\n    {\n        MonoManager.Instance.StartCoroutine(ReallyUnloadUnusedAssets(callBack));\n    }\n\n    private IEnumerator ReallyUnloadUnusedAssets(UnityAction callBack)\n    {\n        AsyncOperation ao = Resources.UnloadUnusedAssets();\n        yield return ao;\n        callBack?.Invoke();\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		}
	]
}