{
	"ID": "20230824013845-c3kcio6",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20230824013845-c3kcio6",
		"scroll": "\u0026#123;\u0026quot;rootId\u0026quot;:\u0026quot;20230824013845-c3kcio6\u0026quot;,\u0026quot;startId\u0026quot;:\u0026quot;20230824014700-iie5y3i\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20230824152346-cki5jzv\u0026quot;,\u0026quot;scrollTop\u0026quot;:358,\u0026quot;focusId\u0026quot;:\u0026quot;20230824152346-cki5jzv\u0026quot;,\u0026quot;focusStart\u0026quot;:2,\u0026quot;focusEnd\u0026quot;:2\u0026#125;",
		"title": "UF_OLDL7——输入控制模块",
		"updated": "20231223160947"
	},
	"Children": [
		{
			"ID": "20230824014700-iie5y3i",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20230824014700-iie5y3i",
				"updated": "20230824014706"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输入控制模块"
				}
			]
		},
		{
			"ID": "20230824013845-29pv4ju",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230824013845-29pv4ju",
				"updated": "20230824014732"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"Properties": {
						"style": "background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"
					},
					"TextMarkType": "text",
					"TextMarkTextContent": "注意！该输入控制模块主要用于PC端，其它操作方式需要作特别的处理，但思路大致一致"
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"
				}
			]
		},
		{
			"ID": "20230824014733-yrqxvvm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230824014733-yrqxvvm",
				"updated": "20230824015454"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在使用输入控制模块前，可能都是在操控角色的Update()内写输入操作逻辑\n但是，如果我们要切换操控的对象，或者多操控一些对象，每一个对象的类里都要写输入操作逻辑，\n这样较为麻烦且不能统一管理，也不利于降低代码耦合性（不同的类都在引用Input类，但是它们输入的逻辑其实是类似的）"
				}
			]
		},
		{
			"ID": "20230824015455-qif5trg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230824015455-qif5trg",
				"updated": "20230824020010"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "通过"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20230823173705-yu9cim0",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "事件中心模块"
				},
				{
					"Type": "NodeText",
					"Data": "，封装一个输入控制模块，它只需要对事件中心发送输入事件，由事件中心触发对象执行监听输入事件的方法\n这样即可缩减代码量，且便于统一管理输入控制逻辑，降低耦合性\n（要控制的对象只需要通过事件中心监听输入控制模块发送的输入事件即可）"
				}
			]
		},
		{
			"ID": "20230824020254-re9a1yt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230824020254-re9a1yt",
				"updated": "20230824020350"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "知识点："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20230709152125-7p9to3z",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "Input"
				},
				{
					"Type": "NodeText",
					"Data": "，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20230823173705-yu9cim0",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "事件中心模块"
				},
				{
					"Type": "NodeText",
					"Data": "，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20230823215438-7eu0apf",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "公共Mono模块"
				}
			]
		},
		{
			"ID": "20230824152359-ufr0vrt",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230824152359-ufr0vrt",
				"updated": "20230824152408"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "最基本的输入模块"
				}
			]
		},
		{
			"ID": "20230824152352-sbvic7l",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230824152352-sbvic7l",
				"updated": "20230824152555"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用方法：\n检测键盘某按键按下检测，向事件中心发送监听“键盘某键按下”“键盘某键抬起”，可以检测\n需要加键就在InputUpdate加调用方法"
				}
			]
		},
		{
			"ID": "20230824152346-cki5jzv",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230824152346-cki5jzv",
				"updated": "20230824152349"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "using UnityEngine;\n/// \u003csummary\u003e\n/// 输入控制模块\n/// \u003c/summary\u003e\npublic class InputManager : BaseManager\u003cInputManager\u003e\n{\n    private bool isInput = false;\n\n    /// \u003csummary\u003e\n    /// 当第一次调用该模块时，先用构造函数初始化，将输入检测方法放入公共Mono的Update内\n    /// \u003c/summary\u003e\n    public InputManager()\n    {\n        MonoManager.Instance().AddUpdateListener(InputUpdate);\n    }\n\n    /// \u003csummary\u003e\n    /// 是否开启或关闭输入检测\n    /// \u003c/summary\u003e\n    /// \u003cparam name=\"isOpen\"\u003e\u003c/param\u003e\n    public void StartOrEnd(bool isOpen)\n    {\n        isInput = isOpen;\n    }\n\n    /// \u003csummary\u003e\n    /// 检测键盘某按键按下检测，向事件中心发送监听“键盘某键按下”“键盘某键抬起”，可以检测\n    /// \u003c/summary\u003e\n    /// \u003cparam name=\"key\"\u003e\u003c/param\u003e\n    private void CheckKeyCode(KeyCode key)\n    {\n        if (Input.GetKeyDown(key))\n            EventCenter.Instance().EventTrigger(\"键盘某键按下\", key);\n        if (Input.GetKeyUp(key))\n            EventCenter.Instance().EventTrigger(\"键盘某键抬起\", key);\n    }\n\n    private void InputUpdate()\n    {\n        if (isInput)\n        {\n            CheckKeyCode(KeyCode.W);\n            CheckKeyCode(KeyCode.S);\n            CheckKeyCode(KeyCode.A);\n            CheckKeyCode(KeyCode.D);\n        }\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		}
	]
}