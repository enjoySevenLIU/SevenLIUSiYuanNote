{
	"ID": "20240422123500-nlu0meg",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20240422123500-nlu0meg",
		"title": "UFL8——场景切换模块",
		"type": "doc",
		"updated": "20240422131825"
	},
	"Children": [
		{
			"ID": "20240422123500-gpnbru7",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20240422123500-gpnbru7",
				"updated": "20240422123748"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20240422123653-ob4r2sb",
					"Type": "NodeHeading",
					"HeadingLevel": 2,
					"Properties": {
						"id": "20240422123653-ob4r2sb",
						"updated": "20240422123703"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "前置知识点"
						}
					]
				},
				{
					"ID": "20240422123703-y9urxz7",
					"Type": "NodeList",
					"ListData": {
						"Typ": 1
					},
					"Properties": {
						"id": "20240422123703-y9urxz7",
						"updated": "20240422123748"
					},
					"Children": [
						{
							"ID": "20240422123711-aon17cr",
							"Type": "NodeListItem",
							"ListData": {
								"Typ": 1,
								"Delimiter": 46,
								"Marker": "MS4=",
								"Num": 1
							},
							"Properties": {
								"id": "20240422123711-aon17cr",
								"updated": "20240422123732"
							},
							"Children": [
								{
									"ID": "20240422123711-f704xqj",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20240422123711-f704xqj",
										"updated": "20240422123732"
									},
									"Children": [
										{
											"Type": "NodeTextMark",
											"TextMarkType": "block-ref",
											"TextMarkBlockRefID": "20230710015730-5lpvaxh",
											"TextMarkBlockRefSubtype": "s",
											"TextMarkTextContent": "场景切换"
										},
										{
											"Type": "NodeText",
											"Data": " 相关知识点 （Unity四部曲之Unity入门）"
										}
									]
								}
							]
						},
						{
							"ID": "20240422123711-o7laib2",
							"Type": "NodeListItem",
							"ListData": {
								"Typ": 1,
								"Delimiter": 46,
								"Marker": "Mi4=",
								"Num": 2
							},
							"Properties": {
								"id": "20240422123711-o7laib2",
								"updated": "20240422123748"
							},
							"Children": [
								{
									"ID": "20240422123711-l9v1xp0",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20240422123711-l9v1xp0",
										"updated": "20240422123748"
									},
									"Children": [
										{
											"Type": "NodeTextMark",
											"TextMarkType": "block-ref",
											"TextMarkBlockRefID": "20230712214614-4ja3qtk",
											"TextMarkBlockRefSubtype": "s",
											"TextMarkTextContent": "协同程序"
										},
										{
											"Type": "NodeText",
											"Data": " 相关知识点 （Unity四部曲之Unity基础）"
										}
									]
								}
							]
						},
						{
							"ID": "20240422123711-mlgeied",
							"Type": "NodeListItem",
							"ListData": {
								"Typ": 1,
								"Delimiter": 46,
								"Marker": "My4=",
								"Num": 3
							},
							"Properties": {
								"id": "20240422123711-mlgeied",
								"updated": "20240422123722"
							},
							"Children": [
								{
									"ID": "20240422123711-x5mt63q",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20240422123711-x5mt63q",
										"updated": "20240422123722"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "委托 相关知识点（C"
										},
										{
											"Type": "NodeBackslash",
											"Data": "span",
											"Children": [
												{
													"Type": "NodeText",
													"Data": "#"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "四部曲之C"
										},
										{
											"Type": "NodeBackslash",
											"Data": "span",
											"Children": [
												{
													"Type": "NodeText",
													"Data": "#"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "进阶）"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240422123749-h2z7w83",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240422123749-h2z7w83",
				"updated": "20240422123757"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "为什么要制作场景切换模块"
				}
			]
		},
		{
			"ID": "20240422123802-wj9c0y0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240422123802-wj9c0y0",
				"updated": "20240422124020"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在游戏开发中很多时候可能需要进行场景切换，只要存在场景切换，我们往往需要在 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "切换场景时"
				},
				{
					"Type": "NodeText",
					"Data": " 和 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "切换场景结束后"
				},
				{
					"Type": "NodeText",
					"Data": " 进行一些操作"
				}
			]
		},
		{
			"ID": "20240422123813-jjkm9ks",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240422123813-jjkm9ks",
				"updated": "20240422123813"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "比如："
				}
			]
		},
		{
			"ID": "20240422123805-hnjbrh0",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240422123805-hnjbrh0",
				"updated": "20240422124219"
			},
			"Children": [
				{
					"ID": "20240422123805-lj7q9x6",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20240422123805-lj7q9x6",
						"updated": "20240422123805"
					},
					"Children": [
						{
							"ID": "20240422123805-saepivt",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240422123805-saepivt",
								"updated": "20240422123805"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "切换场景中\n更新Loading界面进度条"
								}
							]
						}
					]
				},
				{
					"ID": "20240422123805-yxomoeu",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20240422123805-yxomoeu",
						"updated": "20240422124219"
					},
					"Children": [
						{
							"ID": "20240422123805-3mmltfx",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240422123805-3mmltfx",
								"updated": "20240422124219"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "切换场景后\n隐藏Loading界面，动态创建场景中关卡信息：如角色、怪物、场景物件等等"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240422123802-0ky8tub",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240422123802-0ky8tub",
				"updated": "20240422123818"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "因此为了避免有太多关于切换场景的冗余代码，并且为了使用更方便\n我们可以将切换场景的逻辑统一整理在一个场景切换管理器中"
				}
			]
		},
		{
			"ID": "20240422123819-2km1ytx",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240422123819-2km1ytx",
				"updated": "20240422123826"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "实现场景切换模块的主要思路"
				}
			]
		},
		{
			"ID": "20240422123827-oymrht0",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240422123827-oymrht0",
				"updated": "20240422130040"
			},
			"Children": [
				{
					"ID": "20240422123837-vj6a4pu",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20240422123837-vj6a4pu",
						"updated": "20240422123837"
					},
					"Children": [
						{
							"ID": "20240422123837-fxguupa",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240422123837-fxguupa",
								"updated": "20240422123900"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "制作 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "SceneMgr"
								},
								{
									"Type": "NodeText",
									"Data": "​ 单例模式管理器"
								}
							]
						},
						{
							"ID": "20240422125540-569wmzr",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240422125540-569wmzr",
								"style": "line-height: 22px;",
								"updated": "20240422125552"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "public class SceneMgr : BaseManager\u003cSceneMgr\u003e\n{\n    private SceneMgr() { }\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20240422123837-3y93ow8",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20240422123837-3y93ow8",
						"updated": "20240422123837"
					},
					"Children": [
						{
							"ID": "20240422123837-g2tp4a9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240422123837-g2tp4a9",
								"updated": "20240422123837"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "实现同步加载场景 的公共方法"
								}
							]
						},
						{
							"ID": "20240422125554-o0i2irc",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240422125554-o0i2irc",
								"style": "line-height: 22px;",
								"updated": "20240422125657"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "//同步切换场景的方法\npublic void LoadScene(string name, UnityAction callBack = null)\n{\n    //切换场景\n    SceneManager.LoadScene(name);\n    //调用回调\n    callBack?.Invoke();\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20240422123837-znos0z0",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20240422123837-znos0z0",
						"updated": "20240422130027"
					},
					"Children": [
						{
							"ID": "20240422123837-pv3u0vj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240422123837-pv3u0vj",
								"updated": "20240422123837"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "实现异步加载场景 的公共方法"
								}
							]
						},
						{
							"ID": "20240422125604-zn2kyd6",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240422125604-zn2kyd6",
								"style": "line-height: 22px;",
								"updated": "20240422130027"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "//异步切换场景的方法\npublic void LoadSceneAsync(string name, UnityAction callBack = null)\n{\n    MonoManager.Instance.StartCoroutine(ReallyLoadSceneAsync(name, callBack));\n}\n\nprivate IEnumerator ReallyLoadSceneAsync(string sceneName, UnityAction callBack)\n{\n    AsyncOperation ao = SceneManager.LoadSceneAsync(sceneName);\n\tyield return ao;\n    callBack?.Invoke();\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20240422123837-79jxbn1",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20240422123837-79jxbn1",
						"updated": "20240422130040"
					},
					"Children": [
						{
							"ID": "20240422123837-un8sb5t",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240422123837-un8sb5t",
								"updated": "20240422123837"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "实现外部获取异步加载场景进度"
								}
							]
						},
						{
							"ID": "20240422125941-2ign0fa",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240422125941-2ign0fa",
								"updated": "20240422130040"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在异步加载场景的时候，每帧通过"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "block-ref",
									"TextMarkBlockRefID": "20240416175650-evwvijq",
									"TextMarkBlockRefSubtype": "s",
									"TextMarkTextContent": "事件中心"
								},
								{
									"Type": "NodeText",
									"Data": "来将加载进度发送出去（需要为此声明一个事件名）"
								}
							]
						},
						{
							"ID": "20240422125830-run8qwk",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240422125830-run8qwk",
								"style": "line-height: 22px;",
								"updated": "20240422130001"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "/// \u003csummary\u003e\n/// 事件类型枚举\n/// \u003c/summary\u003e\npublic enum E_EventType\n{\n    /// \u003csummary\u003e\n    /// 场景切换时，进度的变化的获取\n    /// \u003c/summary\u003e\n    E_SceneLoadChange,\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20240422125935-phhpv0y",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240422125935-phhpv0y",
								"style": "line-height: 22px;",
								"updated": "20240422125957"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "//异步切换场景的方法\npublic void LoadSceneAsync(string name, UnityAction callBack = null)\n{\n    MonoManager.Instance.StartCoroutine(ReallyLoadSceneAsync(name, callBack));\n}\n\nprivate IEnumerator ReallyLoadSceneAsync(string sceneName, UnityAction callBack)\n{\n    AsyncOperation ao = SceneManager.LoadSceneAsync(sceneName);\n    //不停在协同程序中每帧检测是否加载结束，如果加载结束就不会进入这个每帧循环内\n    while (!ao.isDone)\n    {\n        //可以在这里利用事件执行，每一帧将进度发送给想要得到的地方\n        EventCenter.Instance.EventTrigger(E_EventType.E_SceneLoadChange, ao.progress);\n        yield return 0;\n    }\n    //在场景加载的最后一帧发送1出去，避免加载结束导致1没有被同步发送出去\n    EventCenter.Instance.EventTrigger(E_EventType.E_SceneLoadChange, 1);\n    callBack?.Invoke();\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240422124206-dlf0u3t",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240422124206-dlf0u3t",
				"updated": "20240422130101"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用示例"
				}
			]
		},
		{
			"ID": "20240422131625-vu9njkq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240422131625-vu9njkq",
				"updated": "20240422131825"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "假设点击了UI上的Start Game按钮时，场景就会切换，同时控制台会输出加载进度（面板不会隐藏）"
				}
			]
		},
		{
			"ID": "20240422131622-vnru3sx",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240422131622-vnru3sx",
				"style": "line-height: 22px;",
				"updated": "20240422131708"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "using UnityEngine.UI;\nusing UnityEngine.EventSystems;\n\npublic class BeginPanel : BasePanel\n{\n    private void Start()\n    {\n        EventCenter.Instance.AddEventListener\u003cfloat\u003e(E_EventType.E_SceneLoadChange, ChangeScene);\n    }\n\n    protected override void ClickButton(string btnName)\n    {\n        switch (btnName)\n        {\n            case \"btnBegin\":\n                print(\"开始按钮被点击\");\n                SceneMgr.Instance.LoadSceneAsync(\"Test\", () =\u003e\n                {\n                    print(\"场景加载结束\");\n                });\n                break;\n            case \"btnSetting\":\n                print(\"设置按钮被点击\");\n                break;\n            case \"btnQuit\":\n                print(\"退出按钮被点击\");\n                break;\n        }\n    }\n\n    private void OnDestroy()\n    {\n        EventCenter.Instance.RemoveEventListener\u003cfloat\u003e(E_EventType.E_SceneLoadChange, ChangeScene);\n    }\n\n    private void ChangeScene(float value)\n    {\n        print(\"切换场景的进度：\" + value);\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240422131749-2d1t5x8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240422131749-2d1t5x8",
				"updated": "20240422131804"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输出："
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"parent-style": "width: 447px;",
						"style": "width: 437px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20240422131804-19dcri6.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 437px;\" parent-style=\"width: 447px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20240422130101-djv2y70",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240422130101-djv2y70",
				"updated": "20240422130105"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "具体代码"
				}
			]
		},
		{
			"ID": "20240422130106-dsyq053",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240422130106-dsyq053",
				"style": "line-height: 22px;",
				"updated": "20240422130114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.Events;\nusing UnityEngine.SceneManagement;\n\n/// \u003csummary\u003e\n/// 场景切换管理器 主要用于切换场景\n/// \u003c/summary\u003e\npublic class SceneMgr : BaseManager\u003cSceneMgr\u003e\n{\n    private SceneMgr() { }\n\n    //同步切换场景的方法\n    public void LoadScene(string name, UnityAction callBack = null)\n    {\n        //切换场景\n        SceneManager.LoadScene(name);\n        //调用回调\n        callBack?.Invoke();\n    }\n\n    //异步切换场景的方法\n    public void LoadSceneAsync(string name, UnityAction callBack = null)\n    {\n        MonoManager.Instance.StartCoroutine(ReallyLoadSceneAsync(name, callBack));\n    }\n\n    private IEnumerator ReallyLoadSceneAsync(string sceneName, UnityAction callBack)\n    {\n        AsyncOperation ao = SceneManager.LoadSceneAsync(sceneName);\n        //不停在协同程序中每帧检测是否加载结束，如果加载结束就不会进入这个每帧循环内\n        while (!ao.isDone)\n        {\n            //可以在这里利用事件执行，每一帧将进度发送给想要得到的地方\n            EventCenter.Instance.EventTrigger(E_EventType.E_SceneLoadChange, ao.progress);\n            yield return 0;\n        }\n        //在场景加载的最后一帧发送1出去，避免加载结束导致1没有被同步发送出去\n        EventCenter.Instance.EventTrigger(E_EventType.E_SceneLoadChange, 1);\n        callBack?.Invoke();\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		}
	]
}