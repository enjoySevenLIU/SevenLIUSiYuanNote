{
	"ID": "20230804204326-4nhmooo",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20230804204326-4nhmooo",
		"scroll": "\u0026#123;\u0026quot;rootId\u0026quot;:\u0026quot;20230804204326-4nhmooo\u0026quot;,\u0026quot;startId\u0026quot;:\u0026quot;20230804204326-lrb7wao\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20230804204526-zx3cce5\u0026quot;,\u0026quot;scrollTop\u0026quot;:478,\u0026quot;focusId\u0026quot;:\u0026quot;20230804204326-lrb7wao\u0026quot;,\u0026quot;focusStart\u0026quot;:0,\u0026quot;focusEnd\u0026quot;:0\u0026#125;",
		"title": "U3L14-1——有限状态机",
		"updated": "20230804204735"
	},
	"Children": [
		{
			"ID": "20230804204326-lrb7wao",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20230804204326-lrb7wao",
				"updated": "20230804204430"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "有限状态机"
				}
			]
		},
		{
			"ID": "20230804204437-kyoh9ih",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230804204437-kyoh9ih",
				"updated": "20230804204442"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "有限状态机（Finite - state machine, FSM）\n又称 有限状态自动机，简称 状态机\n是表示有限个状态以及在这些状态之间的转移和动作等行为的数学模型"
				}
			]
		},
		{
			"ID": "20230804204437-o9dilc3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230804204437-o9dilc3",
				"updated": "20230804204437"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "有限：表示是有限度的不是无限的\n状态：指所拥有的所有状态"
				}
			]
		},
		{
			"ID": "20230804204559-0xus1o4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230804204559-0xus1o4",
				"updated": "20230804204559"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "游戏开发中某些系统中存在有限种状态的切换变化时\n我们可以使用有限状态机的设计思路来进行逻辑编写"
				}
			]
		},
		{
			"ID": "20230804204437-0f2xkwy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230804204437-0f2xkwy",
				"updated": "20230804204437"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "举例说明：\n假设我们人会做很多个动作，也就是有很多种状态\n这些状态包括 站立、走路、跑步、攻击、防守、睡觉等等\n我们每天都会在这些状态中切换，而且这些状态虽然多但是是有限的\n当达到某种条件时，我们就会在这些状态中进行切换\n而且这种切换时随时可能发生的"
				}
			]
		},
		{
			"ID": "20230804204446-1si0o7t",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230804204446-1si0o7t",
				"updated": "20230804204452"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "有限状态机对于我们的意义"
				}
			]
		},
		{
			"ID": "20230804204458-o4mjugi",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230804204458-o4mjugi",
				"updated": "20230804204721"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "游戏开发中有很多功能系统都是有限状态机\n最典型的状态机系统\n动作系统 —— 当满足某个条件切换一个动作，且动作是有限的\nAI（人工智能）系统 —— 当满足某个条件切换一个状态，且状态是有限的"
				}
			]
		},
		{
			"ID": "20230804204458-yhovbbc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230804204458-yhovbbc",
				"updated": "20230804204458"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "所以状态机是游戏开发中一个必不可少的概念"
				}
			]
		},
		{
			"ID": "20230804204459-hau678a",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230804204459-hau678a",
				"updated": "20230804204514"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "最简单的状态机实现"
				}
			]
		},
		{
			"ID": "20230804204524-8goe043",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230804204524-8goe043",
				"updated": "20230804204735"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "最简单的状态机实现代码就是基于switch的实现\n假设我们只有一个值来控制当前玩家的状态"
				}
			]
		},
		{
			"ID": "20230804204526-zx3cce5",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230804204526-zx3cce5",
				"updated": "20230804204540"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "string animName = \"idle\";\nswitch (animName)\n{\n    case \"idle\":\n        //待机动作逻辑\n        break;\n    case \"move\":\n        //移动动作逻辑\n        break;\n    case \"run\":\n        //跑步动作逻辑\n        break;\n    case \"atk\":\n        //攻击动作逻辑\n        break;\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		}
	]
}