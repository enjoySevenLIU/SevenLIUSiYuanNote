{
	"ID": "20230808223417-8p6320p",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20230808223417-8p6320p",
		"scroll": "\u0026#123;\u0026quot;rootId\u0026quot;:\u0026quot;20230808223417-8p6320p\u0026quot;,\u0026quot;startId\u0026quot;:\u0026quot;20230808223417-qzwtddz\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20230810003834-3hno9uh\u0026quot;,\u0026quot;scrollTop\u0026quot;:2967,\u0026quot;focusId\u0026quot;:\u0026quot;20230810003834-3hno9uh\u0026quot;,\u0026quot;focusStart\u0026quot;:0,\u0026quot;focusEnd\u0026quot;:0\u0026#125;",
		"title": "U3L18-8——Statemachinebehaviour 状态机行为脚本",
		"type": "doc",
		"updated": "20240321175828"
	},
	"Children": [
		{
			"ID": "20230808223417-qzwtddz",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20230808223417-qzwtddz",
				"updated": "20230809235658"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "状态机行为脚本"
				}
			]
		},
		{
			"ID": "20230809235706-s4vr0c7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230809235706-s4vr0c7",
				"updated": "20240321175828"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "状态机行为脚本时一类特殊的脚本,继承指定的基类，它主要用于关联到状态机中的状态矩形上\n我们可以按照一定规则编写脚本，当进入、退出、保持在某一个特定状态时我们可以进行一些逻辑处理\n简单解释就是为Animator Controller状态机窗口中的某一个状态添加一个脚本\n利用这个脚本我们可以做一些特殊功能\n比如"
				}
			]
		},
		{
			"ID": "20230809235704-tf4eqkg",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230809235704-tf4eqkg",
				"updated": "20230809235706"
			},
			"Children": [
				{
					"ID": "20230809235706-nahc9ol",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230809235706-nahc9ol",
						"updated": "20230809235706"
					},
					"Children": [
						{
							"ID": "20230809235706-v19u4zb",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230809235706-v19u4zb",
								"updated": "20230809235706"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "进入或退出某一状态时播放声音"
								}
							]
						}
					]
				},
				{
					"ID": "20230809235706-sybob0w",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230809235706-sybob0w",
						"updated": "20230809235706"
					},
					"Children": [
						{
							"ID": "20230809235706-scr8umi",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230809235706-scr8umi",
								"updated": "20230809235706"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "仅在某些状态下检测一些逻辑，比如是否接触地面等等"
								}
							]
						}
					]
				},
				{
					"ID": "20230809235706-gtcy7af",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20230809235706-gtcy7af",
						"updated": "20230809235706"
					},
					"Children": [
						{
							"ID": "20230809235706-3wg97n2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230809235706-3wg97n2",
								"updated": "20230809235706"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "激活和控制某些状态相关的特效"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230810003426-7u20eah",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230810003426-7u20eah",
				"updated": "20230810003435"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "本章代码关键字"
				}
			]
		},
		{
			"ID": "20230810003435-z0jx8ih",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230810003435-z0jx8ih",
				"updated": "20230810003755"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "StateMachineBehaviour        //如果想要使一个脚本作为状态机脚本，则必须要继承这个基类\nOnStateEnter() { }           //进入状态时，第一个Update中调用\nOnStateExit() { }            //退出状态时，最后一个Update中调用\nOnStateIK() { }              //OnAnimatorIK后调用\nOnStateMove() { }            //OnAnimatorMove后调用\nOnStateUpdate() { }          //除第一帧和最后一帧，每个Update上调用\nOnStateMachineEnter() { }    //子状态机进入时调用，第一个Update中调用\nOnStateMachineExit() { }     //子状态机退出时调用，最后一个Update中调用\nAnimatorStateInfo            //动画状态信息类，可以从这个类获取该脚本依附的状态信息，例如状态名字等\nstateInfo.IsName()           //可以通过该方法来使用名字确认是否为某个状态\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230809235707-xmmi5zv",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230809235707-xmmi5zv",
				"updated": "20230809235715"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如何使用状态机脚本"
				}
			]
		},
		{
			"ID": "20230809235716-i4nhx93",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230809235716-i4nhx93",
				"updated": "20230810000319"
			},
			"Children": [
				{
					"ID": "20230810000319-i8aysy1",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230810000319-i8aysy1",
						"updated": "20230810000319"
					},
					"Children": [
						{
							"ID": "20230810000319-crv5mn9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230810000319-crv5mn9",
								"updated": "20230810000333"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "新建一个脚本 继承StateMachineBehaviour基类"
								}
							]
						},
						{
							"ID": "20230810000336-3wa694m",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20230810000336-3wa694m",
								"updated": "20230810000401"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "public class Lesson57 : StateMachineBehaviour { }\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20230810000319-usvszsa",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230810000319-usvszsa",
						"updated": "20230810000319"
					},
					"Children": [
						{
							"ID": "20230810000319-ywja9um",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230810000319-ywja9um",
								"updated": "20230810000319"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "实现其中的特定方法进行状态行为监听"
								}
							]
						}
					]
				},
				{
					"ID": "20230810000319-f7ekocv",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20230810000319-f7ekocv",
						"updated": "20230810000319"
					},
					"Children": [
						{
							"ID": "20230810000319-6qerkva",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230810000319-6qerkva",
								"updated": "20230810000319"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "处理对应逻辑"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230810000411-18isr4f",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230810000411-18isr4f",
				"name": "StateMachineBehaviour基类",
				"updated": "20230810000420"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "状态机脚本相关内容"
				}
			]
		},
		{
			"ID": "20230810000420-16hx0jo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230810000420-16hx0jo",
				"updated": "20230810000931"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "脚本必须继承 StateMachineBehaviour基类 才能作为状态机脚本使用"
				}
			]
		},
		{
			"ID": "20230810000922-wunywfp",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230810000922-wunywfp",
				"updated": "20230810000927"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public class Lesson57 : StateMachineBehaviour { }\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230810001150-ipyfazr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230810001150-ipyfazr",
				"updated": "20230810002806"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "方法较多，但是没必要每个都记住，直接Override重写，然后在弹出的菜单里自动补全即可\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"parent-style": "max-width: 693px;",
						"style": "width: 683px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20230810001250-qv0vjen.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 683px;\" parent-style=\"max-width: 693px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230810001420-793bdjg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230810001420-793bdjg",
				"updated": "20230810001612"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "每个重写的方法都会自动出现 base.重写的方法(参数)\n但是实际上基类里并没有任何的实现，因此删去这句代码也不会出现什么问题"
				}
			]
		},
		{
			"ID": "20230810002457-ox2fa00",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230810002457-ox2fa00",
				"updated": "20230810002547"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在状态机脚本类里声明公开变量，可以实现类似于在Inspector窗口上显示变量"
				}
			]
		},
		{
			"ID": "20230810002608-akkepbz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230810002608-akkepbz",
				"updated": "20230810002617"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"parent-style": "max-width: 548px;",
						"style": "width: 538px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20230810002608-gh1k861.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 538px;\" parent-style=\"max-width: 548px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"parent-style": "max-width: 314px;",
						"style": "width: 304px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20230810002617-5ynfbed.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 304px;\" parent-style=\"max-width: 314px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230810000940-ocg4u6k",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230810000940-ocg4u6k",
				"name": "OnStateEnter()",
				"updated": "20230810001049"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "OnStateEnter()"
				}
			]
		},
		{
			"ID": "20230810001051-fdky2yw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230810001051-fdky2yw",
				"updated": "20230810001051"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "进入状态时，第一个Update中调用"
				}
			]
		},
		{
			"ID": "20230810001331-iwq7h0r",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230810001331-iwq7h0r",
				"updated": "20230810002241"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)\n{\n    if (stateInfo.IsName(\"Idle\"))\n        Debug.Log(\"进入了Idle状态\");\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230810001006-f174dnw",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230810001006-f174dnw",
				"name": "OnStateExit()",
				"updated": "20230810001051"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "OnStateExit()"
				}
			]
		},
		{
			"ID": "20230810001053-jfm4ut8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230810001053-jfm4ut8",
				"updated": "20230810001053"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "退出状态时，最后一个Update中调用"
				}
			]
		},
		{
			"ID": "20230810001834-g2olm07",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230810001834-g2olm07",
				"updated": "20230810002239"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)\n{\n    if (stateInfo.IsName(\"Idle\"))\n        Debug.Log(\"退出Idle状态\");\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230810001015-xni8t9l",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230810001015-xni8t9l",
				"name": "OnStateIK()",
				"updated": "20230810001053"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "OnStateIK()"
				}
			]
		},
		{
			"ID": "20230810001055-macqyk6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230810001055-macqyk6",
				"updated": "20230810002357"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在OnAnimatorIK后调用"
				}
			]
		},
		{
			"ID": "20230810001839-1i56lbn",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230810001839-1i56lbn",
				"updated": "20230810002245"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public override void OnStateIK(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)\n{\n    base.OnStateIK(animator, stateInfo, layerIndex);\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230810001021-p6t2c9s",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230810001021-p6t2c9s",
				"name": "OnStateMove()",
				"updated": "20230810001055"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "OnStateMove()"
				}
			]
		},
		{
			"ID": "20230810001058-spwqbwx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230810001058-spwqbwx",
				"updated": "20230810002354"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在OnAnimatorMove后调用"
				}
			]
		},
		{
			"ID": "20230810001841-ncizrir",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230810001841-ncizrir",
				"updated": "20230810002255"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public override void OnStateMove(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)\n{\n    base.OnStateMove(animator, stateInfo, layerIndex);\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230810001032-me6k258",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230810001032-me6k258",
				"name": "OnStateUpdate()",
				"updated": "20230810001058"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "OnStateUpdate()"
				}
			]
		},
		{
			"ID": "20230810001100-ow5el8i",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230810001100-ow5el8i",
				"updated": "20230810001100"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "除第一帧和最后一帧，每个Update上调用"
				}
			]
		},
		{
			"ID": "20230810001844-b49if12",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230810001844-b49if12",
				"updated": "20230810002307"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)\n{\n    base.OnStateUpdate(animator, stateInfo, layerIndex);\n    if (stateInfo.IsName(\"Idle\"))\n        Debug.Log(\"处于Idle状态\");\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230810001036-gd6s6oy",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230810001036-gd6s6oy",
				"name": "OnStateMachineEnter()",
				"updated": "20230810001100"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "OnStateMachineEnter()"
				}
			]
		},
		{
			"ID": "20230810001102-nbpf1jx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230810001102-nbpf1jx",
				"updated": "20230810001102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "子状态机进入时调用，第一个Update中调用"
				}
			]
		},
		{
			"ID": "20230810001846-p56i7f3",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230810001846-p56i7f3",
				"updated": "20230810002321"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public override void OnStateMachineEnter(Animator animator, int stateMachinePathHash)\n{\n    base.OnStateMachineEnter(animator, stateMachinePathHash);\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230810001042-6x4067k",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230810001042-6x4067k",
				"name": "OnStateMachineExit()",
				"updated": "20230810001102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "OnStateMachineExit()"
				}
			]
		},
		{
			"ID": "20230810001046-8c8u6hf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230810001046-8c8u6hf"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "子状态机退出时调用，最后一个Update中调用"
				}
			]
		},
		{
			"ID": "20230810001849-60ziwfy",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230810001849-60ziwfy",
				"updated": "20230810002320"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public override void OnStateMachineExit(Animator animator, int stateMachinePathHash)\n{\n    base.OnStateMachineExit(animator, stateMachinePathHash);\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230810002816-6doa25t",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230810002816-6doa25t",
				"name": "AnimatorStateInfo",
				"updated": "20230810002827"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "AnimatorStateInfo"
				}
			]
		},
		{
			"ID": "20230810002835-026m41r",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230810002835-026m41r",
				"updated": "20230810003026"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "动画状态信息类，可以从这个类获取该脚本依附的状态信息，例如状态名字等"
				}
			]
		},
		{
			"ID": "20230810003027-ufqspra",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230810003027-ufqspra",
				"name": "stateInfo.IsName()",
				"updated": "20230810003043"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "确认状态名字"
				}
			]
		},
		{
			"ID": "20230810003058-7kog9n5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230810003058-7kog9n5",
				"updated": "20230810003128"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可以通过该方法来使用名字确认是否为某个状态"
				}
			]
		},
		{
			"ID": "20230810003044-7pnimyl",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230810003044-7pnimyl",
				"updated": "20230810003055"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "if (stateInfo.IsName(\"Idle\"))\n    Debug.Log(\"进入了Idle状态\");\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230809235743-i9qiu56",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230809235743-i9qiu56",
				"updated": "20230809235744"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "状态机行为脚本和动画事件如何选择"
				}
			]
		},
		{
			"ID": "20230809235752-yey5ec0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230809235752-yey5ec0",
				"updated": "20230809235752"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "状态机行为脚本相对动画事件来说更准确\n但是使用起来稍微麻烦一些"
				}
			]
		},
		{
			"ID": "20230809235752-c06zhv0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230809235752-c06zhv0",
				"updated": "20230809235752"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "根据实际需求选择使用"
				}
			]
		},
		{
			"ID": "20230810003326-964pmew",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230810003326-964pmew",
				"updated": "20230810003413"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "例如，想要在动画中间触发事件可以使用动画事件，想要精确的在动画开始或者结束触发事件可以使用状态机行为脚本"
				}
			]
		},
		{
			"ID": "20230810003834-3hno9uh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230810003834-3hno9uh"
			}
		}
	]
}