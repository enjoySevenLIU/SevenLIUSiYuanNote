{
	"ID": "20230716011214-tbpyhmz",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20230716011214-tbpyhmz",
		"name": "XML反序列化",
		"scroll": "\u0026#123;\u0026quot;rootId\u0026quot;:\u0026quot;20230716011214-tbpyhmz\u0026quot;,\u0026quot;startId\u0026quot;:\u0026quot;20230716011214-smcl0h9\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20230716013842-knclgl1\u0026quot;,\u0026quot;scrollTop\u0026quot;:506,\u0026quot;focusId\u0026quot;:\u0026quot;20230716011953-727xyv0\u0026quot;,\u0026quot;focusStart\u0026quot;:17,\u0026quot;focusEnd\u0026quot;:17\u0026#125;",
		"title": "UD2SL2——XML反序列化",
		"updated": "20240317172836"
	},
	"Children": [
		{
			"ID": "20240317172836-hm7p111",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240317172836-hm7p111",
				"updated": "20240317172836"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "序列化 就是把类对象 转换为 可存储和传输的数据\n反序列化 就是把存储或受到的数据 转换为 类对象"
				}
			]
		},
		{
			"ID": "20240317172836-3qhdghu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240317172836-3qhdghu",
				"updated": "20240317172836"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "xml序列化关键知识"
				}
			]
		},
		{
			"ID": "20240317172836-0vq2w2y",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240317172836-0vq2w2y",
				"updated": "20240317172836"
			},
			"Children": [
				{
					"ID": "20240317172836-a2rwvvu",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20240317172836-a2rwvvu",
						"updated": "20240317172836"
					},
					"Children": [
						{
							"ID": "20240317172836-f50o6gm",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240317172836-f50o6gm",
								"updated": "20240317172836"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "block-ref code",
									"TextMarkBlockRefID": "20230715235537-845my7h",
									"TextMarkBlockRefSubtype": "s",
									"TextMarkTextContent": "using"
								},
								{
									"Type": "NodeText",
									"Data": "​ 和 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "block-ref code",
									"TextMarkBlockRefID": "20230716001802-2d574f8",
									"TextMarkBlockRefSubtype": "s",
									"TextMarkTextContent": "StreamWriter"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						}
					]
				},
				{
					"ID": "20240317172836-qtfyrxc",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20240317172836-qtfyrxc",
						"updated": "20240317172836"
					},
					"Children": [
						{
							"ID": "20240317172836-2c4kwkn",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240317172836-2c4kwkn",
								"updated": "20240317172836"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "block-ref code",
									"TextMarkBlockRefID": "20230716001802-u77asb7",
									"TextMarkBlockRefSubtype": "s",
									"TextMarkTextContent": "XmlSerializer"
								},
								{
									"Type": "NodeText",
									"Data": "​ 的"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "block-ref",
									"TextMarkBlockRefID": "20230715234712-vprlp1y",
									"TextMarkBlockRefSubtype": "s",
									"TextMarkTextContent": " Serialize序列化方法"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240317172825-k8at4pi",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240317172825-k8at4pi",
				"updated": "20240317172825"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "本章代码关键字"
				}
			]
		},
		{
			"ID": "20240317172825-rji3pjh",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240317172825-rji3pjh",
				"style": "line-height: 22px;",
				"updated": "20240317172825"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "StreamReader                    //与StreamWriter相对，是读取的文件流\nxmlSerializer.Deserialize()     //填入读取文件流，将该序列化字段反序列化出一个Object对象\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230716014544-yjjqgrh",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20230716014544-yjjqgrh",
				"updated": "20230716014548"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "反序列化"
				}
			]
		},
		{
			"ID": "20230716014618-5qqj0zi",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230716014618-5qqj0zi",
				"updated": "20240317172734"
			},
			"Children": [
				{
					"ID": "20240317172554-ao9gqld",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20240317172554-ao9gqld",
						"updated": "20240317172645"
					},
					"Children": [
						{
							"ID": "20240317172554-pr0it51",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240317172554-pr0it51",
								"updated": "20240317172645"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "判断文件是否存在 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "File.Exists"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						}
					]
				},
				{
					"ID": "20240317172554-m4b44yi",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20240317172554-m4b44yi",
						"updated": "20240317172647"
					},
					"Children": [
						{
							"ID": "20240317172554-w4093ny",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240317172554-w4093ny",
								"updated": "20240317172647"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "文件流获取 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "StreamReader reader = new StreamReader(path)"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						}
					]
				},
				{
					"ID": "20240317172554-abgpdpm",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20240317172554-abgpdpm",
						"updated": "20240317172734"
					},
					"Children": [
						{
							"ID": "20240317172554-rlh4hh6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240317172554-rlh4hh6",
								"updated": "20240317172734"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "根据文件流 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "XmlSerializer"
								},
								{
									"Type": "NodeText",
									"Data": "​ 通过 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Deserialize"
								},
								{
									"Type": "NodeText",
									"Data": "​ 反序列化出对象"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230716014618-niv7ic1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230716014618-niv7ic1",
				"updated": "20230716014641"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"Properties": {
						"style": "background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);"
					},
					"TextMarkType": "strong text",
					"TextMarkTextContent": "注意：List对象 如果有默认值 反序列化时 不会清空 会往后面添加！！！"
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);\"}"
				}
			]
		},
		{
			"ID": "20230716011808-s3kbdwc",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230716011808-s3kbdwc",
				"updated": "20230716011823"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "判断文件是否存在"
				}
			]
		},
		{
			"ID": "20230716011806-or5crpr",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230716011806-or5crpr",
				"updated": "20230716012100"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "string path = Application.persistentDataPath + \"/Lesson1Test.xml\";\nif (File.Exists(path)) { }\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230716012109-uvyf6cc",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230716012109-uvyf6cc",
				"updated": "20230716012113"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "反序列化"
				}
			]
		},
		{
			"ID": "20230716012114-89ygejx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230716012114-89ygejx",
				"updated": "20230716012130"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "首先，需要"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "判断文件是否存在"
				}
			]
		},
		{
			"ID": "20230716011953-727xyv0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230716011953-727xyv0",
				"updated": "20240317172702"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "xml反序列化关键知识"
				}
			]
		},
		{
			"ID": "20240317172702-85nne2u",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240317172702-85nne2u",
				"updated": "20240317172718"
			},
			"Children": [
				{
					"ID": "20240317172702-0o5v9q5",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20240317172702-0o5v9q5",
						"updated": "20240317172718"
					},
					"Children": [
						{
							"ID": "20240317172702-wxs2yp2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240317172702-wxs2yp2",
								"updated": "20240317172718"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "block-ref code",
									"TextMarkBlockRefID": "20230715235537-845my7h",
									"TextMarkBlockRefSubtype": "s",
									"TextMarkTextContent": "using"
								},
								{
									"Type": "NodeText",
									"Data": "​ 和 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "StreamReader"
								},
								{
									"Type": "NodeText",
									"Data": "​（注意不是"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "block-ref code",
									"TextMarkBlockRefID": "20230716001802-2d574f8",
									"TextMarkBlockRefSubtype": "s",
									"TextMarkTextContent": "StreamWriter"
								},
								{
									"Type": "NodeText",
									"Data": "​！但是使用方法和它差不多）"
								}
							]
						}
					]
				},
				{
					"ID": "20240317172702-pmofaq2",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20240317172702-pmofaq2",
						"updated": "20240317172708"
					},
					"Children": [
						{
							"ID": "20240317172702-ziwwii5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240317172702-ziwwii5",
								"updated": "20240317172708"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "block-ref code",
									"TextMarkBlockRefID": "20230716001802-u77asb7",
									"TextMarkBlockRefSubtype": "s",
									"TextMarkTextContent": "XmlSerializer"
								},
								{
									"Type": "NodeText",
									"Data": "​ 的"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "block-ref",
									"TextMarkBlockRefID": "20230715234712-vprlp1y",
									"TextMarkBlockRefSubtype": "s",
									"TextMarkTextContent": " Serialize序列化方法"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230716012103-023523p",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230716012103-023523p",
				"updated": "20230716014340"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "string path = Application.persistentDataPath + \"/Lesson1Test.xml\";\nif (File.Exists(path))\n{\n    using (StreamReader reader = new StreamReader(path))\n    {\n        //产生了一个序列化和反序列化的翻译机器\n        XmlSerializer s = new XmlSerializer(typeof(Lesson1Test));\n        Lesson1Test lt = s.Deserialize(reader) as Lesson1Test;\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230716013842-knclgl1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230716013842-knclgl1",
				"updated": "20230716014006"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"Properties": {
						"style": "background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);"
					},
					"TextMarkType": "strong text",
					"TextMarkTextContent": "注意！要序列化的类的列表变量不可以初始化！！！因为反序列化时不会覆盖而是增加，这会造成数据重复！！！"
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);\"}"
				}
			]
		}
	]
}