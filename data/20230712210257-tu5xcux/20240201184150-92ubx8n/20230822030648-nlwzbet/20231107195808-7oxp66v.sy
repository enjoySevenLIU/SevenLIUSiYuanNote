{
	"ID": "20231107195808-7oxp66v",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20231107195808-7oxp66v",
		"scroll": "\u0026#123;\u0026quot;rootId\u0026quot;:\u0026quot;20231107195808-7oxp66v\u0026quot;,\u0026quot;startId\u0026quot;:\u0026quot;20231107203314-dd5w6pj\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20231107201949-a6rv25l\u0026quot;,\u0026quot;scrollTop\u0026quot;:674,\u0026quot;focusId\u0026quot;:\u0026quot;20231107200011-glp3tte\u0026quot;,\u0026quot;focusStart\u0026quot;:0,\u0026quot;focusEnd\u0026quot;:0\u0026#125;",
		"title": "UD4L1——各类型数据转字节数据",
		"type": "doc",
		"updated": "20240303205213"
	},
	"Children": [
		{
			"ID": "20231107203314-dd5w6pj",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20231107203314-dd5w6pj",
				"updated": "20231107203318"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "本章代码关键字"
				}
			]
		},
		{
			"ID": "20231107203318-l78t67d",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20231107203318-l78t67d",
				"style": "line-height: 22px;",
				"updated": "20231107203848"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "BitConverter                //字节数据转换器类，用于将各种数据类型转换为二进制的字节数组\nBitConverter.GetBytes()     //将数据转换为字节数组，数组长度取决于数据类型有多少位\nBitConverter.ToInt32()      //将字节数组转换为int类型，要转换为其他类型，记住 To+类型 或者 To+Int+位数 的方法名规律即可\nSystem.Text                 //Encoding所在的命名空间\nEncoding                    //编码格式类\nEncoding.UTF8.GetBytes()    //将字符串按照UTF-8的编码格式转换为字节数组\nEncoding.UTF8.GetString()   //将字节数组按照UTF-8的编码格式转换为字符串\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20231107195843-cmot5rw",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20231107195843-cmot5rw",
				"updated": "20231107195843"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "不同"
				},
				{
					"Type": "NodeText",
					"Data": "变量类型"
				}
			]
		},
		{
			"ID": "20231107221854-32h46u7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231107221854-32h46u7",
				"updated": "20231107221854"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "详细内容 ——\u003e "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20230614153648-uoqrjjx",
					"TextMarkBlockRefSubtype": "d",
					"TextMarkTextContent": "CS1L2——变量"
				}
			]
		},
		{
			"ID": "20231107221854-st06fgr",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20231107221854-st06fgr",
				"updated": "20231107221854"
			},
			"Children": [
				{
					"ID": "20231107221854-eelmt5a",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20231107221854-eelmt5a",
						"updated": "20231107221854"
					},
					"Children": [
						{
							"ID": "20231107221854-z5efn9h",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231107221854-z5efn9h",
								"updated": "20231107221854"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "有符号："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "sbyte int short long"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						}
					]
				},
				{
					"ID": "20231107221854-2h0b68y",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20231107221854-2h0b68y",
						"updated": "20231107221854"
					},
					"Children": [
						{
							"ID": "20231107221854-g29hrii",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231107221854-g29hrii",
								"updated": "20231107221854"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "无符号："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "byte uint ushort ulong"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						}
					]
				},
				{
					"ID": "20231107221854-17tzff7",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20231107221854-17tzff7",
						"updated": "20231107221854"
					},
					"Children": [
						{
							"ID": "20231107221854-zp7s751",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231107221854-zp7s751",
								"updated": "20231107221854"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "浮点："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "float double decimal"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						}
					]
				},
				{
					"ID": "20231107221854-8d0nor3",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20231107221854-8d0nor3",
						"updated": "20231107221854"
					},
					"Children": [
						{
							"ID": "20231107221854-kobb5hd",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231107221854-kobb5hd",
								"updated": "20231107221854"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "特殊："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "bool char string"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20231107200011-glp3tte",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20231107200011-glp3tte",
				"updated": "20231107200020"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "变量的本质"
				}
			]
		},
		{
			"ID": "20231107200021-wllz37f",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231107200021-wllz37f",
				"updated": "20231107200037"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "详细内容 ——\u003e "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20230614170126-dvut1v8",
					"TextMarkBlockRefSubtype": "d",
					"TextMarkTextContent": "CS1L3——变量的本质"
				}
			]
		},
		{
			"ID": "20231107200039-kkw1b4m",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231107200039-kkw1b4m",
				"updated": "20231107200251"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "变量的本质是2进制，在内存中都以字节的形式存储着，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "1byte = 8bit"
				},
				{
					"Type": "NodeText",
					"Data": "​，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "1bit"
				},
				{
					"Type": "NodeText",
					"Data": "​(位)不是0就是1\n通过"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "sizeof"
				},
				{
					"Type": "NodeText",
					"Data": "​方法可以看到常用变量类型占用的字节空间长度"
				}
			]
		},
		{
			"ID": "20231107200106-a2qkaop",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20231107200106-a2qkaop",
				"style": "line-height: 22px;",
				"updated": "20231107200119"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "print(\"有符号\");\nprint(\"sbyte\" + sizeof(sbyte) + \"字节\");\nprint(\"int\" + sizeof(int) + \"字节\");\nprint(\"short\" + sizeof(short) + \"字节\");\nprint(\"long\" + sizeof(long) + \"字节\");\nprint(\"无符号\");\nprint(\"byte\" + sizeof(byte) + \"字节\");\nprint(\"uint\" + sizeof(uint) + \"字节\");\nprint(\"ushort\" + sizeof(ushort) + \"字节\");\nprint(\"ulong\" + sizeof(ulong) + \"字节\");\nprint(\"浮点\");\nprint(\"float\" + sizeof(float) + \"字节\");\nprint(\"double\" + sizeof(double) + \"字节\");\nprint(\"decimal\" + sizeof(decimal) + \"字节\");\nprint(\"特殊\");\nprint(\"bool\" + sizeof(bool) + \"字节\");\nprint(\"char\" + sizeof(char) + \"字节\");\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20231107200247-cbiazxk",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20231107200247-cbiazxk",
				"updated": "20231107200321"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "二进制文件读写的本质"
				}
			]
		},
		{
			"ID": "20231107200323-oghaihc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231107200323-oghaihc",
				"updated": "20231107200349"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "它就是通过将各类型变量转换为字节数组，然后将字节数组直接存储到文件中\n一般人是看不懂存储的数据的，不仅可以"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "节约存储空间，提升效率，还可以提升安全性"
				},
				{
					"Type": "NodeText",
					"Data": "\n而且在网络通信中我们直接传输的数据也是字节数据（2进制数据）"
				}
			]
		},
		{
			"ID": "20231107200351-4kqyeo8",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20231107200351-4kqyeo8",
				"name": "BitConverter",
				"updated": "20231107200359"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "各类型数据和字节数据相互转换"
				}
			]
		},
		{
			"ID": "20231107203921-78s34zn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231107203921-78s34zn",
				"updated": "20231107203932"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们可以通过"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "BitConverter"
				},
				{
					"Type": "NodeText",
					"Data": "​和"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Encoding"
				},
				{
					"Type": "NodeText",
					"Data": "​类\n将所有C#提供给我们的数据类型和字节数组之间进行相互转换了\n我们需要熟练掌握其中的API"
				}
			]
		},
		{
			"ID": "20231107200406-blwg1sg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231107200406-blwg1sg",
				"updated": "20231107200420"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "C#提供了一个公共类帮助我们进行转化，我们只需要记住API即可\n类名："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "BitConverter"
				},
				{
					"Type": "NodeText",
					"Data": "​\n命名空间："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "System"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20231107200442-x7kn04z",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20231107200442-x7kn04z",
				"updated": "20231107204023"
			},
			"Children": [
				{
					"ID": "20231107200446-73ty3nh",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20231107200446-73ty3nh",
						"name": "BitConverter.GetBytes()",
						"updated": "20231107204023"
					},
					"Children": [
						{
							"ID": "20231107200446-1gilt9q",
							"Type": "NodeHeading",
							"HeadingLevel": 3,
							"Properties": {
								"id": "20231107200446-1gilt9q",
								"updated": "20231107200639"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "将各类型转字节"
								}
							]
						},
						{
							"ID": "20231107200637-13h73du",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231107200637-13h73du",
								"updated": "20231107204023"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "字节数组的长度，由该方法输入的数据类型决定，例如"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "int"
								},
								{
									"Type": "NodeText",
									"Data": "​就是4个字节，这个数组的长度就是4，存储了4个字节\n这个方法可以转换大部分的基本数据类型，除了"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "decimal"
								},
								{
									"Type": "NodeText",
									"Data": "​和"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "string"
								},
								{
									"Type": "NodeText",
									"Data": "​，"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "decimal"
								},
								{
									"Type": "NodeText",
									"Data": "​我们几乎不用，而"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "string"
								},
								{
									"Type": "NodeText",
									"Data": "​我们使用"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Encoding"
								},
								{
									"Type": "NodeText",
									"Data": "​类来转换"
								}
							]
						},
						{
							"ID": "20231107200448-0t0ozrz",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20231107200448-0t0ozrz",
								"style": "line-height: 22px;",
								"updated": "20231107200634"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "byte[] bytes = BitConverter.GetBytes(99);\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20231107200446-s70vafw",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"alias": "BitConverter.To",
						"id": "20231107200446-s70vafw",
						"name": "BitConverter.ToInt32()",
						"updated": "20231107203257"
					},
					"Children": [
						{
							"ID": "20231107200446-l8zdph2",
							"Type": "NodeHeading",
							"HeadingLevel": 3,
							"Properties": {
								"id": "20231107200446-l8zdph2",
								"updated": "20231107201652"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "字节数组转各类型"
								}
							]
						},
						{
							"ID": "20231107201236-ywejygg",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231107201236-ywejygg",
								"updated": "20231107203257"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "将字节数组转换为各种类型时，根据类型的不同，方法名是不同的，但是方法名的规律很简单，基本就是"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "To + 类型"
								},
								{
									"Type": "NodeText",
									"Data": "​或者"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "To + Int + 位数"
								},
								{
									"Type": "NodeText",
									"Data": "​\n第一个参数填入要转换的字节数组，第二个参数填入要从数组第几个开始读取（默认为0）"
								}
							]
						},
						{
							"ID": "20231107200451-v756dnx",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20231107200451-v756dnx",
								"style": "line-height: 22px;",
								"updated": "20231107201235"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "int i = BitConverter.ToInt32(bytes, 0);\nprint(i);\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20231107201719-f4s8fcp",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20231107201719-f4s8fcp",
				"name": "Encoding",
				"updated": "20231107202645"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "标准编码格式（字符串的字节数据转换）"
				}
			]
		},
		{
			"ID": "20231107201729-makmqx9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231107201729-makmqx9",
				"updated": "20231107201748"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "编码是用预先规定的方法将文字、数字或其它对象编成数码，或将信息、数据转换成规定的电脉冲信号\n为保证编码的正确性，编码要规范化、标准化，即需有标准的编码格式。\n常见的编码格式有"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "ASCII、ANSI、GBK、GB2312、UTF-8、GB18030"
				},
				{
					"Type": "NodeText",
					"Data": "​和"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "UNICODE"
				},
				{
					"Type": "NodeText",
					"Data": "​等"
				}
			]
		},
		{
			"ID": "20240303203237-vxlvvcy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240303203237-vxlvvcy",
				"updated": "20240303205213"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "关于字符编码，详细请见："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20240303203656-ic5jpho",
					"TextMarkBlockRefSubtype": "d",
					"TextMarkTextContent": "字符编码"
				}
			]
		},
		{
			"ID": "20231107201935-0gp1nqi",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231107201935-0gp1nqi",
				"updated": "20231107202027"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "说人话：\n计算机中数据的本质就是2进制数据，编码格式就是用对应的2进制数，对应不同的文字\n由于世界上有各种不同的语言，所有会有很多种不同的编码格式，不同的编码格式，对应的规则是不同的\n如果"
				},
				{
					"Type": "NodeTextMark",
					"Properties": {
						"style": "background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);"
					},
					"TextMarkType": "strong text",
					"TextMarkTextContent": "在读取字符时采用了不统一的编码格式，可能会出现乱码"
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);\"}"
				}
			]
		},
		{
			"ID": "20231107201838-4jfnuhy",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20231107201838-4jfnuhy",
				"updated": "20231107202052"
			},
			"Children": [
				{
					"ID": "20231107201935-7tes2rd",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20231107201935-7tes2rd",
						"updated": "20231107202052"
					},
					"Children": [
						{
							"ID": "20231107201935-lznl75a",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231107201935-lznl75a",
								"updated": "20231107202052"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "游戏开发中常用编码格式："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code strong",
									"TextMarkTextContent": "UTF-8"
								},
								{
									"Type": "NodeText"
								}
							]
						}
					]
				},
				{
					"ID": "20231107201936-m95c9zk",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20231107201936-m95c9zk"
					},
					"Children": [
						{
							"ID": "20231107201936-z0ec9sm",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231107201936-z0ec9sm"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "中文相关编码格式："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "GBK"
								},
								{
									"Type": "NodeText",
									"Data": "​\n"
								}
							]
						}
					]
				},
				{
					"ID": "20231107201936-62blehw",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20231107201936-62blehw"
					},
					"Children": [
						{
							"ID": "20231107201936-cqstz4c",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231107201936-cqstz4c"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "英文相关编码格式："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "ASCII"
								},
								{
									"Type": "NodeText",
									"Data": "​\n"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20231107201943-lmjuvqr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231107201943-lmjuvqr",
				"updated": "20231107201944"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在C#中有一个专门的编码格式类，来帮助我们将字符串和字节数组进行转换\n类名："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Encoding"
				},
				{
					"Type": "NodeText",
					"Data": "​\n需要引用命名空间："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "System.Text"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20231107201949-a6rv25l",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20231107201949-a6rv25l",
				"updated": "20231107202720"
			},
			"Children": [
				{
					"ID": "20231107202651-6392aj4",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20231107202651-6392aj4",
						"name": "Encoding.UTF8.GetBytes()",
						"updated": "20231107202707"
					},
					"Children": [
						{
							"ID": "20231107202651-o77jo8x",
							"Type": "NodeHeading",
							"HeadingLevel": 4,
							"Properties": {
								"id": "20231107202651-o77jo8x",
								"updated": "20231107202707"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "字符串以指定编码格式转字节"
								}
							]
						},
						{
							"ID": "20231107202806-j7xacun",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231107202806-j7xacun",
								"updated": "20231107203029"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "字符串 转换为 指定编码格式的字节数组 需要我们"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Encoding.编码格式.GetBytes()"
								},
								{
									"Type": "NodeText",
									"Data": "​，一般在游戏开发中我们都使用"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code strong",
									"TextMarkTextContent": "UTF-8"
								},
								{
									"Type": "NodeText",
									"Data": "​这个编码格式"
								}
							]
						},
						{
							"ID": "20231107202724-yqbv9zp",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20231107202724-yqbv9zp",
								"style": "line-height: 22px;",
								"updated": "20231107202754"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "byte[] strBytes = Encoding.UTF8.GetBytes(\"字符串测试\");\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20231107202707-kywbxwz",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20231107202707-kywbxwz",
						"name": "Encoding.UTF8.GetString()",
						"updated": "20231107202720"
					},
					"Children": [
						{
							"ID": "20231107202707-98sgk8r",
							"Type": "NodeHeading",
							"HeadingLevel": 4,
							"Properties": {
								"id": "20231107202707-98sgk8r",
								"updated": "20231107202720"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "字节数组以指定编码格式转字符串"
								}
							]
						},
						{
							"ID": "20231107202950-plouozv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231107202950-plouozv",
								"updated": "20231107203245"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "字节数组 依据指定编码格式转换为 字符串 需要我们"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Encoding.编码格式.GetString()"
								},
								{
									"Type": "NodeText",
									"Data": "​，一般在游戏开发中我们都使用"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code strong",
									"TextMarkTextContent": "UTF-8"
								},
								{
									"Type": "NodeText",
									"Data": "​这个编码格式\n第一个参数填入要转换的字节数组，第二个参数填入要从数组第几个开始读取（默认0），第三个参数填入要读取几个字节（默认全部读取）"
								}
							]
						},
						{
							"ID": "20231107202728-vyihg1i",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20231107202728-vyihg1i",
								"style": "line-height: 22px;",
								"updated": "20231107203158"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "string s = Encoding.UTF8.GetString(strBytes, 0, strBytes.Length);\nprint(s);\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		}
	]
}