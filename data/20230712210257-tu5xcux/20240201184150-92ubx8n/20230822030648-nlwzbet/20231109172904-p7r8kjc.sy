{
	"ID": "20231109172904-p7r8kjc",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20231109172904-p7r8kjc",
		"scroll": "\u0026#123;\u0026quot;rootId\u0026quot;:\u0026quot;20231109172904-p7r8kjc\u0026quot;,\u0026quot;startId\u0026quot;:\u0026quot;20231109172904-m8dafl2\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20231109173220-1hhm0fx\u0026quot;,\u0026quot;scrollTop\u0026quot;:0,\u0026quot;focusId\u0026quot;:\u0026quot;20231109173220-1hhm0fx\u0026quot;,\u0026quot;focusStart\u0026quot;:837,\u0026quot;focusEnd\u0026quot;:837\u0026#125;",
		"title": "UD4L7——C#类对象二进制数据加密",
		"updated": "20231109180922"
	},
	"Children": [
		{
			"ID": "20231109172904-m8dafl2",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20231109172904-m8dafl2",
				"updated": "20231109173056"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "何时加密？何时解密？"
				}
			]
		},
		{
			"ID": "20231109173103-6jx35ow",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231109173103-6jx35ow",
				"updated": "20231109173311"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当我们将类对象转换为2进制数据时进行加密\n当我们将2进制数据转换为类对象时进行解密"
				}
			]
		},
		{
			"ID": "20231109173103-n0n6fn0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231109173103-n0n6fn0",
				"updated": "20231109173111"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这样如果第三方获取到我们的2进制数据，当他们不知道加密规则和解密秘钥时就无法获取正确的数据\n起到保证数据安全的作用"
				}
			]
		},
		{
			"ID": "20231109173115-qmw8hia",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20231109173115-qmw8hia",
				"updated": "20231109173123"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "加密是否是100%安全？"
				}
			]
		},
		{
			"ID": "20231109173128-r0l16vw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231109173128-r0l16vw",
				"updated": "20231109173131"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一定记住加密只是提高破解门槛，没有100%保密的数据，通过各种尝试始终是可以破解加密规则的，只是时间问题\n加密只能起到提升一定的安全性"
				}
			]
		},
		{
			"ID": "20231109173139-wluakl8",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20231109173139-wluakl8",
				"updated": "20231109173140"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "常用加密算法"
				}
			]
		},
		{
			"ID": "20231109173147-74b998s",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20231109173147-74b998s",
				"updated": "20231109173150"
			},
			"Children": [
				{
					"ID": "20231109173150-rar43j8",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20231109173150-rar43j8",
						"updated": "20231109173150"
					},
					"Children": [
						{
							"ID": "20231109173150-rqfelxl",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231109173150-rqfelxl",
								"updated": "20231109173150"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "MD5算法\n"
								}
							]
						}
					]
				},
				{
					"ID": "20231109173150-ruv1lnv",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20231109173150-ruv1lnv"
					},
					"Children": [
						{
							"ID": "20231109173150-6a24r6a",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231109173150-6a24r6a"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "SHA1算法\n"
								}
							]
						}
					]
				},
				{
					"ID": "20231109173151-mrmyk1j",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20231109173151-mrmyk1j"
					},
					"Children": [
						{
							"ID": "20231109173151-r98cthk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231109173151-r98cthk"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "HMAC算法\n"
								}
							]
						}
					]
				},
				{
					"ID": "20231109173151-qw1tyu6",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20231109173151-qw1tyu6"
					},
					"Children": [
						{
							"ID": "20231109173151-2tz9ruu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231109173151-2tz9ruu"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "AES/DES/3DES算法\n"
								}
							]
						}
					]
				},
				{
					"ID": "20231109173151-1qwd86g",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20231109173151-1qwd86g"
					},
					"Children": [
						{
							"ID": "20231109173151-jrba635",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20231109173151-jrba635"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "等等等"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20231109173147-1lxwqf5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20231109173147-1lxwqf5",
				"updated": "20231109173159"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "有很多的别人写好的第三发加密算法库，可以直接获取用于在程序中对数据进行加密\n这里我们不深究，感兴趣的同学可以自己去了解"
				}
			]
		},
		{
			"ID": "20231109173200-kwuobfz",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20231109173200-kwuobfz",
				"updated": "20231109173500"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "用简单的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20230616144314-8j6n2cr",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "异或"
				},
				{
					"Type": "NodeText",
					"Data": "加密感受加密的作用"
				}
			]
		},
		{
			"ID": "20231109173220-1hhm0fx",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20231109173220-1hhm0fx",
				"style": "line-height: 22px;",
				"updated": "20231109174413"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Person p = new Person();\nbyte key = 199;             //密钥\n//序列化存储\nusing (MemoryStream memoryStream = new MemoryStream())\n{\n    BinaryFormatter binaryFormatter = new BinaryFormatter();\n    binaryFormatter.Serialize(memoryStream, p);\n    byte[] bytes = memoryStream.GetBuffer();\n    //异或加密\n    for (int i = 0; i \u003c bytes.Length; i++)\n    {\n        bytes[i] ^= key;\n    }\n    File.WriteAllBytes(Application.dataPath + \"/Lesson7.person\", bytes);\n}\n\n//反序列化读取\nbyte[] dataBytes = File.ReadAllBytes(Application.dataPath + \"/Lesson7.person\");\n//异或解密\nfor (int i = 0; i \u003c dataBytes.Length; i++)\n{\n    dataBytes[i] ^= key;\n}\nusing (MemoryStream memoryStream = new MemoryStream(dataBytes))\n{\n    BinaryFormatter binaryFormatter = new BinaryFormatter();\n    Person p2 = binaryFormatter.Deserialize(memoryStream) as Person;\n    memoryStream.Close();\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		}
	]
}