{"ID":"20250216131235-k89z341","Spec":"1","Type":"NodeDocument","Properties":{"id":"20250216131235-k89z341","title":"UD3L6——Newtonsoft.Json","type":"doc","updated":"20250327135816"},"Children":[{"ID":"20250216131504-opqijwy","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20250216131504-opqijwy","updated":"20250327135816"},"Children":[{"Type":"NodeText","Data":"Newtonsoft.Json"}]},{"ID":"20250216131235-d9uc36o","Type":"NodeParagraph","Properties":{"id":"20250216131235-d9uc36o","updated":"20250216131459"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Newtonsoft.Json"},{"Type":"NodeText","Data":"​，通常也被称为 Json.NET，是一个非常流行的用于处理 JSON 数据的高性能 .NET 库。\n它由 James Newton-King 开发，并广泛应用于各种 .NET 应用程序中，以实现对象与 JSON 之间的序列化和反序列化。"}]},{"ID":"20250216151452-lhlwjft","Type":"NodeParagraph","Properties":{"id":"20250216151452-lhlwjft","updated":"20250216151458"},"Children":[{"Type":"NodeText","Data":"官网："},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.newtonsoft.com/json","TextMarkTextContent":"Json.NET - Newtonsoft"}]},{"ID":"20250216151417-367o0dc","Type":"NodeParagraph","Properties":{"id":"20250216151417-367o0dc","updated":"20250216151434"},"Children":[{"Type":"NodeText","Data":"官方文档："},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.newtonsoft.com/json/help/html/Introduction.htm","TextMarkTextContent":"Json.NET Documentation"}]},{"ID":"20250327135042-9u8ffzg","Type":"NodeParagraph","Properties":{"id":"20250327135042-9u8ffzg","updated":"20250327135816"},"Children":[{"Type":"NodeText","Data":"关于 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Newtonsoft.Json"},{"Type":"NodeText","Data":"​ 进阶用法可以参考此视频："},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.bilibili.com/video/BV1bs42137wn","TextMarkTextContent":"分享一些Newtonsoft.Json的实用功能与技巧_哔哩哔哩_bilibili"}]},{"ID":"20250216131501-0lhvib1","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20250216131501-0lhvib1","updated":"20250216151511"},"Children":[{"Type":"NodeText","Data":"导入 Newtonsoft.Json"}]},{"ID":"20250216131754-txbj7ky","Type":"NodeParagraph","Properties":{"id":"20250216131754-txbj7ky","updated":"20250216151511"},"Children":[{"Type":"NodeText","Data":"Newtonsoft.Json 已经提供了针对 Unity 的定制版本，因此，将 Newtonsoft.Json 导入到 Unity 项目非常简单\n直接通过 Package Manager 即可导入 Newtonsoft.Json，此版本为 IL2CPP 做了优化，因此直接使用此版本即可"}]},{"ID":"20250216134210-jgcp7rz","Type":"NodeParagraph","Properties":{"id":"20250216134210-jgcp7rz","updated":"20250216134210"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Properties":{"style":"width: 601px;"},"Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20250216134210-1edwdff.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"width: 601px;\"}"},{"Type":"NodeText","Data":"​"}]},{"ID":"20250216135538-nq7i3gs","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20250216135538-nq7i3gs","updated":"20250311154118"},"Children":[{"Type":"NodeText","Data":"使用 Newtonsoft.Json 序列化"}]},{"ID":"20250216140553-6p2y50c","Type":"NodeParagraph","Properties":{"id":"20250216140553-6p2y50c","updated":"20250216140632"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"JsonConvert.SerializeObject()"},{"Type":"NodeText","Data":"​ 是 Newtonsoft.Json 提供的序列化方法"}]},{"ID":"20250216140632-oggjcwc","Type":"NodeList","ListData":{},"Properties":{"id":"20250216140632-oggjcwc","updated":"20250216140633"},"Children":[{"ID":"20250216140633-f4mgbep","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250216140633-f4mgbep","updated":"20250216140633"},"Children":[{"ID":"20250216140633-9vcdi8d","Type":"NodeParagraph","Properties":{"id":"20250216140633-9vcdi8d","updated":"20250216140649"},"Children":[{"Type":"NodeText","Data":"参数一：要序列化的对象"}]}]},{"ID":"20250216140654-y46pbim","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250216140654-y46pbim","updated":"20250216140654"},"Children":[{"ID":"20250216140654-zx61la8","Type":"NodeParagraph","Properties":{"id":"20250216140654-zx61la8","updated":"20250216141138"},"Children":[{"Type":"NodeText","Data":"参数二："},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Formatting"},{"Type":"NodeText","Data":"​ 枚举，如果传入 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Formatting.Indented"},{"Type":"NodeText","Data":"​ 则返回的 Json 是有换行和缩进（两个空格）形式的"}]}]},{"ID":"20250216140741-n0w3zm8","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250216140741-n0w3zm8","updated":"20250216140741"},"Children":[{"ID":"20250216140741-uo65jmy","Type":"NodeParagraph","Properties":{"id":"20250216140741-uo65jmy","updated":"20250216140824"},"Children":[{"Type":"NodeText","Data":"返回值：序列化出来的 Json 字符串"}]}]}]},{"ID":"20250216144115-not724b","Type":"NodeParagraph","Properties":{"id":"20250216144115-not724b","updated":"20250216144117"},"Children":[{"Type":"NodeText","Data":"示例："}]},{"ID":"20250216135603-21dux8i","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250216135603-21dux8i","style":"line-height: 22px;","updated":"20250311154118"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"YyM="},{"Type":"NodeCodeBlockCode","Data":"using UnityEngine;\nusing Newtonsoft.Json;\nusing System.Collections.Generic;\n\npublic class JsonTest : MonoBehaviour\n{\n    void Start()\n    {\n        // 初始化数据类\n        JsonDataTest test = new()\n        {\n            hp = 1,\n            sex = false,\n            speed = 16.66f,\n            resName = \"Airplane/Airplane1\",\n            subData = new() { testInt = 1, testFloat = 2 },\n            TestNull = null,\n            subDatas = new SubData[]\n            {\n                new() { testInt = 10, testFloat = 1.1111f },\n                new() { testInt = 20, testFloat = 22.222f },\n                new() { testInt = 30, testFloat = 333.33f },\n            },\n            subDataDic = new Dictionary\u003cstring, SubData\u003e()\n            {\n                { \"Lihua\", new() { testInt = 100, testFloat = -1.0f } },\n                { \"xiaohong\", new() { testInt = 200, testFloat = -2.0f } },\n            }\n        };\n\n        // 序列化类，不换行\n        string json1 = JsonConvert.SerializeObject(test);\n        Debug.Log($\"Json without Format: \\n{json1}\");\n        // 序列化类，换行带缩进\n        string json2 = JsonConvert.SerializeObject(test, Formatting.Indented);\n        Debug.Log($\"Json with Format: \\n{json2}\");\n    }\n}\n\npublic class JsonDataTest\n{\n    public int hp;\n    public bool sex;\n    public float speed;\n    public string resName;\n    public SubData subData;\n    public SubData TestNull;\n    public SubData[] subDatas;\n    public Dictionary\u003cstring, SubData\u003e subDataDic;\n}\n\npublic class SubData\n{\n    public int testInt;\n    public float testFloat;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250216140826-ik3dz4k","Type":"NodeParagraph","Properties":{"id":"20250216140826-ik3dz4k","updated":"20250216140828"},"Children":[{"Type":"NodeText","Data":"输出："}]},{"ID":"20250216141039-ggzrpzn","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250216141039-ggzrpzn","style":"line-height: 22px;","updated":"20250216141947"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"anNvbg=="},{"Type":"NodeCodeBlockCode","Data":"Json without Format: \n{\"hp\":1,\"sex\":false,\"speed\":16.66,\"resName\":\"Airplane/Airplane1\",\"subData\":{\"testInt\":1,\"testFloat\":2.0},\"TestNull\":null,\"subDatas\":[{\"testInt\":10,\"testFloat\":1.1111},{\"testInt\":20,\"testFloat\":22.222},{\"testInt\":30,\"testFloat\":333.33}],\"subDataDic\":{\"Lihua\":{\"testInt\":100,\"testFloat\":-1.0},\"xiaohong\":{\"testInt\":200,\"testFloat\":-2.0}}}\n\n\nJson with Format: \n{\n  \"hp\": 1,\n  \"sex\": false,\n  \"speed\": 16.66,\n  \"resName\": \"Airplane/Airplane1\",\n  \"subData\": {\n    \"testInt\": 1,\n    \"testFloat\": 2.0\n  },\n  \"TestNull\": null,\n  \"subDatas\": [\n    {\n      \"testInt\": 10,\n      \"testFloat\": 1.1111\n    },\n    {\n      \"testInt\": 20,\n      \"testFloat\": 22.222\n    },\n    {\n      \"testInt\": 30,\n      \"testFloat\": 333.33\n    }\n  ],\n  \"subDataDic\": {\n    \"Lihua\": {\n      \"testInt\": 100,\n      \"testFloat\": -1.0\n    },\n    \"xiaohong\": {\n      \"testInt\": 200,\n      \"testFloat\": -2.0\n    }\n  }\n}"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250216142014-33gg11e","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250216142014-33gg11e","updated":"20250216142534"},"Children":[{"Type":"NodeText","Data":"序列化注意事项"}]},{"ID":"20250216142014-v0j5b6x","Type":"NodeList","ListData":{},"Properties":{"id":"20250216142014-v0j5b6x","updated":"20250216142534"},"Children":[{"ID":"20250216142014-d8wqprf","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250216142014-d8wqprf","name":"[JsonProperty]","updated":"20250216142610"},"Children":[{"ID":"20250216142014-br6e5gc","Type":"NodeParagraph","Properties":{"id":"20250216142014-br6e5gc","updated":"20250216142014"},"Children":[{"Type":"NodeText","Data":"默认情况下，Newtonsoft.Json 只会序列化公共属性和字段。若要序列化私有成员变量，则需要为私有变量添加特性 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"[JsonProperty]"}]},{"ID":"20250216142648-mue6ub3","Type":"NodeParagraph","Properties":{"id":"20250216142648-mue6ub3","updated":"20250216142652"},"Children":[{"Type":"NodeText","Data":"示例："}]},{"ID":"20250216142225-7e6oy1n","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250216142225-7e6oy1n","style":"line-height: 22px;","updated":"20250216142639"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"YyM="},{"Type":"NodeCodeBlockCode","Data":"using UnityEngine;\nusing Newtonsoft.Json;\n\npublic class JsonTest : MonoBehaviour\n{\n    void Start()\n    {\n        PrivateFieldTest test = new(\"AAA\", \"BBB\");\n\n        string json = JsonConvert.SerializeObject(test);\n        Debug.Log(json);\n    }\n}\n\npublic class PrivateFieldTest\n{\n    string test1;\n    [JsonProperty] string test2;\n\n    public PrivateFieldTest(string test1, string test2)\n    {\n        this.test1 = test1;\n        this.test2 = test2;\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250216142643-xjnrk9v","Type":"NodeParagraph","Properties":{"id":"20250216142643-xjnrk9v","updated":"20250216142646"},"Children":[{"Type":"NodeText","Data":"输出："}]},{"ID":"20250216142654-yp5d506","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250216142654-yp5d506","style":"line-height: 22px;","updated":"20250216142735"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"anNvbg=="},{"Type":"NodeCodeBlockCode","Data":"{\"test2\":\"BBB\"}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]},{"ID":"20250216142108-pou5tk9","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250216142108-pou5tk9","updated":"20250216142108"},"Children":[{"ID":"20250216142108-sh87slg","Type":"NodeParagraph","Properties":{"id":"20250216142108-sh87slg","updated":"20250216143355"},"Children":[{"Type":"NodeText","Data":"支持字典类型，但是字典的键最好是字符串，基本类型也可以使用，如果使用复杂类型，必须提供相应的序列化和反序列化转换逻辑"}]},{"ID":"20250216142742-qm3u2wi","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250216142742-qm3u2wi","style":"line-height: 22px;","updated":"20250216143438"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"YyM="},{"Type":"NodeCodeBlockCode","Data":"Dictionary\u003cstring, int\u003e stringKeyData = new()\n{\n    { \"One\", 1 },\n    { \"Two\", 2 },\n    { \"Three\", 3 },\n};\n\nDictionary\u003cfloat, int\u003e floatKeyData = new()\n{\n    { 1.1f, 1 },\n    { 2.2f, 2 },\n    { 3.3f, 3 },\n};\n\nstring json1 = JsonConvert.SerializeObject(stringKeyData);\nDebug.Log(json1);\nstring json2 = JsonConvert.SerializeObject(floatKeyData);\nDebug.Log(json2);\n\n// 非字符串键反序列化测试\nvar test = JsonConvert.DeserializeObject\u003cDictionary\u003cfloat, int\u003e\u003e(json2);\nforeach (var item in test)\n{\n    Debug.Log($\"Key: {item.Key}, Value: {item.Value}\");\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250216143440-dsqz209","Type":"NodeParagraph","Properties":{"id":"20250216143440-dsqz209","updated":"20250216143443"},"Children":[{"Type":"NodeText","Data":"输出："}]},{"ID":"20250216143502-en5hn9k","Type":"NodeParagraph","Properties":{"id":"20250216143502-en5hn9k","updated":"20250216143502"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Properties":{"style":"width: 268px;"},"Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20250216143502-lz8gp02.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"width: 268px;\"}"},{"Type":"NodeText","Data":"​"}]}]},{"ID":"20250216142522-4xko22u","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250216142522-4xko22u","updated":"20250216142534"},"Children":[{"ID":"20250216142522-9v7fel8","Type":"NodeParagraph","Properties":{"id":"20250216142522-9v7fel8","updated":"20250216142534"},"Children":[{"Type":"NodeText","Data":"Newtonsoft.Json 可以准确的保存 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"null"},{"Type":"NodeText","Data":"​ 类型"}]}]}]},{"ID":"20250216144130-mkvbrca","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20250216144130-mkvbrca","name":"JsonConvert.DeserializeObject()","updated":"20250216151410"},"Children":[{"Type":"NodeText","Data":"使用 Newtonsoft.Json 反序列化"}]},{"ID":"20250216145753-t7tgwm5","Type":"NodeParagraph","Properties":{"id":"20250216145753-t7tgwm5","updated":"20250216145809"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"JsonConvert.DeserializeObject()"},{"Type":"NodeText","Data":"​ 是 Newtonsoft.Json 提供的反序列化方法"}]},{"ID":"20250216145753-jbe2nvh","Type":"NodeList","ListData":{},"Properties":{"id":"20250216145753-jbe2nvh","updated":"20250216145834"},"Children":[{"ID":"20250216145753-yicvv5c","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250216145753-yicvv5c","updated":"20250216145821"},"Children":[{"ID":"20250216145753-nirltmv","Type":"NodeParagraph","Properties":{"id":"20250216145753-nirltmv","updated":"20250216145821"},"Children":[{"Type":"NodeText","Data":"参数一：要反序列化的 Json 字符串"}]}]},{"ID":"20250216145753-054o39j","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250216145753-054o39j","updated":"20250216145834"},"Children":[{"ID":"20250216145753-7dme0ik","Type":"NodeParagraph","Properties":{"id":"20250216145753-7dme0ik","updated":"20250216145834"},"Children":[{"Type":"NodeText","Data":"返回值：反序列化得到的实例"}]}]}]},{"ID":"20250216145753-4sqiy5d","Type":"NodeParagraph","Properties":{"id":"20250216145753-4sqiy5d","updated":"20250216145753"},"Children":[{"Type":"NodeText","Data":"示例："}]},{"ID":"20250216144226-0qzjm2t","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250216144226-0qzjm2t","style":"line-height: 22px;","updated":"20250216150942"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"YyM="},{"Type":"NodeCodeBlockCode","Data":"using Newtonsoft.Json;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class JsonTest : MonoBehaviour\n{\n    string json = @\"{\"\"testInt\"\":999,\"\"testFloat\"\":999.9}\";\n    string arrayJson = @\"\n[\n    {\"\"testInt\"\":1,\"\"testFloat\"\":10.1},\n    {\"\"testInt\"\":2,\"\"testFloat\"\":20.2},\n    {\"\"testInt\"\":3,\"\"testFloat\"\":30.3}\n]\";\n    string listJson = @\"\n[\n    {\"\"testInt\"\":1, \"\"testFloat\"\":10.1},\n    {\"\"testInt\"\":2,\"\"testFloat\"\":20.2},\n    {\"\"testInt\"\":3,\"\"testFloat\"\":30.3}\n]\";\n\n    void Start()\n    {\n        // 假设从外部拿到了Json字符串，分别反序列化实例对象、对象数组、对象列表\n        var data1 = JsonConvert.DeserializeObject\u003cSubData\u003e(json);\n        var data2 = JsonConvert.DeserializeObject\u003cSubData[]\u003e(arrayJson);\n        var data3 = JsonConvert.DeserializeObject\u003cList\u003cSubData\u003e\u003e(listJson);\n        // 输出查看反序列化正确与否\n        Debug.Log($\"Data: TestInt: {data1.testInt}, TestFloat: {data1.testFloat}\");\n        Debug.Log(\"Array Test: \");\n        for (int i = 0; i \u003c data2.Length; i++)\n        {\n            Debug.Log($\"[{i}]: TestInt: {data2[i].testInt}, TestFloat: {data2[i].testFloat}\");\n        }\n        Debug.Log(\"List Test: \");\n        for (int i = 0; i \u003c data3.Count; i++)\n        {\n            Debug.Log($\"[{i}]: TestInt: {data3[i].testInt}, TestFloat: {data3[i].testFloat}\");\n        }\n    }\n}\n\npublic class SubData\n{\n    public int testInt;\n    public float testFloat;\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250216150749-hnnllrk","Type":"NodeParagraph","Properties":{"id":"20250216150749-hnnllrk","updated":"20250216150751"},"Children":[{"Type":"NodeText","Data":"输出："}]},{"ID":"20250216150812-btcdv92","Type":"NodeParagraph","Properties":{"id":"20250216150812-btcdv92","updated":"20250216150812"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Properties":{"style":"width: 312px;"},"Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20250216150812-p6phsay.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"width: 312px;\"}"},{"Type":"NodeText","Data":"​"}]},{"ID":"20250216151034-de9zbj7","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250216151034-de9zbj7","updated":"20250216151410"},"Children":[{"Type":"NodeText","Data":"反序列化注意事项"}]},{"ID":"20250216151044-uxa4m3s","Type":"NodeList","ListData":{},"Properties":{"id":"20250216151044-uxa4m3s","updated":"20250216151318"},"Children":[{"ID":"20250216151044-u5vb3u8","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250216151044-u5vb3u8","updated":"20250216151211"},"Children":[{"ID":"20250216151044-xss40i0","Type":"NodeParagraph","Properties":{"id":"20250216151044-xss40i0","updated":"20250216151211"},"Children":[{"Type":"NodeText","Data":"支持字典类型，字典的键最好是字符串，如果是其他基本类型则要确保字符串转换不会出错，如果使用复杂类型，必须提供反序列化转换逻辑"}]},{"ID":"20250216151044-9wan0u2","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250216151044-9wan0u2","style":"line-height: 22px;","updated":"20250216151044"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"YyM="},{"Type":"NodeCodeBlockCode","Data":"Dictionary\u003cstring, int\u003e stringKeyData = new()\n{\n    { \"One\", 1 },\n    { \"Two\", 2 },\n    { \"Three\", 3 },\n};\n\nDictionary\u003cfloat, int\u003e floatKeyData = new()\n{\n    { 1.1f, 1 },\n    { 2.2f, 2 },\n    { 3.3f, 3 },\n};\n\nstring json1 = JsonConvert.SerializeObject(stringKeyData);\nDebug.Log(json1);\nstring json2 = JsonConvert.SerializeObject(floatKeyData);\nDebug.Log(json2);\n\n// 非字符串键反序列化测试\nvar test = JsonConvert.DeserializeObject\u003cDictionary\u003cfloat, int\u003e\u003e(json2);\nforeach (var item in test)\n{\n    Debug.Log($\"Key: {item.Key}, Value: {item.Value}\");\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250216151044-fy946u9","Type":"NodeParagraph","Properties":{"id":"20250216151044-fy946u9","updated":"20250216151044"},"Children":[{"Type":"NodeText","Data":"输出："}]},{"ID":"20250216151044-wkspujd","Type":"NodeParagraph","Properties":{"id":"20250216151044-wkspujd","updated":"20250216151044"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Properties":{"style":"width: 268px;"},"Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20250216143502-lz8gp02.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"width: 268px;\"}"},{"Type":"NodeText","Data":"​"}]}]},{"ID":"20250216151044-ka5msur","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250216151044-ka5msur","updated":"20250216151044"},"Children":[{"ID":"20250216151044-aysz9w2","Type":"NodeParagraph","Properties":{"id":"20250216151044-aysz9w2","updated":"20250216151044"},"Children":[{"Type":"NodeText","Data":"Newtonsoft.Json 对自定义类不要求有无参构造"}]}]},{"ID":"20250216151256-uv3v95s","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250216151256-uv3v95s","updated":"20250216151318"},"Children":[{"ID":"20250216151256-4r3kj4y","Type":"NodeParagraph","Properties":{"id":"20250216151256-4r3kj4y","updated":"20250216151318"},"Children":[{"Type":"NodeText","Data":"Newtonsoft.Json 可以直接读取数据集合，可以反序列化到数组或者列表内"}]}]}]},{"ID":"20250216151410-aw4p7rh","Type":"NodeParagraph","Properties":{"id":"20250216151410-aw4p7rh","updated":"20250216151410"}}]}