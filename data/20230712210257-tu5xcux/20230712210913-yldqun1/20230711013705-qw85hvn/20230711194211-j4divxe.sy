{
	"ID": "20230711194211-j4divxe",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20230711194211-j4divxe",
		"name": "向量插值计算",
		"scroll": "\u0026#123;\u0026quot;rootId\u0026quot;:\u0026quot;20230711194211-j4divxe\u0026quot;,\u0026quot;startId\u0026quot;:\u0026quot;20230711211313-j6m4dy2\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20230711212007-p0lr8vj\u0026quot;,\u0026quot;scrollTop\u0026quot;:1096\u0026#125;",
		"title": "U2L4-5——向量插值计算",
		"updated": "20230712011145"
	},
	"Children": [
		{
			"ID": "20230711211313-j6m4dy2",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20230711211313-j6m4dy2",
				"updated": "20230711211317"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "向量插值计算"
				}
			]
		},
		{
			"ID": "20230711194301-nebib1j",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230711194301-nebib1j",
				"updated": "20230712010938"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Vector3也有为向量插值计算的方法，（"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20230711000636-wm2luaa",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "插值计算相关概念"
				},
				{
					"Type": "NodeText",
					"Data": "）"
				}
			]
		},
		{
			"ID": "20230712010938-qkuctdi",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230712010938-qkuctdi",
				"updated": "20230712010952"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "本章代码关键字"
				}
			]
		},
		{
			"ID": "20230712010952-9o0sjsj",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230712010952-9o0sjsj",
				"updated": "20230712011145"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Vector3.Lerp()\t//向量线性插值\nVector3.Slerp()\t//向量球形插值\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230711194211-cqvwj2v",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230711194211-cqvwj2v",
				"name": "Vector3.Lerp()",
				"updated": "20230711211509"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "线性插值"
				}
			]
		},
		{
			"ID": "20230711212945-61xjjax",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230711212945-61xjjax",
				"updated": "20230711213009"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一般用于跟随移动，摄像机跟随等"
				}
			]
		},
		{
			"ID": "20230711211405-favv5p6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230711211405-favv5p6",
				"updated": "20230711211447"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "对两个点进行插值计算，t的取值范围是0~1\n公式：result = start + (end - start) * t"
				}
			]
		},
		{
			"ID": "20230711211511-izhst4n",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230711211511-izhst4n",
				"updated": "20230711211523"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": " A.position = Vector3.Lerp(A.position, target.position, Time.deltaTime);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230711211311-sso3o85",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230711211311-sso3o85",
				"updated": "20230711211604"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "线性插值计算也有两种应用"
				}
			]
		},
		{
			"ID": "20230711211604-17aje9s",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230711211604-17aje9s",
				"updated": "20230711211615"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "先快后慢趋近"
				}
			]
		},
		{
			"ID": "20230711211731-yauhwhz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230711211731-yauhwhz",
				"updated": "20230711211736"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "先快后慢 每帧改变start位置 位置无限接近但不会得到end位置"
				}
			]
		},
		{
			"ID": "20230711211627-67gvxti",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230711211627-67gvxti",
				"updated": "20230711211724"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "//result = start + (end - start) * t\n//先快后慢 每帧改变start位置 位置无限接近但不会得到end位置\nA.position = Vector3.Lerp(A.position, target.position, Time.deltaTime);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230711211615-f6pabw1",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230711211615-f6pabw1",
				"updated": "20230711211625"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "匀速接近"
				}
			]
		},
		{
			"ID": "20230711211720-odlldi6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230711211720-odlldi6",
				"updated": "20230711211729"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "匀速 每帧改变时间 当\u003e=1时 得到结果"
				}
			]
		},
		{
			"ID": "20230711211625-q0ruf0a",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230711211625-q0ruf0a",
				"updated": "20230711211718"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "//注意，最终匀速移动 当time\u003e=1时 改变了目标位置后 他会直接瞬移到我们的目标位置\n//因此需要判断目标位置是否移动\ntime += Time.deltaTime;\nif (nowTarget != target.position)\n{\n    nowTarget = target.position;\n    time = 0;\n    startPos = B.position;\n}\nB.position = Vector3.Lerp(startPos, nowTarget, time);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230711211959-6ivfeaw",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230711211959-6ivfeaw",
				"name": "Vector3.Slerp()",
				"updated": "20230711212044"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "球形插值"
				}
			]
		},
		{
			"ID": "20230711212321-s46jwt6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230711212321-s46jwt6",
				"updated": "20230711212942"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "球形插值的轨迹在一个圆形上，涉及"
				},
				{
					"Type": "NodeText",
					"Data": "四元数"
				},
				{
					"Type": "NodeText",
					"Data": "，\n用于曲线运动，例如模拟太阳运动弧线等，实际开发时，用的会较少"
				}
			]
		},
		{
			"ID": "20230712011041-ztqr3cb",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230712011041-ztqr3cb",
				"updated": "20230712011105"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "C.position = Vector3.Slerp(Vector3.right * 10, Vector3.forward * 10, time * 0.1f);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230711212047-rd0wu0e",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230711212047-rd0wu0e",
				"updated": "20230711212104"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "线性和球形插值的区别"
				}
			]
		},
		{
			"ID": "20230711212104-wlabvyy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230711212104-wlabvyy",
				"updated": "20230711212320"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "线性插值的轨迹是直线，球形插值的轨迹是圆弧形轨迹"
				}
			]
		},
		{
			"ID": "20230711212151-l6df8cr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230711212151-l6df8cr",
				"updated": "20230711212151"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"parent-style": "max-width: 550px;",
						"style": "width: 540px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20230711212151-ucon72c.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 540px;\" parent-style=\"max-width: 550px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230711212007-p0lr8vj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230711212007-p0lr8vj"
			}
		}
	]
}