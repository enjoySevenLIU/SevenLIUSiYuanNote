{
	"ID": "20230713151506-ifut9vm",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20230713151506-ifut9vm",
		"name": "Resources资源同步加载",
		"scroll": "\u0026#123;\u0026quot;rootId\u0026quot;:\u0026quot;20230713151506-ifut9vm\u0026quot;,\u0026quot;startId\u0026quot;:\u0026quot;20230713161257-dsqfuvp\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20230713162534-pt1ariu\u0026quot;,\u0026quot;scrollTop\u0026quot;:904.6666870117188,\u0026quot;focusId\u0026quot;:\u0026quot;20230713161257-dsqfuvp\u0026quot;,\u0026quot;focusStart\u0026quot;:0,\u0026quot;focusEnd\u0026quot;:0\u0026#125;",
		"title": "U2L10-1——Resources资源同步加载",
		"type": "doc",
		"updated": "20240321172440"
	},
	"Children": [
		{
			"ID": "20230713161257-dsqfuvp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230713161257-dsqfuvp",
				"updated": "20240321172416"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Resources动态加载资源的方法，让对象拓展性更强\n相对拖曳来说 它更加一劳永逸 更加方便"
				}
			]
		},
		{
			"ID": "20230713162607-9k9kgrq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230713162607-9k9kgrq",
				"updated": "20230713162617"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "重要知识点：记住API\n记住一些特定的格式\n预设体加载出来一定要实例化"
				}
			]
		},
		{
			"ID": "20230713151527-56c6pe7",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230713151527-56c6pe7",
				"updated": "20230713160622"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "本章代码关键字"
				}
			]
		},
		{
			"ID": "20230713160622-itzzf04",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230713160622-itzzf04",
				"updated": "20230713161055"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Resources.Load()\t\t//读取Resources文件夹下的指定名字的文件，返回Unity的Object，需要自行转换\nResources.Load(, typeof())\t//读取Resources文件夹下的指定名字指定类型的文件，返回Unity的Object，需要自行转换\nResources.LoadAll()\t\t//读取Resources文件夹下的指定名字所有类型的文件，返回Unity的Object数组\nResources.Load\u003c\u003e()\t\t//读取Resources文件夹下的指定名字指定类型的文件的泛型方法，返回对应类型\nTextAsset\t\t\t//Unity的文本资源类\ntextAsset.text\t\t\t//Unity的文本资源的文本内容\ntextAsset.bytes\t\t\t//Unity的文本资源的字节数据组\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230713151506-m3728ua",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230713151506-m3728ua",
				"name": "Resources.Load()",
				"updated": "20230713161333"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "资源同步加载普通方法"
				}
			]
		},
		{
			"ID": "20230713161319-cn4otd9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230713161319-cn4otd9",
				"updated": "20230713161323"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "如果文件放在Resources文件夹下的某个文件夹内，需要加上路径"
				}
			]
		},
		{
			"ID": "20230713161111-xp1w5gn",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230713161111-xp1w5gn",
				"updated": "20230713161127"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "预设体对象"
				}
			]
		},
		{
			"ID": "20230713161128-sm43slw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230713161128-sm43slw",
				"updated": "20240321172422"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"Properties": {
						"style": "background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);"
					},
					"TextMarkType": "text",
					"TextMarkTextContent": "想要创建预设体在场景上 要记住实例化"
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);\"}"
				}
			]
		},
		{
			"ID": "20240321172422-zf3qfnp",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20240321172422-zf3qfnp",
				"updated": "20240321172422"
			},
			"Children": [
				{
					"ID": "20240321172422-fuqh2x6",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240321172422-fuqh2x6",
						"updated": "20240321172422"
					},
					"Children": [
						{
							"ID": "20240321172422-5v69npn",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240321172422-5v69npn",
								"updated": "20240321172422"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "第一步：要去加载预设体的资源文件(本质上就是加载配置数据在内存中)\n"
								}
							]
						}
					]
				},
				{
					"ID": "20240321172422-x5yk3kx",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240321172422-x5yk3kx"
					},
					"Children": [
						{
							"ID": "20240321172422-qu5p04w",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240321172422-qu5p04w"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "第二步：如果想要在场景上创建预设体一定是加载配置文件过后，然后实例化"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230713161154-an5h1jp",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230713161154-an5h1jp",
				"updated": "20230713161227"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "//第一步：要去加载预设体的资源文件(本质上就是加载配置数据在内存中)\nObject obj = Resources.Load(\"Cube\");\n//第二步：如果想要在场景上创建预设体一定是加载配置文件过后，然后实例化\nInstantiate(obj);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230713161228-8sb1w1o",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230713161228-8sb1w1o",
				"updated": "20230713161237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "音效资源"
				}
			]
		},
		{
			"ID": "20230713161237-uh8xevg",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230713161237-uh8xevg",
				"updated": "20230713161342"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "//第一步：加载数据\nObject obj3 = Resources.Load(\"Music/TestMusic\");   //如果文件放在某个文件夹内，需要加上路径\n//第二步：使用数据 我们不需要实例化 音效切片 我们则需要吧数据赋值到正确的脚本上即可\naudioS.clip = obj3 as AudioClip;\naudioS.Play();\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230713161335-7thdryf",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230713161335-7thdryf",
				"updated": "20230713161348"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "文本资源"
				}
			]
		},
		{
			"ID": "20230713161348-x8fn63y",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230713161348-x8fn63y",
				"updated": "20230713161454"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "文本资源支持的格式有：.txt、.xml、.bytes、.json、.html、.csv ......\n注意，如果加载不被支持的格式，会返回null"
				}
			]
		},
		{
			"ID": "20230713161454-pwni4kj",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230713161454-pwni4kj",
				"updated": "20230713161509"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "TextAsset ta = Resources.Load(\"txt/test\") as TextAsset;\n//文本内容\nprint(ta.text);\n//字节数据组\nprint(ta.bytes);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230713161512-2lq6sxc",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20230713161512-2lq6sxc",
				"name": "TextAsset",
				"updated": "20230713161600"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "TextAsset"
				}
			]
		},
		{
			"ID": "20230713161519-nrg69ik",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230713161519-nrg69ik",
				"updated": "20230713161545"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "是Unity的文本资源，包含文本内容和字节数据组等"
				}
			]
		},
		{
			"ID": "20230713161546-0o7zq5d",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230713161546-0o7zq5d",
				"updated": "20230713161610"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "TextAsset ta = Resources.Load(\"txt/test\") as TextAsset;\n//文本内容\nprint(ta.text);\n//字节数据组\nprint(ta.bytes);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230713161529-hltv2jg",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230713161529-hltv2jg",
				"updated": "20230713161628"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "图片"
				}
			]
		},
		{
			"ID": "20230713161628-13w7i3v",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230713161628-13w7i3v",
				"updated": "20230713161647"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "tex = Resources.Load(\"Tex/test\") as Texture;\n\nprivate void OnGUI()\n{\n    GUI.DrawTexture(new Rect(0, 0, 100, 100), tex);\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230713161651-sy0jvu8",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230713161651-sy0jvu8",
				"updated": "20230713161659"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "其他类型"
				}
			]
		},
		{
			"ID": "20230713161659-ckri12t",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230713161659-ckri12t",
				"updated": "20230713161703"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "需要什么类型 就用什么类型即可"
				}
			]
		},
		{
			"ID": "20230713161704-mckbpm5",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230713161704-mckbpm5",
				"updated": "20230713161719"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果资源重名"
				}
			]
		},
		{
			"ID": "20230713161719-xrga8mb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230713161719-xrga8mb",
				"updated": "20240321172427"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"Properties": {
						"style": "background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"
					},
					"TextMarkType": "strong text",
					"TextMarkTextContent": "Resources.Load加载同名不同类型资源时 无法准确加载出想要的内容"
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"
				},
				{
					"Type": "NodeText",
					"Data": "，可以使用另外的API"
				}
			]
		},
		{
			"ID": "20230713161739-bd0n33o",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20230713161739-bd0n33o",
				"updated": "20230713161755"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "加载指定类型的资源"
				}
			]
		},
		{
			"ID": "20230713161824-rcjo32e",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230713161824-rcjo32e",
				"updated": "20240321172433"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "读取Resources文件夹下的指定名字指定类型的文件，但是仍然返回Unity的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Object"
				},
				{
					"Type": "NodeText",
					"Data": "​，需要自行转换"
				}
			]
		},
		{
			"ID": "20230713161804-xie69zj",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230713161804-xie69zj",
				"updated": "20230713161811"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "tex = Resources.Load(\"Tex/test\", typeof(Texture)) as Texture;\nta = Resources.Load(\"Tex/test\", typeof(TextAsset)) as TextAsset;\nprint(ta.text);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230713161756-2nk3fkw",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20230713161756-2nk3fkw",
				"name": "Resources.LoadAll()",
				"updated": "20230713161903"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "加载指定名字的所有资源"
				}
			]
		},
		{
			"ID": "20230713161838-jdi75gx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230713161838-jdi75gx",
				"updated": "20240321172436"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "读取Resources文件夹下的指定名字所有类型的文件，返回Unity的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Object"
				},
				{
					"Type": "NodeText",
					"Data": "​数组"
				}
			]
		},
		{
			"ID": "20230713161813-exacic5",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230713161813-exacic5",
				"updated": "20230713161822"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Object[] objs = Resources.LoadAll(\"Tex/test\");\nforeach (Object item in objs)\n{\n    if (item is Texture)\n    {\n        tex = Resources.Load(\"Tex/test\", typeof(Texture)) as Texture;\n    }\n    else if (item is TextAsset)\n    {\n        ta = Resources.Load(\"Tex/test\", typeof(TextAsset)) as TextAsset;\n        print(ta.text);\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230713161849-prv2ro0",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230713161849-prv2ro0",
				"name": "Resources.Load\u0026lt;\u0026gt;()",
				"updated": "20230713162241"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "资源同步加载泛型方法"
				}
			]
		},
		{
			"ID": "20230713162224-acyr0py",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230713162224-acyr0py",
				"updated": "20240321172440"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用了泛型，泛型方法可以让读取返回的值是指定的类型而不再是Unity的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Object"
				},
				{
					"Type": "NodeText",
					"Data": "​，无需转化，同时规避了重名不同类型返回内容不确定的问题\n因此实际使用都推荐泛型方法"
				}
			]
		},
		{
			"ID": "20230713162534-pt1ariu",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230713162534-pt1ariu",
				"updated": "20230713162541"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "TextAsset ta2 = Resources.Load\u003cTextAsset\u003e(\"Tex/test\");\nprint(ta2.text);\ntex = Resources.Load\u003cTexture\u003e(\"Tex/test\");\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		}
	]
}