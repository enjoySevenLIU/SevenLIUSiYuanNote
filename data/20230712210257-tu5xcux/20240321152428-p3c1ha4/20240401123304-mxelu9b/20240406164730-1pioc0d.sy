{"ID":"20240406164730-1pioc0d","Spec":"1","Type":"NodeDocument","Properties":{"id":"20240406164730-1pioc0d","title":"UM4L5——Unity调用对应API","type":"doc","updated":"20250303191259"},"Children":[{"ID":"20240406164730-kcvg4fz","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240406164730-kcvg4fz","updated":"20250303191221"},"Children":[{"Type":"NodeText","Data":"按照官方文档添加相关功能代码"}]},{"ID":"20240406164838-z805nqb","Type":"NodeParagraph","Properties":{"id":"20240406164838-z805nqb","updated":"20240406215753"},"Children":[{"Type":"NodeText","Data":"此部分参考："}]},{"ID":"20240406215754-zl0dq8e","Type":"NodeList","ListData":{},"Properties":{"id":"20240406215754-zl0dq8e","updated":"20240406215755"},"Children":[{"ID":"20240406215755-kad6052","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240406215755-kad6052","updated":"20240406215755"},"Children":[{"ID":"20240406215755-p83y6ku","Type":"NodeParagraph","Properties":{"id":"20240406215755-p83y6ku","updated":"20240406215835"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://lbsyun.baidu.com/faq/api?title=android-privacy","TextMarkTextContent":"隐私合规接口 | 百度地图API SDK (baidu.com)"}]}]},{"ID":"20240406215807-goc82ff","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240406215807-goc82ff"},"Children":[{"ID":"20240406215807-mnw2urt","Type":"NodeParagraph","Properties":{"id":"20240406215807-mnw2urt","updated":"20240406215848"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://lbsyun.baidu.com/faq/api?title=android-locsdk/guide/get-location/latlng","TextMarkTextContent":"获取全球经纬度 | 百度地图API SDK (baidu.com)"}]}]},{"ID":"20240406215814-t9wxmmk","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240406215814-t9wxmmk"},"Children":[{"ID":"20240406215814-p50cw90","Type":"NodeParagraph","Properties":{"id":"20240406215814-p50cw90","updated":"20240406215856"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://lbsyun.baidu.com/faq/api?title=android-locsdk/guide/get-location/address","TextMarkTextContent":"获取地址 | 百度地图API SDK (baidu.com)"}]}]}]},{"ID":"20240406215858-38nu9pv","Type":"NodeParagraph","Properties":{"id":"20240406215858-38nu9pv","updated":"20250303191143"},"Children":[{"Type":"NodeText","Data":"Android Studio 内大致实现思路："}]},{"ID":"20240406215916-go3l9cq","Type":"NodeList","ListData":{},"Properties":{"id":"20240406215916-go3l9cq","updated":"20250303191221"},"Children":[{"ID":"20240406220058-896pcpr","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240406220058-896pcpr","updated":"20250303191152"},"Children":[{"ID":"20240406220058-twfac6s","Type":"NodeParagraph","Properties":{"id":"20240406220058-twfac6s","updated":"20250303191152"},"Children":[{"Type":"NodeText","Data":"声明一个监听类继承 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"BDAbstractLocationListener"},{"Type":"NodeText","Data":"​，它用于在 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"MainActivity"},{"Type":"NodeText","Data":"​ 内被调用，开始获取定位信息\n该类里需要实现一个监听定位成功的函数 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"onReceiveLocation"},{"Type":"NodeText","Data":"​，定位成功后通过传入的定位结果类 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"BDLocation"},{"Type":"NodeText","Data":"​ 对象获取定位的地址信息\n将获取到的地址信息通过 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"UnityPlayer.UnitySendMessage()"},{"Type":"NodeText","Data":"​ 发送到Unity，再通过Unity输出这些消息"}]}]},{"ID":"20240406215918-tr4osxx","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240406215918-tr4osxx","updated":"20250303191221"},"Children":[{"ID":"20240406215918-ccgqjw5","Type":"NodeParagraph","Properties":{"id":"20240406215918-ccgqjw5","updated":"20250303191221"},"Children":[{"Type":"NodeText","Data":"在 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"MainActivity"},{"Type":"NodeText","Data":"​ 内实现一个提供给Unity调用的获取地址的方法 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"GetAddress()"},{"Type":"NodeText","Data":"​，\n该方法会先执行隐私合规接口，确保获取地址消息正常，然后实例化 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"LocationClient"},{"Type":"NodeText","Data":"​ 和监听类 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"MyLocationListener"},{"Type":"NodeText","Data":"​，\n然后将监听类对象传入到 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"LocationClient"},{"Type":"NodeText","Data":"​ 内，待定位成功后就会调用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"MyLocationListener"},{"Type":"NodeText","Data":"​ 的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"onReceiveLocation"},{"Type":"NodeText","Data":"​ 方法\n然后设置各个参数，将调整的参数传入到 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"LocationClient"},{"Type":"NodeText","Data":"​ 对象内，最后执行 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"LocationClient"},{"Type":"NodeText","Data":"​ 对象的开始获取定位方法"}]}]}]},{"ID":"20240406222554-ogig78f","Type":"NodeParagraph","Properties":{"id":"20240406222554-ogig78f","updated":"20240406222559"},"Children":[{"Type":"NodeText","Data":"具体代码如下："}]},{"ID":"20240406222256-iyg3h68","Type":"NodeParagraph","Properties":{"id":"20240406222256-iyg3h68","updated":"20240406222550"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"MyLocationListener.java"},{"Type":"NodeText","Data":"​"}]},{"ID":"20240406222551-sevdfri","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240406222551-sevdfri","style":"line-height: 22px;","updated":"20240406222639"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"package com.taikr.androidsdk;\n\nimport com.baidu.location.BDAbstractLocationListener;\nimport com.baidu.location.BDLocation;\nimport com.unity3d.player.UnityPlayer;\n\n//监听类\npublic class MyLocationListener extends BDAbstractLocationListener {\n\n    //当定位成功时，就会调用这里的函数\n    @Override\n    public void onReceiveLocation(BDLocation location) {\n        //此处的BDLocation为定位结果信息类，通过它的各种get方法可获取定位相关的全部结果\n        //以下只列举部分获取经纬度相关（常用）的结果信息\n        //更多结果信息获取说明，请参照类参考中BDLocation类中的说明\n\n        String addr = location.getAddrStr();         //获取详细地址信息\n        String country = location.getCountry();      //获取国家\n        String province = location.getProvince();    //获取省份\n        String city = location.getCity();            //获取城市\n        String district = location.getDistrict();    //获取区县\n        //将获取到的消息发送到Unity的方法上\n        UnityPlayer.UnitySendMessage(\"Lesson6\", \"GetAddress\", country + \"_\" + province + \"_\" + city + \"_\" + district);\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240406222644-2l1pce0","Type":"NodeParagraph","Properties":{"id":"20240406222644-2l1pce0","updated":"20240406222655"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"MainActivity.java"},{"Type":"NodeText","Data":"​"}]},{"ID":"20240406222655-g1auc40","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240406222655-g1auc40","style":"line-height: 22px;","updated":"20240406222726"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"package com.taikr.androidsdk;\n\nimport android.os.Bundle;\n\nimport com.baidu.location.LocationClient;\nimport com.baidu.location.LocationClientOption;\nimport com.unity3d.player.UnityPlayerActivity;\n\npublic class MainActivity extends UnityPlayerActivity {\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n\n    }\n\n    //提供给Unity调用的获取地址方法\n    public void GetAddress() {\n        //setAgreePrivacy接口需要在LocationClient实例化之前调用\n        //如果setAgreePrivacy接口参数设置为了false，则定位功能不会实现\n        //true，表示用户同意隐私合规政策\n        //false，表示用户不同意隐私合规政策\n        LocationClient.setAgreePrivacy(true);\n        try {\n            LocationClient mLocationClient = null;\n            MyLocationListener myListener = new MyLocationListener();\n            mLocationClient = new LocationClient(getApplicationContext());\n            mLocationClient.registerLocationListener(myListener);\n\n            LocationClientOption option = new LocationClientOption();\n\n            option.setLocationMode(LocationClientOption.LocationMode.Hight_Accuracy);\n            //可选，设置定位模式，默认高精度\n            //LocationMode.Hight_Accuracy：高精度；\n            //LocationMode. Battery_Saving：低功耗；\n            //LocationMode. Device_Sensors：仅使用设备；\n            //LocationMode.Fuzzy_Locating, 模糊定位模式；v9.2.8版本开始支持，可以降低API的调用频率，但同时也会降低定位精度；\n\n            option.setCoorType(\"bd09ll\");\n            //可选，设置返回经纬度坐标类型，默认gcj02\n            //gcj02：国测局坐标；\n            //bd09ll：百度经纬度坐标；\n            //bd09：百度墨卡托坐标；\n            //海外地区定位，无需设置坐标类型，统一返回wgs84类型坐标\n\n            option.setFirstLocType(LocationClientOption.FirstLocType.ACCURACY_IN_FIRST_LOC);\n            //可选，首次定位时可以选择定位的返回是准确性优先还是速度优先，默认为速度优先\n            //可以搭配setOnceLocation(Boolean isOnceLocation)单次定位接口使用，当设置为单次定位时，setFirstLocType接口中设置的类型即为单次定位使用的类型\n            //FirstLocType.SPEED_IN_FIRST_LOC:速度优先，首次定位时会降低定位准确性，提升定位速度；\n            //FirstLocType.ACCUARACY_IN_FIRST_LOC:准确性优先，首次定位时会降低速度，提升定位准确性；\n\n            option.setScanSpan(1000);\n            //可选，设置发起定位请求的间隔，int类型，单位ms\n            //如果设置为0，则代表单次定位，即仅定位一次，默认为0\n            //如果设置非0，需设置1000ms以上才有效\n\n            option.setOpenGnss(true);\n            //可选，设置是否使用卫星定位，默认false\n            //使用高精度和仅用设备两种定位模式的，参数必须设置为true\n\n            option.setLocationNotify(true);\n            //可选，设置是否当卫星定位有效时按照1S/1次频率输出卫星定位结果，默认false\n\n            option.setIgnoreKillProcess(false);\n            //可选，定位SDK内部是一个service，并放到了独立进程。\n            //设置是否在stop的时候杀死这个进程，默认（建议）不杀死，即setIgnoreKillProcess(true)\n\n            option.SetIgnoreCacheException(false);\n            //可选，设置是否收集Crash信息，默认收集，即参数为false\n\n            option.setWifiCacheTimeOut(5*60*1000);\n            //可选，V7.2版本新增能力\n            //如果设置了该接口，首次启动定位时，会先判断当前Wi-Fi是否超出有效期，若超出有效期，会先重新扫描Wi-Fi，然后定位\n\n            option.setEnableSimulateGnss(false);\n            //可选，设置是否需要过滤卫星定位仿真结果，默认需要，即参数为false\n\n            option.setNeedNewVersionRgc(true);\n            //可选，设置是否需要最新版本的地址信息。默认需要，即参数为true\n\n            option.setIsNeedAddress(true);\n            //可选，是否需要地址信息，默认为不需要，即参数为false\n            //如果开发者需要获得当前点的地址信息，此处必须为true\n\n            option.setNeedNewVersionRgc(true);\n            //可选，设置是否需要最新版本的地址信息。默认需要，即参数为true\n\n            mLocationClient.setLocOption(option);\n            //mLocationClient为第二步初始化过的LocationClient对象\n            //需将配置好的LocationClientOption对象，通过setLocOption方法传递给LocationClient对象使用\n            //更多LocationClientOption的配置，请参照类参考中LocationClientOption类的详细说明\n\n            mLocationClient.setLocOption(option);\n            //mLocationClient为第二步初始化过的LocationClient对象\n            //需将配置好的LocationClientOption对象，通过setLocOption方法传递给LocationClient对象使用\n            //更多LocationClientOption的配置，请参照类参考中LocationClientOption类的详细说明\n\n\t\t\t//正式执行获取定位的方法\n            mLocationClient.start();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240406164823-3y9da9x","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240406164823-3y9da9x","updated":"20250303191235"},"Children":[{"Type":"NodeText","Data":"将相关信息传递给Unity"}]},{"ID":"20240406222521-3g5bpbr","Type":"NodeParagraph","Properties":{"id":"20240406222521-3g5bpbr","updated":"20250303191228"},"Children":[{"Type":"NodeText","Data":"Unity 脚本内大致实现思路："}]},{"ID":"20240406222521-vt8dtrf","Type":"NodeList","ListData":{},"Properties":{"id":"20240406222521-vt8dtrf","updated":"20250303191235"},"Children":[{"ID":"20240406222521-luneh4o","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240406222521-luneh4o","updated":"20240406222521"},"Children":[{"ID":"20240406222521-tmv80o8","Type":"NodeParagraph","Properties":{"id":"20240406222521-tmv80o8","updated":"20240406222521"},"Children":[{"Type":"NodeText","Data":"在界面上添加一个获取地址的按钮，以及在获取到地址后用于显示地址消息在屏幕上的文本控件"}]}]},{"ID":"20240406222521-2ej8o7y","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240406222521-2ej8o7y","updated":"20250303191235"},"Children":[{"ID":"20240406222521-bn1rhyl","Type":"NodeParagraph","Properties":{"id":"20240406222521-bn1rhyl","updated":"20250303191235"},"Children":[{"Type":"NodeText","Data":"按下获取地址按钮会调用 Android 的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"GetAddress()"},{"Type":"NodeText","Data":"​ 方法，待获取定位结束后，Android 会调用 Unity 的方法，将消息输出到文本控件上"}]}]}]},{"ID":"20240406222734-9sx1mwj","Type":"NodeParagraph","Properties":{"id":"20240406222734-9sx1mwj","updated":"20240406222745"},"Children":[{"Type":"NodeText","Data":"具体实现代码如下："}]},{"ID":"20240406222746-092m2do","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240406222746-092m2do","style":"line-height: 22px;","updated":"20240406222757"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"YyM="},{"Type":"NodeCodeBlockCode","Data":"using UnityEngine;\nusing UnityEngine.UI;\n\npublic class Lesson6 : MonoBehaviour\n{\n    public Button btnOpen;\n    public Text txtInfo;\n\n    private void Start()\n    {\n        btnOpen.onClick.AddListener(() =\u003e\n        {\n            using (AndroidJavaClass ajc = new AndroidJavaClass(\"com.unity3d.player.UnityPlayer\"))\n            {\n                using (AndroidJavaObject ajo = ajc.GetStatic\u003cAndroidJavaObject\u003e(\"currentActivity\"))\n                {\n                    ajo.Call(\"GetAddress\");\n                }\n            }\n        });\n    }\n\n    //提供给安卓端调用的函数 把定位信息传递过来\n    public void GetAddress(string address)\n    {\n        txtInfo.text = address;\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240406164834-52q8ui5","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240406164834-52q8ui5","updated":"20250303191259"},"Children":[{"Type":"NodeText","Data":"将生成的aar包导入Unity"}]},{"ID":"20240406200046-50s2cge","Type":"NodeParagraph","Properties":{"id":"20240406200046-50s2cge","updated":"20250303191259"},"Children":[{"Type":"NodeText","Data":"将 Android Studio 的交互项目生成为 arr 包，再做必要的处理即可导入到 Unity 内调用\n具体可看："},{"Type":"NodeTextMark","TextMarkType":"block-ref","TextMarkBlockRefID":"20240402221641-b58hpht","TextMarkBlockRefSubtype":"d","TextMarkTextContent":"UM3L5——Unity中嵌入Android内容"}]},{"ID":"20240406222942-cohc9v2","Type":"NodeParagraph","Properties":{"id":"20240406222942-cohc9v2"}}]}