{
	"ID": "20240331162819-lqr0pac",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20240331162819-lqr0pac",
		"title": "UM2L5——循环语句",
		"type": "doc",
		"updated": "20240331164609"
	},
	"Children": [
		{
			"ID": "20240331164519-wa0glyr",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240331164519-wa0glyr",
				"updated": "20240331164525"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "本章代码关键字"
				}
			]
		},
		{
			"ID": "20240331164526-20tohfp",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240331164526-20tohfp",
				"style": "line-height: 22px;",
				"updated": "20240331164609"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "while () { }\ndo { } while ();\nfor () { }\ncontinue\nbreak\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240331162911-8soekgh",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20240331162911-8soekgh",
				"updated": "20240331162915"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "循环语句"
				}
			]
		},
		{
			"ID": "20240331162915-elq0y6r",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331162915-elq0y6r",
				"updated": "20240331162937"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Java中的循环语句和C"
				},
				{
					"Type": "NodeBackslash",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeText",
							"Data": "#"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "中基本相同，就像写C"
				},
				{
					"Type": "NodeBackslash",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeText",
							"Data": "#"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "一样书写即可\n只需要注意"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "for"
				},
				{
					"Type": "NodeText",
					"Data": "​的特殊写法（"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "foreach"
				},
				{
					"Type": "NodeText",
					"Data": "​语句）"
				}
			]
		},
		{
			"ID": "20240331162819-xbzkzmg",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240331162819-xbzkzmg",
				"updated": "20240331162908"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "while循环"
				}
			]
		},
		{
			"ID": "20240331163052-4dgej70",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331163052-4dgej70",
				"updated": "20240331163052"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "不满足条件后，就会跳出循环"
				}
			]
		},
		{
			"ID": "20240331163030-t9292bq",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240331163030-t9292bq",
				"style": "line-height: 22px;",
				"updated": "20240331162908"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "int i = 0;\nwhile (i \u003c= 5) {\n    System.out.println(i);\n    i++;\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240331163056-5r5a6ta",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331163056-5r5a6ta",
				"updated": "20240331163058"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输出："
				}
			]
		},
		{
			"ID": "20240331163059-knfn3oi",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240331163059-knfn3oi",
				"style": "line-height: 22px;",
				"updated": "20240331163108"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "0\n1\n2\n3\n4\n5\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240331163259-51npk1p",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240331163259-51npk1p",
				"updated": "20240331163309"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "do...while循环"
				}
			]
		},
		{
			"ID": "20240331163309-3lu4q89",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331163309-3lu4q89",
				"updated": "20240331163319"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "先至少执行一次循环语句块的逻辑 再判断是否继续"
				}
			]
		},
		{
			"ID": "20240331163321-solm4d3",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240331163321-solm4d3",
				"style": "line-height: 22px;",
				"updated": "20240331163511"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "i = 5;\ndo {\n    System.out.println(i);\n    i++;\n} while (i \u003c= 10);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240331163449-v6p7u7y",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331163449-v6p7u7y",
				"updated": "20240331163453"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输出："
				}
			]
		},
		{
			"ID": "20240331163446-ak5iogh",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240331163446-ak5iogh",
				"style": "line-height: 22px;",
				"updated": "20240331163523"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "5\n6\n7\n8\n9\n10\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240331163543-dkod9je",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240331163543-dkod9je",
				"updated": "20240331163552"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "for循环"
				}
			]
		},
		{
			"ID": "20240331163552-kpxbn36",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331163552-kpxbn36",
				"updated": "20240331163605"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "第一个空（初始表达式）：一般声明临时变量，用来记数用,可以连续声明\n第二个空（条件表达式）：表明进入循环的条件 一个"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "boolean"
				},
				{
					"Type": "NodeText",
					"Data": "​类型的结果\n第三个空（增量表达式）：用第一个空中的变量进行自增减运算"
				}
			]
		},
		{
			"ID": "20240331163609-vwh7dp5",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240331163609-vwh7dp5",
				"style": "line-height: 22px;",
				"updated": "20240331163728"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "for (int i2 = 0; i2 \u003c 10; i2++) {\n    System.out.println(i2);\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240331163728-td0uppv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331163728-td0uppv",
				"updated": "20240331163731"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输出："
				}
			]
		},
		{
			"ID": "20240331163731-wo3ip31",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240331163731-wo3ip31",
				"style": "line-height: 22px;",
				"updated": "20240331163740"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240331163744-ece6pv0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331163744-ece6pv0",
				"style": "background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);",
				"updated": "20240331163832"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注意：Java中不使用 "
				},
				{
					"Type": "NodeTextMark",
					"Properties": {
						"parent-style": "background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"
					},
					"TextMarkType": "code",
					"TextMarkTextContent": "foreach"
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: parent-style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​\n​"
				},
				{
					"Type": "NodeTextMark",
					"Properties": {
						"parent-style": "background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"
					},
					"TextMarkType": "code",
					"TextMarkTextContent": "foreach"
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: parent-style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​语句 其实是for循环的特殊简化版本，主要用于遍历复合容器中的元素"
				}
			]
		},
		{
			"ID": "20240331163836-gclzzoe",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331163836-gclzzoe",
				"updated": "20240331163836"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "写法："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "for (元素类型 x : 遍历对象) { }"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20240331163841-mp9l1qs",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240331163841-mp9l1qs",
				"style": "line-height: 22px;",
				"updated": "20240331164047"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "System.out.println(\"**********\");\nint[] arr = new int[] { 1, 2, 3, 4, 5 };\nfor ( int x : arr ) {\n    System.out.println(x);\n}"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240331163951-erc85fy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331163951-erc85fy",
				"updated": "20240331163954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输出："
				}
			]
		},
		{
			"ID": "20240331163955-1h1wtai",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240331163955-1h1wtai",
				"style": "line-height: 22px;",
				"updated": "20240331164056"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "**********\n1\n2\n3\n4\n5"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240331164127-kdcttep",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240331164127-kdcttep",
				"updated": "20240331164138"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "break 和 coutinue"
				}
			]
		},
		{
			"ID": "20240331164139-336d19v",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20240331164139-336d19v",
				"updated": "20240331164157"
			},
			"Children": [
				{
					"ID": "20240331164151-5zjeosi",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240331164151-5zjeosi",
						"updated": "20240331164157"
					},
					"Children": [
						{
							"ID": "20240331164151-0s0hls0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240331164151-0s0hls0",
								"updated": "20240331164157"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "break"
								},
								{
									"Type": "NodeText",
									"Data": "​ 是跳出循环\n"
								}
							]
						},
						{
							"ID": "20240331164358-cw49l6h",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240331164358-cw49l6h",
								"style": "line-height: 22px;",
								"updated": "20240331164358"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "System.out.println(\"**********\");\nint[] arr = new int[] { 1, 2, 3, 4, 5 };\nfor ( int x : arr ) {\n    if (x == 2)\n        break;\n    System.out.println(x);\n}\nSystem.out.println(\"循环结束\");\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20240331164358-d9rzzti",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240331164358-d9rzzti",
								"updated": "20240331164358"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "输出："
								}
							]
						},
						{
							"ID": "20240331164358-pzah1np",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240331164358-pzah1np",
								"style": "line-height: 22px;",
								"updated": "20240331164358"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "**********\n1\n循环结束\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20240331164152-e6grx4q",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240331164152-e6grx4q"
					},
					"Children": [
						{
							"ID": "20240331164152-agm55w1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240331164152-agm55w1",
								"updated": "20240331164154"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "continue"
								},
								{
									"Type": "NodeText",
									"Data": "​ 是跳过本次循环继续执行下一次循环"
								}
							]
						},
						{
							"ID": "20240331164341-ue06nik",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240331164341-ue06nik",
								"style": "line-height: 22px;",
								"updated": "20240331164341"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "System.out.println(\"**********\");\nint[] arr = new int[] { 1, 2, 3, 4, 5 };\nfor ( int x : arr ) {\n    if (x == 2)\n        continue;\n    System.out.println(x);\n}\nSystem.out.println(\"循环结束\");\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20240331164343-5bnsa72",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240331164343-5bnsa72",
								"updated": "20240331164345"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "输出："
								}
							]
						},
						{
							"ID": "20240331164346-mzdqueu",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240331164346-mzdqueu",
								"style": "line-height: 22px;",
								"updated": "20240331164351"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "**********\n1\n3\n4\n5\n循环结束\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240331164330-g8glzdr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331164330-g8glzdr"
			}
		}
	]
}