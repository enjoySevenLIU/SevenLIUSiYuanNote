{
	"ID": "20240401221644-o7lkmo3",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20240401221644-o7lkmo3",
		"title": "UM2L17——方法的引用和Function接口",
		"type": "doc",
		"updated": "20240401224036"
	},
	"Children": [
		{
			"ID": "20240401221644-hobwoti",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20240401221644-hobwoti",
				"updated": "20240401221658"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "方法的引用"
				}
			]
		},
		{
			"ID": "20240401221659-c8py78u",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240401221659-c8py78u",
				"updated": "20240401221709"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用函数式接口去装载我们在类中声明的方法，而不是lambda表达式"
				}
			]
		},
		{
			"ID": "20240401224054-46kcth3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240401224054-46kcth3",
				"updated": "20240401224104"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "不管是使用lambda表达式还是想要引用方法，我们都需要使用函数式接口来装载\n除了"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Function"
				},
				{
					"Type": "NodeText",
					"Data": "​以外Java中还写好了很多函数式接口供我们使用，用现成的还是自己写，自己决定即可"
				}
			]
		},
		{
			"ID": "20240401221726-2wardxw",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240401221726-2wardxw",
				"updated": "20240401221728"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如何进行方法的引用"
				}
			]
		},
		{
			"ID": "20240401221730-rcqqcvb",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240401221730-rcqqcvb",
				"updated": "20240401223626"
			},
			"Children": [
				{
					"ID": "20240401221830-p0hz37m",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20240401221830-p0hz37m",
						"updated": "20240401221830"
					},
					"Children": [
						{
							"ID": "20240401221830-2dd3308",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240401221830-2dd3308",
								"updated": "20240401221858"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "引用静态方法 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "类名::静态方法名"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"ID": "20240401222110-i0qtzv0",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240401222110-i0qtzv0",
								"style": "line-height: 22px;",
								"updated": "20240401222113"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "interface ITest01 {\n    void fun();\n}\n\npublic class Lesson22 {\n    public static void Test() {\n        System.out.println(\"方法调用\");\n    }\n\n    public static void main(String[] args) {\n        ITest01 t = Lesson22::Test;\n        t.fun();\n    }\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20240401222114-6r6mcn0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240401222114-6r6mcn0",
								"updated": "20240401222117"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "输出："
								}
							]
						},
						{
							"ID": "20240401222117-03lm18l",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240401222117-03lm18l",
								"style": "line-height: 22px;",
								"updated": "20240401222130"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "方法调用\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20240401221830-n6nofow",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20240401221830-n6nofow",
						"updated": "20240401221830"
					},
					"Children": [
						{
							"ID": "20240401221830-8tjnvyp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240401221830-8tjnvyp",
								"updated": "20240401221853"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "引用成员方法 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "对象名::成员方法名"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"ID": "20240401222132-g2c1i0i",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240401222132-g2c1i0i",
								"style": "line-height: 22px;",
								"updated": "20240401222342"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "interface ITest01 {\n    void fun();\n}\n\npublic class Lesson22 {\n    public void Test2() {\n        System.out.println(\"方法调用2\");\n    }\n\n    public static void main(String[] args) {\n        Lesson22 l = new Lesson22();\n        ITest01 t2 = l::Test2;\n\t\tt2.fun();\n    }\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20240401222323-gh6gxci",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240401222323-gh6gxci",
								"updated": "20240401222324"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "输出："
								}
							]
						},
						{
							"ID": "20240401222325-1khsz6r",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240401222325-1khsz6r",
								"style": "line-height: 22px;",
								"updated": "20240401222346"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "方法调用2\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20240401221830-jje5a5u",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20240401221830-jje5a5u",
						"updated": "20240401221830"
					},
					"Children": [
						{
							"ID": "20240401221830-kyeap7z",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240401221830-kyeap7z",
								"updated": "20240401221836"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "引用构造函数"
								}
							]
						},
						{
							"ID": "20240401221836-saw094a",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20240401221836-saw094a",
								"updated": "20240401221836"
							},
							"Children": [
								{
									"ID": "20240401221836-secp0fk",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20240401221836-secp0fk",
										"updated": "20240401221836"
									},
									"Children": [
										{
											"ID": "20240401221836-szz1zby",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240401221836-szz1zby",
												"updated": "20240401222859"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "无参和有参构造 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "类名::new"
												},
												{
													"Type": "NodeText",
													"Data": "​"
												}
											]
										},
										{
											"ID": "20240401222859-tg3lx15",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20240401222859-tg3lx15",
												"style": "line-height: 22px;",
												"updated": "20240401222920"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "amF2YQ=="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "interface ITest02 {\n    Lesson22 fun();\n}\n\ninterface ITest03 {\n    Lesson22 fun(int a);\n}\n\npublic class Lesson22 {\n    public Lesson22() {\n        System.out.println(\"无参构造\");\n    }\n\n    public Lesson22(int i) {\n        System.out.println(\"有参构造\" + i);\n    }\n\n    public static void main(String[] args) {\n        ITest02 tt2 = Lesson22::new;\n        Lesson22 l2 = tt2.fun();\n\n        ITest03 tt3 = Lesson22::new;\n        Lesson22 l3 = tt3.fun(99);\n    }\n}\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										},
										{
											"ID": "20240401222922-47z63i6",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240401222922-47z63i6",
												"updated": "20240401222924"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "输出："
												}
											]
										},
										{
											"ID": "20240401222925-bs3plam",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20240401222925-bs3plam",
												"style": "line-height: 22px;",
												"updated": "20240401222931"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "amF2YQ=="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "无参构造\n有参构造99\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								},
								{
									"ID": "20240401221836-9ygklx6",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "Mi4=",
										"Num": 2
									},
									"Properties": {
										"id": "20240401221836-9ygklx6",
										"updated": "20240401221836"
									},
									"Children": [
										{
											"ID": "20240401221836-2e42t0k",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240401221836-2e42t0k",
												"updated": "20240401221846"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "数组构造 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "类名[]::new"
												},
												{
													"Type": "NodeText",
													"Data": "​"
												}
											]
										},
										{
											"ID": "20240401223243-jiqaolj",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240401223243-jiqaolj",
												"updated": "20240401223313"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "对于数组的构造，参数要传入的是数组的长度"
												}
											]
										},
										{
											"ID": "20240401223211-7bk4jjn",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20240401223211-7bk4jjn",
												"style": "line-height: 22px;",
												"updated": "20240401223230"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "amF2YQ=="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "interface ITest04 {\n    Integer[] fun(int n);\n}\n\npublic class Lesson22 {\n    public static void main(String[] args) {\n        ITest04 tt4 = Integer[]::new;\n        Integer[] arr = tt4.fun(9);\n        System.out.println(arr.length);\n    }\n}\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										},
										{
											"ID": "20240401223231-bssrui2",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240401223231-bssrui2",
												"updated": "20240401223233"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "输出："
												}
											]
										},
										{
											"ID": "20240401223234-n1e46qx",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20240401223234-n1e46qx",
												"style": "line-height: 22px;",
												"updated": "20240401223239"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "amF2YQ=="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "9\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20240401221830-8942l0p",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20240401221830-8942l0p",
						"updated": "20240401223626"
					},
					"Children": [
						{
							"ID": "20240401221830-b87o34h",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240401221830-b87o34h",
								"updated": "20240401221909"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "引用泛型方法\n函数式接口的泛型和对应的泛型方法 参数或返回值上一定要对应"
								}
							]
						},
						{
							"ID": "20240401223545-qkbrihu",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240401223545-qkbrihu",
								"style": "line-height: 22px;",
								"updated": "20240401223626"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "interface ITest05\u003cT\u003e {\n    void fun(T i);\n}\n\npublic class Lesson22 {\n\tstatic public\u003cT\u003e void Test3(T i) {\n        System.out.println(i);\n    }\n\n    public static void main(String[] args) {\n        ITest05\u003cInteger\u003e ttt = Lesson22::Test3;\n        ttt.fun(999);\n    }\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20240401223600-6mlwboe",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240401223600-6mlwboe",
								"updated": "20240401223601"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "输出："
								}
							]
						},
						{
							"ID": "20240401223602-4rr84xq",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240401223602-4rr84xq",
								"style": "line-height: 22px;",
								"updated": "20240401223610"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "999\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240401223654-7gh21pi",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240401223654-7gh21pi",
				"updated": "20240401223707"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Function接口"
				}
			]
		},
		{
			"ID": "20240401223708-s4bvp5o",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240401223708-s4bvp5o",
				"updated": "20240401224027"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们在使用lambda表达式时都需要自己声明函数式接口用于装载\n为了方便我们的使用，Java在"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "java.util.function"
				},
				{
					"Type": "NodeText",
					"Data": "​包中提供了预先定义好的函数式接口供我们使用\n其中最常用的接口是 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Function\u0026lt;T, R\u0026gt;"
				},
				{
					"Type": "NodeText",
					"Data": "​接口\n​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "T"
				},
				{
					"Type": "NodeText",
					"Data": "​：参数类型\n​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "R"
				},
				{
					"Type": "NodeText",
					"Data": "​：返回值类型\n调用方法："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "apply()"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20240401224028-tgkda9o",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240401224028-tgkda9o",
				"style": "background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);",
				"updated": "20240401224036"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注意：更多的写好的函数式接口 可以直接去"
				},
				{
					"Type": "NodeTextMark",
					"Properties": {
						"parent-style": "background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"
					},
					"TextMarkType": "code",
					"TextMarkTextContent": "function"
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: parent-style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​​包中查看\n如果不想记忆，那直接自己写函数式接口即可"
				}
			]
		},
		{
			"ID": "20240401223755-s3e7t5g",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240401223755-s3e7t5g",
				"style": "line-height: 22px;",
				"updated": "20240401223957"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Function\u003cInteger, String\u003e function = (i) -\u003e {\n    i += 99;\n    return i.toString();\n};\nSystem.out.println(function.apply(1));\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240401223959-r5br44s",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240401223959-r5br44s",
				"updated": "20240401224004"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输出："
				}
			]
		},
		{
			"ID": "20240401224004-xg6y5wu",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240401224004-xg6y5wu",
				"style": "line-height: 22px;",
				"updated": "20240401224008"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "100\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		}
	]
}