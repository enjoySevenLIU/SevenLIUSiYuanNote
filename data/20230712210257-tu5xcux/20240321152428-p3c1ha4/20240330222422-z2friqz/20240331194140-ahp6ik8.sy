{
	"ID": "20240331194140-ahp6ik8",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20240331194140-ahp6ik8",
		"title": "UM2L7——函数",
		"type": "doc",
		"updated": "20240331211339"
	},
	"Children": [
		{
			"ID": "20240331194140-8ique9a",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20240331194140-8ique9a",
				"updated": "20240331202830"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "函数"
				}
			]
		},
		{
			"ID": "20240331205212-y5c4z2v",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331205212-y5c4z2v",
				"updated": "20240331205226"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Java中函数的使用和C#基本一致，区别主要是："
				}
			]
		},
		{
			"ID": "20240331205226-45gxsoe",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240331205226-45gxsoe",
				"updated": "20240331211325"
			},
			"Children": [
				{
					"ID": "20240331205226-r7z53j7",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20240331205226-r7z53j7",
						"updated": "20240331205232"
					},
					"Children": [
						{
							"ID": "20240331205226-hhzkgy2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240331205226-hhzkgy2",
								"updated": "20240331205232"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Java中没有"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "ref"
								},
								{
									"Type": "NodeText",
									"Data": "​和"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "out"
								},
								{
									"Type": "NodeText",
									"Data": "​关键字"
								}
							]
						}
					]
				},
				{
					"ID": "20240331205226-w0icqa6",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20240331205226-w0icqa6",
						"updated": "20240331205236"
					},
					"Children": [
						{
							"ID": "20240331205226-ky69mez",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240331205226-ky69mez",
								"updated": "20240331205236"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Java中可变参数写法有些许不同，用...表示可变参数"
								}
							]
						}
					]
				},
				{
					"ID": "20240331205226-boifs0k",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20240331205226-boifs0k",
						"updated": "20240331211325"
					},
					"Children": [
						{
							"ID": "20240331205226-7rtk141",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240331205226-7rtk141",
								"updated": "20240331211325"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Java中函数参数没有默认参数的用法，即不能为参数添加默认值"
								}
							]
						}
					]
				},
				{
					"ID": "20240331205226-v1sne2n",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20240331205226-v1sne2n",
						"updated": "20240331205226"
					},
					"Children": [
						{
							"ID": "20240331205226-glsufnx",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240331205226-glsufnx",
								"updated": "20240331205226"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Java中函数的命名方式 用的是驼峰命名法"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240331202830-bhktcah",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240331202830-bhktcah",
				"updated": "20240331202830"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Java中的函数和C#对比"
				}
			]
		},
		{
			"ID": "20240331202851-493hcu0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331202851-493hcu0",
				"updated": "20240331202830"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Java中函数和C中函数的使用基本一致函数的声明、重载、使用等就按照C中的基础规则使用即可\n主要区别如下："
				}
			]
		},
		{
			"ID": "20240331202859-e63zqoc",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240331202859-e63zqoc",
				"updated": "20240331211339"
			},
			"Children": [
				{
					"ID": "20240331202859-e7qpw3k",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20240331202859-e7qpw3k",
						"updated": "20240331202906"
					},
					"Children": [
						{
							"ID": "20240331202859-eoeo5r4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240331202859-eoeo5r4",
								"updated": "20240331202906"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Java中没有"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "ref"
								},
								{
									"Type": "NodeText",
									"Data": "​和"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "out"
								},
								{
									"Type": "NodeText",
									"Data": "​关键字"
								}
							]
						}
					]
				},
				{
					"ID": "20240331202859-cixlzhk",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20240331202859-cixlzhk",
						"updated": "20240331202859"
					},
					"Children": [
						{
							"ID": "20240331202859-okjlood",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240331202859-okjlood",
								"updated": "20240331202859"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Java中可变参数写法有些许不同"
								}
							]
						}
					]
				},
				{
					"ID": "20240331202859-7d9xqc9",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20240331202859-7d9xqc9",
						"updated": "20240331211339"
					},
					"Children": [
						{
							"ID": "20240331202859-0pvqh21",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240331202859-0pvqh21",
								"updated": "20240331211339"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Java中函数参数没有默认参数用法，即不能为参数添加默认值"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240331202924-72yjnv0",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240331202924-72yjnv0",
				"updated": "20240331202830"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "复习函数基本概念"
				}
			]
		},
		{
			"ID": "20240331202930-x4vtj16",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331202930-x4vtj16",
				"updated": "20240331202830"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "函数（方法）本质是一块具有名称的代码块，可以使用函数（方法）的名称来执行该代码块\n函数（方法）是封装代码进行重复使用的一种机制"
				}
			]
		},
		{
			"ID": "20240331202940-zez6ch8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331202940-zez6ch8",
				"updated": "20240331202830"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "函数（方法）的主要作用"
				}
			]
		},
		{
			"ID": "20240331202943-hi77hac",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240331202943-hi77hac",
				"updated": "20240331202830"
			},
			"Children": [
				{
					"ID": "20240331202943-922cwmn",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20240331202943-922cwmn",
						"updated": "20240331202943"
					},
					"Children": [
						{
							"ID": "20240331202943-39n4iwx",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240331202943-39n4iwx",
								"updated": "20240331202943"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "封装代码"
								}
							]
						}
					]
				},
				{
					"ID": "20240331202943-vfw1pyg",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20240331202943-vfw1pyg",
						"updated": "20240331202943"
					},
					"Children": [
						{
							"ID": "20240331202943-lq7ij2k",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240331202943-lq7ij2k",
								"updated": "20240331202943"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "提升代码复用率（少写点代码）"
								}
							]
						}
					]
				},
				{
					"ID": "20240331202943-adazhzq",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20240331202943-adazhzq",
						"updated": "20240331202943"
					},
					"Children": [
						{
							"ID": "20240331202943-bjde7tk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240331202943-bjde7tk",
								"updated": "20240331202943"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "抽象行为"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240331202952-1enaan5",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240331202952-1enaan5",
				"updated": "20240331202830"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Java的函数写在哪里"
				}
			]
		},
		{
			"ID": "20240331203009-moeq0xu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331203009-moeq0xu",
				"updated": "20240331202830"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "class"
				},
				{
					"Type": "NodeText",
					"Data": "​语句块中，Java中没有结构体，所以不存在结构体语句块"
				}
			]
		},
		{
			"ID": "20240331203032-43a7es8",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240331203032-43a7es8",
				"updated": "20240331202830"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Java函数基本语法"
				}
			]
		},
		{
			"ID": "20240331203049-erkbi79",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240331203049-erkbi79",
				"style": "line-height: 22px;",
				"updated": "20240331202830"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "   1      2      3                4\n修饰符 返回类型 函数名(参数类型 参数名1, 参数类型 参数名2, .......)\n{\n      函数的代码逻辑;\n      函数的代码逻辑;\n      函数的代码逻辑;\n      .............\n       5\n      return 返回值;(如果有返回类型才返回)\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240331203057-3446tbv",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240331203057-3446tbv",
				"updated": "20240331203115"
			},
			"Children": [
				{
					"ID": "20240331203115-13h9408",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20240331203115-13h9408",
						"updated": "20240331203115"
					},
					"Children": [
						{
							"ID": "20240331203115-rcil1d3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240331203115-rcil1d3",
								"updated": "20240331204800"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "修饰符 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "static"
								},
								{
									"Type": "NodeText",
									"Data": "​ "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "public"
								},
								{
									"Type": "NodeText",
									"Data": "​ "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "private"
								},
								{
									"Type": "NodeText",
									"Data": "​ "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "protected"
								},
								{
									"Type": "NodeText",
									"Data": "​ 等\n"
								}
							]
						}
					]
				},
				{
					"ID": "20240331204220-0puqii9",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20240331204220-0puqii9"
					},
					"Children": [
						{
							"ID": "20240331204220-c8qlig4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240331204220-c8qlig4",
								"updated": "20240331204228"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "返回类型"
								}
							]
						},
						{
							"ID": "20240331204230-yvwf1oz",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20240331204230-yvwf1oz"
							},
							"Children": [
								{
									"ID": "20240331204228-w50mw3j",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20240331204228-w50mw3j"
									},
									"Children": [
										{
											"ID": "20240331204228-gtvsb68",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240331204228-gtvsb68",
												"updated": "20240331204405"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "关于返回类型 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "void"
												},
												{
													"Type": "NodeText",
													"Data": "​(表示没有返回值)"
												}
											]
										}
									]
								},
								{
									"ID": "20240331204400-np244bq",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "Mi4=",
										"Num": 2
									},
									"Properties": {
										"id": "20240331204400-np244bq"
									},
									"Children": [
										{
											"ID": "20240331204400-enyz3nf",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240331204400-enyz3nf"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "返回类型 可以写任意的变量类型"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20240331204246-iwy5jk7",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20240331204246-iwy5jk7"
					},
					"Children": [
						{
							"ID": "20240331204246-22xnh1c",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240331204246-22xnh1c",
								"updated": "20240331204804"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "关于函数名"
								}
							]
						},
						{
							"ID": "20240331204804-ro8clwp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240331204804-ro8clwp",
								"updated": "20240331205625"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Java中一般使用驼峰命名法，也就是首字母小写，这和C"
								},
								{
									"Type": "NodeBackslash",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "#"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "不同： "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "myName"
								},
								{
									"Type": "NodeText",
									"Data": "​（驼峰命名法）"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "MyName"
								},
								{
									"Type": "NodeText",
									"Data": "​(帕斯卡命名法)"
								}
							]
						}
					]
				},
				{
					"ID": "20240331204249-dqoemww",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20240331204249-dqoemww"
					},
					"Children": [
						{
							"ID": "20240331204249-oh67i39",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240331204249-oh67i39",
								"updated": "20240331204254"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "参数列表"
								}
							]
						},
						{
							"ID": "20240331204256-7m97wko",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20240331204256-7m97wko"
							},
							"Children": [
								{
									"ID": "20240331204255-a4tckbd",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20240331204255-a4tckbd"
									},
									"Children": [
										{
											"ID": "20240331204255-iuzvbyz",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240331204255-iuzvbyz",
												"updated": "20240331205618"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "参数不是必须的，可以有0"
												},
												{
													"Type": "NodeBackslash",
													"Data": "span",
													"Children": [
														{
															"Type": "NodeText",
															"Data": "~"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "n个参数，参数的类型也是可以是任意类型的\n多个参数的时候 需要用 逗号隔开"
												}
											]
										}
									]
								},
								{
									"ID": "20240331204351-1je7due",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "Mi4=",
										"Num": 2
									},
									"Properties": {
										"id": "20240331204351-1je7due"
									},
									"Children": [
										{
											"ID": "20240331204351-53vckj6",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240331204351-53vckj6",
												"updated": "20240331205447"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "参数名 驼峰命名法"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20240331205013-55sh1tj",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NS4=",
						"Num": 5
					},
					"Properties": {
						"id": "20240331205013-55sh1tj"
					},
					"Children": [
						{
							"ID": "20240331205013-7q4orj0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240331205013-7q4orj0",
								"updated": "20240331205043"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "当返回值类型不为"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "void"
								},
								{
									"Type": "NodeText",
									"Data": "​时 必须通过"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "return"
								},
								{
									"Type": "NodeText",
									"Data": "​返回对应类型的内容\n（注意：即使是"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "void"
								},
								{
									"Type": "NodeText",
									"Data": "​也可以选择性使用"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "return"
								},
								{
									"Type": "NodeText",
									"Data": "​）"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240331210815-ht38jeq",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240331210815-ht38jeq",
				"updated": "20240331210820"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "函数的重载"
				}
			]
		},
		{
			"ID": "20240331210820-tlr5ptf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331210820-tlr5ptf",
				"updated": "20240331210901"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Java允许同名但是返回值不同或者参数列表不同的函数，和C"
				},
				{
					"Type": "NodeBackslash",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeText",
							"Data": "#"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "一样"
				}
			]
		},
		{
			"ID": "20240331210902-sxno9go",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240331210902-sxno9go",
				"style": "line-height: 22px;",
				"updated": "20240331210909"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public static void test(String... strs) {\n    for (String s : strs) {\n        System.out.println(s);\n    }\n}\n\npublic static int[] test(int a, int b) {\n    return new int[] { a, b, 3, 4 };\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240331204234-aw1j9hk",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240331204234-aw1j9hk",
				"updated": "20240331205705"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "无参无返回值"
				}
			]
		},
		{
			"ID": "20240331205945-33umfmr",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240331205945-33umfmr",
				"style": "line-height: 22px;",
				"updated": "20240331205947"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public static void main(String[] args) {\n    sayHello();\n}\n\npublic static void sayHello() {\n    System.out.println(\"你好世界\");\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240331205948-2z4tf4a",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331205948-2z4tf4a",
				"updated": "20240331205950"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输出："
				}
			]
		},
		{
			"ID": "20240331205950-alrw9j0",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240331205950-alrw9j0",
				"style": "line-height: 22px;",
				"updated": "20240331205956"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "你好世界\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240331205705-t33zh29",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240331205705-t33zh29",
				"updated": "20240331205716"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "有参无返回值"
				}
			]
		},
		{
			"ID": "20240331205958-t0t516j",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240331205958-t0t516j",
				"style": "line-height: 22px;",
				"updated": "20240331210102"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public static void main(String[] args) {\n    seySomething(\"哈哈哈哈哈\");\n}\n\npublic static void seySomething(String str) {\n    System.out.println(str);\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240331210111-g72o8m4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331210111-g72o8m4",
				"updated": "20240331210113"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输出："
				}
			]
		},
		{
			"ID": "20240331210113-hrsj60m",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240331210113-hrsj60m",
				"style": "line-height: 22px;",
				"updated": "20240331210118"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "哈哈哈哈哈\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240331205717-26b4iay",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240331205717-26b4iay",
				"updated": "20240331205724"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "无参有返回值"
				}
			]
		},
		{
			"ID": "20240331210121-l91cphw",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240331210121-l91cphw",
				"style": "line-height: 22px;",
				"updated": "20240331210236"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public static void main(String[] args) {\n    System.out.println(whatYourName());\n}\n\npublic static String whatYourName() {\n    return \"唐老狮\";\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240331210239-qanotdc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331210239-qanotdc",
				"updated": "20240331210241"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输出："
				}
			]
		},
		{
			"ID": "20240331210241-21zvryb",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240331210241-21zvryb",
				"style": "line-height: 22px;",
				"updated": "20240331210248"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "唐老狮\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240331205724-a9p6t71",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240331205724-a9p6t71",
				"updated": "20240331205730"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "有参有返回值"
				}
			]
		},
		{
			"ID": "20240331210943-zbizur2",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240331210943-zbizur2",
				"style": "line-height: 22px;",
				"updated": "20240331211008"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public static void main(String[] args) {\n    System.out.println(sum(1, 2));\n}\n\npublic static int sum(int a, int b) {\n    return a + b;\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240331211010-e1x8wrs",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331211010-e1x8wrs",
				"updated": "20240331211013"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输出："
				}
			]
		},
		{
			"ID": "20240331211013-j4mjin5",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240331211013-j4mjin5",
				"style": "line-height: 22px;",
				"updated": "20240331211015"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "3\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240331205730-jmh9k4j",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240331205730-jmh9k4j",
				"updated": "20240331205741"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "有参有多返回值"
				}
			]
		},
		{
			"ID": "20240331210505-dqr9a5l",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331210505-dqr9a5l",
				"updated": "20240331210930"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Java没有类似于C"
				},
				{
					"Type": "NodeBackslash",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeText",
							"Data": "#"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "元组，或者"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "ref"
				},
				{
					"Type": "NodeText",
					"Data": "​，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "out"
				},
				{
					"Type": "NodeText",
					"Data": "​那样的用法，因此，Java的多返回值都通过数组来实现"
				}
			]
		},
		{
			"ID": "20240331210927-y3992vv",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240331210927-y3992vv",
				"style": "line-height: 22px;",
				"updated": "20240331210927"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public static void main(String[] args) {\n    int[] arr = test(1, 2);\n    for (int x : arr) {\n        System.out.println(x);\n    }\n}\n\npublic static int[] test(int a, int b) {\n    return new int[] { a, b, 3, 4 };\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240331210927-mgk6rm5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331210927-mgk6rm5",
				"updated": "20240331210927"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输出："
				}
			]
		},
		{
			"ID": "20240331210927-irapjem",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240331210927-irapjem",
				"style": "line-height: 22px;",
				"updated": "20240331210927"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "1\n2\n3\n4\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240331205743-xwnmpsm",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240331205743-xwnmpsm",
				"updated": "20240331205749"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可变参数"
				}
			]
		},
		{
			"ID": "20240331205713-x8trucp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331205713-x8trucp",
				"updated": "20240331211238"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "和C"
				},
				{
					"Type": "NodeBackslash",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeText",
							"Data": "#"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "使用"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "params"
				},
				{
					"Type": "NodeText",
					"Data": "​然后接上一个数组不同，Java的可变参数是在参数列表内最后一个参数的参数类型前加上"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "..."
				},
				{
					"Type": "NodeText",
					"Data": "​，函数内使用还是使用数组"
				}
			]
		},
		{
			"ID": "20240331211109-cggr1k0",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240331211109-cggr1k0",
				"style": "line-height: 22px;",
				"updated": "20240331211109"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public static void main(String[] args) {\n    sayHello();\n    seySomething(\"哈哈哈哈哈\");\n    System.out.println(whatYourName());\n    System.out.println(sum(1, 2));\n    int[] arr = test(1, 2);\n    for (int x : arr) {\n        System.out.println(x);\n    }\n    test(\"123123123\", \"abcabcabc\", \"666666666\");\n}\n\npublic static void test(String... strs) {\n    for (String s : strs) {\n        System.out.println(s);\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240331211111-ky6jtl2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331211111-ky6jtl2",
				"updated": "20240331211114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输出："
				}
			]
		},
		{
			"ID": "20240331211114-aeyffo8",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240331211114-aeyffo8",
				"style": "line-height: 22px;",
				"updated": "20240331211119"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "123123123\nabcabcabc\n666666666\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		}
	]
}