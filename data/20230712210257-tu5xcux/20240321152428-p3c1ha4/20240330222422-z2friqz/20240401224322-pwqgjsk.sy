{
	"ID": "20240401224322-pwqgjsk",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20240401224322-pwqgjsk",
		"title": "UM2L18——常用类库",
		"type": "doc",
		"updated": "20240401225623"
	},
	"Children": [
		{
			"ID": "20240401224322-l8pvekh",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240401224322-l8pvekh",
				"updated": "20240401224411"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "常用类库指什么"
				}
			]
		},
		{
			"ID": "20240401224412-m1sj4l6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240401224412-m1sj4l6",
				"updated": "20240401224419"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "常用类库主要指Java中为了提升我们的开发效率\n预先就已经写好的一些包，这些包中提供了很多常用类\n目的是方便开发人员的使用，而无需再自己去实现"
				}
			]
		},
		{
			"ID": "20240401224432-i82b9z2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240401224432-i82b9z2",
				"updated": "20240401224450"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "主要有以下内容："
				}
			]
		},
		{
			"ID": "20240401224450-vghcaav",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240401224450-vghcaav",
				"updated": "20240401224535"
			},
			"Children": [
				{
					"ID": "20240401224450-dy4xm3t",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20240401224450-dy4xm3t",
						"updated": "20240401224504"
					},
					"Children": [
						{
							"ID": "20240401224450-dluufo1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240401224450-dluufo1",
								"updated": "20240401224504"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "变量类型的包装类 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Integer"
								},
								{
									"Type": "NodeText",
									"Data": "​、"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Double"
								},
								{
									"Type": "NodeText",
									"Data": "​、"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Boolean"
								},
								{
									"Type": "NodeText",
									"Data": "​、"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Character"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						}
					]
				},
				{
					"ID": "20240401224450-ghx9w7z",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20240401224450-ghx9w7z",
						"updated": "20240401224528"
					},
					"Children": [
						{
							"ID": "20240401224450-sczwawr",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240401224450-sczwawr",
								"updated": "20240401224528"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "存储较大数据的 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "BigInteger"
								},
								{
									"Type": "NodeText",
									"Data": "​ 类和 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "BigDecimal"
								},
								{
									"Type": "NodeText",
									"Data": "​ 类"
								}
							]
						}
					]
				},
				{
					"ID": "20240401224450-47e9vhp",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20240401224450-47e9vhp",
						"updated": "20240401224533"
					},
					"Children": [
						{
							"ID": "20240401224450-c74lktf",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240401224450-c74lktf",
								"updated": "20240401224533"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "数学计算类 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Math"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						}
					]
				},
				{
					"ID": "20240401224450-zr1o1p5",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20240401224450-zr1o1p5",
						"updated": "20240401224535"
					},
					"Children": [
						{
							"ID": "20240401224450-mmznzwo",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240401224450-mmznzwo",
								"updated": "20240401224535"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "随机数类 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Random"
								},
								{
									"Type": "NodeText",
									"Data": "​\n"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240401224453-3tajxn1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240401224453-3tajxn1",
				"updated": "20240401224454"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "等等"
				}
			]
		},
		{
			"ID": "20240401224448-kkf8j05",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240401224448-kkf8j05",
				"updated": "20240401224556"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "本节课主要指明方向，由于这些知识只是API的使用\n所以对于这些类的常用方法只会提及，不会举例，了解他们提供的方法名，基本就知道如何使用了"
				}
			]
		},
		{
			"ID": "20240401225551-2b9keew",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240401225551-2b9keew",
				"updated": "20240401225604"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Java中提供了很多现成的类和方法供我们使用,对他们产生印象，当自己开发时有类似需求时\n直接使用他们，可以提升我们的开发效率，因为无需我们自己去实现对应逻辑，直接使用即可"
				}
			]
		},
		{
			"ID": "20240401224543-ts9qklp",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240401224543-ts9qklp",
				"updated": "20240401224612"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "变量的包装类"
				}
			]
		},
		{
			"ID": "20240401224612-ak30wef",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240401224612-ak30wef",
				"updated": "20240401225623"
			},
			"Children": [
				{
					"ID": "20240401224647-285zngq",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20240401224647-285zngq",
						"updated": "20240401225614"
					},
					"Children": [
						{
							"ID": "20240401224647-v19uwca",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240401224647-v19uwca",
								"updated": "20240401225614"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Number"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"ID": "20240401225114-frjf2kd",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240401225114-frjf2kd",
								"updated": "20240401225114"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "它是 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Byte"
								},
								{
									"Type": "NodeText",
									"Data": "​ "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Integer"
								},
								{
									"Type": "NodeText",
									"Data": "​ "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Short"
								},
								{
									"Type": "NodeText",
									"Data": "​ "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Long"
								},
								{
									"Type": "NodeText",
									"Data": "​ "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Float"
								},
								{
									"Type": "NodeText",
									"Data": "​ "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Double"
								},
								{
									"Type": "NodeText",
									"Data": "​类的父类"
								}
							]
						},
						{
							"ID": "20240401225115-ty8fotl",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240401225115-ty8fotl",
								"updated": "20240401225115"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "主要方法："
								}
							]
						},
						{
							"ID": "20240401224824-3akj5uh",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240401224824-3akj5uh",
								"style": "line-height: 22px;",
								"updated": "20240401224847"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "byteValue()  \t以byte形式返回指定的数值\nintValue()  \t以int形式返回指定的数值\nfloatValue()\t以float形式返回指定的数值\nshortValue() \t以short形式返回指定的数值\nlongValue()  \t以long形式返回指定的数值\ndoubleValue()  \t以double形式返回指定的数值\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20240401224747-ov2f0zs",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240401224747-ov2f0zs",
								"updated": "20240401224748"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "所有继承"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Number"
								},
								{
									"Type": "NodeText",
									"Data": "​类的子类都具备以上方法"
								}
							]
						}
					]
				},
				{
					"ID": "20240401224647-1ewd89l",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20240401224647-1ewd89l",
						"updated": "20240401225617"
					},
					"Children": [
						{
							"ID": "20240401224647-dzl3l64",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240401224647-dzl3l64",
								"updated": "20240401225617"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Integer"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"ID": "20240401225112-sorq1rp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240401225112-sorq1rp",
								"updated": "20240401225112"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "它和"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Byte"
								},
								{
									"Type": "NodeText",
									"Data": "​、"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Short"
								},
								{
									"Type": "NodeText",
									"Data": "​、"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Long"
								},
								{
									"Type": "NodeText",
									"Data": "​三个封装类方法基本相同，区别就是封装的是不同的数据类型"
								}
							]
						},
						{
							"ID": "20240401225105-c5df9s0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240401225105-c5df9s0",
								"updated": "20240401225105"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "主要方法："
								}
							]
						},
						{
							"ID": "20240401224855-pp7f4jy",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240401224855-pp7f4jy",
								"style": "line-height: 22px;",
								"updated": "20240401224902"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "parseInt(String str)                  将字符串转数值\ntoString()                            将数值转字符串\ntoBinaryString(int i)                 以二进制无符号整数形式返回一个整数参数的字符串表示形式\ntoHexString(int i)                    以十六进制无符号整数形式返回一个整数参数的字符串表示形式\ntoOctalString(int i)                  以八进制无符号整数形式返回一个整数参数的字符串表示形式\nequals(Object integerObj)             比较两个对象是否相等\ncompareTo(Integer anotherInteger)     比较两个Integer对象，相等返回0；调用函数对象小于传入对象，返回负数；反之，返回正数\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20240401224647-fsl326v",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20240401224647-fsl326v",
						"updated": "20240401225620"
					},
					"Children": [
						{
							"ID": "20240401224647-y5qwp9z",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240401224647-y5qwp9z",
								"updated": "20240401225620"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Double"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"ID": "20240401225055-3y90y0l",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240401225055-3y90y0l",
								"updated": "20240401225058"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "它和"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Float"
								},
								{
									"Type": "NodeText",
									"Data": "​类的方法基本相同，区别就是封装的是不同的数据类型"
								}
							]
						},
						{
							"ID": "20240401225056-ss2rzch",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240401225056-ss2rzch",
								"updated": "20240401225056"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "主要方法："
								}
							]
						},
						{
							"ID": "20240401224910-nq9kofr",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240401224910-nq9kofr",
								"style": "line-height: 22px;",
								"updated": "20240401224917"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "parseDouble(String str)               将字符串转数值\ntoString()                            将数值转字符串\nisNaN()                               如果该double值不是数字，返回true，否则返回false\ncompareTo(Double d)                   和Integer类中方法作用一致\nequals(Object doubleObj)              和Integer类中方法作用一致\ntoHexString(double d)                 返回double参数的十六进制字符串表示形式\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20240401224647-pi7rwtw",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20240401224647-pi7rwtw",
						"updated": "20240401225622"
					},
					"Children": [
						{
							"ID": "20240401224647-1k7gaky",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240401224647-1k7gaky",
								"updated": "20240401225622"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Boolean"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"ID": "20240401224930-nawnnbc",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240401224930-nawnnbc",
								"style": "line-height: 22px;",
								"updated": "20240401224941"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "equals(Object obj)                    和Integer类中方法作用一致\nparseBoolean(String s)                将字符串转Boolean\ntoString()                            将数值转字符串\nvalueOf(String s)                     返回一个用指定的字符串表示的boolean值\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20240401224647-6wnsgr3",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NS4=",
						"Num": 5
					},
					"Properties": {
						"id": "20240401224647-6wnsgr3",
						"updated": "20240401225623"
					},
					"Children": [
						{
							"ID": "20240401224647-cm7ekvj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240401224647-cm7ekvj",
								"updated": "20240401225623"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Character"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"ID": "20240401224946-9ozjyy4",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240401224946-9ozjyy4",
								"style": "line-height: 22px;",
								"updated": "20240401224950"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "compareTo(Character anotherCharacter) 比较两个Character对象，若两个对象相等则返回0\nequals(Object obj)                    和Integer类中方法作用一致\ntoString()                            转字符串\ntoUpperCase(char ch)                  将字符转大写\ntoLowerCase(char ch)                  将字符转小写\nisUpperCase(char ch)                  判断字符是否是大写\nisLowerCase(char ch)                  判断字符是否是小写\nisLetter(char ch)                     判断字符是否是字母\nisDigit(char ch)                      判断字符是否为数字\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240401225118-d4kw6mb",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"alias": "BigDecimal",
				"id": "20240401225118-d4kw6mb",
				"name": "BigInteger",
				"updated": "20240401225123"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "大数据类"
				}
			]
		},
		{
			"ID": "20240401225124-g6zksmi",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240401225124-g6zksmi",
				"updated": "20240401225252"
			},
			"Children": [
				{
					"ID": "20240401225201-wkkuk3m",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20240401225201-wkkuk3m",
						"updated": "20240401225201"
					},
					"Children": [
						{
							"ID": "20240401225201-17oecpk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240401225201-17oecpk",
								"updated": "20240401225231"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "BigInteger"
								},
								{
									"Type": "NodeText",
									"Data": "​\n"
								}
							]
						},
						{
							"ID": "20240401225204-vw3l578",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240401225204-vw3l578",
								"updated": "20240401225228"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "该类主要用于"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "存储任意大小的整数"
								},
								{
									"Type": "NodeText",
									"Data": "，也就是说它可以"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "表示任何大小的整数值而不会丢失信息"
								},
								{
									"Type": "NodeText",
									"Data": "\n因为传"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "统的整形类型都有最大最小区间，而该类没有，主要用于存储大数据"
								},
								{
									"Type": "NodeText",
									"Data": "\n"
								}
							]
						},
						{
							"ID": "20240401225208-wfukryq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240401225208-wfukryq",
								"updated": "20240401225235"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "主要方法："
								}
							]
						},
						{
							"ID": "20240401225237-olejf5a",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240401225237-olejf5a",
								"style": "line-height: 22px;",
								"updated": "20240401225239"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "add(BigInteger val)               加法\nsubtract(BigInteger val)          减法\nmultiply(BigInteger val)          乘法\ndivide(BigInteger val)            除法\nremainder(BigInteger val)         取余\npow(int exponent)                 计算exponent次方\nnegate()                          取反\nshiftLeft(int n)                  左移n位\nshiftRight(int n)                 右移n位\nand(BigInterger val)              位与\nor(BigInteger val)                位或\ncompareTo(BigInteger val)         比较，类似Integer中\nequals(Object x)                  判断数值是否相等\nmin(BigInteger val)               取最小\nmax(BigInteger val)               取最大、\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20240401225201-qis0xa9",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20240401225201-qis0xa9",
						"updated": "20240401225252"
					},
					"Children": [
						{
							"ID": "20240401225201-ssg5ugw",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240401225201-ssg5ugw",
								"updated": "20240401225243"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "BigDecimal"
								},
								{
									"Type": "NodeText",
									"Data": "​\n"
								}
							]
						},
						{
							"ID": "20240401225244-abx9hpt",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240401225244-abx9hpt",
								"updated": "20240401225252"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "该类和"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "BigInteger"
								},
								{
									"Type": "NodeText",
									"Data": "​用于表示大数据，但是它主要用于表示浮点数（有小数点的数值）\n它的主要方法和"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "BigInteger"
								},
								{
									"Type": "NodeText",
									"Data": "​类似"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240401225300-3ezggwo",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240401225300-3ezggwo",
				"name": "Math",
				"updated": "20240401225304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "数学计算类"
				}
			]
		},
		{
			"ID": "20240401225305-hxowedo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240401225305-hxowedo",
				"updated": "20240401225439"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Math"
				},
				{
					"Type": "NodeText",
					"Data": "​类，提供众多数学函数方法，方便我们进行数学计算\n主要包含三角函数、指数函数、取整函数、最大值、最小值、平均值等等\n这些方法都是静态方法，都通过"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Math."
				},
				{
					"Type": "NodeText",
					"Data": "​出使用"
				}
			]
		},
		{
			"ID": "20240401225322-ml82p21",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240401225322-ml82p21",
				"updated": "20240401225322"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "主要方法："
				}
			]
		},
		{
			"ID": "20240401225331-m5zo5zt",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240401225331-m5zo5zt",
				"style": "line-height: 22px;",
				"updated": "20240401225400"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "//三角函数\nsin(double a)                         正弦\ncos(double a)                         余弦\ntan(double a)                         正切\nasin(double a)                        反正弦\nacos(double a)                        反余弦\natan(double a)                        反正切\ntoRadians(double angdeg)              角度转弧度\ntoDegrees(double angrad)              弧度转角度\n//指数\nexp(double a)                         获取e的a次方\nlog(double a)                         取自然对数\nlog10(double a)                       取底数为10的a的对数\nsqrt(double a)                        取a的平方根\ncbrt(double a)                        取a的立方根\npow(double a, double b)               取a的b次方\n//取整\nceil(double a)                        向上取整\nfloor(double a)                       向下取整\nrint(double a)                        返回与a最接近的整数，如果有两个，取偶数\nround(float a)                        将参数a加上0.5后返回与其最近的整数\nrount(double a)                       将参数a加上0.5后返回与其最近的整数，然后强转为Long\n//其他\nmax(参数1，参数2)                      最大值\nmin(参数1，参数2)                      最小值\nabs(参数)                             绝对值\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240401225407-3fn8nuc",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240401225407-3fn8nuc",
				"name": "Random",
				"updated": "20240401225412"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "随机数类"
				}
			]
		},
		{
			"ID": "20240401225413-mern2kt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240401225413-mern2kt",
				"updated": "20240401225433"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Random"
				},
				{
					"Type": "NodeText",
					"Data": "​，用于生成随机数的类"
				}
			]
		},
		{
			"ID": "20240401225448-bet51fd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240401225448-bet51fd",
				"updated": "20240401225452"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "主要方法："
				}
			]
		},
		{
			"ID": "20240401225446-i8m8sux",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240401225446-i8m8sux",
				"updated": "20240401225446"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Random r = new Random();              以当前系统时间作为随机数生成器种子\nRandom r = new Random(seedValue);     自己设置随机数种子\nnextInt()                             返回一个随机整数\nnextInt(int n)                        返回大于等于0且小于n的随机整数\nnextLong()                            返回一个随机长整型\nnextBoolean()                         返回一个随机布尔值\nnextFloat()                           返回一个随机单精度浮点\nnextDouble()                          返回一个随机双精度浮点\nnextGaussian()                        返回一个概率密度为高斯分步的双精度浮点\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240401225455-jvwt1g0",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240401225455-jvwt1g0",
				"updated": "20240401225505"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "其他类"
				}
			]
		},
		{
			"ID": "20240401225506-vdt0iig",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20240401225506-vdt0iig",
				"updated": "20240401225536"
			},
			"Children": [
				{
					"ID": "20240401225515-4mp6i0n",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240401225515-4mp6i0n",
						"updated": "20240401225536"
					},
					"Children": [
						{
							"ID": "20240401225515-e181rga",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240401225515-e181rga",
								"updated": "20240401225536"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Date"
								},
								{
									"Type": "NodeText",
									"Data": "​：日期类 获取日期时间相关方法"
								}
							]
						}
					]
				},
				{
					"ID": "20240401225516-zam4tu5",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240401225516-zam4tu5",
						"updated": "20240401225528"
					},
					"Children": [
						{
							"ID": "20240401225516-7hojdyw",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240401225516-7hojdyw",
								"updated": "20240401225528"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Calendar"
								},
								{
									"Type": "NodeText",
									"Data": "​：日历类 比起"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Date"
								},
								{
									"Type": "NodeText",
									"Data": "​更加国际化\n"
								}
							]
						}
					]
				},
				{
					"ID": "20240401225519-qv6ovf9",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240401225519-qv6ovf9",
						"updated": "20240401225523"
					},
					"Children": [
						{
							"ID": "20240401225519-bebabxq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240401225519-bebabxq",
								"updated": "20240401225523"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "System"
								},
								{
									"Type": "NodeText",
									"Data": "​：系统类 有获取当前时间的方法"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240401225512-4ty58zu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240401225512-4ty58zu",
				"updated": "20240401225512"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "等等"
				}
			]
		}
	]
}