{
	"ID": "20240331165021-rddz75i",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20240331165021-rddz75i",
		"title": "UM2L6——数组和Arrays类",
		"type": "doc",
		"updated": "20240331194127"
	},
	"Children": [
		{
			"ID": "20240331193825-n172ayy",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20240331193825-n172ayy",
				"updated": "20240331193832"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "本章代码关键字"
				}
			]
		},
		{
			"ID": "20240331193832-esldzm4",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240331193832-esldzm4",
				"style": "line-height: 22px;",
				"updated": "20240331194127"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "import\t\t\t\t\t\t//向该文件导入某个包\njava.util.Arrays\t\t\t//Arrays类所在的包\nArrays.fill()\t\t\t\t//填充数组\nArrays.sort()\t\t\t\t//为数组排序，默认是升序排列\nArrays.copyOf()\t\t\t\t//复制数组\nArrays.copyOfRange()\t\t//复制数组的指定范围内内容\nArrays.binarySearch()\t\t//查找数组内的某个元素，返回索引\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240331165021-jjpcesj",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20240331165021-jjpcesj",
				"updated": "20240331165128"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "数组"
				}
			]
		},
		{
			"ID": "20240331165128-scbwwro",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331165128-scbwwro",
				"updated": "20240331165215"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Java中的数组使用和C"
				},
				{
					"Type": "NodeBackslash",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeText",
							"Data": "#"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "中基本类似，区别是："
				}
			]
		},
		{
			"ID": "20240331165155-9yv6lis",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240331165155-9yv6lis",
				"updated": "20240331165155"
			},
			"Children": [
				{
					"ID": "20240331165155-ztv9yuo",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20240331165155-ztv9yuo",
						"updated": "20240331165155"
					},
					"Children": [
						{
							"ID": "20240331165155-u0hf8e8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240331165155-u0hf8e8",
								"updated": "20240331165155"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "数组的声明有些许区别"
								}
							]
						}
					]
				},
				{
					"ID": "20240331165155-02wlfyi",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20240331165155-02wlfyi",
						"updated": "20240331165155"
					},
					"Children": [
						{
							"ID": "20240331165155-xx4egs2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240331165155-xx4egs2",
								"updated": "20240331165210"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Java中的二维数组和交错数组的写法都是"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "[][]"
								},
								{
									"Type": "NodeText",
									"Data": "​\n而C"
								},
								{
									"Type": "NodeBackslash",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeText",
											"Data": "#"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "中的 二维数组是"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "[,]"
								},
								{
									"Type": "NodeText",
									"Data": "​，交错数组是"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "[][]"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240331165432-ws7h9uk",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240331165432-ws7h9uk",
				"updated": "20240331165436"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一维数组"
				}
			]
		},
		{
			"ID": "20240331165555-cpqw33e",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331165555-cpqw33e",
				"updated": "20240331170047"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "相比于C"
				},
				{
					"Type": "NodeBackslash",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeText",
							"Data": "#"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，Java的数组有两种声明方式，一种是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "[]"
				},
				{
					"Type": "NodeText",
					"Data": "​在变量类型后，另一种是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "[]"
				},
				{
					"Type": "NodeText",
					"Data": "​在变量名后，后者是沿袭自C/C++的声明方法\n为了避免歧义，明确数组类型并与C/C++的写法作出区分，建议只使用第一种写法"
				}
			]
		},
		{
			"ID": "20240331170053-7wh8isp",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240331170053-7wh8isp",
				"updated": "20240331170053"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "int[] arr1;\nint arr2[];\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240331170114-u6jzed1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331170114-u6jzed1",
				"updated": "20240331170125"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "数组初始化有三种方法："
				}
			]
		},
		{
			"ID": "20240331171736-aivweci",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331171736-aivweci",
				"updated": "20240331171822"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "对于没有指定元素值的数组，其元素都是默认值，例如"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "int"
				},
				{
					"Type": "NodeText",
					"Data": "​数组元素默认值就是0"
				}
			]
		},
		{
			"ID": "20240331170127-kmvogj7",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240331170127-kmvogj7",
				"updated": "20240331172139"
			},
			"Children": [
				{
					"ID": "20240331170202-lnsdvmt",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20240331170202-lnsdvmt",
						"updated": "20240331170202"
					},
					"Children": [
						{
							"ID": "20240331170202-zjtomwr",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240331170202-zjtomwr",
								"updated": "20240331170216"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "new 数组类型[容量]"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"ID": "20240331170216-ulrsl4r",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240331170216-ulrsl4r",
								"style": "line-height: 22px;",
								"updated": "20240331170317"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "int[] arr1 = new int[5];\nint arr3[] = new int[3];\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20240331170202-gkadhsb",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20240331170202-gkadhsb",
						"updated": "20240331172139"
					},
					"Children": [
						{
							"ID": "20240331170202-kp7hqk8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240331170202-kp7hqk8",
								"updated": "20240331170221"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "new 数组类型[]{内容}"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"ID": "20240331172138-th8owqd",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240331172138-th8owqd",
								"updated": "20240331172139"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "通过大括号指定数组内元素的值时，不需要再在中括号内指定数组长度"
								}
							]
						},
						{
							"ID": "20240331170218-kmdpr0a",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240331170218-kmdpr0a",
								"style": "line-height: 22px;",
								"updated": "20240331170341"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "arr1 = new int[] { 1, 2, 3, 4 };\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20240331170202-h7v8et4",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20240331170202-h7v8et4",
						"updated": "20240331171623"
					},
					"Children": [
						{
							"ID": "20240331170202-fejdc2x",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240331170202-fejdc2x",
								"updated": "20240331171623"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "数组元素类型[] 数组名 = {内容}"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"ID": "20240331170453-611as42",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240331170453-611as42",
								"style": "background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);",
								"updated": "20240331170652"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "注意，这种写法只能用于对刚开始声明的数组变量进行初始化，而不能对已经声明过的变量进行赋值"
								}
							]
						},
						{
							"ID": "20240331170223-dcftxok",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240331170223-dcftxok",
								"style": "line-height: 22px;",
								"updated": "20240331170722"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "// arr1 = {1, 2, 3, 4};\t\t\t//注意，不能用于对已经声明的变量进行赋值\nint[] arr4 = { 1, 2, 3, 4 };\t//该写法只能用于简化数组变量的声明\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240331170757-qk7q4j3",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20240331170757-qk7q4j3",
				"updated": "20240331171253"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "数组的遍历"
				}
			]
		},
		{
			"ID": "20240331170804-5nq7zw3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331170804-5nq7zw3",
				"updated": "20240331171253"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用for循环遍历数组有两种方式，一种是遍历索引的传统写法，另一种是类似于"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "foreach"
				},
				{
					"Type": "NodeText",
					"Data": "​的写法"
				}
			]
		},
		{
			"ID": "20240331170826-vacq7vy",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240331170826-vacq7vy",
				"style": "line-height: 22px;",
				"updated": "20240331171253"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "int[] arr4 = { 1, 2, 3, 4 };\nfor (int i = 0; i \u003c arr4.length; i++) {\n    System.out.println(arr4[i]);\n}\nSystem.out.println(\"**********\");\nfor (int x : arr4) {\n    System.out.println(x);\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240331171127-6rsiyo9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331171127-6rsiyo9",
				"updated": "20240331171253"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输出："
				}
			]
		},
		{
			"ID": "20240331171130-3qdc7z4",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240331171130-3qdc7z4",
				"style": "line-height: 22px;",
				"updated": "20240331171253"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "1\n2\n3\n4\n**********\n1\n2\n3\n4\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240331165437-7r8y4s4",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240331165437-7r8y4s4",
				"updated": "20240331165442"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "二维数组"
				}
			]
		},
		{
			"ID": "20240331171218-0v5myiz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331171218-0v5myiz",
				"style": "background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);",
				"updated": "20240331171301"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注意：Java中的二维数组写法和C"
				},
				{
					"Type": "NodeBackslash",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeText",
							"Data": "#"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "中交错数组一样"
				}
			]
		},
		{
			"ID": "20240331171404-ogs706j",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331171404-ogs706j",
				"updated": "20240331171446"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "同样的java的数组有两种声明方式，一种是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "[][]"
				},
				{
					"Type": "NodeText",
					"Data": "​在变量类型后，另一种是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "[][]"
				},
				{
					"Type": "NodeText",
					"Data": "​在变量名后\n为了避免歧义，明确数组类型，建议只使用第一种写法"
				}
			]
		},
		{
			"ID": "20240331171237-ezm16hc",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240331171237-ezm16hc",
				"style": "line-height: 22px;",
				"updated": "20240331171403"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "int[][] arrays;\nint arrays1[][];\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240331171452-8bszunx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331171452-8bszunx",
				"updated": "20240331171501"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "二维数组初始化有三种方法："
				}
			]
		},
		{
			"ID": "20240331171831-5z7cvrx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331171831-5z7cvrx",
				"updated": "20240331171831"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "对于没有指定元素值的数组，其元素都是默认值，例如"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "int"
				},
				{
					"Type": "NodeText",
					"Data": "​数组元素默认值就是0"
				}
			]
		},
		{
			"ID": "20240331171501-fe22wg0",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240331171501-fe22wg0",
				"updated": "20240331171536"
			},
			"Children": [
				{
					"ID": "20240331171536-bckg4yi",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20240331171536-bckg4yi",
						"updated": "20240331171536"
					},
					"Children": [
						{
							"ID": "20240331171536-qowawhz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240331171536-qowawhz",
								"updated": "20240331171558"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "new 数组类型[行][列]"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"ID": "20240331171719-7nscl9b",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240331171719-7nscl9b",
								"style": "line-height: 22px;",
								"updated": "20240331171721"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "arrays = new int[3][2];\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20240331171537-6x9at6w",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20240331171537-6x9at6w"
					},
					"Children": [
						{
							"ID": "20240331171537-8al3s3d",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240331171537-8al3s3d",
								"updated": "20240331171603"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "new 数组类型[][]{ {内容}, {内容} }"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"ID": "20240331172024-1khms7q",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240331172024-1khms7q",
								"updated": "20240331172132"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "通过大括号指定数组内元素的值时，不需要再在中括号内指定数组长度"
								}
							]
						},
						{
							"ID": "20240331172005-gycit6d",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240331172005-gycit6d",
								"style": "line-height: 22px;",
								"updated": "20240331172007"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "arrays = new int[][] { {2, 1},\n                       {1, 2},\n                       {3, 2} };\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20240331171538-28vnjwk",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20240331171538-28vnjwk"
					},
					"Children": [
						{
							"ID": "20240331171538-023eoxs",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240331171538-023eoxs",
								"updated": "20240331171608"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "数组元素类型[][] 数组名 = { {内容}, {内容} }"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"ID": "20240331172213-dgwzp7c",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240331172213-dgwzp7c",
								"style": "background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);",
								"updated": "20240331172214"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "注意，这种写法只能用于对刚开始声明的数组变量进行初始化，而不能对已经声明过的变量进行赋值"
								}
							]
						},
						{
							"ID": "20240331172216-by3gmfs",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240331172216-by3gmfs",
								"style": "line-height: 22px;",
								"updated": "20240331172511"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "/* 注意，不能用于对已经声明的变量进行赋值\narrays1 = { {2, 1},\n            {1, 2},\n            {3, 2} };\n*/\n\n//该写法只能用于简化数组变量的声明\nint[][] arrays2 = { {2, 1},\n                    {1, 2},\n                    {3, 2} };\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240331172512-94tquui",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20240331172512-94tquui",
				"updated": "20240331172518"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "二维数组的遍历"
				}
			]
		},
		{
			"ID": "20240331172519-v13fba1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331172519-v13fba1",
				"updated": "20240331172743"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用for循环遍历数组有两种方式，一种是遍历索引的传统写法，另一种是类似于"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "foreach"
				},
				{
					"Type": "NodeText",
					"Data": "​的写法"
				}
			]
		},
		{
			"ID": "20240331172910-hw2o8z8",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240331172910-hw2o8z8",
				"updated": "20240331172910"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "int[][] arrays2 = { {2, 1},\n                    {1, 2},\n                    {3, 2} };\nfor (int i = 0; i \u003c arrays2.length; i++) {\n    for (int j = 0; j \u003c arrays2[i].length; j++) {\n        System.out.println(arrays2[i][j]);\n    }\n}\nSystem.out.println(\"**********\");\nfor (int[] line: arrays2) {\n    for (int x : line) {\n        System.out.println(x);\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240331172912-oavswgp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331172912-oavswgp",
				"updated": "20240331172915"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输出："
				}
			]
		},
		{
			"ID": "20240331172915-klypgcy",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240331172915-klypgcy",
				"style": "line-height: 22px;",
				"updated": "20240331172938"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "**********\n2\n1\n1\n2\n3\n2\n**********\n2\n1\n1\n2\n3\n2\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240331165442-s9r62f0",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240331165442-s9r62f0",
				"updated": "20240331165451"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "交错数组"
				}
			]
		},
		{
			"ID": "20240331171526-p8jytmz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331171526-p8jytmz",
				"style": "background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);",
				"updated": "20240331165451"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注意：Java中交错数组使用和C#基本类似"
				}
			]
		},
		{
			"ID": "20240331173449-wu58iua",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331173449-wu58iua",
				"updated": "20240331173528"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "交错数组的列数是不同的，因此在声明交错数组时，数组的列数可以不指定"
				}
			]
		},
		{
			"ID": "20240331173024-y6ws4s1",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240331173024-y6ws4s1",
				"style": "line-height: 22px;",
				"updated": "20240331173840"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "int[][] arr10 = new int[3][];\narr10[0] = new int[] { 1, 2, 3 };\narr10[1] = new int[] { 1, 2 };\narr10[2] = new int[] { 1 };\n\nint[][] arr11 = new int[][] { { 1, 2, 3 },\n                              { 1, 2 },\n                              { 1 } };\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240331173537-6u08zn7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331173537-6u08zn7",
				"updated": "20240331173555"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "交错数组的遍历和二维数组的遍历方法是一致的"
				}
			]
		},
		{
			"ID": "20240331173831-out56z6",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240331173831-out56z6",
				"style": "line-height: 22px;",
				"updated": "20240331173832"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "int[][] arr11 = new int[][] { { 1, 2, 3 },\n                              { 1, 2 },\n                              { 1 } };\nSystem.out.println(\"**********\");\nfor (int i = 0; i \u003c arr11.length; i++) {\n    for (int j = 0; j \u003c arr11[i].length; j++) {\n        System.out.println(arr11[i][j]);\n    }\n}\nSystem.out.println(\"**********\");\nfor (int[] line: arr11) {\n    for (int x : line) {\n        System.out.println(x);\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240331174040-ayqm70f",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20240331174040-ayqm70f",
				"updated": "20240331194043"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Arrays"
				}
			]
		},
		{
			"ID": "20240331174239-8nk2edx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331174239-8nk2edx",
				"updated": "20240331194043"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Arrays"
				},
				{
					"Type": "NodeText",
					"Data": "​类是Java提供的一个专门对数组进行操作的类\n它提供了很多静态方法，共我们对数组进行处理，比如排序、查找、填充等等方法\n使用它 需要导入"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "java.util.Arrays"
				},
				{
					"Type": "NodeText",
					"Data": "​包（类似C#中的命名空间）"
				}
			]
		},
		{
			"ID": "20240331174754-2zyy92y",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240331174754-2zyy92y",
				"style": "line-height: 22px;",
				"updated": "20240331194043"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "import java.util.Arrays;\t\t//导入java.util.Arrays包\n\npublic class Lesson7 {\n    public static void main(String[] args) {\n        int[] arr = new int[5];\n        for (int n : arr) {\n            System.out.println(n);\n        }\n        Arrays.fill(arr, 5);\n        System.out.println(\"**********\");\n        for (int n : arr) {\n            System.out.println(n);\n        }\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240331174307-cu4lle5",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240331174307-cu4lle5",
				"name": "Arrays.fill()",
				"updated": "20240331194043"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "填充替换数组元素"
				}
			]
		},
		{
			"ID": "20240331174450-ixni7fp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331174450-ixni7fp",
				"updated": "20240331194043"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Arrays.fill"
				},
				{
					"Type": "NodeText",
					"Data": "​ 方法可以帮助我们对数组进行填充，它有两个重载"
				}
			]
		},
		{
			"ID": "20240331174503-6w1eviq",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240331174503-6w1eviq",
				"updated": "20240331194043"
			},
			"Children": [
				{
					"ID": "20240331174509-uowpxj3",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20240331174509-uowpxj3",
						"updated": "20240331174509"
					},
					"Children": [
						{
							"ID": "20240331174509-wxrfv4v",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240331174509-wxrfv4v",
								"updated": "20240331174542"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Arrays.fill(数组, 填充值)"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"ID": "20240331175145-h4jim0j",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240331175145-h4jim0j",
								"updated": "20240331175207"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "它会替换数组内所有的值"
								}
							]
						},
						{
							"ID": "20240331174550-3d0dwll",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240331174550-3d0dwll",
								"style": "line-height: 22px;",
								"updated": "20240331174823"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "int[] arr = new int[5];\nfor (int n : arr) {\n    System.out.println(n);\n}\nArrays.fill(arr, 5);\nSystem.out.println(\"**********\");\nfor (int n : arr) {\n    System.out.println(n);\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20240331174825-yd5z0xz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240331174825-yd5z0xz",
								"updated": "20240331174829"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "输出："
								}
							]
						},
						{
							"ID": "20240331174829-vqn70x1",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240331174829-vqn70x1",
								"style": "line-height: 22px;",
								"updated": "20240331174840"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "0\n0\n0\n0\n0\n**********\n5\n5\n5\n5\n5\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20240331174527-lrtpm5n",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20240331174527-lrtpm5n",
						"updated": "20240331180755"
					},
					"Children": [
						{
							"ID": "20240331174527-k2jc9wh",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240331174527-k2jc9wh",
								"updated": "20240331174546"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Arrays.fill(数组, 填充起始位置(包括), 填充结束位置(不包括), 填充值)"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"ID": "20240331174553-25gytrl",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240331174553-25gytrl",
								"updated": "20240331180755"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "它可以在特定范围内填充数组元素，"
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"style": "background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"
									},
									"TextMarkType": "strong text",
									"TextMarkTextContent": "注意填充是左包含右不包含！"
								},
								{
									"Type": "NodeKramdownSpanIAL",
									"Data": "{: style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"
								},
								{
									"Type": "NodeText",
									"Data": "\n第三个参数设计为不包含是方便我们直接传入数组长度这些消息"
								}
							]
						},
						{
							"ID": "20240331175238-g3wi8jy",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240331175238-g3wi8jy",
								"style": "line-height: 22px;",
								"updated": "20240331180613"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "System.out.println(\"**********\");\nArrays.fill(arr, 1, 4, 1);\nfor (int n : arr) {\n    System.out.println(n);\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20240331180614-d6mot37",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240331180614-d6mot37",
								"updated": "20240331180618"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "输出："
								}
							]
						},
						{
							"ID": "20240331180618-07jlac2",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240331180618-07jlac2",
								"style": "line-height: 22px;",
								"updated": "20240331180631"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "**********\n5\n1\n1\n1\n5\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240331174433-a7fcx64",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240331174433-a7fcx64",
				"name": "Arrays.sort()",
				"updated": "20240331194043"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "数组排序"
				}
			]
		},
		{
			"ID": "20240331180818-i77lgqx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331180818-i77lgqx",
				"updated": "20240331194043"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Arrays.sort(数组)"
				},
				{
					"Type": "NodeText",
					"Data": "​方法可以对数组进行默认的升序排序"
				}
			]
		},
		{
			"ID": "20240331180854-n414akk",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240331180854-n414akk",
				"style": "line-height: 22px;",
				"updated": "20240331194043"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "arr = new int[] { 4, 3, 6, 1, 2, 8 };\nArrays.sort(arr);\nSystem.out.println(\"**********\");\nfor (int n : arr) {\n    System.out.println(n);\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240331180954-pf0hxeq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331180954-pf0hxeq",
				"updated": "20240331194043"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输出："
				}
			]
		},
		{
			"ID": "20240331181001-6swvk5u",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240331181001-6swvk5u",
				"style": "line-height: 22px;",
				"updated": "20240331194043"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "**********\n1\n2\n3\n4\n6\n8\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240331174435-3ykpvap",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240331174435-3ykpvap",
				"updated": "20240331194043"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "复制数组"
				}
			]
		},
		{
			"ID": "20240331181133-osty45p",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331181133-osty45p",
				"updated": "20240331194043"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "赋值数组有两种方法："
				}
			]
		},
		{
			"ID": "20240331181018-tb6tyzk",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240331181018-tb6tyzk",
				"updated": "20240331194043"
			},
			"Children": [
				{
					"ID": "20240331181040-64oqrji",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20240331181040-64oqrji",
						"name": "Arrays.copyOf()",
						"updated": "20240331192526"
					},
					"Children": [
						{
							"ID": "20240331181040-sd49plv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240331181040-sd49plv",
								"updated": "20240331181200"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Arrays.copyOf(数组, 复制长度)"
								},
								{
									"Type": "NodeText",
									"Data": "​方法可以赋值指定数组的指定长度"
								}
							]
						},
						{
							"ID": "20240331181143-cyjvaa6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240331181143-cyjvaa6",
								"updated": "20240331181548"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "若复制长度小于传入数组，则截取；若复制长度大于传入数组，则用默认值填充，返回一个被复制出来的数组"
								}
							]
						},
						{
							"ID": "20240331181427-1jzfzha",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240331181427-1jzfzha",
								"style": "line-height: 22px;",
								"updated": "20240331192526"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "arr = new int[] { 1, 2, 3, 4, 6, 8 };\nint[] arr2 = Arrays.copyOf(arr, 3);\nSystem.out.println(\"**********\");\nfor (int n : arr2) {\n    System.out.println(n);\n}\narr2 = Arrays.copyOf(arr, 8);\nSystem.out.println(\"**********\");\nfor (int n : arr2) {\n    System.out.println(n);\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20240331181432-uyowcq7",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240331181432-uyowcq7",
								"updated": "20240331181434"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "输出："
								}
							]
						},
						{
							"ID": "20240331181434-ixs8rst",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240331181434-ixs8rst",
								"style": "line-height: 22px;",
								"updated": "20240331181447"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "**********\n1\n2\n3\n**********\n1\n2\n3\n4\n6\n8\n0\n0\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20240331181040-t0j5k4k",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20240331181040-t0j5k4k",
						"name": "Arrays.copyOfRange()",
						"updated": "20240331192541"
					},
					"Children": [
						{
							"ID": "20240331181040-tz6yfg4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240331181040-tz6yfg4",
								"updated": "20240331181128"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Arrays.copyOfRange(数组, 开始复制索引(包括), 赋值的最后索引位置(不包括) )"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"ID": "20240331181521-xqq6h5z",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240331181521-xqq6h5z",
								"updated": "20240331192353"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "该方法可以复制数组的指定部分，"
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"style": "background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"
									},
									"TextMarkType": "strong text",
									"TextMarkTextContent": "注意复制是左包含右不包含！"
								},
								{
									"Type": "NodeKramdownSpanIAL",
									"Data": "{: style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"
								}
							]
						},
						{
							"ID": "20240331181518-5zhctje",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240331181518-5zhctje",
								"style": "line-height: 22px;",
								"updated": "20240331192536"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "arr = new int[] { 1, 2, 3, 4, 6, 8 };\narr2 = Arrays.copyOfRange(arr, 1, 4);\nSystem.out.println(\"**********\");\nfor (int n : arr2) {\n    System.out.println(n);\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20240331192456-hg6zae0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240331192456-hg6zae0",
								"updated": "20240331192458"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "输出："
								}
							]
						},
						{
							"ID": "20240331192459-4u83c0v",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240331192459-4u83c0v",
								"style": "line-height: 22px;",
								"updated": "20240331192541"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "**********\n2\n3\n4\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240331174437-qq0avdz",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240331174437-qq0avdz",
				"name": "Arrays.binarySearch()",
				"updated": "20240331194043"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "查询数组"
				}
			]
		},
		{
			"ID": "20240331192559-7fltjwu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331192559-7fltjwu",
				"updated": "20240331194043"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Arrays.binarySearch(数组，搜索元素)"
				},
				{
					"Type": "NodeText",
					"Data": "​，该方法可以查询数组内的某个元素，\n如果存在就会返回该元素的索引，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "如果不存在就会返回一个不确定的负数"
				}
			]
		},
		{
			"ID": "20240331192615-1ko3q7d",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331192615-1ko3q7d",
				"style": "background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);",
				"updated": "20240331194043"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注意：由于binarySearch内部是对数组进行二分查找，所以使用前必须对数组进行排序，\n由于该方法是采用的二分查找，因此对于两个值相同的元素，返回的索引是不确定的"
				}
			]
		},
		{
			"ID": "20240331192628-2qupiyd",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240331192628-2qupiyd",
				"style": "line-height: 22px;",
				"updated": "20240331194043"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "arr = new int[] { 4, 3, 6, 1, 2, 8, 1 };\nSystem.out.println(\"**********\");\nArrays.sort(arr);\nint index = Arrays.binarySearch(arr, 5);\nSystem.out.println(index);\nindex = Arrays.binarySearch(arr, 1);\nSystem.out.println(index);\nindex = Arrays.binarySearch(arr, 2);\nSystem.out.println(index);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240331193139-zp33h7n",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331193139-zp33h7n",
				"updated": "20240331194043"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输出："
				}
			]
		},
		{
			"ID": "20240331193318-zw9dnkr",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240331193318-zw9dnkr",
				"style": "line-height: 22px;",
				"updated": "20240331194043"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "**********\n-6\n1\n2\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240331193338-26a6gls",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331193338-26a6gls",
				"updated": "20240331194043"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "该方法还有一个可在数组指定范围内查询值的重载"
				}
			]
		},
		{
			"ID": "20240331193425-ovoo4ss",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331193425-ovoo4ss",
				"updated": "20240331194043"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Arrays.binarySearch(数组，开始索引(包括)，结束索引(不包括)，搜索元素)"
				},
				{
					"Type": "NodeText",
					"Data": "​，\n该方法是在数组的指定范围内查找元素，"
				},
				{
					"Type": "NodeTextMark",
					"Properties": {
						"style": "background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"
					},
					"TextMarkType": "strong text",
					"TextMarkTextContent": "注意复制是左包含右不包含的！"
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"
				},
				{
					"Type": "NodeText",
					"Data": "、"
				}
			]
		},
		{
			"ID": "20240331193526-5yu5k74",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240331193526-5yu5k74",
				"style": "line-height: 22px;",
				"updated": "20240331194043"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "arr = new int[] { 1, 1, 2, 3, 4, 6, 8 };\nindex = Arrays.binarySearch(arr, 1, 6, 1);\nSystem.out.println(index);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240331193802-qv4bdeu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331193802-qv4bdeu",
				"updated": "20240331194043"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输出："
				}
			]
		},
		{
			"ID": "20240331193807-dbnmnuk",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240331193807-dbnmnuk",
				"style": "line-height: 22px;",
				"updated": "20240331194043"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "1\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240331193814-h5d6a8a",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240331193814-h5d6a8a",
				"updated": "20240331194043"
			}
		}
	]
}