{"ID":"20240401215440-1v4n3os","Spec":"1","Type":"NodeDocument","Properties":{"id":"20240401215440-1v4n3os","title":"UM2L16——lambda表达式","type":"doc","updated":"20250303185426"},"Children":[{"ID":"20240401215440-29v4y3g","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20240401215440-29v4y3g","updated":"20250303185424"},"Children":[{"Type":"NodeText","Data":"Java中lambda表达式语法"}]},{"ID":"20240401221054-5s4w837","Type":"NodeParagraph","Properties":{"id":"20240401221054-5s4w837","updated":"20250303185345"},"Children":[{"Type":"NodeText","Data":"Java 中的 lambda 表达式和 C# 中区别很大，Java 中没有委托和事件\nJava 只能通过函数式接口来存储 lambda 表达式来进行使用，Java 的函数式接口可以充当 C"},{"Type":"NodeBackslash","Data":"span","Children":[{"Type":"NodeText","Data":"#"}]},{"Type":"NodeText","Data":" 中委托的角色"}]},{"ID":"20240401215818-6lktl6o","Type":"NodeParagraph","Properties":{"id":"20240401215818-6lktl6o","updated":"20240401220153"},"Children":[{"Type":"NodeText","Data":"基本结构："},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"(参数) -\u0026gt; {代码块}"},{"Type":"NodeText","Data":"​"}]},{"ID":"20240401215836-j7t70ya","Type":"NodeParagraph","Properties":{"id":"20240401215836-j7t70ya","updated":"20240401220153"},"Children":[{"Type":"NodeText","Data":"基于基本结构的写法："}]},{"ID":"20240401215818-bhrntp5","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20240401215818-bhrntp5","updated":"20240401220631"},"Children":[{"ID":"20240401215818-nupl2jo","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20240401215818-nupl2jo","updated":"20240401220631"},"Children":[{"ID":"20240401215818-pdt45v1","Type":"NodeParagraph","Properties":{"id":"20240401215818-pdt45v1","updated":"20240401220631"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"() -\u0026gt; {代码块};"},{"Type":"NodeText","Data":"​"}]}]},{"ID":"20240401215818-msd9jpr","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20240401215818-msd9jpr","updated":"20240401215925"},"Children":[{"ID":"20240401215818-0mmrlb4","Type":"NodeParagraph","Properties":{"id":"20240401215818-0mmrlb4","updated":"20240401215925"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"() -\u0026gt; 结果表达式;"},{"Type":"NodeText","Data":"​（相当于返回值）"}]}]},{"ID":"20240401215818-sr2buj3","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"My4=","Num":3},"Properties":{"id":"20240401215818-sr2buj3","updated":"20240401220629"},"Children":[{"ID":"20240401215818-zuzse50","Type":"NodeParagraph","Properties":{"id":"20240401215818-zuzse50","updated":"20240401220629"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"(参数) -\u0026gt; {代码块};"},{"Type":"NodeText","Data":"​"}]}]},{"ID":"20240401215818-fif9u7p","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"NC4=","Num":4},"Properties":{"id":"20240401215818-fif9u7p","updated":"20240401220628"},"Children":[{"ID":"20240401215818-i0duusv","Type":"NodeParagraph","Properties":{"id":"20240401215818-i0duusv","updated":"20240401220628"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"参数 -\u0026gt; {代码块};"},{"Type":"NodeText","Data":"​ （当参数只有一个时）"}]}]},{"ID":"20240401215818-oebik30","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"NS4=","Num":5},"Properties":{"id":"20240401215818-oebik30","updated":"20240401215927"},"Children":[{"ID":"20240401215818-h2swc1a","Type":"NodeParagraph","Properties":{"id":"20240401215818-h2swc1a","updated":"20240401215927"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"参数 -\u0026gt; 结果表达式;"},{"Type":"NodeText","Data":"​（相当于返回值）"}]}]},{"ID":"20240401215818-dd33t09","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Ni4=","Num":6},"Properties":{"id":"20240401215818-dd33t09","updated":"20240401220625"},"Children":[{"ID":"20240401215818-xh2oef2","Type":"NodeParagraph","Properties":{"id":"20240401215818-xh2oef2","updated":"20240401220625"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"(参数1,参数2,参数3...) -\u0026gt; {代码块};"},{"Type":"NodeText","Data":"​"}]}]},{"ID":"20240401215818-53is8gc","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Ny4=","Num":7},"Properties":{"id":"20240401215818-53is8gc","updated":"20240401215930"},"Children":[{"ID":"20240401215818-y2pq591","Type":"NodeParagraph","Properties":{"id":"20240401215818-y2pq591","updated":"20240401215930"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"(参数1,参数2,参数3...) -\u0026gt; 结果表达式;"},{"Type":"NodeText","Data":"​（相当于返回值）"}]}]}]},{"ID":"20240401220144-vyg2mtq","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240401220144-vyg2mtq","updated":"20250303185424"},"Children":[{"Type":"NodeText","Data":"用于装载 lambda 表达式的函数式接口"}]},{"ID":"20240401220822-o9tiday","Type":"NodeParagraph","Properties":{"id":"20240401220822-o9tiday","updated":"20250303185413"},"Children":[{"Type":"NodeText","Data":"Java 没有如 C"},{"Type":"NodeBackslash","Data":"span","Children":[{"Type":"NodeText","Data":"#"}]},{"Type":"NodeText","Data":" 那样的委托与事件，如果想要实现类似于委托那样的实现，我们可以通过函数式接口存储 lambda 表达式方法来实现"}]},{"ID":"20240401220154-3akiq5k","Type":"NodeParagraph","Properties":{"id":"20240401220154-3akiq5k","updated":"20250303185421"},"Children":[{"Type":"NodeText","Data":"函数式接口指"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"仅仅包含一个抽象方法的接口"},{"Type":"NodeText","Data":"，声明函数式接口后，我们可以用以下语法来使用 lambda 表达式\n​"},{"Type":"NodeTextMark","TextMarkType":"strong code","TextMarkTextContent":"接口名 变量名 = lambda表达式"},{"Type":"NodeText","Data":"​，可以将 Java 的函数式接口看作 Java 中扮演的委托的角色"}]},{"ID":"20240401220216-wmpdxgk","Type":"NodeParagraph","Properties":{"id":"20240401220216-wmpdxgk","updated":"20250303185424"},"Children":[{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"},"TextMarkType":"strong text","TextMarkTextContent":"注意：lambda 表达式的结构必须和函数式接口中声明的方法一致（返回值，参数数量）"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"}]},{"ID":"20240401220229-6hs4io1","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240401220229-6hs4io1","style":"line-height: 22px;","updated":"20240401220940"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"interface ITest {\n    int Test();\n}\n\ninterface ITest2 {\n    void Test(int a, String str);\n}\n\npublic class Lesson21 {\n    public static void main(String[] args) {\n        ITest t = () -\u003e {\n            int i = 1;\n            int i2 = 2;\n            return i + i2;\n        };\n\n        System.out.println(t.Test());\n\n        ITest2 t2 = (a, b) -\u003e {\n            System.out.println(a);\n            System.out.println(b);\n        };\n\n        t2.Test(10, \"123\");\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240401220638-qz4aad2","Type":"NodeParagraph","Properties":{"id":"20240401220638-qz4aad2","updated":"20240401220956"},"Children":[{"Type":"NodeText","Data":"输出："}]},{"ID":"20240401220956-xduz96o","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240401220956-xduz96o","style":"line-height: 22px;","updated":"20240401221005"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"3\n10\n123\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240401221008-s68ispc","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240401221008-s68ispc","updated":"20250303185426"},"Children":[{"Type":"NodeText","Data":"lambda 表达式调用外部变量"}]},{"ID":"20240401221025-atqh870","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20240401221025-atqh870","updated":"20240401221033"},"Children":[{"ID":"20240401221033-1fxfgsr","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20240401221033-1fxfgsr","updated":"20240401221033"},"Children":[{"ID":"20240401221033-m5kiqcp","Type":"NodeParagraph","Properties":{"id":"20240401221033-m5kiqcp","updated":"20240401221033"},"Children":[{"Type":"NodeText","Data":"无法更改局部变量的值"}]}]},{"ID":"20240401221033-v4f1p2s","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20240401221033-v4f1p2s","updated":"20240401221033"},"Children":[{"ID":"20240401221033-6iiw803","Type":"NodeParagraph","Properties":{"id":"20240401221033-6iiw803","updated":"20240401221033"},"Children":[{"Type":"NodeText","Data":"可以更改外部类的成员变量的值"}]}]}]},{"ID":"20240401221346-7cw6uof","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240401221346-7cw6uof","style":"line-height: 22px;","updated":"20240401221448"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"interface ITest {\n    int Test();\n}\n\npublic class Lesson21 {\n    public static int value2 = 99;\n\n    public static void main(String[] args) {\n        ITest t = () -\u003e {\n            //value1 = 100;     不能修改局部变量\n            value2 = 100;       //可以修改外部类的成员变量\n            return value2;\n        };\n\t\tSystem.out.println(t.Test());\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240401221412-lpekzhv","Type":"NodeParagraph","Properties":{"id":"20240401221412-lpekzhv","updated":"20240401221415"},"Children":[{"Type":"NodeText","Data":"输出："}]},{"ID":"20240401221415-dz1vxbe","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240401221415-dz1vxbe","style":"line-height: 22px;","updated":"20240401221451"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"100\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}