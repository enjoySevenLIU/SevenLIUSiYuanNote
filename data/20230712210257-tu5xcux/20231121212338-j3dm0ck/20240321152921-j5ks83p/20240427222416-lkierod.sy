{
	"ID": "20240427222416-lkierod",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20240427222416-lkierod",
		"title": "UH4L14——序列化库",
		"type": "doc",
		"updated": "20240501205330"
	},
	"Children": [
		{
			"ID": "20240427223846-xniyi0j",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240427223846-xniyi0j",
				"updated": "20240427223858"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "本章代码关键字"
				}
			]
		},
		{
			"ID": "20240427223858-08pbzbh",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240427223858-08pbzbh",
				"style": "line-height: 22px;",
				"updated": "20240427224050"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "JsonMapper.RegisterILRuntimeCLRRedirection()\t//ILRuntime修改的LitJson特有的方法，热更工程如果要使用则必须调用该方法注册，传入appDomain\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240427222416-gw98hqm",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20240427222416-gw98hqm",
				"updated": "20240427222611"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "ILRuntime中使用序列化库"
				}
			]
		},
		{
			"ID": "20240427222609-ncw1dj0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240427222609-ncw1dj0",
				"updated": "20240427222641"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "序列化库在我们开发当中经常会用到，比如之前我们学过的 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20230811141701-9hebxf1",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "LitJson"
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20240316225435-e0adng0",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "Protobuf"
				},
				{
					"Type": "NodeText",
					"Data": "\n但是这些库都是存在于主工程中的，那么当使用他们序列化反序列化热更工程中的对象时，他们是不能识别的\n所以在ILRuntime中使用序列化库，需要对其进行修改"
				}
			]
		},
		{
			"ID": "20240427222644-h65480s",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20240427222644-h65480s",
				"updated": "20240427222810"
			},
			"Children": [
				{
					"ID": "20240427222646-897zfo1",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240427222646-897zfo1",
						"updated": "20240427222646"
					},
					"Children": [
						{
							"ID": "20240427222646-vph1yg7",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240427222646-vph1yg7",
								"updated": "20240427222646"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "LitJson库获取：Demo工程中就有修改好的LitJson\n"
								}
							]
						}
					]
				},
				{
					"ID": "20240427222647-6n2n36z",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240427222647-6n2n36z",
						"updated": "20240427222810"
					},
					"Children": [
						{
							"ID": "20240427222647-90rw9yc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240427222647-90rw9yc",
								"updated": "20240427222810"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Protobuf库获取："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://gitee.com/cyecp/protobuf-net",
									"TextMarkTextContent": "protobuf-net: Protobuf-net for ILRuntime (gitee.com)"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240427222609-sft73cf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240427222609-sft73cf",
				"style": "background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);",
				"updated": "20240427222658"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注意：改写序列化库时，不能通过"
				},
				{
					"Type": "NodeTextMark",
					"Properties": {
						"parent-style": "background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"
					},
					"TextMarkType": "code",
					"TextMarkTextContent": "Activator"
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: parent-style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​来创建实例"
				}
			]
		},
		{
			"ID": "20240427223000-qyikmui",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240427223000-qyikmui",
				"updated": "20240427223010"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "ILRuntime在使用第三方库时，为了能够正常的对热更工程中声明的类对象进行使用\n我们往往需要对其进行修改，修改第三方库对于大家来说可能有一定难度\n所以首先去ILRuntime的群和社区中去找找有没有别人做好的，如果没有再尝试自己修改"
				}
			]
		},
		{
			"ID": "20240427222812-1z7d3rf",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240427222812-1z7d3rf",
				"name": "JsonMapper.RegisterILRuntimeCLRRedirection()",
				"updated": "20240427222825"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用改好的LitJson库"
				}
			]
		},
		{
			"ID": "20240427223153-3y7858n",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240427223153-3y7858n",
				"updated": "20240427223215"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "假设在热更工程内要对下面的类序列化和反序列化"
				}
			]
		},
		{
			"ID": "20240427223215-kf1s35u",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240427223215-kf1s35u",
				"style": "line-height: 22px;",
				"updated": "20240427223219"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "using System.Collections.Generic;\n\nnamespace HotFix_Project\n{\n    class Lesson18_Test\n    {\n        public int testI;\n        public string testStr;\n        public List\u003cint\u003e listTest;\n        public Dictionary\u003cstring, int\u003e dictTest;\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240427222830-kjqfkeq",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240427222830-kjqfkeq",
				"updated": "20240427222833"
			},
			"Children": [
				{
					"ID": "20240427222833-9cmbt6z",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20240427222833-9cmbt6z",
						"updated": "20240427222833"
					},
					"Children": [
						{
							"ID": "20240427222833-14tfo9p",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240427222833-14tfo9p",
								"updated": "20240427222838"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "初始化时注册 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "LitJson.JsonMapper.RegisterILRuntimeCLRRedirection(appDomain)"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"ID": "20240427223722-ju1wecy",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240427223722-ju1wecy",
								"style": "line-height: 22px;",
								"updated": "20240427223844"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "private unsafe void InitILRuntime()\n{\n    //注册委托和委托转换器...\n    //注册跨域继承类\n    appDomain.RegisterCrossBindingAdaptor(new ILRuntimeAdapter.Lesson11_TestAdapter());\n    appDomain.RegisterCrossBindingAdaptor(new CoroutineAdapter());\n    appDomain.RegisterCrossBindingAdaptor(new IAsyncStateMachineClassInheritanceAdaptor());\n    //初始化LitJson相关内容\n    LitJson.JsonMapper.RegisterILRuntimeCLRRedirection(appDomain);\n    //注册值类型\n    appDomain.RegisterValueTypeBinder(typeof(Vector3), new Vector3Binder());\n    appDomain.RegisterValueTypeBinder(typeof(Vector2), new Vector2Binder());\n    appDomain.RegisterValueTypeBinder(typeof(Quaternion), new QuaternionBinder());\n  \n\n    //CLR重定向内容，必须要写到CLR绑定之前！！！\n    System.Type debugType = typeof(Debug);\n    MethodInfo methodInfo = debugType.GetMethod(\"Log\", new System.Type[] { typeof(object) });\n    appDomain.RegisterCLRMethodRedirection(methodInfo, MyLog);\n\n    //注册 CLR绑定相关信息\n    ILRuntime.Runtime.Generated.CLRBindings.Initialize(appDomain);\n    //初始化ILRuntime相关信息（目前只需要告诉ILRuntime主线程的线程ID，主要目的是能够在Unity的Profiler剖析器窗口中分析问题）\n    appDomain.UnityMainThreadID = Thread.CurrentThread.ManagedThreadId;\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20240427222833-fmminls",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20240427222833-fmminls",
						"updated": "20240427222833"
					},
					"Children": [
						{
							"ID": "20240427222833-c8x2kd6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240427222833-c8x2kd6",
								"updated": "20240427223715"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "正常使用LitJson进行序列化反序列化"
								}
							]
						},
						{
							"ID": "20240427223715-mha12au",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20240427223715-mha12au",
								"updated": "20240427223715"
							},
							"Children": [
								{
									"ID": "20240427223715-mhor02l",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20240427223715-mhor02l",
										"updated": "20240427223715"
									},
									"Children": [
										{
											"ID": "20240427223715-oiwlfh5",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240427223715-oiwlfh5",
												"updated": "20240427224101"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "序列化："
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code block-ref",
													"TextMarkBlockRefID": "20230811142000-49o4fmy",
													"TextMarkBlockRefSubtype": "s",
													"TextMarkTextContent": "JsonMapper.ToJson(对象)"
												},
												{
													"Type": "NodeText",
													"Data": "​"
												}
											]
										},
										{
											"ID": "20240427224101-fd6lcyk",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20240427224101-fd6lcyk",
												"style": "line-height: 22px;",
												"updated": "20240427224146"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "YyM="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "public class ILRuntimeMain\n{\n    public static void Main()\n    {\n        Lesson18_Test test = new Lesson18_Test();\n        test.testI = 99;\n        test.testStr = \"唐老狮\";\n        test.listTest = new List\u003cint\u003e() { 1, 2, 3, 4, 5 };\n        test.dictTest = new Dictionary\u003cstring, int\u003e() { { \"1\", 2 }, { \"2\", 88 }, { \"3\", 77 } };\n        //序列化Json字符串\n        string str = JsonMapper.ToJson(test);\n        Debug.Log(str);\n    }\n}\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								},
								{
									"ID": "20240427223716-7ab09im",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20240427223716-7ab09im"
									},
									"Children": [
										{
											"ID": "20240427223716-s8rf1t6",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240427223716-s8rf1t6"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "反序列化："
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code block-ref",
													"TextMarkBlockRefID": "20230811142003-y451o7h",
													"TextMarkBlockRefSubtype": "s",
													"TextMarkTextContent": "JsonMapper.ToObject\u0026lt;类型\u0026gt;"
												},
												{
													"Type": "NodeText",
													"Data": "​"
												}
											]
										},
										{
											"ID": "20240427224137-1l8hdi1",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20240427224137-1l8hdi1",
												"style": "line-height: 22px;",
												"updated": "20240427224239"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "YyM="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "public class ILRuntimeMain\n{\n    public static void Main()\n    {\n        Lesson18_Test test = new Lesson18_Test();\n        test.testI = 99;\n        test.testStr = \"唐老狮\";\n        test.listTest = new List\u003cint\u003e() { 1, 2, 3, 4, 5 };\n        test.dictTest = new Dictionary\u003cstring, int\u003e() { { \"1\", 2 }, { \"2\", 88 }, { \"3\", 77 } };\n        //序列化Json字符串\n        string str = JsonMapper.ToJson(test);\n        Debug.Log(str);\n        //反序列化Json字符串\n        Lesson18_Test test2 = JsonMapper.ToObject\u003cLesson18_Test\u003e(str);\n        Debug.Log(test2.testI);\n        Debug.Log(test2.testStr);\n    }\n}\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240427224240-m3sr9i0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240427224240-m3sr9i0",
				"updated": "20240427224304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输出："
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"parent-style": "width: 768px;",
						"style": "width: 758px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20240427224304-pwwq1vc.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 758px;\" parent-style=\"width: 768px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20240427222904-ghoqwk5",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240427222904-ghoqwk5",
				"updated": "20240427222929"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如何自己改相关库"
				}
			]
		},
		{
			"ID": "20240427222938-xtd9ai6",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240427222938-xtd9ai6",
				"updated": "20240427224411"
			},
			"Children": [
				{
					"ID": "20240427222941-n6kuxqm",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20240427222941-n6kuxqm",
						"updated": "20240427224411"
					},
					"Children": [
						{
							"ID": "20240427222941-sjo6x20",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240427222941-sjo6x20",
								"updated": "20240427224411"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "正确创建热更类型的实例（利用"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "block-ref",
									"TextMarkBlockRefID": "20240424124655-w3wan2p",
									"TextMarkBlockRefSubtype": "s",
									"TextMarkTextContent": "之前反射相关的创建方式"
								},
								{
									"Type": "NodeText",
									"Data": "）"
								}
							]
						}
					]
				},
				{
					"ID": "20240427222941-6qr24m7",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20240427222941-6qr24m7",
						"updated": "20240427222944"
					},
					"Children": [
						{
							"ID": "20240427222941-qf3xbt0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240427222941-qf3xbt0",
								"updated": "20240427222944"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "获取泛型容器类的真实热更类型"
								}
							]
						}
					]
				},
				{
					"ID": "20240427222941-dxjhrx8",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20240427222941-dxjhrx8",
						"updated": "20240427222941"
					},
					"Children": [
						{
							"ID": "20240427222941-de7xawg",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240427222941-de7xawg",
								"updated": "20240427222941"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "序列化子对象"
								}
							]
						}
					]
				},
				{
					"ID": "20240427222941-znoy0w4",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20240427222941-znoy0w4",
						"updated": "20240427222941"
					},
					"Children": [
						{
							"ID": "20240427222941-pb63sux",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240427222941-pb63sux",
								"updated": "20240427222941"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "重定向泛型方法"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240427222938-rf9hao5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240427222938-rf9hao5",
				"updated": "20240427224628"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "去查看LitJson修改后的源码来分析加了哪些内容，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "JsonMapper"
				},
				{
					"Type": "NodeText",
					"Data": "​内部对泛型方法的重定向如下："
				}
			]
		},
		{
			"ID": "20240501205307-o9ejytz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240501205307-o9ejytz",
				"updated": "20240501205330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "关于这里的逻辑，建议配合"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20240501160226-q1xf6zn",
					"TextMarkBlockRefSubtype": "d",
					"TextMarkTextContent": "UH4L21——重定向的书写规则"
				},
				{
					"Type": "NodeText",
					"Data": "观看"
				}
			]
		},
		{
			"ID": "20240427222946-d1c95wr",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240427222946-d1c95wr",
				"style": "line-height: 22px;",
				"updated": "20240427224525"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public unsafe static void RegisterILRuntimeCLRRedirection(ILRuntime.Runtime.Enviorment.AppDomain appdomain)\n{\n    foreach(var i in typeof(JsonMapper).GetMethods())\n    {\n        if(i.Name == \"ToObject\" \u0026\u0026 i.IsGenericMethodDefinition)\n        {\n            var param = i.GetParameters();\n            if(param[0].ParameterType == typeof(string))\n            {\n                appdomain.RegisterCLRMethodRedirection(i, JsonToObject);\n            }\n            else if(param[0].ParameterType == typeof(JsonReader))\n            {\n                appdomain.RegisterCLRMethodRedirection(i, JsonToObject2);\n            }\n            else if (param[0].ParameterType == typeof(TextReader))\n            {\n                appdomain.RegisterCLRMethodRedirection(i, JsonToObject3);\n            }\n        }\n    }\n}\n\npublic unsafe static StackObject* JsonToObject(ILIntepreter intp, StackObject* esp, IList\u003cobject\u003e mStack, CLRMethod method, bool isNewObj)\n{\n    ILRuntime.Runtime.Enviorment.AppDomain __domain = intp.AppDomain;\n    StackObject* ptr_of_this_method;\n    StackObject* __ret = ILIntepreter.Minus(esp, 1);\n    ptr_of_this_method = ILIntepreter.Minus(esp, 1);\n    System.String json = (System.String)typeof(System.String).CheckCLRTypes(StackObject.ToObject(ptr_of_this_method, __domain, mStack));\n    intp.Free(ptr_of_this_method);\n    var type = method.GenericArguments[0].ReflectionType;\n    var result_of_this_method = ReadValue(type, new JsonReader(json));\n\n    return ILIntepreter.PushObject(__ret, mStack, result_of_this_method);\n}\n\npublic unsafe static StackObject* JsonToObject2(ILIntepreter intp, StackObject* esp, IList\u003cobject\u003e mStack, CLRMethod method, bool isNewObj)\n{\n    ILRuntime.Runtime.Enviorment.AppDomain __domain = intp.AppDomain;\n    StackObject* ptr_of_this_method;\n    StackObject* __ret = ILIntepreter.Minus(esp, 1);\n    ptr_of_this_method = ILIntepreter.Minus(esp, 1);\n    JsonReader json = (JsonReader)typeof(JsonReader).CheckCLRTypes(StackObject.ToObject(ptr_of_this_method, __domain, mStack));\n    intp.Free(ptr_of_this_method);\n    var type = method.GenericArguments[0].ReflectionType;\n    var result_of_this_method = ReadValue(type, json);\n\n    return ILIntepreter.PushObject(__ret, mStack, result_of_this_method);\n}\n\npublic unsafe static StackObject* JsonToObject3(ILIntepreter intp, StackObject* esp, IList\u003cobject\u003e mStack, CLRMethod method, bool isNewObj)\n{\n    ILRuntime.Runtime.Enviorment.AppDomain __domain = intp.AppDomain;\n    StackObject* ptr_of_this_method;\n    StackObject* __ret = ILIntepreter.Minus(esp, 1);\n    ptr_of_this_method = ILIntepreter.Minus(esp, 1);\n    TextReader json = (TextReader)typeof(TextReader).CheckCLRTypes(StackObject.ToObject(ptr_of_this_method, __domain, mStack));\n    intp.Free(ptr_of_this_method);\n    var type = method.GenericArguments[0].ReflectionType;\n    var result_of_this_method = ReadValue(type, new JsonReader(json));\n\n    return ILIntepreter.PushObject(__ret, mStack, result_of_this_method);\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		}
	]
}