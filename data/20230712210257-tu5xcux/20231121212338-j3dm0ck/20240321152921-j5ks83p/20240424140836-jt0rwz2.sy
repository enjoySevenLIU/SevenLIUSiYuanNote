{
	"ID": "20240424140836-jt0rwz2",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20240424140836-jt0rwz2",
		"title": "UH4L5——调用ILRuntime中方法",
		"type": "doc",
		"updated": "20240426142926"
	},
	"Children": [
		{
			"ID": "20240424143120-bqojluv",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240424143120-bqojluv",
				"updated": "20240424143125"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "本章代码关键字"
				}
			]
		},
		{
			"ID": "20240424143125-1ieab2b",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240424143125-1ieab2b",
				"style": "line-height: 22px;",
				"updated": "20240424153520"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "appDomain.Invoke()\t\t//除了传入IMethod，对于方法直接传入类名，方法名，要执行方法的对象（静态方法不传入），参数，即可执行方法\nIType.GetMethod()\t\t//除了传入参数数量，还可以传入List\u003cIList\u003e来指定获取哪种参数列表的重载方法\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240424141019-b7wk6p5",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20240424141019-b7wk6p5",
				"updated": "20240424141026"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "跨域调用方法"
				}
			]
		},
		{
			"ID": "20240424141027-8rg02nf",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20240424141027-8rg02nf",
				"updated": "20240424210205"
			},
			"Children": [
				{
					"ID": "20240424141028-jhlx8zx",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240424141028-jhlx8zx",
						"updated": "20240424141135"
					},
					"Children": [
						{
							"ID": "20240424141028-gyr584g",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240424141028-gyr584g",
								"updated": "20240424141032"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "静态方法"
								}
							]
						},
						{
							"ID": "20240424141034-dmj8luw",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240424141034-dmj8luw",
								"updated": "20240424141058"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "静态方法调用的规则和成员属性方法调用规则基本类似，三板斧调用："
								}
							]
						},
						{
							"ID": "20240424141037-1z885bu",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20240424141037-1z885bu",
								"updated": "20240424141135"
							},
							"Children": [
								{
									"ID": "20240424141037-73030lb",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20240424141037-73030lb",
										"updated": "20240424141053"
									},
									"Children": [
										{
											"ID": "20240424141037-o3vz3iu",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240424141037-o3vz3iu",
												"updated": "20240424141053"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "​"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "appdomain.Invoke(\u0026quot;命名空间.类名\u0026quot;, \u0026quot;静态方法名\u0026quot;, null, 参数列表)"
												},
												{
													"Type": "NodeText",
													"Data": "​"
												}
											]
										}
									]
								},
								{
									"ID": "20240424141037-gillc7s",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "Mi4=",
										"Num": 2
									},
									"Properties": {
										"id": "20240424141037-gillc7s",
										"updated": "20240424141106"
									},
									"Children": [
										{
											"ID": "20240424141037-4oi8d7t",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240424141037-4oi8d7t",
												"updated": "20240424141106"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "​"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "appdomain.Invoke(IMethod对象, null, 参数列表)"
												},
												{
													"Type": "NodeText",
													"Data": "​"
												}
											]
										}
									]
								},
								{
									"ID": "20240424141037-mz7ov0h",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "My4=",
										"Num": 3
									},
									"Properties": {
										"id": "20240424141037-mz7ov0h",
										"updated": "20240424141135"
									},
									"Children": [
										{
											"ID": "20240424141037-ux1g13e",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240424141037-ux1g13e",
												"updated": "20240424141135"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "无GC Alloc方式："
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "using(BeginInvoke){ push Invoke read -\u0026gt; ubpir }"
												},
												{
													"Type": "NodeText",
													"Data": "​方式"
												}
											]
										}
									]
								}
							]
						},
						{
							"ID": "20240424141034-lt1viac",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240424141034-lt1viac",
								"updated": "20240424141044"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "注意：建议大家都使用类似反射的"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "IMethod"
								},
								{
									"Type": "NodeText",
									"Data": "​来调用方法，并且使用更节约性能的无GC Alloc方式来调用"
								}
							]
						}
					]
				},
				{
					"ID": "20240424141034-63kfh4z",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240424141034-63kfh4z",
						"updated": "20240424144757"
					},
					"Children": [
						{
							"ID": "20240424141034-plp2010",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240424141034-plp2010",
								"updated": "20240424141144"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "成员方法"
								}
							]
						},
						{
							"ID": "20240424144721-a9z3ryc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240424144721-a9z3ryc",
								"updated": "20240424144731"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "三板斧调用（和静态方法调用区别就是，需要指明"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "调用方法的对象"
								},
								{
									"Type": "NodeText",
									"Data": "）"
								}
							]
						},
						{
							"ID": "20240424144726-47t7hty",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20240424144726-47t7hty",
								"updated": "20240424144757"
							},
							"Children": [
								{
									"ID": "20240424144726-opnmicn",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20240424144726-opnmicn",
										"updated": "20240424144757"
									},
									"Children": [
										{
											"ID": "20240424144726-ayvivxt",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240424144726-ayvivxt",
												"updated": "20240424144757"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "​"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "appdomain.Invoke(\u0026quot;命名空间.类名\u0026quot;, \u0026quot;静态方法名\u0026quot;, 对象, 参数列表)"
												},
												{
													"Type": "NodeText",
													"Data": "​"
												}
											]
										}
									]
								},
								{
									"ID": "20240424144726-3pphw9c",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "Mi4=",
										"Num": 2
									},
									"Properties": {
										"id": "20240424144726-3pphw9c",
										"updated": "20240424144750"
									},
									"Children": [
										{
											"ID": "20240424144726-geei595",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240424144726-geei595",
												"updated": "20240424144750"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "​"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "appdomain.Invoke(IMethod对象, 对象, 参数列表)"
												},
												{
													"Type": "NodeText",
													"Data": "​"
												}
											]
										}
									]
								},
								{
									"ID": "20240424144726-gch7pl3",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "My4=",
										"Num": 3
									},
									"Properties": {
										"id": "20240424144726-gch7pl3",
										"updated": "20240424144739"
									},
									"Children": [
										{
											"ID": "20240424144726-8ot1irx",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240424144726-8ot1irx",
												"updated": "20240424144739"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "无GC Alloc方式："
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "using(BeginInvoke){ push Invoke read -\u0026gt; ubpir }"
												},
												{
													"Type": "NodeText",
													"Data": "​方式"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20240424151448-q6119x6",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240424151448-q6119x6",
						"updated": "20240424151457"
					},
					"Children": [
						{
							"ID": "20240424151448-9bah3kg",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240424151448-9bah3kg",
								"updated": "20240424151451"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "重载方法"
								}
							]
						},
						{
							"ID": "20240424151451-pgjdcfc",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20240424151451-pgjdcfc",
								"updated": "20240424151457"
							},
							"Children": [
								{
									"ID": "20240424151455-2nhcwz2",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20240424151455-2nhcwz2",
										"updated": "20240424151455"
									},
									"Children": [
										{
											"ID": "20240424151455-q4heru3",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240424151455-q4heru3",
												"updated": "20240424151455"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "方法调用，还是遵循三板斧调用规则"
												}
											]
										}
									]
								},
								{
									"ID": "20240424151455-p3tsm9h",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "Mi4=",
										"Num": 2
									},
									"Properties": {
										"id": "20240424151455-p3tsm9h",
										"updated": "20240424151457"
									},
									"Children": [
										{
											"ID": "20240424151455-zs5h5gl",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240424151455-zs5h5gl",
												"updated": "20240424151457"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "参数数量不同时，通过明确参数数量来明确重载，参数数量相同，类型不同时，通过指明参数类型来明确重载"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20240424210037-ntgypo2",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240424210037-ntgypo2",
						"updated": "20240424210205"
					},
					"Children": [
						{
							"ID": "20240424210037-jaq6k7s",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240424210037-jaq6k7s",
								"updated": "20240424210054"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "ref"
								},
								{
									"Type": "NodeText",
									"Data": "​ / "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "out"
								},
								{
									"Type": "NodeText",
									"Data": "​ 方法"
								}
							]
						},
						{
							"ID": "20240424210033-n7yj7y1",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20240424210033-n7yj7y1",
								"updated": "20240424210205"
							},
							"Children": [
								{
									"ID": "20240424210058-vff11n6",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20240424210058-vff11n6",
										"updated": "20240424210130"
									},
									"Children": [
										{
											"ID": "20240424210058-dfhxin6",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240424210058-dfhxin6",
												"updated": "20240424210130"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "​"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "ref"
												},
												{
													"Type": "NodeText",
													"Data": "​ / "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "out"
												},
												{
													"Type": "NodeText",
													"Data": "​ 方法只能通过无GC Alloc方法调用 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "using(BeginInvoke){ push Invoke read -\u0026gt; ubpir }"
												},
												{
													"Type": "NodeText",
													"Data": "​方式"
												}
											]
										}
									]
								},
								{
									"ID": "20240424210058-kbjw9m0",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "Mi4=",
										"Num": 2
									},
									"Properties": {
										"id": "20240424210058-kbjw9m0",
										"updated": "20240424210205"
									},
									"Children": [
										{
											"ID": "20240424210058-eo679bj",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240424210058-eo679bj",
												"updated": "20240424210113"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "在调用时多了三个步骤"
												}
											]
										},
										{
											"ID": "20240424210113-bd00b5o",
											"Type": "NodeList",
											"ListData": {
												"Typ": 1
											},
											"Properties": {
												"id": "20240424210113-bd00b5o",
												"updated": "20240424210205"
											},
											"Children": [
												{
													"ID": "20240424210113-rkcf3rf",
													"Type": "NodeListItem",
													"ListData": {
														"Typ": 1,
														"Delimiter": 46,
														"Marker": "MS4=",
														"Num": 1
													},
													"Properties": {
														"id": "20240424210113-rkcf3rf",
														"updated": "20240424210134"
													},
													"Children": [
														{
															"ID": "20240424210113-mljn2vg",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20240424210113-mljn2vg",
																"updated": "20240424210134"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "需要先压入"
																},
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "code",
																	"TextMarkTextContent": "ref"
																},
																{
																	"Type": "NodeText",
																	"Data": "​或"
																},
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "code",
																	"TextMarkTextContent": "out"
																},
																{
																	"Type": "NodeText",
																	"Data": "​参数的初始值"
																}
															]
														}
													]
												},
												{
													"ID": "20240424210113-at51h1x",
													"Type": "NodeListItem",
													"ListData": {
														"Typ": 1,
														"Delimiter": 46,
														"Marker": "Mi4=",
														"Num": 2
													},
													"Properties": {
														"id": "20240424210113-at51h1x",
														"updated": "20240424210113"
													},
													"Children": [
														{
															"ID": "20240424210113-h951ll8",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20240424210113-h951ll8",
																"updated": "20240424210113"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "压入参数环节压入引用索引值"
																}
															]
														}
													]
												},
												{
													"ID": "20240424210113-fgecy10",
													"Type": "NodeListItem",
													"ListData": {
														"Typ": 1,
														"Delimiter": 46,
														"Marker": "My4=",
														"Num": 3
													},
													"Properties": {
														"id": "20240424210113-fgecy10",
														"updated": "20240424210205"
													},
													"Children": [
														{
															"ID": "20240424210113-6376ts2",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20240424210113-6376ts2",
																"updated": "20240424210205"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "通过 "
																},
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "code",
																	"TextMarkTextContent": "Read"
																},
																{
																	"Type": "NodeText",
																	"Data": "​ 按顺序获取"
																},
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "code",
																	"TextMarkTextContent": "ref"
																},
																{
																	"Type": "NodeText",
																	"Data": "​、"
																},
																{
																	"Type": "NodeTextMark",
																	"TextMarkType": "code",
																	"TextMarkTextContent": "out"
																},
																{
																	"Type": "NodeText",
																	"Data": "​参数，返回值最后获取"
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240424140836-3wdwy6d",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240424140836-3wdwy6d",
				"updated": "20240424141026"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "静态方法调用"
				}
			]
		},
		{
			"ID": "20240424141149-33psrsw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240424141149-33psrsw",
				"updated": "20240424142516"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "假设要调用热更新工程内的如下的静态方法（热更工程内可以直接调用"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "UnityEngine"
				},
				{
					"Type": "NodeText",
					"Data": "​命名空间内的内容）："
				}
			]
		},
		{
			"ID": "20240424141831-iy8lwb7",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240424141831-iy8lwb7",
				"style": "line-height: 22px;",
				"updated": "20240424141845"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "using UnityEngine;\n\nnamespace HotFix_Project\n{\n    public class Lesson3_Test\n    {\n        public static void TestStaticFun()\n        {\n            //热更工程内可以直接调用UnityEngine命名空间内的内容\n            Debug.Log(\"无参静态方法\");\n        }\n\n        public static int TestStaticFun2(int i)\n        {\n            Debug.Log(\"有参静态方法\" + i);\n            return i + 10;\n        }\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240424141847-bioue95",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240424141847-bioue95",
				"updated": "20240424141927"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "静态方法调用有两种方式"
				}
			]
		},
		{
			"ID": "20240424141927-w21gj98",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240424141927-w21gj98",
				"updated": "20240424150338"
			},
			"Children": [
				{
					"ID": "20240424141927-yten4cf",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20240424141927-yten4cf",
						"name": "appDomain.Invoke()",
						"updated": "20240424145141"
					},
					"Children": [
						{
							"ID": "20240424141927-3hkyvxc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240424141927-3hkyvxc",
								"updated": "20240424145119"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "直接通过 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "appDomain.Invoke(\u0026quot;命名空间.类名\u0026quot;, \u0026quot;静态方法名\u0026quot;, null, 参数列表)"
								},
								{
									"Type": "NodeText",
									"Data": "​，调用静方法"
								}
							]
						},
						{
							"ID": "20240424144924-tzwy1ws",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240424144924-tzwy1ws",
								"updated": "20240424144948"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "这里是不传入"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "IMethod"
								},
								{
									"Type": "NodeText",
									"Data": "​的重载，参数如下："
								}
							]
						},
						{
							"ID": "20240424144949-k821fst",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20240424144949-k821fst",
								"updated": "20240424145110"
							},
							"Children": [
								{
									"ID": "20240424144949-asm84l9",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20240424144949-asm84l9",
										"updated": "20240424144949"
									},
									"Children": [
										{
											"ID": "20240424144949-jyxt677",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240424144949-jyxt677",
												"updated": "20240424145011"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "参数一："
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "\u0026quot;命名空间.类名\u0026quot;"
												},
												{
													"Type": "NodeText",
													"Data": "​"
												}
											]
										}
									]
								},
								{
									"ID": "20240424145007-7z3qaef",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20240424145007-7z3qaef"
									},
									"Children": [
										{
											"ID": "20240424145007-qe0sxd3",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240424145007-qe0sxd3",
												"updated": "20240424145014"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "参数二：方法名"
												}
											]
										}
									]
								},
								{
									"ID": "20240424145016-dvop79l",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20240424145016-dvop79l",
										"updated": "20240424145110"
									},
									"Children": [
										{
											"ID": "20240424145016-kiqwbzo",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240424145016-kiqwbzo",
												"updated": "20240424145110"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "参数三：要执行方法的对象，如果是静态方法则不填"
												}
											]
										}
									]
								},
								{
									"ID": "20240424145037-xbsl7pn",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20240424145037-xbsl7pn",
										"updated": "20240424145050"
									},
									"Children": [
										{
											"ID": "20240424145037-wtkbxx7",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240424145037-wtkbxx7",
												"updated": "20240424145050"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "后续参数：参数列表"
												}
											]
										}
									]
								}
							]
						},
						{
							"ID": "20240424145114-gi5j2l0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240424145114-gi5j2l0",
								"updated": "20240424145141"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "该方法除了静态方法，还可以调用：成员方法"
								}
							]
						},
						{
							"ID": "20240424142204-3xdi5t6",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240424142204-3xdi5t6",
								"style": "line-height: 22px;",
								"updated": "20240424142559"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "void Start()\n{\n    ILRuntimeMgr.Instance.StartILRuntime(() =\u003e\n    {\n        AppDomain appDomain = ILRuntimeMgr.Instance.appDomain;\n        //无参方法调用\n        appDomain.Invoke(\"HotFix_Project.Lesson3_Test\", \"TestStaticFun\", null, null);\n        //有参有返回值调用\n        int i = (int)appDomain.Invoke(\"HotFix_Project.Lesson3_Test\", \"TestStaticFun\", null, 99);\n        print(i);\n    });\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20240424142550-rjbwfed",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240424142550-rjbwfed",
								"updated": "20240424142554"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "输出："
								},
								{
									"Type": "NodeImage",
									"Data": "span",
									"Properties": {
										"parent-style": "width: 445px;",
										"style": "width: 435px;"
									},
									"Children": [
										{
											"Type": "NodeBang"
										},
										{
											"Type": "NodeOpenBracket"
										},
										{
											"Type": "NodeLinkText",
											"Data": "image"
										},
										{
											"Type": "NodeCloseBracket"
										},
										{
											"Type": "NodeOpenParen"
										},
										{
											"Type": "NodeLinkDest",
											"Data": "assets/image-20240424142554-gcnix5d.png"
										},
										{
											"Type": "NodeCloseParen"
										}
									]
								},
								{
									"Type": "NodeKramdownSpanIAL",
									"Data": "{: style=\"width: 435px;\" parent-style=\"width: 445px;\"}"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						}
					]
				},
				{
					"ID": "20240424141927-vqg3bhq",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20240424141927-vqg3bhq",
						"updated": "20240424150338"
					},
					"Children": [
						{
							"ID": "20240424141927-hvhpax6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240424141927-hvhpax6",
								"updated": "20240424143620"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "通过类似反射的"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "IMethod"
								},
								{
									"Type": "NodeText",
									"Data": "​调用静态方法"
								}
							]
						},
						{
							"ID": "20240424141955-q6kj5aj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240424141955-q6kj5aj",
								"updated": "20240424143617"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "通过"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "IType"
								},
								{
									"Type": "NodeText",
									"Data": "​中的"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "GetMethod"
								},
								{
									"Type": "NodeText",
									"Data": "​方法，类似反射一样的获取对应类中的静态方法"
								}
							]
						},
						{
							"ID": "20240424142959-7y8iczy",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240424142959-7y8iczy",
								"style": "line-height: 22px;",
								"updated": "20240424150338"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "AppDomain appDomain = ILRuntimeMgr.Instance.appDomain;\nIType type = appDomain.LoadedTypes[\"HotFix_Project.Lesson3_Test\"];\n//无参无返回值\nIMethod method1 = type.GetMethod(\"TestStaticFun\", 0);\n//有参有返回值\nIMethod method2 = type.GetMethod(\"TestStaticFun2\", 1);\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20240424142004-827v25k",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20240424142004-827v25k",
								"updated": "20240424144214"
							},
							"Children": [
								{
									"ID": "20240424142004-spw6k5p",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20240424142004-spw6k5p",
										"updated": "20240424144140"
									},
									"Children": [
										{
											"ID": "20240424142004-ld6tpw0",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240424142004-ld6tpw0",
												"updated": "20240424143358"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "通过 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "appDomain.Invoke(方法名，null，参数)"
												},
												{
													"Type": "NodeText",
													"Data": "​ 调用 静态方法"
												}
											]
										},
										{
											"ID": "20240424143354-ksn4gy0",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20240424143354-ksn4gy0",
												"style": "line-height: 22px;",
												"updated": "20240424144140"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "YyM="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "void Start()\n{\n    ILRuntimeMgr.Instance.StartILRuntime(() =\u003e\n    {\n        AppDomain appDomain = ILRuntimeMgr.Instance.appDomain;\n        IType type = appDomain.LoadedTypes[\"HotFix_Project.Lesson3_Test\"];\n        IMethod method1 = type.GetMethod(\"TestStaticFun\", 0);\n        IMethod method2 = type.GetMethod(\"TestStaticFun2\", 1);\n\t\t//无参无返回值\n        appDomain.Invoke(method1, null, null);\n\t\t//有参有返回值\n        int i2 = (int)appDomain.Invoke(method2, null, 88);\n        print(i2);\n    });\n}\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										},
										{
											"ID": "20240424143733-9m3pt1r",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240424143733-9m3pt1r",
												"updated": "20240424143753"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "输出："
												},
												{
													"Type": "NodeImage",
													"Data": "span",
													"Properties": {
														"parent-style": "width: 450px;",
														"style": "width: 440px;"
													},
													"Children": [
														{
															"Type": "NodeBang"
														},
														{
															"Type": "NodeOpenBracket"
														},
														{
															"Type": "NodeLinkText",
															"Data": "image"
														},
														{
															"Type": "NodeCloseBracket"
														},
														{
															"Type": "NodeOpenParen"
														},
														{
															"Type": "NodeLinkDest",
															"Data": "assets/image-20240424143753-eoxgvnx.png"
														},
														{
															"Type": "NodeCloseParen"
														}
													]
												},
												{
													"Type": "NodeKramdownSpanIAL",
													"Data": "{: style=\"width: 440px;\" parent-style=\"width: 450px;\"}"
												},
												{
													"Type": "NodeText",
													"Data": "​"
												}
											]
										}
									]
								},
								{
									"ID": "20240424142004-notq3cw",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "Mi4=",
										"Num": 2
									},
									"Properties": {
										"id": "20240424142004-notq3cw",
										"updated": "20240424144214"
									},
									"Children": [
										{
											"ID": "20240424142004-w750ufe",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240424142004-w750ufe",
												"updated": "20240424143825"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "通过更节约性能的无GC Alloc方式（调用完后直接回收）调用静态方法，类似上节课的"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "block-ref",
													"TextMarkBlockRefID": "20240424133600-a9876xy",
													"TextMarkBlockRefSubtype": "s",
													"TextMarkTextContent": "成员属性"
												}
											]
										},
										{
											"ID": "20240424142132-9afqe6n",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20240424142132-9afqe6n",
												"style": "line-height: 22px;",
												"updated": "20240424142156"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "YyM="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "using (var method = appDomain.BeginInvoke(methodName))\n{\n      method.Push.....(1000);//传入指定类型参数\n      method.Invoke();\t\t //执行方法\n      method.Read....()\t\t //获取指定类型返回值\n}\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										},
										{
											"ID": "20240424143910-9lpfms0",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240424143910-9lpfms0",
												"updated": "20240424143916"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "使用示例："
												}
											]
										},
										{
											"ID": "20240424143916-u2gr5qh",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20240424143916-u2gr5qh",
												"style": "line-height: 22px;",
												"updated": "20240424144119"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "YyM="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "void Start()\n{\n    ILRuntimeMgr.Instance.StartILRuntime(() =\u003e\n    {\n        AppDomain appDomain = ILRuntimeMgr.Instance.appDomain;\n\n        IType type = appDomain.LoadedTypes[\"HotFix_Project.Lesson3_Test\"];\n        IMethod method1 = type.GetMethod(\"TestStaticFun\", 0);\n        IMethod method2 = type.GetMethod(\"TestStaticFun2\", 1);\n\n        using (var method = appDomain.BeginInvoke(method1))\n        {\n            method.Invoke();\n        }\n    \n        using (var method = appDomain.BeginInvoke(method2))\n        {\n            method.PushInteger(77);\n            method.Invoke();\n            int i3 = method.ReadInteger();\n            print(i3);\n        }\n    });\n}\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										},
										{
											"ID": "20240424144119-vryxans",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240424144119-vryxans",
												"updated": "20240424144214"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "输出："
												},
												{
													"Type": "NodeImage",
													"Data": "span",
													"Properties": {
														"parent-style": "width: 393px;",
														"style": "width: 383px;"
													},
													"Children": [
														{
															"Type": "NodeBang"
														},
														{
															"Type": "NodeOpenBracket"
														},
														{
															"Type": "NodeLinkText",
															"Data": "image"
														},
														{
															"Type": "NodeCloseBracket"
														},
														{
															"Type": "NodeOpenParen"
														},
														{
															"Type": "NodeLinkDest",
															"Data": "assets/image-20240424144214-gcgotz0.png"
														},
														{
															"Type": "NodeCloseParen"
														}
													]
												},
												{
													"Type": "NodeKramdownSpanIAL",
													"Data": "{: style=\"width: 383px;\" parent-style=\"width: 393px;\"}"
												},
												{
													"Type": "NodeText",
													"Data": "​"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240424142116-b4zykqg",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240424142116-b4zykqg",
				"updated": "20240424145601"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "成员方法调用"
				}
			]
		},
		{
			"ID": "20240424145627-rqc8ytg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240424145627-rqc8ytg",
				"updated": "20240424145631"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "假设要调用热更新工程内的如下的成员方法（热更工程内可以直接调用"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "UnityEngine"
				},
				{
					"Type": "NodeText",
					"Data": "​命名空间内的内容）："
				}
			]
		},
		{
			"ID": "20240424145627-luu62fr",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240424145627-luu62fr",
				"style": "line-height: 22px;",
				"updated": "20240424145907"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "using UnityEngine;\n\nnamespace HotFix_Project\n{\n    public class Lesson3_Test\n    {\n        public Lesson3_Test() { }\n\n        public void TestFun()\n        {\n            Debug.Log(\"无参成员方法\");\n        }\n\n        public int TestFun2(int i)\n        {\n            Debug.Log(\"有参有返回值成员方法\" + i);\n            return i + 10;\n        }\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240424144337-r7dy8e7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240424144337-r7dy8e7",
				"updated": "20240424145733"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "成员方法调用和"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20240424140836-3wdwy6d",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "静态方法"
				},
				{
					"Type": "NodeText",
					"Data": "调用几乎一样，区别就是需要先创建对象，将对象传入之前为"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "null"
				},
				{
					"Type": "NodeText",
					"Data": "​的地方"
				}
			]
		},
		{
			"ID": "20240424144451-25o6kt0",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240424144451-25o6kt0",
				"updated": "20240424144644"
			},
			"Children": [
				{
					"ID": "20240424144454-bkuh9d1",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20240424144454-bkuh9d1",
						"updated": "20240424144454"
					},
					"Children": [
						{
							"ID": "20240424144454-ksztlgl",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240424144454-ksztlgl",
								"updated": "20240424144505"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "直接通过 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "appDomain.Invoke(\u0026quot;命名空间.类名\u0026quot;, \u0026quot;方法名\u0026quot;, 类对象, 参数列表)"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"ID": "20240424145612-nyd0qhi",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240424145612-nyd0qhi",
								"style": "line-height: 22px;",
								"updated": "20240424150116"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "void Start()\n{\n    ILRuntimeMgr.Instance.StartILRuntime(() =\u003e\n    {\n        AppDomain appDomain = ILRuntimeMgr.Instance.appDomain;\n        IType type = appDomain.LoadedTypes[\"HotFix_Project.Lesson3_Test\"];\n        object obj = ((ILType)type).Instantiate();\n\n        appDomain.Invoke(\"HotFix_Project.Lesson3_Test\", \"TestFun\", obj, null);\n        int i = (int)appDomain.Invoke(\"HotFix_Project.Lesson3_Test\", \"TestFun2\", obj, 99);\n        print(i);\n    });\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20240424150106-gcjc840",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240424150106-gcjc840",
								"updated": "20240424150123"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "输出："
								},
								{
									"Type": "NodeImage",
									"Data": "span",
									"Properties": {
										"parent-style": "width: 448px;",
										"style": "width: 438px;"
									},
									"Children": [
										{
											"Type": "NodeBang"
										},
										{
											"Type": "NodeOpenBracket"
										},
										{
											"Type": "NodeLinkText",
											"Data": "image"
										},
										{
											"Type": "NodeCloseBracket"
										},
										{
											"Type": "NodeOpenParen"
										},
										{
											"Type": "NodeLinkDest",
											"Data": "assets/image-20240424150123-40sd6ak.png"
										},
										{
											"Type": "NodeCloseParen"
										}
									]
								},
								{
									"Type": "NodeKramdownSpanIAL",
									"Data": "{: style=\"width: 438px;\" parent-style=\"width: 448px;\"}"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						}
					]
				},
				{
					"ID": "20240424144454-hmckst7",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20240424144454-hmckst7",
						"updated": "20240424144644"
					},
					"Children": [
						{
							"ID": "20240424144454-s5npqpv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240424144454-s5npqpv",
								"updated": "20240424150831"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "通过类似反射的"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "IMethod"
								},
								{
									"Type": "NodeText",
									"Data": "​调用成员方法"
								}
							]
						},
						{
							"ID": "20240424144647-73ug6un",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240424144647-73ug6un",
								"updated": "20240424150142"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "通过 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "IType"
								},
								{
									"Type": "NodeText",
									"Data": "​中的 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "GetMethod"
								},
								{
									"Type": "NodeText",
									"Data": "​ 方法，类似反射一样的获取对应类中的方法"
								}
							]
						},
						{
							"ID": "20240424150139-y4ovsvi",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240424150139-y4ovsvi",
								"style": "line-height: 22px;",
								"updated": "20240424150621"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "AppDomain appDomain = ILRuntimeMgr.Instance.appDomain;\nIType type = appDomain.LoadedTypes[\"HotFix_Project.Lesson3_Test\"];\nIMethod method1 = type.GetMethod(\"TestFun\", 0);\nIMethod method2 = type.GetMethod(\"TestFun2\", 1);\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20240424144603-pvdbzi8",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20240424144603-pvdbzi8",
								"updated": "20240424144644"
							},
							"Children": [
								{
									"ID": "20240424144603-amd9l8e",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20240424144603-amd9l8e",
										"updated": "20240424144644"
									},
									"Children": [
										{
											"ID": "20240424144603-24xx61g",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240424144603-24xx61g",
												"updated": "20240424144644"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "通过 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "appDomain.Invoke(IMethod对象, 类对象, 参数列表)"
												},
												{
													"Type": "NodeText",
													"Data": "​ 调用 成员方法"
												}
											]
										},
										{
											"ID": "20240424150518-dpoj3rx",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20240424150518-dpoj3rx",
												"style": "line-height: 22px;",
												"updated": "20240424150618"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "YyM="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "void Start()\n{\n    ILRuntimeMgr.Instance.StartILRuntime(() =\u003e\n    {\n        AppDomain appDomain = ILRuntimeMgr.Instance.appDomain;\n        IType type = appDomain.LoadedTypes[\"HotFix_Project.Lesson3_Test\"];\n        IMethod method1 = type.GetMethod(\"TestFun\", 0);\n        IMethod method2 = type.GetMethod(\"TestFun2\", 1);\n\n        appDomain.Invoke(method1, obj);\n        int i2 =  (int)appDomain.Invoke(method2, obj, 88);\n        print(i2);\n    });\n}\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										},
										{
											"ID": "20240424150345-ajtxwcb",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240424150345-ajtxwcb",
												"updated": "20240424150514"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "输出："
												},
												{
													"Type": "NodeImage",
													"Data": "span",
													"Properties": {
														"parent-style": "width: 490px;",
														"style": "width: 480px;"
													},
													"Children": [
														{
															"Type": "NodeBang"
														},
														{
															"Type": "NodeOpenBracket"
														},
														{
															"Type": "NodeLinkText",
															"Data": "image"
														},
														{
															"Type": "NodeCloseBracket"
														},
														{
															"Type": "NodeOpenParen"
														},
														{
															"Type": "NodeLinkDest",
															"Data": "assets/image-20240424150514-5p0qmyi.png"
														},
														{
															"Type": "NodeCloseParen"
														}
													]
												},
												{
													"Type": "NodeKramdownSpanIAL",
													"Data": "{: style=\"width: 480px;\" parent-style=\"width: 490px;\"}"
												},
												{
													"Type": "NodeText",
													"Data": "​"
												}
											]
										}
									]
								},
								{
									"ID": "20240424144603-mrued2b",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "Mi4=",
										"Num": 2
									},
									"Properties": {
										"id": "20240424144603-mrued2b",
										"updated": "20240424150821"
									},
									"Children": [
										{
											"ID": "20240424144603-94l7hhh",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240424144603-94l7hhh",
												"updated": "20240424150821"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "通过更节约性能的GC Alloc方式（调用完后直接回收）调用 成员方法，类似上节课的"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "block-ref",
													"TextMarkBlockRefID": "20240424133600-a9876xy",
													"TextMarkBlockRefSubtype": "s",
													"TextMarkTextContent": "成员属性"
												}
											]
										},
										{
											"ID": "20240424150726-34v0ay5",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240424150726-34v0ay5",
												"updated": "20240424150804"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "调用成员方法，我们必须调用"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "InvocationContext.PushObject()"
												},
												{
													"Type": "NodeText",
													"Data": "​来压入要执行方法的对象"
												}
											]
										},
										{
											"ID": "20240424150543-j9enl7v",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20240424150543-j9enl7v",
												"style": "line-height: 22px;",
												"updated": "20240424150728"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "YyM="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "void Start()\n{\n    ILRuntimeMgr.Instance.StartILRuntime(() =\u003e\n    {\n        AppDomain appDomain = ILRuntimeMgr.Instance.appDomain;\n        IType type = appDomain.LoadedTypes[\"HotFix_Project.Lesson3_Test\"];\n        IMethod method1 = type.GetMethod(\"TestFun\", 0);\n        IMethod method2 = type.GetMethod(\"TestFun2\", 1);\n\n        using (var method = appDomain.BeginInvoke(method1))\n        {\n            method.PushObject(obj);\n            method.Invoke();\n        }\n\n        using (var method = appDomain.BeginInvoke(method2))\n        {\n            method.PushObject(obj);\n            method.PushInteger(77);\n            method.Invoke();\n            int i3 = method.ReadInteger();\n            print(i3);\n        }\n    });\n}\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										},
										{
											"ID": "20240424150700-puipf0w",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240424150700-puipf0w",
												"updated": "20240424150703"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "输出："
												},
												{
													"Type": "NodeImage",
													"Data": "span",
													"Properties": {
														"parent-style": "width: 484px;",
														"style": "width: 474px;"
													},
													"Children": [
														{
															"Type": "NodeBang"
														},
														{
															"Type": "NodeOpenBracket"
														},
														{
															"Type": "NodeLinkText",
															"Data": "image"
														},
														{
															"Type": "NodeCloseBracket"
														},
														{
															"Type": "NodeOpenParen"
														},
														{
															"Type": "NodeLinkDest",
															"Data": "assets/image-20240424150702-fw504dj.png"
														},
														{
															"Type": "NodeCloseParen"
														}
													]
												},
												{
													"Type": "NodeKramdownSpanIAL",
													"Data": "{: style=\"width: 474px;\" parent-style=\"width: 484px;\"}"
												},
												{
													"Type": "NodeText",
													"Data": "​"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240424151119-xoka9xx",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240424151119-xoka9xx",
				"updated": "20240424151129"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "重载方法调用"
				}
			]
		},
		{
			"ID": "20240424151539-nt1jiye",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240424151539-nt1jiye",
				"updated": "20240424151544"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "假设要调用热更新工程内的如下的重载方法（热更工程内可以直接调用"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "UnityEngine"
				},
				{
					"Type": "NodeText",
					"Data": "​命名空间内的内容）："
				}
			]
		},
		{
			"ID": "20240424151539-aj7xvc9",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240424151539-aj7xvc9",
				"style": "line-height: 22px;",
				"updated": "20240424153344"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "using UnityEngine;\n\nnamespace HotFix_Project\n{\n    public class Lesson3_Test\n    {\n        public Lesson3_Test() { }\n\n        public void TestFun()\n        {\n            Debug.Log(\"无参成员方法\");\n        }\n        public void TestFun(int i)\n        {\n            Debug.Log(\"有参重载函数1\" + i);\n        }\n\n        public void TestFun(float f)\n        {\n            Debug.Log(\"有参重载函数2：\" + f);\n        }\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240424151125-h7qr19x",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240424151125-h7qr19x",
				"updated": "20240424153331"
			},
			"Children": [
				{
					"ID": "20240424151256-j8xxs8b",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20240424151256-j8xxs8b",
						"updated": "20240424151256"
					},
					"Children": [
						{
							"ID": "20240424151256-szpk5n0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240424151256-szpk5n0",
								"updated": "20240424151301"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "参数数量不同"
								}
							]
						},
						{
							"ID": "20240424151301-zmzwdxd",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20240424151301-zmzwdxd",
								"updated": "20240424151301"
							},
							"Children": [
								{
									"ID": "20240424151301-ghvujbr",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20240424151301-ghvujbr",
										"updated": "20240424151301"
									},
									"Children": [
										{
											"ID": "20240424151301-kvvnyri",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240424151301-kvvnyri",
												"updated": "20240424152129"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "通过 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "appDomain.Invoke"
												},
												{
													"Type": "NodeText",
													"Data": "​ 调用参数数量不同的重载方法时，传入不同数量的参数即可自动分别调用不同参数"
												}
											]
										},
										{
											"ID": "20240424151909-y3xqrnw",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20240424151909-y3xqrnw",
												"style": "line-height: 22px;",
												"updated": "20240424151952"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "YyM="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "void Start()\n{\n    ILRuntimeMgr.Instance.StartILRuntime(() =\u003e\n    {\n        AppDomain appDomain = ILRuntimeMgr.Instance.appDomain;\n        IType type = appDomain.LoadedTypes[\"HotFix_Project.Lesson3_Test\"];\n        object obj = ((ILType)type).Instantiate();\n\n        appDomain.Invoke(\"HotFix_Project.Lesson3_Test\", \"TestFun\", obj);\n        appDomain.Invoke(\"HotFix_Project.Lesson3_Test\", \"TestFun\", obj, 1);\n    });\n}\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										},
										{
											"ID": "20240424151952-9md4lw0",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240424151952-9md4lw0",
												"updated": "20240424152209"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "但当存在数量相同而参数类型不同的重载时，就会因为无法明确调用哪种重载而报错"
												}
											]
										},
										{
											"ID": "20240424152019-msabh3l",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20240424152019-msabh3l",
												"style": "line-height: 22px;",
												"updated": "20240424152036"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "YyM="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "void Start()\n{\n    ILRuntimeMgr.Instance.StartILRuntime(() =\u003e\n    {\n        AppDomain appDomain = ILRuntimeMgr.Instance.appDomain;\n        IType type = appDomain.LoadedTypes[\"HotFix_Project.Lesson3_Test\"];\n        object obj = ((ILType)type).Instantiate();\n\n        appDomain.Invoke(\"HotFix_Project.Lesson3_Test\", \"TestFun\", obj);\n        appDomain.Invoke(\"HotFix_Project.Lesson3_Test\", \"TestFun\", obj, 1);\n        appDomain.Invoke(\"HotFix_Project.Lesson3_Test\", \"TestFun\", obj, 1.1f);\n    });\n}\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										},
										{
											"ID": "20240424152046-4i0kcjj",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240424152046-4i0kcjj",
												"updated": "20240424152055"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "输出："
												},
												{
													"Type": "NodeImage",
													"Data": "span",
													"Properties": {
														"parent-style": "width: 862px;",
														"style": "width: 852px;"
													},
													"Children": [
														{
															"Type": "NodeBang"
														},
														{
															"Type": "NodeOpenBracket"
														},
														{
															"Type": "NodeLinkText",
															"Data": "image"
														},
														{
															"Type": "NodeCloseBracket"
														},
														{
															"Type": "NodeOpenParen"
														},
														{
															"Type": "NodeLinkDest",
															"Data": "assets/image-20240424152055-taklbby.png"
														},
														{
															"Type": "NodeCloseParen"
														}
													]
												},
												{
													"Type": "NodeKramdownSpanIAL",
													"Data": "{: style=\"width: 852px;\" parent-style=\"width: 862px;\"}"
												},
												{
													"Type": "NodeText",
													"Data": "​"
												}
											]
										}
									]
								},
								{
									"ID": "20240424151301-at16elo",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "Mi4=",
										"Num": 2
									},
									"Properties": {
										"id": "20240424151301-at16elo",
										"updated": "20240424151301"
									},
									"Children": [
										{
											"ID": "20240424151301-n8h3vmy",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240424151301-n8h3vmy",
												"updated": "20240424151914"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "通过 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "GetMethod"
												},
												{
													"Type": "NodeText",
													"Data": "​ 的第二个参数来获取对应参数个数的函数"
												}
											]
										},
										{
											"ID": "20240424152132-vckws9y",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20240424152132-vckws9y",
												"style": "line-height: 22px;",
												"updated": "20240424152613"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "YyM="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "void Start()\n{\n    ILRuntimeMgr.Instance.StartILRuntime(() =\u003e\n    {\n        AppDomain appDomain = ILRuntimeMgr.Instance.appDomain;\n        IType type = appDomain.LoadedTypes[\"HotFix_Project.Lesson3_Test\"];\n        object obj = ((ILType)type).Instantiate();\n\n        appDomain.Invoke(\"HotFix_Project.Lesson3_Test\", \"TestFun\", obj);\n        appDomain.Invoke(\"HotFix_Project.Lesson3_Test\", \"TestFun\", obj, 1);\n\n        IMethod method1 = type.GetMethod(\"TestFun\", 0);\n        IMethod method2 = type.GetMethod(\"TestFun\", 1);\n\n        using (var method = appDomain.BeginInvoke(method1))\n        {\n            method.PushObject(obj);\n            method.Invoke();\n        }\n\n        using (var method = appDomain.BeginInvoke(method2))\n        {\n            method.PushObject(obj);\n            method.PushInteger(1);\n            method.Invoke();\n        }\n    });\n}\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										},
										{
											"ID": "20240424152548-laj7gyw",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240424152548-laj7gyw",
												"updated": "20240424152601"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "但同样的，当存在数量相同而参数类型不同的重载时，就会因为无法明确调用哪种重载而报错"
												}
											]
										},
										{
											"ID": "20240424152552-w3jg0kb",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20240424152552-w3jg0kb",
												"style": "line-height: 22px;",
												"updated": "20240424152555"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "YyM="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "void Start()\n{\n    ILRuntimeMgr.Instance.StartILRuntime(() =\u003e\n    {\n        AppDomain appDomain = ILRuntimeMgr.Instance.appDomain;\n        IType type = appDomain.LoadedTypes[\"HotFix_Project.Lesson3_Test\"];\n        object obj = ((ILType)type).Instantiate();\n\n        appDomain.Invoke(\"HotFix_Project.Lesson3_Test\", \"TestFun\", obj);\n        appDomain.Invoke(\"HotFix_Project.Lesson3_Test\", \"TestFun\", obj, 1);\n        //appDomain.Invoke(\"HotFix_Project.Lesson3_Test\", \"TestFun\", obj, 1.1f);\n\n        IMethod method1 = type.GetMethod(\"TestFun\", 0);\n        IMethod method2 = type.GetMethod(\"TestFun\", 1);\n        IMethod method3 = type.GetMethod(\"TestFun\", 1);\n\n\n        using (var method = appDomain.BeginInvoke(method1))\n        {\n            method.PushObject(obj);\n            method.Invoke();\n        }\n\n        using (var method = appDomain.BeginInvoke(method2))\n        {\n            method.PushObject(obj);\n            method.PushInteger(1);\n            method.Invoke();\n        }\n\n        using (var method = appDomain.BeginInvoke(method3))\n        {\n            method.PushObject(obj);\n            method.PushInteger(1.1f);\n            method.Invoke();\n        }\n    });\n}\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										},
										{
											"ID": "20240424152529-1n09cys",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240424152529-1n09cys",
												"updated": "20240424152529"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "输出："
												},
												{
													"Type": "NodeImage",
													"Data": "span",
													"Properties": {
														"parent-style": "width: 862px;",
														"style": "width: 852px;"
													},
													"Children": [
														{
															"Type": "NodeBang"
														},
														{
															"Type": "NodeOpenBracket"
														},
														{
															"Type": "NodeLinkText",
															"Data": "image"
														},
														{
															"Type": "NodeCloseBracket"
														},
														{
															"Type": "NodeOpenParen"
														},
														{
															"Type": "NodeLinkDest",
															"Data": "assets/image-20240424152055-taklbby.png"
														},
														{
															"Type": "NodeCloseParen"
														}
													]
												},
												{
													"Type": "NodeKramdownSpanIAL",
													"Data": "{: style=\"width: 852px;\" parent-style=\"width: 862px;\"}"
												},
												{
													"Type": "NodeText",
													"Data": "​"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20240424151256-wzg3muj",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20240424151256-wzg3muj",
						"name": "IType.GetMethod()",
						"updated": "20240424153331"
					},
					"Children": [
						{
							"ID": "20240424151256-xw0795d",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240424151256-xw0795d",
								"updated": "20240424152650"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "参数数量相同，类型不同，通过上面两种方式直接使用无法确定取出来的函数哪种重载，我们需要通过"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "GetMethod"
								},
								{
									"Type": "NodeText",
									"Data": "​方法来获取指定参数类型的函数"
								}
							]
						},
						{
							"ID": "20240424151318-49oadvj",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20240424151318-49oadvj",
								"updated": "20240424151318"
							},
							"Children": [
								{
									"ID": "20240424151318-mm6l8u4",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20240424151318-mm6l8u4",
										"updated": "20240424151318"
									},
									"Children": [
										{
											"ID": "20240424151318-b6ta5c0",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240424151318-b6ta5c0",
												"updated": "20240424151337"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "获取参数对应的"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "IType"
												},
												{
													"Type": "NodeText",
													"Data": "​类型，利用"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "appDomain"
												},
												{
													"Type": "NodeText",
													"Data": "​中的"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "GetType"
												},
												{
													"Type": "NodeText",
													"Data": "​方法 获取指定变量类型的"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "IType"
												},
												{
													"Type": "NodeText",
													"Data": "​"
												}
											]
										},
										{
											"ID": "20240424152653-yo0kfmk",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20240424152653-yo0kfmk",
												"style": "line-height: 22px;",
												"updated": "20240424153024"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "YyM="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "IType floatType = appDomain.GetType(typeof(float));\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								},
								{
									"ID": "20240424151318-dgqnxk6",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "Mi4=",
										"Num": 2
									},
									"Properties": {
										"id": "20240424151318-dgqnxk6",
										"updated": "20240424151318"
									},
									"Children": [
										{
											"ID": "20240424151318-kiqo3ca",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240424151318-kiqo3ca",
												"updated": "20240424151342"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "放入参数列表中，将获取到的"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "IType"
												},
												{
													"Type": "NodeText",
													"Data": "​放入"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "List\u0026lt;IType\u0026gt;"
												},
												{
													"Type": "NodeText",
													"Data": "​中"
												}
											]
										},
										{
											"ID": "20240424153026-3pu3n56",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20240424153026-3pu3n56",
												"style": "line-height: 22px;",
												"updated": "20240424153045"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "YyM="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "List\u003cIType\u003e paramslist = new List\u003cIType\u003e();\nparamslist.Add(floatType);\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								},
								{
									"ID": "20240424151318-zuqcgrk",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "My4=",
										"Num": 3
									},
									"Properties": {
										"id": "20240424151318-zuqcgrk",
										"updated": "20240424151318"
									},
									"Children": [
										{
											"ID": "20240424151318-5uwwulq",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20240424151318-5uwwulq",
												"updated": "20240424151347"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "传入"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "GetMethod"
												},
												{
													"Type": "NodeText",
													"Data": "​中获取指定类型参数，使用"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "GetMethod"
												},
												{
													"Type": "NodeText",
													"Data": "​的另一个重载，传入指定类型获取方法信息"
												}
											]
										},
										{
											"ID": "20240424153039-wlw2xbv",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20240424153039-wlw2xbv",
												"style": "line-height: 22px;",
												"updated": "20240424153043"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "YyM="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "IMethod method3 = type.GetMethod(\"TestFun\", paramslist, null);\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								}
							]
						},
						{
							"ID": "20240424153117-sctiqpe",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240424153117-sctiqpe",
								"updated": "20240424153125"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "使用示例："
								}
							]
						},
						{
							"ID": "20240424153202-92gv9k8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240424153202-92gv9k8",
								"updated": "20240424153251"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "假设明确要调用参数列表为"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "float"
								},
								{
									"Type": "NodeText",
									"Data": "​的重载方法"
								}
							]
						},
						{
							"ID": "20240424153049-86nmmxa",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240424153049-86nmmxa",
								"style": "line-height: 22px;",
								"updated": "20240424153158"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "void Start()\n{\n    ILRuntimeMgr.Instance.StartILRuntime(() =\u003e\n    {\n        AppDomain appDomain = ILRuntimeMgr.Instance.appDomain;\n        IType type = appDomain.LoadedTypes[\"HotFix_Project.Lesson3_Test\"];\n        object obj = ((ILType)type).Instantiate();\n\n\t\t//明确要获取参数列表为float的重载\n        IType floatType = appDomain.GetType(typeof(float));\n        List\u003cIType\u003e paramslist = new List\u003cIType\u003e();\n        paramslist.Add(floatType);\n        IMethod method3 = type.GetMethod(\"TestFun\", paramslist, null);\n        using (var method = appDomain.BeginInvoke(method3))\n        {\n            method.PushObject(obj);\n            method.PushFloat(5.5f);\n            method.Invoke();\n        }\n    });\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20240424153252-5vuvpwm",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240424153252-5vuvpwm",
								"updated": "20240424153331"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "输出："
								},
								{
									"Type": "NodeImage",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeBang"
										},
										{
											"Type": "NodeOpenBracket"
										},
										{
											"Type": "NodeLinkText",
											"Data": "image"
										},
										{
											"Type": "NodeCloseBracket"
										},
										{
											"Type": "NodeOpenParen"
										},
										{
											"Type": "NodeLinkDest",
											"Data": "assets/image-20240424153331-cr0djjn.png"
										},
										{
											"Type": "NodeCloseParen"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240424151431-dzxyy0d",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20240424151431-dzxyy0d",
				"updated": "20240424201909"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "ref"
				},
				{
					"Type": "NodeText",
					"Data": "​ / "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "out"
				},
				{
					"Type": "NodeText",
					"Data": "​ 方法调用"
				}
			]
		},
		{
			"ID": "20240424202551-stzh4c5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240424202551-stzh4c5",
				"updated": "20240424202551"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "假设要调用热更新工程内的如下的重载方法（热更工程内可以直接调用"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "UnityEngine"
				},
				{
					"Type": "NodeText",
					"Data": "​命名空间内的内容）："
				}
			]
		},
		{
			"ID": "20240424202551-86fywnq",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240424202551-86fywnq",
				"style": "line-height: 22px;",
				"updated": "20240424202608"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "using System.Collections.Generic;\nusing UnityEngine;\n\nnamespace HotFix_Project\n{\n    public class Lesson3_Test\n    {\n        public Lesson3_Test() { }\n\n        public float TestFun3(int i, ref List\u003cint\u003e list, out float f)\n        {\n            f = 0.5f;\n            list.Add(5);\n            for (int j = 0; j \u003c list.Count; j++)\n            {\n                Debug.Log(list[j]);\n            }\n            return i + list.Count + f;\n        }\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240424202619-9xmvhdz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240424202619-9xmvhdz",
				"updated": "20240424202754"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "需要通过"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "IMethod"
				},
				{
					"Type": "NodeText",
					"Data": "​方法调用，并且只能使用无GC Alloc方法调用"
				}
			]
		},
		{
			"ID": "20240424202658-bgth37w",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20240424202658-bgth37w",
				"updated": "20240424202658"
			},
			"Children": [
				{
					"ID": "20240424202658-26ngfup",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20240424202658-26ngfup",
						"updated": "20240424202658"
					},
					"Children": [
						{
							"ID": "20240424202658-vi2diug",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240424202658-vi2diug",
								"updated": "20240424202709"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "和其他函数不一样的地方，需要先压入"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "ref"
								},
								{
									"Type": "NodeText",
									"Data": "​或"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "out"
								},
								{
									"Type": "NodeText",
									"Data": "​参数的初始值"
								}
							]
						},
						{
							"ID": "20240424205434-wo51lzk",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240424205434-wo51lzk",
								"style": "line-height: 22px;",
								"updated": "20240424205451"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "using (var method = appDomain.BeginInvoke(methodInfo))\n{\n    //压入第一个ref参数的初始值\n    method.PushObject(list);\n    //压入第一个out参数的初始值，由于out参数不需要在外部初始化 所以压入null即可\n    method.PushObject(null);\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20240424202658-lm0nv9n",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20240424202658-lm0nv9n",
						"updated": "20240424202658"
					},
					"Children": [
						{
							"ID": "20240424202658-69uhopb",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240424202658-69uhopb",
								"updated": "20240424202713"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "和其它函数调用写法一致，压入调用对象，压入各参数"
								}
							]
						},
						{
							"ID": "20240424205453-gjravrw",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240424205453-gjravrw",
								"style": "line-height: 22px;",
								"updated": "20240424205537"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "using (var method = appDomain.BeginInvoke(methodInfo))\n{\n    //压入第一个ref参数的初始值\n    method.PushObject(list);\n    //压入第一个out参数的初始值，由于out参数不需要在外部初始化 所以压入null即可\n    method.PushObject(null);\n\n    //其他函数调用写法一致。压入调用对象\n    method.PushObject(obj);\n    //压入各参数\n    method.PushInteger(100);\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20240424202658-jk0f17v",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20240424202658-jk0f17v",
						"updated": "20240424202658"
					},
					"Children": [
						{
							"ID": "20240424202658-u3yq4p5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240424202658-u3yq4p5",
								"updated": "20240424205644"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "ref"
								},
								{
									"Type": "NodeText",
									"Data": "​ 和 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "out"
								},
								{
									"Type": "NodeText",
									"Data": "​ 因为在一开始就压入了值，在这里需要压入他们的索引位置，后续需要通过传入的索引位置来获取值\n​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "ref"
								},
								{
									"Type": "NodeText",
									"Data": "​ 和 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "out"
								},
								{
									"Type": "NodeText",
									"Data": "​ 参数 压入参数引用索引值即可 从"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "0"
								},
								{
									"Type": "NodeText",
									"Data": "​开始"
								}
							]
						},
						{
							"ID": "20240424205614-ajruyv1",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240424205614-ajruyv1",
								"style": "line-height: 22px;",
								"updated": "20240424205625"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "using (var method = appDomain.BeginInvoke(methodInfo))\n{\n    //压入第一个ref参数的初始值\n    method.PushObject(list);\n    //压入第一个out参数的初始值，由于out参数不需要在外部初始化 所以压入null即可\n    method.PushObject(null);\n\n    //其他函数调用写法一致\n    //压入调用对象\n    method.PushObject(obj);\n    //压入各参数\n    method.PushInteger(100);\n\n    //ref和out因为在一开始就压入的值，因此在这里需要压入参数引用的索引值，从0开始即可\n    //这里有两个ref和out参数，因此执行两次该方法即可\n    method.PushReference(0);\n    method.PushReference(1);\n    //执行方法\n    method.Invoke();\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20240424202658-mvsto57",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20240424202658-mvsto57",
						"updated": "20240424202658"
					},
					"Children": [
						{
							"ID": "20240424202658-zo6jt2s",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240424202658-zo6jt2s",
								"updated": "20240424205802"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "通过 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Read"
								},
								{
									"Type": "NodeText",
									"Data": "​ 按顺序获取 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "ref"
								},
								{
									"Type": "NodeText",
									"Data": "​ / "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "out"
								},
								{
									"Type": "NodeText",
									"Data": "​ 参数的值 和返回值，返回值最后获取\n​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "ref"
								},
								{
									"Type": "NodeText",
									"Data": "​ 和 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "out"
								},
								{
									"Type": "NodeText",
									"Data": "​ 参数的获取需要传入索引值，索引值和"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "PushReference"
								},
								{
									"Type": "NodeText",
									"Data": "​传入的索引值对应"
								}
							]
						},
						{
							"ID": "20240424205803-or71544",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20240424205803-or71544",
								"style": "line-height: 22px;",
								"updated": "20240424205813"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "YyM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "using (var method = appDomain.BeginInvoke(methodInfo))\n{\n    //压入第一个ref参数的初始值\n    method.PushObject(list);\n    //压入第一个out参数的初始值，由于out参数不需要在外部初始化 所以压入null即可\n    method.PushObject(null);\n\n    //其他函数调用写法一致\n    //压入调用对象\n    method.PushObject(obj);\n    //压入各参数\n    method.PushInteger(100);\n\n    //ref和out因为在一开始就压入的值，因此在这里需要压入参数引用的索引值，从0开始即可\n    //这里有两个ref和out参数，因此执行两次该方法即可\n    method.PushReference(0);\n    method.PushReference(1);\n    //执行方法\n    method.Invoke();\n\n    //通过Read按顺序获取ref/out参数的值 和返回值，返回值最后获取\n    list = method.ReadObject\u003cList\u003cint\u003e\u003e(0);     //这里传入的索引值与PushReference传入的索引值对应\n    float f = method.ReadFloat(1);              //这里传入的索引值与PushReference传入的索引值对应\n    float returnValue = method.ReadFloat();     //获取返回值，不需要传入索引\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20240424205819-v33qsl7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240424205819-v33qsl7",
				"updated": "20240424205827"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用示例："
				}
			]
		},
		{
			"ID": "20240424205827-xdf7ju9",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240424205827-xdf7ju9",
				"style": "line-height: 22px;",
				"updated": "20240424205837"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "YyM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "void Start()\n{\n    ILRuntimeMgr.Instance.StartILRuntime(() =\u003e\n    {\n        AppDomain appDomain = ILRuntimeMgr.Instance.appDomain;\n        IType type = appDomain.LoadedTypes[\"HotFix_Project.Lesson3_Test\"];\n        object obj = ((ILType)type).Instantiate();\n\n        IMethod methodInfo = type.GetMethod(\"TestFun3\", 3);\n        List\u003cint\u003e list = new List\u003cint\u003e() { 1, 2, 3, 4 };    //要传入ref参数的值\n        using (var method = appDomain.BeginInvoke(methodInfo))\n        {\n            //压入第一个ref参数的初始值\n            method.PushObject(list);\n            //压入第一个out参数的初始值，由于out参数不需要在外部初始化 所以压入null即可\n            method.PushObject(null);\n\n            //其他函数调用写法一致\n            //压入调用对象\n            method.PushObject(obj);\n            //压入各参数\n            method.PushInteger(100);\n\n            //ref和out因为在一开始就压入的值，因此在这里需要压入参数引用的索引值，从0开始即可\n            //这里有两个ref和out参数，因此执行两次该方法即可\n            method.PushReference(0);\n            method.PushReference(1);\n            //执行方法\n            method.Invoke();\n\n            //通过Read按顺序获取ref/out参数的值 和返回值，返回值最后获取\n            list = method.ReadObject\u003cList\u003cint\u003e\u003e(0);     //这里传入的索引值与PushReference传入的索引值对应\n            float f = method.ReadFloat(1);              //这里传入的索引值与PushReference传入的索引值对应\n            float returnValue = method.ReadFloat();     //获取返回值，不需要传入索引\n            print(\"ref参数 list的长度\" + list.Count);\n            print(\"out参数 \" + f);\n            print(\"函数返回值：\" + returnValue);\n        }\n    });\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240424205339-9vq7niy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240424205339-9vq7niy",
				"updated": "20240424205421"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输出："
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"parent-style": "width: 426px;",
						"style": "width: 416px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20240424205421-dfxrgbk.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 416px;\" parent-style=\"width: 426px;\"}"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		}
	]
}