{"ID":"20240302160106-x7iq3u1","Spec":"1","Type":"NodeDocument","Properties":{"id":"20240302160106-x7iq3u1","title":"UH2S3L17——Lua调用协程","type":"doc","updated":"20250305064735"},"Children":[{"ID":"20240302161749-ko8748i","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240302161749-ko8748i","updated":"20240302161753"},"Children":[{"Type":"NodeText","Data":"本章代码关键字"}]},{"ID":"20240302161753-elygc5p","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240302161753-elygc5p","style":"line-height: 22px;","updated":"20240302162751"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"StartCoroutine()\t\t--开启协程，返回协程变量\nStopCoroutine()\t\t\t--停止协程，传入要停止的协程变量\nWaitForSeconds()\t\t--挂起协程，传入要挂起的秒数\nYield(0)\t\t\t\t--挂起协程，传入要挂起的帧数\nWaitForFixedUpdate()\t--挂起协程，传入要挂起的物理帧帧数\nWaitForEndOfFrame()\t\t--挂起协程，等待一帧渲染完后在执行后面的逻辑\nYield(异步加载返回值)\t\t--返回异步加载的返回值，相当于Unity协程中的yield return\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240302162217-euf7k3f","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240302162217-euf7k3f","style":"line-height: 22px;","updated":"20240302162309"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"YyM="},{"Type":"NodeCodeBlockCode","Data":"LuaCoroutine.Register()  //lua协程注册，这样我们才能在Lua中使用tolua提供的协程函数，需要传入lua解析器，以及调用该方法的MonoBehaviour脚本自己\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240302160106-9itw46q","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240302160106-9itw46q","name":"LuaCoroutine.Register()","updated":"20250305064735"},"Children":[{"Type":"NodeText","Data":"Lua调用C"},{"Type":"NodeBackslash","Data":"span","Children":[{"Type":"NodeText","Data":"#"}]},{"Type":"NodeText","Data":"协程"}]},{"ID":"20240302160533-w8ncmye","Type":"NodeParagraph","Properties":{"id":"20240302160533-w8ncmye","updated":"20250305064720"},"Children":[{"Type":"NodeText","Data":"toLua 提供给我们了一些方便的开启协程的方法，也可以直接使用类似 Unity 中的协程相关方法，前提是一定要注册lua协程相关内容"}]},{"ID":"20240302160818-oblkimk","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240302160818-oblkimk","style":"line-height: 22px;","updated":"20240302161530"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"YyM="},{"Type":"NodeCodeBlockCode","Data":"LuaCoroutine.Register(luaState, this);  //lua协程注册，这样我们才能在Lua中使用tolua提供的协程函数\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240302161530-1vjw443","Type":"NodeParagraph","Properties":{"id":"20240302161530-1vjw443","updated":"20250305064732"},"Children":[{"Type":"NodeText","Data":"这样，我们就可以在 Lua 中直接使用诸如 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"StartCoroutine()"},{"Type":"NodeText","Data":"​、"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"StopCoroutine()"},{"Type":"NodeText","Data":"​ 这种方法\n并使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"WaitForSeconds()"},{"Type":"NodeText","Data":"​，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"WaitForFixedUpdate()"},{"Type":"NodeText","Data":"​，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Yield(异步加载返回值)"},{"Type":"NodeText","Data":"​ 等函数挂起协程"}]},{"ID":"20240302161720-5ljh33f","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240302161720-5ljh33f","style":"line-height: 22px;","updated":"20240302161743"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"print(\"Lua访问C#协程\")\n\nlocal coDelay = nil\n\nStartDelay = function()\n    coDelay = StartCoroutine(Delay)\nend\n\nDelay = function()\n    local c = 1\n    while true do\n        --可以直接使用类似Unity中的协程相关方法\n        WaitForSeconds(1)\n        --Yield(0)\n        --WaitForFixedUpdate()\n        --WaitForEndOfFrame()\n        --Yield(异步加载返回值)\n        print(\"Count: \" .. c)\n        c = c + 1\n        if c \u003e 5 then\n            StopDelay()\n            break\n        end\n    end\nend\n\nStopDelay = function()\n    StopCoroutine(coDelay)\n    coDelay = nil\nend\n\nStartDelay()"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250305064735-s58tx8x","Type":"NodeParagraph","Properties":{"id":"20250305064735-s58tx8x","updated":"20250305064735"}}]}