{
	"ID": "20240129212645-crldr8c",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20240129212645-crldr8c",
		"title": "UH2S1L7——函数",
		"updated": "20240302170402"
	},
	"Children": [
		{
			"ID": "20240129212700-8of0ff6",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20240129212700-8of0ff6",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "函数"
				}
			]
		},
		{
			"ID": "20240129214020-nquo42i",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240129214020-nquo42i",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在Lua中，函数也是一种变量类型，而Lua的函数声明不需要指定返回值的类型"
				}
			]
		},
		{
			"ID": "20240129212714-9xy3ysj",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240129212714-9xy3ysj",
				"style": "line-height: 22px;",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "bHVh"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "function 函数名(参数列表)\n\t函数代码块\nend\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240129212645-vucbyty",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240129212645-vucbyty",
				"style": "line-height: 22px;",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "bHVh"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "函数名 = function(参数列表)\n\t函数代码块\nend\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240129212918-1f4bakk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240129212918-1f4bakk",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "要注意，由于Lua是解释型语言，解释器从上到下执行代码，"
				},
				{
					"Type": "NodeTextMark",
					"Properties": {
						"style": "background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);"
					},
					"TextMarkType": "strong text",
					"TextMarkTextContent": "因此调用函数不能在函数声明之前，否则会报错"
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);\"}"
				}
			]
		},
		{
			"ID": "20240129212816-rpyekkj",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20240129212816-rpyekkj",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "无参无返回值"
				}
			]
		},
		{
			"ID": "20240129213344-2o6ehey",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240129213344-2o6ehey",
				"style": "line-height: 22px;",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "bHVh"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "print(\"**********无参无返回值************\")\nfunction F1()\n    print(\"F1函数\")\nend\nF1()\n\nF2 = function()\n    print(\"F2函数\")\nend\nF2()\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240129214536-arjlir5",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240129214536-arjlir5",
				"style": "line-height: 22px;",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "bHVh"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "**********无参无返回值************\nF1函数\nF2函数\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240129212835-ls9h6j0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240129212835-ls9h6j0",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "通过第二种写法可以发现，在Lua中函数是一种变量类型，用起来就像是C"
				},
				{
					"Type": "NodeBackslash",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeText",
							"Data": "#"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "中的委托那样"
				}
			]
		},
		{
			"ID": "20240129214001-amoyqci",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20240129214001-amoyqci",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "有参数"
				}
			]
		},
		{
			"ID": "20240129214300-lpwsy41",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240129214300-lpwsy41",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Lua的函数声明中，参数列表是不需要写清楚参数的类型的，\n因此，调用函数时，可以传入各种类型的值\n（当然内部的逻辑不一定能允许你瞎写，就像下面的函数传入"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "nil"
				},
				{
					"Type": "NodeText",
					"Data": "​或者"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "boolean"
				},
				{
					"Type": "NodeText",
					"Data": "​就会报错）"
				}
			]
		},
		{
			"ID": "20240129214253-nxqga7a",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240129214253-nxqga7a",
				"style": "line-height: 22px;",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "bHVh"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "print(\"**********有参数************\")\nfunction F3(a)\n    print(\"参数：\" .. a)\nend\nF3(1)\nF3(\"123\")\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240129214257-gygb9eq",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240129214257-gygb9eq",
				"style": "line-height: 22px;",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "bHVh"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "**********有参数************\n参数：1\n参数：123\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240129214552-00y96n1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240129214552-00y96n1",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在Lua中，对一个函数不传入参数或者传入多余的参数这个行为本身不会报错（即传入参数个数与声明参数个数不匹配）\n前者会让空着的参数为"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "nil"
				},
				{
					"Type": "NodeText",
					"Data": "​，后者会丢弃多余的参数"
				}
			]
		},
		{
			"ID": "20240129214847-dy3z1px",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240129214847-dy3z1px",
				"style": "line-height: 22px;",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "bHVh"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "function FTest(a)\n    print(a)\nend\nFTest()\nFTest(1, 2, 3)\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240129215047-qfy3asg",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240129215047-qfy3asg",
				"style": "line-height: 22px;",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "bHVh"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "nil\n1\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240129215214-0kwm3rd",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20240129215214-0kwm3rd",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "有返回值"
				}
			]
		},
		{
			"ID": "20240129215230-96petyk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240129215230-96petyk",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在函数声明时，无需声明返回值类型，而要返回值时，直接"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "return"
				},
				{
					"Type": "NodeText",
					"Data": "​一个值即可"
				}
			]
		},
		{
			"ID": "20240129215535-d90ggok",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240129215535-d90ggok",
				"style": "line-height: 22px;",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "bHVh"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "print(\"**********有返回值************\")\nfunction F4(a)\n    return a\nend\ntemp = F4(\"123\")\nprint(temp)\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240129215717-gd5j7pz",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240129215717-gd5j7pz",
				"style": "line-height: 22px;",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "bHVh"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "**********有返回值************\n123\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240129215726-rub8gpw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240129215726-rub8gpw",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Lua的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "return"
				},
				{
					"Type": "NodeText",
					"Data": "​可以返回多个值，用逗号分隔即可，需要多个变量去接受它，\n如果没有足够的变量接收值，则多余的返回值会被丢弃，但是对应位置的值仍然可以接收到\n当然，如果有过多的变量去接收这个值，则多出的变量接收不到任何值\n接收返回值的变量数量与函数中实际返回的值数量不一致，不会导致报错"
				}
			]
		},
		{
			"ID": "20240129215832-ac2ib8s",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240129215832-ac2ib8s",
				"style": "line-height: 22px;",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "bHVh"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "print(\"**********有返回值************\")\nfunction F4(a)\n    return a, \"456\", true\nend\ntemp = F4(\"123\")\nprint(temp)\ntemp1, temp2, temp3 = F4(\"123\")\nprint(temp1)\nprint(temp2)\nprint(temp3)\ntempA, tempB, tempC, tempD = F4(\"******\")\nprint(tempA)\nprint(tempB)\nprint(tempC)\nprint(tempD)\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240129215947-0r016kt",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240129215947-0r016kt",
				"style": "line-height: 22px;",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "bHVh"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "**********有返回值************\n123\n123\n456\ntrue\n******\n456\ntrue\nnil"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240129220047-hfod37t",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20240129220047-hfod37t",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "函数的类型"
				}
			]
		},
		{
			"ID": "20240129220435-3ildrid",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240129220435-3ildrid",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Lua中的函数作为变量最直观的证明就是直接用"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "type()"
				},
				{
					"Type": "NodeText",
					"Data": "​来输出查看返回的值"
				}
			]
		},
		{
			"ID": "20240129220640-bmsepyx",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240129220640-bmsepyx",
				"style": "line-height: 22px;",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "bHVh"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "print(\"**********函数类型************\")\nF5 = function()\n    print(\"123\")\nend\nprint(type(F5))\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240129220705-ollo9lb",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240129220705-ollo9lb",
				"style": "line-height: 22px;",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "bHVh"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "**********函数类型************\nfunction\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240129220711-11e7gry",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240129220711-11e7gry",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可见函数在Lua中就是一种变量类型"
				}
			]
		},
		{
			"ID": "20240129220721-rqy3t7s",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20240129220721-rqy3t7s",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "函数重载"
				}
			]
		},
		{
			"ID": "20240129220741-gxzupez",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240129220741-gxzupez",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "函数重载就是函数名相同但参数类型数量不同，返回值也不同的函数可以共同存在\n"
				},
				{
					"Type": "NodeTextMark",
					"Properties": {
						"style": "background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);"
					},
					"TextMarkType": "strong text",
					"TextMarkTextContent": "Lua不支持函数重载！"
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);\"}"
				},
				{
					"Type": "NodeText",
					"Data": "，如果在之前先后声明了重名的函数"
				},
				{
					"Type": "NodeTextMark",
					"Properties": {
						"style": "background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"
					},
					"TextMarkType": "text strong",
					"TextMarkTextContent": "（这个行为本身不会报错！需要注意）"
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"
				},
				{
					"Type": "NodeText",
					"Data": "，则调用函数一定会调用最后声明的那个函数"
				}
			]
		},
		{
			"ID": "20240129221103-gusbaqr",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240129221103-gusbaqr",
				"style": "line-height: 22px;",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "bHVh"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "print(\"**********验证函数重载************\")\nfunction F6()\n    print(\"我是无参的\")\nend\n\nfunction F6(str)\n    print(str)\nend\n\nF6()\nF6(\"我是有参的\")\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240129221215-ioeeesf",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240129221215-ioeeesf",
				"style": "line-height: 22px;",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "bHVh"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "**********验证函数重载************\nnil\n我是有参的\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240129221240-aysnonf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240129221240-aysnonf",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果支持函数重载，这里的返回应当分别是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "我是无参的"
				},
				{
					"Type": "NodeText",
					"Data": "​和"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "我是有参的"
				},
				{
					"Type": "NodeText",
					"Data": "​，\n但明显，这段代码两次调用的都是后来声明的函数，可见，Lua不支持函数重载"
				}
			]
		},
		{
			"ID": "20240129221358-9ys5flf",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20240129221358-9ys5flf",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "变长函数"
				}
			]
		},
		{
			"ID": "20240129221717-2hqndu7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240129221717-2hqndu7",
				"updated": "20240130002705"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "不定参数在参数列表内用"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "..."
				},
				{
					"Type": "NodeText",
					"Data": "​​，需要一个"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20240130000450-klofjai",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "表"
				},
				{
					"Type": "NodeText",
					"Data": "来接收它"
				}
			]
		},
		{
			"ID": "20240129221953-hjs8644",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240129221953-hjs8644",
				"style": "line-height: 22px;",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "bHVh"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "print(\"**********变长参数************\")\nfunction F7( ... )\n    arg = { ... }\n    for i = 1, #arg do\n        print(arg[i])\n    end\nend\nF7(1, \"2\", 3, true, 5, 6)\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240129222010-ajh4mwo",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240129222010-ajh4mwo",
				"style": "line-height: 22px;",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "bHVh"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "**********变长参数************\n1\n2\n3\ntrue\n5\n6\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240129222018-lkkcwgr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240129222018-lkkcwgr",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "和C"
				},
				{
					"Type": "NodeBackslash",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeText",
							"Data": "#"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "一样，参数列表中局部参数与不定参数声明可以共存，"
				},
				{
					"Type": "NodeTextMark",
					"Properties": {
						"style": "background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"
					},
					"TextMarkType": "strong text",
					"TextMarkTextContent": "不定参数必须要在参数列表最后一位"
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"
				}
			]
		},
		{
			"ID": "20240129222508-ks6zuve",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240129222508-ks6zuve",
				"style": "line-height: 22px;",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "bHVh"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "function FTest2(a, b, ...)\n    print(a)\n    print(b)\n    print(...)\n    arg = { ... }\n    for i = 1, #arg do\n        print(arg[i])\n    end\nend\nFTest2(1, \"2\", 3, true, 5, 6)\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240129222526-xzira3p",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240129222526-xzira3p",
				"style": "line-height: 22px;",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "bHVh"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "1\n2\n3\ttrue\t5\t6\n3\ntrue\n5\n6\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240129222536-dw58kzu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240129222536-dw58kzu",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可以看到"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "a = 1"
				},
				{
					"Type": "NodeText",
					"Data": "​，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "b = 2"
				},
				{
					"Type": "NodeText",
					"Data": "​，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "..."
				},
				{
					"Type": "NodeText",
					"Data": "​包括"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "3, true, 5, 6"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20240129222622-vnaezwl",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20240129222622-vnaezwl",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "函数嵌套"
				}
			]
		},
		{
			"ID": "20240129222941-fbo4d88",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240129222941-fbo4d88",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "函数作为lua中的一种变量类型，是可以在函数中返回的，\n因此你可以直接返回一个函数的声明给外部（如果直接返回函数声明，则该函数声明不可以命名）"
				}
			]
		},
		{
			"ID": "20240129222917-1qpmx30",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240129222917-1qpmx30",
				"style": "line-height: 22px;",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "bHVh"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "print(\"**********函数嵌套************\")\nfunction F8()\n    return function()\n        print(123)\n    end\nend\n\nf9 = F8()\nf9()\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240129222926-zzj2gol",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240129222926-zzj2gol",
				"style": "line-height: 22px;",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "bHVh"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "**********函数嵌套************\n123\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240129223106-7t47ity",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240129223106-7t47ity",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "命名的函数也可以返回，需要先声明并赋值后再返回"
				}
			]
		},
		{
			"ID": "20240129223203-a039ner",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240129223203-a039ner",
				"style": "line-height: 22px;",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "bHVh"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "function Fa()\n    Fb = function()\n        print(123)\n    end\n    return Fb\nend\n\nfb = Fa()\nfb()\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240129223205-w7za7uo",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240129223205-w7za7uo",
				"style": "line-height: 22px;",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "bHVh"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "123\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240129223212-e4uowxm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240129223212-e4uowxm",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "甚至可以在函数里嵌套声明与外层函数重名的函数（不要这么做）"
				}
			]
		},
		{
			"ID": "20240129223437-2oastra",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240129223437-2oastra",
				"style": "line-height: 22px;",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "bHVh"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "function Fa()\n    Fa = function()\n        print(123)\n    end\n    return Fa\nend\n\nfa = Fa()\nfa()\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240129223452-qu1s92n",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240129223452-qu1s92n",
				"style": "line-height: 22px;",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "bHVh"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "123\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240129223520-1sl7uye",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20240129223520-1sl7uye",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "函数嵌套涉及的闭包"
				}
			]
		},
		{
			"ID": "20240129223530-8yr7mk6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240129223530-8yr7mk6",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"Properties": {
						"style": "background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"
					},
					"TextMarkType": "strong text",
					"TextMarkTextContent": "由于可以嵌套声明函数，以及返回函数，因此会出现函数局部变量生命周期改变的情况，也就是闭包"
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"
				}
			]
		},
		{
			"ID": "20240129223805-gdfmeam",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240129223805-gdfmeam",
				"style": "line-height: 22px;",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "bHVh"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "function F9(x)\n    return function(y)\n        return x + y\n    end\nend\n\nf10 = F9(10)\nprint(f10(5))\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240129223853-mmda0fg",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20240129223853-mmda0fg",
				"style": "line-height: 22px;",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "bHVh"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "15\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20240129223859-v9zoo6b",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20240129223859-v9zoo6b",
				"updated": "20240130000613"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "原本"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "F9"
				},
				{
					"Type": "NodeText",
					"Data": "​的参数也就是局部变量"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "x"
				},
				{
					"Type": "NodeText",
					"Data": "​在执行完"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "F9"
				},
				{
					"Type": "NodeText",
					"Data": "​的代码后生命周期就结束了，但是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "F9"
				},
				{
					"Type": "NodeText",
					"Data": "​返回的函数仍然在使用"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "x"
				},
				{
					"Type": "NodeText",
					"Data": "​\n这就导致局部变量"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "x"
				},
				{
					"Type": "NodeText",
					"Data": "​的生命周期函数被改变，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "x"
				},
				{
					"Type": "NodeText",
					"Data": "​会在"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "f10"
				},
				{
					"Type": "NodeText",
					"Data": "​存储的函数里继续使用"
				}
			]
		}
	]
}