{"ID":"20240130000450-klofjai","Spec":"1","Type":"NodeDocument","Properties":{"id":"20240130000450-klofjai","title":"UH2S1L8——表","type":"doc","updated":"20250303191956"},"Children":[{"ID":"20240130013236-dw8jnka","Type":"NodeBlockquote","Properties":{"id":"20240130013236-dw8jnka","style":"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);","updated":"20241129113303"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e"},{"ID":"20240130013239-pofwwpd","Type":"NodeParagraph","Properties":{"id":"20240130013239-pofwwpd","updated":"20241129113303"},"Children":[{"Type":"NodeText","Data":"注：\n笔者学习这节课并记下本篇笔记时，使用的 Lua 是从 github 上下载的 LuaforWindows，版本为 Lua 5.1.5\n本篇笔记中记录的所有奇怪的“特性”，都是基于该版本的 Lua 产生的，笔者将这些学习中遇到的情况忠实的记录了下来\n笔者不保证非 LuaforWindows 的 Lua 或者更高版本的 Lua 也会出现这种问题，\n如果没遇到本笔记中记录的奇怪特性，应该是 Lua 版本不一致导致的"}]}]},{"ID":"20240130000450-9rvtjff","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20240130000450-9rvtjff","name":"table","updated":"20240130000624"},"Children":[{"Type":"NodeText","Data":"表"}]},{"ID":"20240130000624-p9janao","Type":"NodeParagraph","Properties":{"id":"20240130000624-p9janao","updated":"20240130001124"},"Children":[{"Type":"NodeText","Data":"表（"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"table"},{"Type":"NodeText","Data":"​）是Lua中非常重要的复杂数据类型，在Lua中所有的复杂类型都是"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"table"},{"Type":"NodeText","Data":"​\n诸如数组，字典，甚至面向对象的类都需要通过它来实现"}]},{"ID":"20240130001127-o0hbi0h","Type":"NodeParagraph","Properties":{"id":"20240130001127-o0hbi0h","updated":"20240130141721"},"Children":[{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);"},"TextMarkType":"strong text","TextMarkTextContent":"另外记住，Lua的索引从1开始！（反程序员.jpg）"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);\"}"}]},{"ID":"20240130141721-ln4pjeu","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240130141721-ln4pjeu","updated":"20240130141725"},"Children":[{"Type":"NodeText","Data":"本章代码关键字"}]},{"ID":"20240130141725-4he88b9","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130141725-4he88b9","style":"line-height: 22px;","updated":"20240130191228"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"tableVar = {}\t\t\t\t\t\t--表的声明\n#tableVar\t\t\t\t\t\t\t--获取表长度，不准确\ntableVar[]\t\t\t\t\t\t\t--通过索引获取值\ntable.remove()\t\t\t\t\t\t--通过删除表的某个元素\nfor ... in ipairs() do ... end\t\t--ipair遍历，可从索引1开始遍历表，遇到nil就停止\nfor ... in pairs() do ... end\t\t--pair遍历，可以遍历表所有的键与值\n:\t\t\t\t\t\t\t\t\t--语法糖，申明函数时是用来自动申明第一个参数self，调用函数时是将调用函数的表自己作为第一个参数传入到函数内\ntable.insert()\t\t\t\t\t\t--向表的指定位置插入某个值，不指定位置则默认插入到最后一位\ntable.remove()\t\t\t\t\t\t--除表中指定位置上的元素，并返回这个被移除的值。若不指定位置，默认移除最后一个索引的内容\ntable.sort()\t\t\t\t\t\t--在表内从list[1]到list[#list]的元素按指定次序排序。\ntable.concat()\t\t\t\t\t\t--将元素都是字符串或数字的表，和拼接字符拼接起来，返回拼接好的字符串\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130000739-vatvny6","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240130000739-vatvny6","updated":"20240130001016"},"Children":[{"Type":"NodeText","Data":"表的声明"}]},{"ID":"20240130001206-vus1niz","Type":"NodeParagraph","Properties":{"id":"20240130001206-vus1niz","updated":"20240130001244"},"Children":[{"Type":"NodeText","Data":"表的声明非常简单，使用大括号声明即可"}]},{"ID":"20240130001016-60ygk1z","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130001016-60ygk1z","style":"line-height: 22px;","updated":"20240130001016"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"a = {}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130001250-q8co34y","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240130001250-q8co34y","updated":"20240130144044"},"Children":[{"Type":"NodeText","Data":"用表实现数组"}]},{"ID":"20240130001254-2x51a26","Type":"NodeParagraph","Properties":{"id":"20240130001254-2x51a26","updated":"20240130144044"},"Children":[{"Type":"NodeText","Data":"想让表作为数组那样声明十分简单，使用大括号包裹一系列的值并赋值即可，值的类型是不限的\n"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"},"TextMarkType":"strong text","TextMarkTextContent":"（由于在table中使用"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"},"TextMarkType":"code strong text","TextMarkTextContent":"nil"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"},"TextMarkType":"strong text","TextMarkTextContent":"会导致在取长度上出现相当迷惑的情况，因此不要在table中不要使用"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"},"TextMarkType":"code strong text","TextMarkTextContent":"nil"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"},"TextMarkType":"strong text","TextMarkTextContent":"，即使table里可以用"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"},"TextMarkType":"code strong text","TextMarkTextContent":"nil"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"},"TextMarkType":"strong text","TextMarkTextContent":"）"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"},{"Type":"NodeText","Data":"\n从作为数组的表取出某个值也很简单，直接"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"表[索引]"},{"Type":"NodeText","Data":"​即可，"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);"},"TextMarkType":"strong text","TextMarkTextContent":"记住，Lua的索引从1开始！（反程序员.jpg）"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);\"}"}]},{"ID":"20240130001316-ph17avv","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130001316-ph17avv","style":"line-height: 22px;","updated":"20240130144044"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"print(\"**********数组************\")\na = {1, 2, 3, 4, \"1231\", true, nil}\nprint(a[1])\nprint(a[5])\nprint(a[6])\nprint(a[7])\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130001408-gkco8ou","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130001408-gkco8ou","style":"line-height: 22px;","updated":"20240130144044"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"**********数组************\n1\n1231\ntrue\nnil\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130001611-2aceqxs","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240130001611-2aceqxs","updated":"20240130144044"},"Children":[{"Type":"NodeText","Data":"数组的长度"}]},{"ID":"20240130001621-9ap070h","Type":"NodeParagraph","Properties":{"id":"20240130001621-9ap070h","updated":"20240130144044"},"Children":[{"Type":"NodeText","Data":"和获取字符串长度一样，直接"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"#表"},{"Type":"NodeText","Data":"​即可，可见"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"#"},{"Type":"NodeText","Data":"​是通用的获取长度的关键字\n"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);"},"TextMarkType":"text","TextMarkTextContent":"但是，要注意，这种方式读取到的长度原理是"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);\"}"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);"},"TextMarkType":"strong text","TextMarkTextContent":"从1开始数，遇到"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);\"}"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);"},"TextMarkType":"code strong text","TextMarkTextContent":"nil"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);\"}"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);"},"TextMarkType":"strong text","TextMarkTextContent":"就停止计数！"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);\"}"},{"Type":"NodeText"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);"},"TextMarkType":"text","TextMarkTextContent":"这意味着，"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);\"}"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);"},"TextMarkType":"strong text","TextMarkTextContent":"如果前面某个元素为"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);\"}"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);"},"TextMarkType":"code text strong","TextMarkTextContent":"nil"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);\"}"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);"},"TextMarkType":"strong text","TextMarkTextContent":"，后面即使还有值也会被忽略掉！"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);\"}"},{"Type":"NodeText","Data":"（当然，也有例外，详情请看"},{"Type":"NodeTextMark","TextMarkType":"block-ref","TextMarkBlockRefID":"20240130003259-ol9cn1u","TextMarkBlockRefSubtype":"s","TextMarkTextContent":"自定义索引"},{"Type":"NodeText","Data":"部分）"}]},{"ID":"20240130001717-lpgyy41","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130001717-lpgyy41","style":"line-height: 22px;","updated":"20240130144044"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"a = {1, 2, nil, 4, \"1231\", true, nil}\nprint(#a)\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130001724-s69fph3","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130001724-s69fph3","style":"line-height: 22px;","updated":"20240130144044"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"2\t\t--然而按照我们声明的内容，它应该是7！\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130014317-8bh1122","Type":"NodeBlockquote","Properties":{"id":"20240130014317-8bh1122","updated":"20240130144044"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e"},{"ID":"20240130014321-mk4im1e","Type":"NodeParagraph","Properties":{"id":"20240130014321-mk4im1e","updated":"20240130014440"},"Children":[{"Type":"NodeText","Data":"有关"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"#"},{"Type":"NodeText","Data":"​长度相关的内容，可以参考如下内容："}]},{"ID":"20240130014345-ljlfsf6","Type":"NodeParagraph","Properties":{"id":"20240130014345-ljlfsf6","updated":"20240130014349"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.runoob.com/w3cnote/lua-table-length.html","TextMarkTextContent":"lua 中求 table 长度 | 菜鸟教程 (runoob.com)"}]},{"ID":"20240130014510-he2mn0u","Type":"NodeParagraph","Properties":{"id":"20240130014510-he2mn0u","updated":"20240130014526"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://blog.csdn.net/Gitar520/article/details/48544823","TextMarkTextContent":"对lua #(取长度)操作符的理解"}]}]},{"ID":"20240130002042-w4tnmam","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240130002042-w4tnmam","updated":"20240130144044"},"Children":[{"Type":"NodeText","Data":"数组的遍历（长度）"}]},{"ID":"20240130002355-6omir2u","Type":"NodeParagraph","Properties":{"id":"20240130002355-6omir2u","updated":"20240130144044"},"Children":[{"Type":"NodeText","Data":"我们可以通过上面得到的长度作为目标值来for循环来遍历作为数组的表"}]},{"ID":"20240130002352-vsqv7jv","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130002352-vsqv7jv","style":"line-height: 22px;","updated":"20240130144044"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"print(\"**********数组的遍历************\")\na = {1, 2, 3, 4, \"1231\", true, nil}\nfor i = 1, #a do\n    print(a[i])\nend\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130002503-do9nloh","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130002503-do9nloh","style":"line-height: 22px;","updated":"20240130144044"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"**********数组的遍历************\n1\n2\n3\n4\n1231\ntrue\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130002510-3c33lj1","Type":"NodeParagraph","Properties":{"id":"20240130002510-3c33lj1","updated":"20240130144044"},"Children":[{"Type":"NodeText","Data":"但是，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"#"},{"Type":"NodeText","Data":"​由于遇"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"nil"},{"Type":"NodeText","Data":"​则断的特性，这种方法遍历作为数组的表是非常不可靠的\n后面我们会使用更好的遍历方法"}]},{"ID":"20240130150150-9lmgjeb","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240130150150-9lmgjeb","updated":"20240130150654"},"Children":[{"Type":"NodeText","Data":"补充：数组删除元素"}]},{"ID":"20240130150202-4lllyjt","Type":"NodeParagraph","Properties":{"id":"20240130150202-4lllyjt","updated":"20240130150658"},"Children":[{"Type":"NodeText","Data":"由于让表内出现"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"nil"},{"Type":"NodeText","Data":"​会导致通过"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"#"},{"Type":"NodeText","Data":"​取到的长度不确定，"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"因此稳妥的删除方法是使用"},{"Type":"NodeTextMark","TextMarkType":"code strong","TextMarkTextContent":"table.remove"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"方法"},{"Type":"NodeText","Data":"\n第一个参数传入要删除元素的列表，第二个参数传入要删除的元素的索引"}]},{"ID":"20240130150515-kzizv4j","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130150515-kzizv4j","style":"line-height: 22px;","updated":"20240130150654"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"a = {1, 2, 3, 4, \"1231\", true, nil}\n\ntable.remove(a, 3)\n\nfor i = 1, #a do\n    print(a[i])\nend\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130150540-13kmhrh","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130150540-13kmhrh","style":"line-height: 22px;","updated":"20240130150654"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"1\n2\n4\n1231\ntrue\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130002609-wheqetn","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240130002609-wheqetn","updated":"20240130144108"},"Children":[{"Type":"NodeText","Data":"用表实现二维数组"}]},{"ID":"20240130002720-9hepq43","Type":"NodeParagraph","Properties":{"id":"20240130002720-9hepq43","updated":"20240130144108"},"Children":[{"Type":"NodeText","Data":"想让表作为二维数组那样声明同样很简单，直接表中嵌套表声明即可\n从作为二维数组的表取出某个值也很简单，直接"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"表[索引1][索引2]"},{"Type":"NodeText","Data":"​即可，"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);"},"TextMarkType":"strong text","TextMarkTextContent":"记住，Lua的索引从1开始！（反程序员.jpg）"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);\"}"}]},{"ID":"20240130002755-ynyezvp","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130002755-ynyezvp","style":"line-height: 22px;","updated":"20240130144108"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"print(\"**********二维数组************\")\na = {{1, 2, 3},\n     {4, 5, 6}}\n\nprint(a[1][1])\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130002927-gjtgo7h","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130002927-gjtgo7h","style":"line-height: 22px;","updated":"20240130144108"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"**********二维数组************\n1\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130002936-kuidvnk","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240130002936-kuidvnk","updated":"20240130144108"},"Children":[{"Type":"NodeText","Data":"二维数组的遍历（长度）"}]},{"ID":"20240130003005-uwey53w","Type":"NodeParagraph","Properties":{"id":"20240130003005-uwey53w","updated":"20240130144108"},"Children":[{"Type":"NodeText","Data":"同样可以通过两层for循环使用长度来遍历二维数组"}]},{"ID":"20240130003141-wdap1le","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130003141-wdap1le","style":"line-height: 22px;","updated":"20240130144108"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"print(\"**********二维数组的遍历************\")\na = {{1, 2, 3},\n     {4, 5, 6},\n     {7, 8, 9}}\n\nfor i = 1, #a do\n    b = a[i]\n    for j = 1, #b do\n        print(b[j])\n    end\nend\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130003222-3b9bfx5","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130003222-3b9bfx5","style":"line-height: 22px;","updated":"20240130144108"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"**********二维数组的遍历************\n1\n2\n3\n4\n5\n6\n7\n8\n9\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130003236-v9hu3xu","Type":"NodeParagraph","Properties":{"id":"20240130003236-v9hu3xu","updated":"20240130144108"},"Children":[{"Type":"NodeText","Data":"当然，和数组的遍历一样，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"#"},{"Type":"NodeText","Data":"​由于遇"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"nil"},{"Type":"NodeText","Data":"​则断的特性，这种方法遍历作为数组的表是非常不可靠的"}]},{"ID":"20240130003259-ol9cn1u","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240130003259-ol9cn1u","updated":"20250303191956"},"Children":[{"Type":"NodeText","Data":"自定义索引"}]},{"ID":"20240130003312-wwuonpl","Type":"NodeParagraph","Properties":{"id":"20240130003312-wwuonpl","updated":"20240130144824"},"Children":[{"Type":"NodeText","Data":"表的声明里可以自定义某个索引的值为什么，即使这个索引是0或者负数，还是字符串类型，甚至是"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"boolean"},{"Type":"NodeText","Data":"​值\n（当然，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"nil"},{"Type":"NodeText","Data":"​就别想了，即使可以这么声明也取不出来，会报错）"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"},"TextMarkType":"strong text","TextMarkTextContent":"（自定义索引使用数字索引需谨慎）"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"}]},{"ID":"20240130004236-3gxtyvl","Type":"NodeParagraph","Properties":{"id":"20240130004236-3gxtyvl","updated":"20240130005006"},"Children":[{"Type":"NodeText","Data":"声明表时，自定义索引可以在任意的位置，而声明表后各个索引指向的值会跳过自定义索引的值\n因此下例的5即使声明时在第5个，它对应的索引仍然是3，因为前面有两个自定义索引的值被跳过了"}]},{"ID":"20240130003632-87l9r83","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130003632-87l9r83","style":"line-height: 22px;","updated":"20240130004518"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"print(\"**********自定义索引************\")\naa = {[0] = 1, 2, 3, [-1] = 4, 5}\nprint(aa[0])\nprint(aa[-1])\n-- 各个索引对应的值\n-- -1 0 1 2 3 （索引）\n--  4 1 2 3 5 （值）\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130003932-z0walz0","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130003932-z0walz0","style":"line-height: 22px;","updated":"20240130003936"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"**********自定义索引************\n1\n4\n3\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130003937-22236wr","Type":"NodeParagraph","Properties":{"id":"20240130003937-22236wr","updated":"20240130011103"},"Children":[{"Type":"NodeText","Data":"注意！由于"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);"},"TextMarkType":"code text","TextMarkTextContent":"#"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);\"}"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);"},"TextMarkType":"text","TextMarkTextContent":"读取表长度的原理是"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);\"}"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);"},"TextMarkType":"strong text","TextMarkTextContent":"从索引1开始数，遇到"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);\"}"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);"},"TextMarkType":"code strong text","TextMarkTextContent":"nil"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);\"}"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);"},"TextMarkType":"strong text","TextMarkTextContent":"就停止计数！"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);\"}"},{"Type":"NodeText","Data":"\n这意味着跳过"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"#"},{"Type":"NodeText","Data":"​读取上面的表的长度只能读到3，因为两个自定义索引的值没法计数到"}]},{"ID":"20240130004723-7vfilf0","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130004723-7vfilf0","style":"line-height: 22px;","updated":"20240130011106"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"aa = {[0] = 1, 2, 3, [-1] = 4, 5}\nprint(#aa)\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130004630-fglsy0z","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130004630-fglsy0z","style":"line-height: 22px;","updated":"20240130011109"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"3\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130005112-r0q1bcg","Type":"NodeBlockquote","Properties":{"id":"20240130005112-r0q1bcg","style":"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color); --b3-parent-background: var(--b3-card-warning-background);","updated":"20250303191956"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e"},{"ID":"20250303191956-cxjz2w8","Type":"NodeParagraph","Properties":{"id":"20250303191956-cxjz2w8","updated":"20250303191956"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"注意！声明使用自定义索引时最好不要使用正数索引！\n如果这样做，一旦表声明中非自定义索引的值的数量超出了指定的索引，\n则那个自定义索引的值将被覆盖，无论这个自定义值声明在前还是后"}]}]},{"ID":"20240130005450-bcuxsks","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130005450-bcuxsks","style":"line-height: 22px;","updated":"20240130005721"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"aa = {[0] = 1, 2, [2] = 3, [-1] = 4, 5}\nprint(aa[2])\naa = {[0] = 1, 2, 3, [-1] = 4, [2] = 5}\nprint(aa[2])\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130005723-5lpr9o4","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130005723-5lpr9o4","style":"line-height: 22px;","updated":"20240130005835"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"5\t\t--原本声明时[2] = 3，但被覆盖了\n3\t\t--原本声明时[2] = 5，但被覆盖了\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130005731-5o4hm01","Type":"NodeParagraph","Properties":{"id":"20240130005731-5o4hm01","updated":"20240130011117"},"Children":[{"Type":"NodeText","Data":"通过这个现象也可以猜测Lua解释器遇到声明表语句时，会先为自定义索引赋值，然后从1开始挨个为索引赋值\n自定义索引时最好不要使用正数索引还有另外一个原因，下面就会提及"}]},{"ID":"20240130004752-szeaxc4","Type":"NodeParagraph","Properties":{"id":"20240130004752-szeaxc4","updated":"20240130012803"},"Children":[{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"},"TextMarkType":"strong text","TextMarkTextContent":"当声明表时，跳过了一个索引去赋值，使用"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"},"TextMarkType":"code strong text","TextMarkTextContent":"#"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"},"TextMarkType":"strong text","TextMarkTextContent":"计算长度时会把跳过的索引也算上"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"},{"Type":"NodeText","Data":"\n即使你隔一个跳一个，同样会把这些被跳过的索引都计算进去（Lua5.1明确存在该问题，LuaforWindows就是该版本）"}]},{"ID":"20240130010208-hjn6r84","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130010208-hjn6r84","style":"line-height: 22px;","updated":"20240130010640"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"aa = {[1] = 1, [2] = 2, [4] = 4, [5] = 5}\nprint(#aa)\naa = {[1] = 1, [2] = 2, [4] = 4, [6] = 6}\nprint(#aa)\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130010330-66uc09p","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130010330-66uc09p","style":"line-height: 22px;","updated":"20240130010641"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"5\n6\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130010447-69sjwmz","Type":"NodeParagraph","Properties":{"id":"20240130010447-69sjwmz","updated":"20240130011338"},"Children":[{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"},"TextMarkType":"strong text","TextMarkTextContent":"但是，一旦你跳过了两个索引，计数就会中断"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"}]},{"ID":"20240130010701-qoge0dp","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130010701-qoge0dp","style":"line-height: 22px;","updated":"20240130011340"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"aa = {[1] = 1, [2] = 2, [5] = 5, [6] = 6}\nprint(#aa)\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130010726-mi2pvpn","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130010726-mi2pvpn","style":"line-height: 22px;","updated":"20240130010728"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"2\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130010751-qv3dtv3","Type":"NodeParagraph","Properties":{"id":"20240130010751-qv3dtv3","updated":"20240130142523"},"Children":[{"Type":"NodeText","Data":"通过长度遍历数组，你会发现被跳过的那一个索引对应的值还是"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"nil"},{"Type":"NodeText","Data":"​，但也被计数了\n"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);"},"TextMarkType":"strong text","TextMarkTextContent":"（笔者总结的结论就是：自定义索引别用正数！以防迷惑情况的发生）"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);\"}"}]},{"ID":"20240130011223-ow2ubug","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130011223-ow2ubug","style":"line-height: 22px;","updated":"20240130011526"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"aa = {[1] = 1, [2] = 2, [4] = 4, [6] = 6}\nprint(\"长度: \" .. #aa)\nfor i = 1, 6 do\n    print(\"aa[i]: \" .. tostring(aa[i]))\nend\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130011501-4ye2l6c","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130011501-4ye2l6c","style":"line-height: 22px;","updated":"20240130011532"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"长度: 6\naa[i]: 1\naa[i]: 2\naa[i]: nil\naa[i]: 4\naa[i]: nil\naa[i]: 6\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130134910-rm0cjgg","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240130134910-rm0cjgg","updated":"20240130134917"},"Children":[{"Type":"NodeText","Data":"迭代器遍历"}]},{"ID":"20240130134918-6rgbn67","Type":"NodeParagraph","Properties":{"id":"20240130134918-6rgbn67","updated":"20240130135033"},"Children":[{"Type":"NodeText","Data":"迭代器遍历主要是用来遍历表的，因为通过"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"#"},{"Type":"NodeText","Data":"​得到长度是不准确的，因此一般不用"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"#"},{"Type":"NodeText","Data":"​来遍历表"}]},{"ID":"20240130135654-ujwiwuf","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240130135654-ujwiwuf","updated":"20240130135702"},"Children":[{"Type":"NodeText","Data":"ipairs遍历"}]},{"ID":"20240130135703-7w7lthu","Type":"NodeParagraph","Properties":{"id":"20240130135703-7w7lthu","updated":"20240130141424"},"Children":[{"Type":"NodeText","Data":"它也是一种for循环，它是从表的索引1开始往后遍历索引与其值，直到遇到"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"nil"},{"Type":"NodeText","Data":"​停止，\n因此这种循环只能遍历表的连续的索引与值，结构如下："}]},{"ID":"20240130135710-ygqf0bv","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130135710-ygqf0bv","style":"line-height: 22px;","updated":"20240130140124"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"for 索引变量, 值变量 in ipairs(要遍历的表) do\n\t从索引1开始往后遍历索引与其值，直到遇到索引对应的值为nil就停止\nend \n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130140126-batohes","Type":"NodeParagraph","Properties":{"id":"20240130140126-batohes","updated":"20240130140433"},"Children":[{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"},"TextMarkType":"strong text","TextMarkTextContent":"由于这种循环同样只能从索引1开始遍历连续的索引与值，因此实际使用它遍历表，同样会遇到使用"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"},"TextMarkType":"code strong text","TextMarkTextContent":"#"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"},"TextMarkType":"strong text","TextMarkTextContent":"遍历长度的问题"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"}]},{"ID":"20240130135643-644yw4j","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130135643-644yw4j","style":"line-height: 22px;","updated":"20240130140659"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"print(\"**********ipairs迭代器遍历************\")\na = {[0] = 1, 2, [-1] = 3, 4, 5, [5] = 6}\n\nfor index, value in ipairs(a) do\n    print(\"ipairs遍历键值: index:\" .. index .. \" value:\" .. value)\nend"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130135905-rfb0ubc","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130135905-rfb0ubc","style":"line-height: 22px;","updated":"20240130140710"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"**********ipairs迭代器遍历************\nipairs遍历键值: index:1 value:2\nipairs遍历键值: index:2 value:4\nipairs遍历键值: index:3 value:5\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130140939-lps4s13","Type":"NodeParagraph","Properties":{"id":"20240130140939-lps4s13","updated":"20240130141116"},"Children":[{"Type":"NodeText","Data":"ipairs遍历可以只遍历索引"}]},{"ID":"20240130141116-1s59wix","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130141116-1s59wix","style":"line-height: 22px;","updated":"20240130141153"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"print(\"**********ipairs迭代器遍历索引************\")\na = {[0] = 1, 2, [-1] = 3, 4, 5, [5] = 6}\n\nfor index in ipairs(a) do\n    print(\"ipairs遍历键值: index:\" .. index .. \" value:\" .. a[index])\nend\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130141154-jukw9dm","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130141154-jukw9dm","style":"line-height: 22px;","updated":"20240130141201"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"**********ipairs迭代器遍历索引************\nipairs遍历键值: index:1 value:2\nipairs遍历键值: index:2 value:4\nipairs遍历键值: index:3 value:5\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130140457-4yzbw7v","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240130140457-4yzbw7v","updated":"20240130140548"},"Children":[{"Type":"NodeText","Data":"pairs遍历"}]},{"ID":"20240130140756-zjork50","Type":"NodeParagraph","Properties":{"id":"20240130140756-zjork50","updated":"20240130141613"},"Children":[{"Type":"NodeText","Data":"这也是一种for循环，可以遍历表的"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"所有的键（索引）与值"},{"Type":"NodeText","Data":"，结构如下："}]},{"ID":"20240130140846-y9fgopz","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130140846-y9fgopz","style":"line-height: 22px;","updated":"20240130141446"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"for 键变量, 值变量 in pairs(要遍历的表) do\n\t遍历表的所有键与值\nend\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130141451-blswuim","Type":"NodeParagraph","Properties":{"id":"20240130141451-blswuim","updated":"20240130141602"},"Children":[{"Type":"NodeText","Data":"可见，"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-success-background); color: var(--b3-card-success-color);"},"TextMarkType":"text strong","TextMarkTextContent":"它比起使用长度或者ipairs遍历表是更加安全的，它可以将所有的键与值都遍历出来"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-success-background); color: var(--b3-card-success-color);\"}"}]},{"ID":"20240130140749-kewzrl7","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130140749-kewzrl7","style":"line-height: 22px;","updated":"20240130140548"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"print(\"**********pairs迭代器遍历************\")\na = {[0] = 1, 2, [-1] = 3, 4, 5, [5] = 6}\n\nfor key, value in pairs(a) do\n    print(\"pairs遍历键值: key:\" .. key .. \" value:\" .. value)\nend\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130140841-dreyo5z","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130140841-dreyo5z","style":"line-height: 22px;","updated":"20240130140844"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"**********pairs迭代器遍历************\npairs遍历键值: key:1 value:2\npairs遍历键值: key:2 value:4\npairs遍历键值: key:3 value:5\npairs遍历键值: key:0 value:1\npairs遍历键值: key:-1 value:3\npairs遍历键值: key:5 value:6\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130141208-hizw018","Type":"NodeParagraph","Properties":{"id":"20240130141208-hizw018","updated":"20240130141622"},"Children":[{"Type":"NodeText","Data":"pairs遍历同样可以只遍历索引"}]},{"ID":"20240130141623-n7fo583","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130141623-n7fo583","style":"line-height: 22px;","updated":"20240130141658"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"print(\"**********pairs迭代器遍历键************\")\na = {[0] = 1, 2, [-1] = 3, 4, 5, [5] = 6}\n\nfor key in pairs(a) do\n    print(\"pairs遍历键值: key:\" .. key .. \" value:\" .. a[key])\nend\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130141658-az8qk4y","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130141658-az8qk4y","style":"line-height: 22px;","updated":"20240130141704"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"**********pairs迭代器遍历键************\npairs遍历键值: key:1 value:2\npairs遍历键值: key:2 value:4\npairs遍历键值: key:3 value:5\npairs遍历键值: key:0 value:1\npairs遍历键值: key:-1 value:3\npairs遍历键值: key:5 value:6\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130141706-6xsoslo","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240130141706-6xsoslo","updated":"20240130144058"},"Children":[{"Type":"NodeText","Data":"用表实现字典"}]},{"ID":"20240130144058-tyc0php","Type":"NodeParagraph","Properties":{"id":"20240130144058-tyc0php","updated":"20240130145107"},"Children":[{"Type":"NodeText","Data":"字典是由键值对构成的数据结构，我们可以通过自定义索引来让表像是字典那样声明出来\n你也可以像字典那样通过"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"表[键]"},{"Type":"NodeText","Data":"​来获取值，也可以如面向对象的对象那样通过"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"表.键"},{"Type":"NodeText","Data":"​来获取值"}]},{"ID":"20240130145149-nm1igju","Type":"NodeParagraph","Properties":{"id":"20240130145149-nm1igju","updated":"20240130145310"},"Children":[{"Type":"NodeText","Data":"但是要注意，诸如"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"表.1"},{"Type":"NodeText","Data":"​这样的"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"表.数字"},{"Type":"NodeText","Data":"​是会报错的，这意味着用作数组的表不能通过"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"表.索引"},{"Type":"NodeText","Data":"​获取值"}]},{"ID":"20240130144322-640r4qo","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130144322-640r4qo","style":"line-height: 22px;","updated":"20240130145347"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"print(\"**********字典的声明************\")\na = {[\"name\"] = \"唐老狮\", [\"age\"] = 14, [\"1\"] = 5}\nprint(a[\"name\"])\nprint(a[\"age\"])\nprint(a[\"1\"])\nprint(a.name)\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130145037-nfilu8i","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130145037-nfilu8i","style":"line-height: 22px;","updated":"20240130145146"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"**********字典的声明************\n唐老狮\n14\n5\n唐老狮\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130145618-qmlbwxy","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240130145618-qmlbwxy","updated":"20240130145625"},"Children":[{"Type":"NodeText","Data":"字典修改与添加"}]},{"ID":"20240130145147-m48l08m","Type":"NodeParagraph","Properties":{"id":"20240130145147-m48l08m","updated":"20240130145645"},"Children":[{"Type":"NodeText","Data":"用作字典的表可以通过"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"表[键]=值"},{"Type":"NodeText","Data":"​或者"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"表.键=值"},{"Type":"NodeText","Data":"​来修改或者添加（如果没有就是添加）对应的键值对"}]},{"ID":"20240130145430-0j19cyz","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130145430-0j19cyz","style":"line-height: 22px;","updated":"20240130145706"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"a = {[\"name\"] = \"唐老狮\", [\"age\"] = 14, [\"1\"] = 5}\n\na[\"name\"] = \"TLS\"\nprint(a[\"name\"])\na.name = \"tls\"\nprint(a.name)\n\na[\"sex\"] = false\nprint(a[\"sex\"])\nprint(a.sex)\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130145402-iw18j74","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130145402-iw18j74","style":"line-height: 22px;","updated":"20240130145714"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"TLS\ntls\nfalse\nfalse\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130145729-n17ckhs","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240130145729-n17ckhs","updated":"20240130145948"},"Children":[{"Type":"NodeText","Data":"字典的删除"}]},{"ID":"20240130145748-cfo2z41","Type":"NodeParagraph","Properties":{"id":"20240130145748-cfo2z41","updated":"20240130151941"},"Children":[{"Type":"NodeText","Data":"用作字典的表事实上没有真正意义的删除，只需要"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"表[键]=nil"},{"Type":"NodeText","Data":"​或者"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"表.键=nil"},{"Type":"NodeText","Data":"​即可\n其实，即使之前没有为某个键赋值，也可以读取那个键的值，只是值为"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"nil"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"},"TextMarkType":"strong text","TextMarkTextContent":"（用作数组的表删除元素不要用这种方式！）"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"}]},{"ID":"20240130150938-q254nce","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130150938-q254nce","style":"line-height: 22px;","updated":"20240130151043"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"a = {[\"name\"] = \"唐老狮\", [\"age\"] = 14, [\"1\"] = 5, [\"sex\"] = true}\n\na[\"sex\"] = nil\nprint(a[\"sex\"])\nprint(a.sex)\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130151044-iuivrap","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130151044-iuivrap","style":"line-height: 22px;","updated":"20240130151113"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"nil\nnil\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130151114-pmuyvv4","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240130151114-pmuyvv4","updated":"20240130151130"},"Children":[{"Type":"NodeText","Data":"字典的遍历"}]},{"ID":"20240130151131-vomf4nd","Type":"NodeParagraph","Properties":{"id":"20240130151131-vomf4nd","updated":"20240130151334"},"Children":[{"Type":"NodeText","Data":"由于字典的键往往不是数字形式且不连续，因此不能用ipairs来遍历，必须使用pairs遍历"}]},{"ID":"20240130151334-if52e0d","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130151334-if52e0d","style":"line-height: 22px;","updated":"20240130151830"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"a = {[\"name\"] = \"唐老狮\", [\"age\"] = 14, [\"1\"] = 5}\n\nfor key, value in pairs(a) do\n    print(key, value)\nend\n\nfor key in pairs(a) do\n    print(key, a[key])\nend\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130151406-cvrgfbb","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130151406-cvrgfbb","style":"line-height: 22px;","updated":"20240130151836"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"1\t5\nage\t14\nname\ttls\n1\t5\nage\t14\nname\ttls\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130151521-bqevhoa","Type":"NodeParagraph","Properties":{"id":"20240130151521-bqevhoa","updated":"20240130151657"},"Children":[{"Type":"NodeText","Data":"要注意，有些地方会用这种"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"_"},{"Type":"NodeText","Data":"​写法，来忽略键的赋值，但是它实际上并不能像C"},{"Type":"NodeBackslash","Data":"span","Children":[{"Type":"NodeText","Data":"#"}]},{"Type":"NodeText","Data":"那样真的将键赋值忽略，实际上这个"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"_"},{"Type":"NodeText","Data":"​一样可以获取键"}]},{"ID":"20240130151657-bfxjcj8","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130151657-bfxjcj8","style":"line-height: 22px;","updated":"20240130151738"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"a = {[\"name\"] = \"唐老狮\", [\"age\"] = 14, [\"1\"] = 5}\nfor _, value in pairs(a) do\n    print(value)\nend\n\nfor _, value in pairs(a) do\n    print(_, value)\nend\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130151739-8z8glfs","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130151739-8z8glfs","style":"line-height: 22px;","updated":"20240130151746"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"5\n唐老狮\n14\n1\t5\nname\t唐老狮\nage\t14\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130151953-t72emzy","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240130151953-t72emzy","updated":"20241129113235"},"Children":[{"Type":"NodeText","Data":"用表实现类"}]},{"ID":"20240130153436-y5wktfb","Type":"NodeParagraph","Properties":{"id":"20240130153436-y5wktfb","updated":"20240322002554"},"Children":[{"Type":"NodeText","Data":"Lua中没有原生的面向对象，即没有"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"class"},{"Type":"NodeText","Data":"​这种关键字帮我们声明类\n这意味着一旦想要在Lua使用面向对象，将不得不去自己用表去实现面向对象的类\n（就如C语言我们需要用结构体和指针实现面向对象那样。。。）"}]},{"ID":"20240130153848-vvj8u9k","Type":"NodeParagraph","Properties":{"id":"20240130153848-vvj8u9k","updated":"20240130160035"},"Children":[{"Type":"NodeText","Data":"首先需要明确，一个类至少包括成员变量，构造函数，成员函数等内容"}]},{"ID":"20240130160159-lmpb2w0","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240130160159-lmpb2w0","updated":"20241129113235"},"Children":[{"Type":"NodeText","Data":"成员变量与成员方法"}]},{"ID":"20240130154452-myb2y4f","Type":"NodeParagraph","Properties":{"id":"20240130154452-myb2y4f","updated":"20240130165946"},"Children":[{"Type":"NodeText","Data":"成员变量和成员函数在表里很好声明，\n首先在表里，"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"可以直接写变量赋值的语句，即"},{"Type":"NodeTextMark","TextMarkType":"code strong","TextMarkTextContent":"变量 = 值"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"，我们可以通过这种写法模拟成员变量的声明，"},{"Type":"NodeText","Data":"外部调用时通过上面提及的"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"表.变量"},{"Type":"NodeText","Data":"​来调用成员变量\n其次，在Lua中函数也是一种变量类型，"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"这意味着我们可以用"},{"Type":"NodeTextMark","TextMarkType":"code strong","TextMarkTextContent":"方法名 = 函数声明"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"来声明成员方法，外部使用时通过上面提及的"},{"Type":"NodeTextMark","TextMarkType":"code strong","TextMarkTextContent":"表.方法"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"来调用函数"}]},{"ID":"20240130154938-t8mvdti","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130154938-t8mvdti","style":"line-height: 22px;","updated":"20240130160208"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"-- 声明一个像类那样的表\nStudent = {\n    age = 1,\n    sex = true,\n    Up = function ()\n        print(\"我成长了\")\n    end,\n    Learn = function()\n        print(\"好好学习\")\n    end,\n}\n-- 调用“类”的成员变量和方法\nprint(Student.age)\nStudent.Up()\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130155017-rcnhzlo","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130155017-rcnhzlo","style":"line-height: 22px;","updated":"20240130160208"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"**********类与结构体************\n1\n我成长了\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130155203-bckth7v","Type":"NodeParagraph","Properties":{"id":"20240130155203-bckth7v","updated":"20241129113235"},"Children":[{"Type":"NodeText","Data":"很显然，表只模拟成员变量与成员方法并不面向对象，它用起来就像是 C"},{"Type":"NodeBackslash","Data":"span","Children":[{"Type":"NodeText","Data":"#"}]},{"Type":"NodeText","Data":" 的静态类（不能实例化，只能 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"类名.成员"},{"Type":"NodeText","Data":"​ 调用）那样\n由于没有去模拟构造函数，这导致我们没有实例化对象的操作，这样的“类”，只能声明一个然后就操作这声明出来的唯一“类对象”"}]},{"ID":"20240130155809-2074zxt","Type":"NodeParagraph","Properties":{"id":"20240130155809-2074zxt","updated":"20240130160208"},"Children":[{"Type":"NodeText","Data":"由表模拟的类，外部还可以去添加成员变量和方法"}]},{"ID":"20240130155829-qsk1fxu","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130155829-qsk1fxu","style":"line-height: 22px;","updated":"20240130160208"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"Student = {\n    age = 1,\n    sex = true,\n    Up = function ()\n        print(\"我成长了\")\n    end,\n    Learn = function()\n        print(\"好好学习\")\n    end,\n}\n\nStudent.name = \"唐老狮\"\nStudent.Speak = function()\n    print(\"说话\")\nend\nfunction Student.Speak2()\n    print(\"说话2\")\nend\n\nprint(Student.name)\nStudent.Speak()\nStudent.Speak2()"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130155954-hwq247u","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130155954-hwq247u","style":"line-height: 22px;","updated":"20240130160208"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"唐老狮\n说话\n说话2\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130160241-s5hxmtu","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240130160241-s5hxmtu","updated":"20240130161849"},"Children":[{"Type":"NodeText","Data":"类内部访问内部变量"}]},{"ID":"20240130160407-cnrn1s3","Type":"NodeParagraph","Properties":{"id":"20240130160407-cnrn1s3","updated":"20240130170017"},"Children":[{"Type":"NodeText","Data":"由表模拟的类内部，我们不能直接只写成员变量去调用内部成员变量，"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"},"TextMarkType":"strong text","TextMarkTextContent":"在表内部访问表的成员变量和方法时，必须要指出是来自哪个表的"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"}]},{"ID":"20240130160254-w79etlp","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130160254-w79etlp","style":"line-height: 22px;","updated":"20240130161849"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"Student = {\n    age = 1,\n    sex = true,\n    Up = function()\n        print(age)\n        print(\"我成长了\")\n    end,\n    Learn = function()\n        print(\"好好学习\")\n    end,\n}\n\nprint(Student.age)\nStudent.Up()\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130160529-jhfs9bb","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130160529-jhfs9bb","style":"line-height: 22px;","updated":"20240130161849"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"1\nnil\t\t\t--输出了nil，很显然不符合预期\n我成长了\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130160704-uat3wjw","Type":"NodeParagraph","Properties":{"id":"20240130160704-uat3wjw","updated":"20240130164040"},"Children":[{"Type":"NodeText","Data":"想要在由表模拟的类内部调用类本身的属性或者方法，一定要指定是哪个表的"}]},{"ID":"20240130170026-okkh17i","Type":"NodeBlockquote","Properties":{"id":"20240130170026-okkh17i","updated":"20240130170047"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e"},{"ID":"20240130170033-fa2y9z5","Type":"NodeParagraph","Properties":{"id":"20240130170033-fa2y9z5","updated":"20240130170047"},"Children":[{"Type":"NodeText","Data":"笔者个人认为，这是因为Lua没有面向对象，我们在做的实际是调用表中存放的一个函数而已，而非调用某个对象里的方法，\n因此自然也不能让函数直接调用某个表里的内容，哪怕该函数实际上存放在表内"}]}]},{"ID":"20240130160803-z0wchmg","Type":"NodeParagraph","Properties":{"id":"20240130160803-z0wchmg","updated":"20240130161849"},"Children":[{"Type":"NodeText","Data":"因此一种写法就是直接"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"类名.属性"},{"Type":"NodeText","Data":"​或"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"类名.方法"},{"Type":"NodeText","Data":"​"}]},{"ID":"20240130160827-w2pshjg","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130160827-w2pshjg","style":"line-height: 22px;","updated":"20240130161849"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"Student = {\n    age = 1,\n    sex = true,\n    Up = function()\n        print(Student.age)\n        print(\"我成长了\")\n    end,\n    Learn = function()\n        print(\"好好学习\")\n    end,\n}\n\nprint(Student.age)\nStudent.Up()\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130160851-5cfzw82","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130160851-5cfzw82","style":"line-height: 22px;","updated":"20240130161849"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"1\n1\n我成长了\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130160925-5pp1ddh","Type":"NodeParagraph","Properties":{"id":"20240130160925-5pp1ddh","updated":"20240130161849"},"Children":[{"Type":"NodeText","Data":"第二种写法就是方法添加一个参数，方法内部使用这个参数调用成员，\n外部使用这个方法时将类本身作为参数传入，这样方法就可以调用类本身的成员了（类型检查是没有的，只能祈祷外部真的传入了类本身）"}]},{"ID":"20240130161111-ogd9g1b","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130161111-ogd9g1b","style":"line-height: 22px;","updated":"20240130161849"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"Student = {\n    age = 1,\n    sex = true,\n    Up = function()\n        print(Student.age)\n        print(\"我成长了\")\n    end,\n    Learn = function(t)\n        print(t.sex)\n        print(\"好好学习\")\n    end,\n}\n\nStudent.Learn(Student)\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130161102-jvd64mz","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130161102-jvd64mz","style":"line-height: 22px;","updated":"20240130161849"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"true\n好好学习\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130162237-3s45ceg","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240130162237-3s45ceg","updated":"20240130162255"},"Children":[{"Type":"NodeText","Data":"语法糖 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":":"},{"Type":"NodeText","Data":"​"}]},{"ID":"20240130161337-a4yscr4","Type":"NodeParagraph","Properties":{"id":"20240130161337-a4yscr4","updated":"20240313191607"},"Children":[{"Type":"NodeText","Data":"很显然上面的写法无论哪种都很不方便，因此Lua提供了一个语法糖"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"类名:方法()"},{"Type":"NodeText","Data":"​\n它也是用来调用方法的，和"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"."},{"Type":"NodeText","Data":"​调用方法的区别是，"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"该语法糖会自动把调用该方法的表自身作为第一个参数传入进去"}]},{"ID":"20240130162006-5nu49ba","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130162006-5nu49ba","style":"line-height: 22px;","updated":"20240130162255"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"Student = {\n    age = 1,\n    sex = true,\n    Up = function()\n        print(Student.age)\n        print(\"我成长了\")\n    end,\n    Learn = function(t)\n        print(t.sex)\n        print(\"好好学习\")\n    end,\n}\n\nStudent.Learn(Student)\nStudent:Learn()\t\t\t--等价于上面的写法\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130161934-l7e1xp3","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130161934-l7e1xp3","style":"line-height: 22px;","updated":"20240130162255"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"true\n好好学习\ntrue\n好好学习\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130161804-90mqi0p","Type":"NodeParagraph","Properties":{"id":"20240130161804-90mqi0p","updated":"20240130170317"},"Children":[{"Type":"NodeText","Data":"该语法糖在声明函数时亦可用，相当于"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"函数默认声明了第一个参数"},{"Type":"NodeTextMark","TextMarkType":"code strong","TextMarkTextContent":"self"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"，可以在函数内部使用"},{"Type":"NodeTextMark","TextMarkType":"strong code","TextMarkTextContent":"self"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"参数"},{"Type":"NodeText","Data":"\n这意味着，"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"},"TextMarkType":"text strong","TextMarkTextContent":"这里的"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"},"TextMarkType":"code text strong","TextMarkTextContent":"self"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"},"TextMarkType":"text strong","TextMarkTextContent":"不和python中"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"},"TextMarkType":"code text strong","TextMarkTextContent":"self"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"},"TextMarkType":"text strong","TextMarkTextContent":"或者C#中"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"},"TextMarkType":"code text strong","TextMarkTextContent":"this"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"},"TextMarkType":"strong text","TextMarkTextContent":"一样，它单纯就是一个 可以配合 外部调用函数时使用的"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"},"TextMarkType":"code strong text","TextMarkTextContent":":"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"},{"Type":"NodeText","Data":" "},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","Properties":{"style":"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"},"TextMarkType":"text strong","TextMarkTextContent":"的参数而已"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"}]},{"ID":"20240130162602-iobl41c","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130162602-iobl41c","style":"line-height: 22px;","updated":"20240130162837"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"function Student:Speak2()\n\tprint(self.name .. \"说话\")\nend\n--上面的写法等价于下面的写法\nfunction Student.Speak2(self)\n\tprint(self.name .. \"说话\")\nend\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130162814-trrae9f","Type":"NodeParagraph","Properties":{"id":"20240130162814-trrae9f","updated":"20240130164557"},"Children":[{"Type":"NodeText","Data":"但是，即使在函数声明时使用了"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":":"},{"Type":"NodeText","Data":"​，调用它时依然需要使用"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":":"},{"Type":"NodeText","Data":"​或者传入自己（因此你同样要祈祷外部真的知道这方法需要使用"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":":"},{"Type":"NodeText","Data":"​）\n（因为两种用法是两种语法糖，"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"声明函数时是用来自动声明一个self参数，调用函数是是用来自动传入调用者自己"},{"Type":"NodeText","Data":"）"}]},{"ID":"20240130163028-xmd16su","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130163028-xmd16su","style":"line-height: 22px;","updated":"20240130163313"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"Student = {\n    age = 1,\n    sex = true,\n    Up = function()\n        print(Student.age)\n        print(\"我成长了\")\n    end,\n    Learn = function(t)\n        print(t.sex)\n        print(\"好好学习\")\n    end,\n}\n\nStudent.name = \"唐老狮\"\n\nfunction Student:Speak2()\n    print(self.name .. \"说话2\")\nend\n\nStudent:Speak2()\nStudent.Speak2(Student)"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130163036-y9tqo8r","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130163036-y9tqo8r","style":"line-height: 22px;","updated":"20240130163319"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"唐老狮说话2\n唐老狮说话2\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130170102-yz4hdfo","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240130170102-yz4hdfo","updated":"20240130170109"},"Children":[{"Type":"NodeText","Data":"表的公共操作"}]},{"ID":"20240130170322-j5b2ibp","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240130170322-j5b2ibp","name":"table.insert()","updated":"20240130172758"},"Children":[{"Type":"NodeText","Data":"表的插入"}]},{"ID":"20240130172755-ho14znt","Type":"NodeParagraph","Properties":{"id":"20240130172755-ho14znt","updated":"20240130190532"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"table.insert"},{"Type":"NodeText","Data":"​向表的指定位置插入某个值"}]},{"ID":"20240130173211-id7h2f9","Type":"NodeList","ListData":{},"Properties":{"id":"20240130173211-id7h2f9","updated":"20240130185146"},"Children":[{"ID":"20240130173218-8hqllpm","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240130173218-8hqllpm","updated":"20240130185143"},"Children":[{"ID":"20240130173218-4nlv1ge","Type":"NodeParagraph","Properties":{"id":"20240130173218-4nlv1ge","updated":"20240130185143"},"Children":[{"Type":"NodeText","Data":"第一个参数：要插入到哪个表内"}]}]},{"ID":"20240130173220-o9yoc5d","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240130173220-o9yoc5d","updated":"20240130185145"},"Children":[{"ID":"20240130173220-26pred9","Type":"NodeParagraph","Properties":{"id":"20240130173220-26pred9","updated":"20240130185145"},"Children":[{"Type":"NodeText","Data":"第二个参数：要插入到哪个索引处（可省略，略过则默认插入到最后一位）"}]}]},{"ID":"20240130173222-6ejybjh","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240130173222-6ejybjh","updated":"20240130185146"},"Children":[{"ID":"20240130173222-gk4lonb","Type":"NodeParagraph","Properties":{"id":"20240130173222-gk4lonb","updated":"20240130185146"},"Children":[{"Type":"NodeText","Data":"第三个参数：要插入的值"}]}]}]},{"ID":"20240130173035-prs2scz","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130173035-prs2scz","style":"line-height: 22px;","updated":"20240130173348"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"t1 = {\n    { age = 1, name = \"123\" },\n    { age = 2, name = \"345\" }\n}\nt2 = { name = \"唐老狮\", sex = true }\n\nprint(#t1)\ntable.insert(t1, 2, t2)\nprint(#t1)\nprint(t1[2].sex)\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130173350-rqcn31y","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130173350-rqcn31y","style":"line-height: 22px;","updated":"20240130173359"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"2\n3\ntrue\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130173401-kzvr7oh","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240130173401-kzvr7oh","name":"table.remove()","updated":"20240130173418"},"Children":[{"Type":"NodeText","Data":"删除指定元素"}]},{"ID":"20240130173419-efcbh4c","Type":"NodeParagraph","Properties":{"id":"20240130173419-efcbh4c","updated":"20240130173606"},"Children":[{"Type":"NodeText","Data":"移除表中指定位置上的元素，并返回这个被移除的值。若不指定位置，默认移除最后一个索引的内容"}]},{"ID":"20240130185134-wkfvpi4","Type":"NodeList","ListData":{},"Properties":{"id":"20240130185134-wkfvpi4","updated":"20240130185239"},"Children":[{"ID":"20240130185135-umg5l4g","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240130185135-umg5l4g","updated":"20240130185135"},"Children":[{"ID":"20240130185135-yz8se1h","Type":"NodeParagraph","Properties":{"id":"20240130185135-yz8se1h","updated":"20240130185202"},"Children":[{"Type":"NodeText","Data":"第一个参数：要删除元素的表"}]}]},{"ID":"20240130185202-qn8t17k","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240130185202-qn8t17k","updated":"20240130185239"},"Children":[{"ID":"20240130185202-anjdbyb","Type":"NodeParagraph","Properties":{"id":"20240130185202-anjdbyb","updated":"20240130185239"},"Children":[{"Type":"NodeText","Data":"第二个参数：要删除元素的索引（若不指定索引，则默认删除最后一个）"}]}]}]},{"ID":"20240130173507-taxfddh","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130173507-taxfddh","style":"line-height: 22px;","updated":"20240130185749"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"t1 = {\n    { age = 1, name = \"123\" },\n    { age = 2, name = \"345\" }\n}\nt2 = { name = \"唐老狮\", sex = true }\n\ntable.insert(t1, 2, t2)\n\n-- 删除指定元素\ntable.remove(t1)\t\t--删除了{ age = 2, name = \"345\" }\nprint(#t1)\nprint(t1[1].name)\nprint(t1[2].name)\nprint(t1[3])\n\ntable.remove(t1, 1)\t\t--删除了{ age = 1, name = \"123\" }\nprint(t1[1].name)\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130185757-n8v71kg","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130185757-n8v71kg","style":"line-height: 22px;","updated":"20240130185810"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"123\n唐老狮\nnil\n唐老狮\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130185805-s1hv7u3","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240130185805-s1hv7u3","name":"table.sort()","updated":"20240130185943"},"Children":[{"Type":"NodeText","Data":"排序"}]},{"ID":"20240130185953-51dw8im","Type":"NodeParagraph","Properties":{"id":"20240130185953-51dw8im","updated":"20240130190513"},"Children":[{"Type":"NodeText","Data":"顾名思义，第一个参数为需要排序的表，第二个参数为排序规则函数，需要两个参数，并返回布尔值，降序需要在这里设置（可不填）"}]},{"ID":"20240130185943-cmq3rno","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130185943-cmq3rno","style":"line-height: 22px;","updated":"20240130190426"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"t2 = {5, 2, 7, 9, 5}\ntable.sort(t2)\nfor _, value in pairs(t2) do\n    print(value)\nend\n\ntable.sort(t2, function(a, b)\t\t-- 降序\n    if a \u003e b then\n        return true\n    end\nend)\nfor _, value in pairs(t2) do\n    print(value)\nend\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130185946-kr3qi6r","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130185946-kr3qi6r","style":"line-height: 22px;","updated":"20240130190436"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"2\n5\n5\n7\n9\n9\n7\n5\n5\n2\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130190605-rnynvw2","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240130190605-rnynvw2","name":"table.concat()","updated":"20240130190611"},"Children":[{"Type":"NodeText","Data":"拼接"}]},{"ID":"20240130190709-i92qr6f","Type":"NodeParagraph","Properties":{"id":"20240130190709-i92qr6f","updated":"20240130190813"},"Children":[{"Type":"NodeText","Data":"提供一个列表，确保所有其元素都是字符串或数字，再提供拼接字符，返回拼接好的字符串"}]},{"ID":"20240130190816-d1269d8","Type":"NodeList","ListData":{},"Properties":{"id":"20240130190816-d1269d8","updated":"20240130190841"},"Children":[{"ID":"20240130190817-5qhslxj","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240130190817-5qhslxj","updated":"20240130190817"},"Children":[{"ID":"20240130190817-hjk3tfs","Type":"NodeParagraph","Properties":{"id":"20240130190817-hjk3tfs","updated":"20240130190828"},"Children":[{"Type":"NodeText","Data":"第一个参数：需要拼接的表"}]}]},{"ID":"20240130190828-2jv7d45","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240130190828-2jv7d45","updated":"20240130190841"},"Children":[{"ID":"20240130190828-sh48t6x","Type":"NodeParagraph","Properties":{"id":"20240130190828-sh48t6x","updated":"20240130190841"},"Children":[{"Type":"NodeText","Data":"第二个字符：拼接字符"}]}]}]},{"ID":"20240130190800-71rvbid","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130190800-71rvbid","style":"line-height: 22px;","updated":"20240130190802"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"tb = {\"123\", \"456\", \"789\", \"10101\"}\nstr = table.concat(tb, \";\")\nprint(str)\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130190808-wgv76kc","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240130190808-wgv76kc","style":"line-height: 22px;","updated":"20240130190848"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bHVh"},{"Type":"NodeCodeBlockCode","Data":"123;456;789;10101\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240130190850-qk2qnjb","Type":"NodeParagraph","Properties":{"id":"20240130190850-qk2qnjb"}}]}