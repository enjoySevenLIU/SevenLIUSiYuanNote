{
	"ID": "20230813021154-68wpu9t",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20230813021154-68wpu9t",
		"scroll": "\u0026#123;\u0026quot;rootId\u0026quot;:\u0026quot;20230813021154-68wpu9t\u0026quot;,\u0026quot;startId\u0026quot;:\u0026quot;20230813021154-8xoimw2\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20230814151437-wx7shot\u0026quot;,\u0026quot;scrollTop\u0026quot;:0,\u0026quot;focusId\u0026quot;:\u0026quot;20230814154101-2p76sp1\u0026quot;,\u0026quot;focusStart\u0026quot;:246,\u0026quot;focusEnd\u0026quot;:246\u0026#125;",
		"title": "UG3L12——EventTrigger 事件触发器",
		"type": "doc",
		"updated": "20240421225203"
	},
	"Children": [
		{
			"ID": "20230813021154-8xoimw2",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20230813021154-8xoimw2",
				"updated": "20230814151202"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "EventTrigger"
				}
			]
		},
		{
			"ID": "20230814151158-m21tbac",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230814151158-m21tbac",
				"updated": "20240421223543"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "事件触发器是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "EventTrigger"
				},
				{
					"Type": "NodeText",
					"Data": "​组件，它是一个集成了"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20230813021139-pt7wapa",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "上节课中学习的所有事件接口"
				},
				{
					"Type": "NodeText",
					"Data": "的脚本\n它可以让我们更方便的为控件添加事件监听"
				}
			]
		},
		{
			"ID": "20230814151204-j74sjp6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230814151204-j74sjp6",
				"updated": "20240421223547"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "EventTrigger"
				},
				{
					"Type": "NodeText",
					"Data": "​可以让我们写更少的代码，可以在面板类中处理面板控件的事件逻辑，更加的面向对象，便于管理"
				}
			]
		},
		{
			"ID": "20230814151246-exwi7r7",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230814151246-exwi7r7",
				"updated": "20230814151437"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如何使用事件触发器"
				}
			]
		},
		{
			"ID": "20230814152053-znxgzjj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230814152053-znxgzjj",
				"updated": "20240421224822"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "需要声明一个参数为 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "BaseEventData"
				},
				{
					"Type": "NodeText",
					"Data": "​ 类型的方法，参数用来表示本次监听事件的具体数据（例如点击时间位置等）\n可以根据使用的监听类型，将参数 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "as"
				},
				{
					"Type": "NodeText",
					"Data": "​ 成其派生类（例如用于 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "PointerEnter"
				},
				{
					"Type": "NodeText",
					"Data": "​ 的函数可以将参数 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "as"
				},
				{
					"Type": "NodeText",
					"Data": "​ 成 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "PointerEventData"
				},
				{
					"Type": "NodeText",
					"Data": "​ 使用）"
				}
			]
		},
		{
			"ID": "20230814151437-wx7shot",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230814151437-wx7shot",
				"updated": "20240421225203"
			},
			"Children": [
				{
					"ID": "20230814151439-c1ehdy1",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230814151439-c1ehdy1",
						"updated": "20240421225133"
					},
					"Children": [
						{
							"ID": "20230814151439-lnhrvrh",
							"Type": "NodeHeading",
							"HeadingLevel": 3,
							"Properties": {
								"id": "20230814151439-lnhrvrh",
								"updated": "20230814152820"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "拖脚本进行关联"
								}
							]
						},
						{
							"ID": "20240421225051-chjfp77",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240421225051-chjfp77",
								"updated": "20240421225133"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "假设要为按钮添加一个监听鼠标进入的事件"
								}
							]
						},
						{
							"ID": "20230814152015-2lyuhi0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230814152015-2lyuhi0",
								"updated": "20230814152820"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在Add New Event Type之后，在脚本内根据要求写好函数，然后将脚本挂载到某个对象（不一定要挂载到自己上）\n将挂载脚本的对象拖入左下角的参数上，再选择拖入对象上的函数，\n"
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"style": "background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);"
									},
									"TextMarkType": "strong text",
									"TextMarkTextContent": "注意！需要选择动态参数类型的函数，否则参数不能获取到监听事件数据"
								},
								{
									"Type": "NodeKramdownSpanIAL",
									"Data": "{: style=\"background-color: var(--b3-card-error-background); color: var(--b3-card-error-color);\"}"
								}
							]
						},
						{
							"ID": "20230814152013-f3x0shr",
							"Type": "NodeSuperBlock",
							"Properties": {
								"id": "20230814152013-f3x0shr",
								"updated": "20230814152820"
							},
							"Children": [
								{
									"Type": "NodeSuperBlockOpenMarker"
								},
								{
									"Type": "NodeSuperBlockLayoutMarker",
									"Data": "col"
								},
								{
									"ID": "20230814152010-wdwju95",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20230814152010-wdwju95",
										"updated": "20230814152010"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "​"
										},
										{
											"Type": "NodeImage",
											"Data": "span",
											"Children": [
												{
													"Type": "NodeBang"
												},
												{
													"Type": "NodeOpenBracket"
												},
												{
													"Type": "NodeLinkText",
													"Data": "image"
												},
												{
													"Type": "NodeCloseBracket"
												},
												{
													"Type": "NodeOpenParen"
												},
												{
													"Type": "NodeLinkDest",
													"Data": "assets/image-20230814152010-7ns7hsv.png"
												},
												{
													"Type": "NodeCloseParen"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "​"
										}
									]
								},
								{
									"ID": "20230814151453-8u0vv0o",
									"Type": "NodeCodeBlock",
									"IsFencedCodeBlock": true,
									"Properties": {
										"id": "20230814151453-8u0vv0o",
										"updated": "20240421224713"
									},
									"Children": [
										{
											"Type": "NodeCodeBlockFenceOpenMarker",
											"Data": "```"
										},
										{
											"Type": "NodeCodeBlockFenceInfoMarker",
											"CodeBlockInfo": "YyM="
										},
										{
											"Type": "NodeCodeBlockCode",
											"Data": "using UnityEngine;\nusing UnityEngine.EventSystems;\n\npublic class Lesson19 : MonoBehaviour\n{\n    public void TestPointEnter(BaseEventData data)\n    {\n        PointerEventData eventData = data as PointerEventData;\n        print(\"鼠标进入\" + eventData.position);\n    }\n}\n"
										},
										{
											"Type": "NodeCodeBlockFenceCloseMarker",
											"Data": "```"
										}
									]
								},
								{
									"Type": "NodeSuperBlockCloseMarker"
								}
							]
						}
					]
				},
				{
					"ID": "20230814151444-811ghmi",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230814151444-811ghmi",
						"updated": "20240421225203"
					},
					"Children": [
						{
							"ID": "20230814151444-7l1f6wb",
							"Type": "NodeHeading",
							"HeadingLevel": 3,
							"Properties": {
								"id": "20230814151444-7l1f6wb",
								"updated": "20230814152823"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "代码添加"
								}
							]
						},
						{
							"ID": "20240421225154-k4taicj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240421225154-k4taicj",
								"updated": "20240421225203"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "假设要为按钮添加一个监听鼠标按下后抬起的事件"
								}
							]
						},
						{
							"ID": "20240421225154-er56rz0",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20240421225154-er56rz0",
								"updated": "20240421225154"
							},
							"Children": [
								{
									"ID": "20230814152829-1636hev",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20230814152829-1636hev",
										"name": "Entry",
										"updated": "20240421223856"
									},
									"Children": [
										{
											"ID": "20230814152829-89thnrb",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230814152829-89thnrb",
												"updated": "20240421223636"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "首先需要申明一个希望监听的事件对象，类型为"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "Entry"
												},
												{
													"Type": "NodeText",
													"Data": "​，是"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "EventTrigger"
												},
												{
													"Type": "NodeText",
													"Data": "​的内部类\n设置好"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "Entry"
												},
												{
													"Type": "NodeText",
													"Data": "​的监听类型（"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "eventID"
												},
												{
													"Type": "NodeText",
													"Data": "​，"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "EventTriggerType"
												},
												{
													"Type": "NodeText",
													"Data": "​即监听类型的枚举）和回调函数（"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "callback"
												},
												{
													"Type": "NodeText",
													"Data": "​）"
												}
											]
										},
										{
											"ID": "20230814152925-oqwqd5z",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20230814152925-oqwqd5z",
												"style": "line-height: 22px;",
												"updated": "20240421223856"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "YyM="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "EventTrigger.Entry entry = new EventTrigger.Entry();\nentry.eventID = EventTriggerType.PointerUp;\t\t//这是监听鼠标指针抬起的事件\nentry.callback.AddListener((data) =\u003e\n{\n    print(\"抬起\");\n});\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								},
								{
									"ID": "20230814153151-861b2vg",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "Mi4=",
										"Num": 2
									},
									"Properties": {
										"id": "20230814153151-861b2vg",
										"name": "eventTrigger.triggers.Add()",
										"updated": "20240421223714"
									},
									"Children": [
										{
											"ID": "20230814153151-pzuov8o",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230814153151-pzuov8o",
												"updated": "20240421223714"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "将该"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "Entry"
												},
												{
													"Type": "NodeText",
													"Data": "​添加到"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "EventTrigger"
												},
												{
													"Type": "NodeText",
													"Data": "​的"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "triggers"
												},
												{
													"Type": "NodeText",
													"Data": "​当中（"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "triggers"
												},
												{
													"Type": "NodeText",
													"Data": "​本质是"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "Entry"
												},
												{
													"Type": "NodeText",
													"Data": "​类型的列表"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "List\u0026lt;EventTrigger.Entry\u0026gt;"
												},
												{
													"Type": "NodeText",
													"Data": "​）"
												}
											]
										},
										{
											"ID": "20230814153317-8xh7b9d",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"Properties": {
												"id": "20230814153317-8xh7b9d",
												"style": "line-height: 22px;",
												"updated": "20230829015901"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```"
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "YyM="
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "EventTrigger eventtrigger = GetControl\u003cButton\u003e(\"btnStart\").gameObject.AddComponent\u003cEventTrigger\u003e();\neventTrigger.triggers.Add(entry);\n"
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```"
												}
											]
										}
									]
								}
							]
						},
						{
							"ID": "20230814153735-4rj0pp6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230814153735-4rj0pp6",
								"updated": "20230814152823"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果有相同监听类型的函数要添加，可以重新声明一个对象，但这样较浪费内存\n可以直接 在同监听类型的"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Entry"
								},
								{
									"Type": "NodeText",
									"Data": "​添加到列表前 再添加一个回调函数\n也可以先遍历一遍列表，得到监听类型相同的"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Entry"
								},
								{
									"Type": "NodeText",
									"Data": "​，直接再往该"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Entry"
								},
								{
									"Type": "NodeText",
									"Data": "​的回调函数添加函数即可，\n"
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"style": "background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"
									},
									"TextMarkType": "strong text",
									"TextMarkTextContent": "要注意该事件监听器队列是否真的有这种类型的"
								},
								{
									"Type": "NodeKramdownSpanIAL",
									"Data": "{: style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"style": "background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"
									},
									"TextMarkType": "strong text code",
									"TextMarkTextContent": "Entry"
								},
								{
									"Type": "NodeKramdownSpanIAL",
									"Data": "{: style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"style": "background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);"
									},
									"TextMarkType": "strong text",
									"TextMarkTextContent": "!"
								},
								{
									"Type": "NodeKramdownSpanIAL",
									"Data": "{: style=\"background-color: var(--b3-card-warning-background); color: var(--b3-card-warning-color);\"}"
								}
							]
						},
						{
							"ID": "20230814154658-q7imdyw",
							"Type": "NodeSuperBlock",
							"Properties": {
								"id": "20230814154658-q7imdyw",
								"updated": "20230814152823"
							},
							"Children": [
								{
									"Type": "NodeSuperBlockOpenMarker"
								},
								{
									"Type": "NodeSuperBlockLayoutMarker",
									"Data": "col"
								},
								{
									"ID": "20230814154034-qpq6c0k",
									"Type": "NodeCodeBlock",
									"IsFencedCodeBlock": true,
									"Properties": {
										"id": "20230814154034-qpq6c0k",
										"updated": "20230829015906"
									},
									"Children": [
										{
											"Type": "NodeCodeBlockFenceOpenMarker",
											"Data": "```"
										},
										{
											"Type": "NodeCodeBlockFenceInfoMarker",
											"CodeBlockInfo": "YyM="
										},
										{
											"Type": "NodeCodeBlockCode",
											"Data": "//重复步骤的\nEventTrigger.Entry entry = new EventTrigger.Entry();\nentry.eventID = EventTriggerType.PointerUp;\nentry.callback.AddListener((data) =\u003e\n{\n    print(\"抬起\");\n});\n//重复添加函数的步骤\nentry.callback.AddListener((data) =\u003e\n{\n    print(\"抬起2\");\n});\n\neventTrigger.triggers.Add(entry);\n"
										},
										{
											"Type": "NodeCodeBlockFenceCloseMarker",
											"Data": "```"
										}
									]
								},
								{
									"ID": "20230814154101-2p76sp1",
									"Type": "NodeCodeBlock",
									"IsFencedCodeBlock": true,
									"Properties": {
										"id": "20230814154101-2p76sp1",
										"updated": "20230814154659"
									},
									"Children": [
										{
											"Type": "NodeCodeBlockFenceOpenMarker",
											"Data": "```"
										},
										{
											"Type": "NodeCodeBlockFenceInfoMarker",
											"CodeBlockInfo": "YyM="
										},
										{
											"Type": "NodeCodeBlockCode",
											"Data": "//遍历列表的，要注意该事件监听器队列是否真的有这种类型的Entry!\nforeach (var entry in eventTrigger.triggers)\n{\n    if (entry.eventID == EventTriggerType.PointerUp)\n    {\n        entry.callback.AddListener((data) =\u003e\n        {\n            print(\"抬起3\");\n        });\n    }\n}\n\n"
										},
										{
											"Type": "NodeCodeBlockFenceCloseMarker",
											"Data": "```"
										}
									]
								},
								{
									"Type": "NodeSuperBlockCloseMarker"
								}
							]
						}
					]
				}
			]
		}
	]
}